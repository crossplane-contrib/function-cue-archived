// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-gcp/apis/iam/v1alpha1

package v1alpha1

// ServiceAccountKeyParameters defines parameters for a desired IAM ServiceAccountKey
// https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts.keys
//
#ServiceAccountKeyParameters: {
	// KeyAlgorithm is an optional user-specified string that specifies the type of key and algorithm
	// to use for the key. The default is currently a 2048-bit RSA key. However this may change in the future.
	// Possible values:
	//   "KEY_ALG_UNSPECIFIED" - Not specified.
	//   "KEY_ALG_RSA_1024" - 1024-bit RSA key
	//   "KEY_ALG_RSA_2048" - 2048-bit RSA key
	// +optional
	// +immutable
	keyAlgorithm?: null | string @go(KeyAlgorithm,*string)

	// PrivateKeyType is an optional specification of the output format of the generated private key.
	// The default value is TYPE_GOOGLE_CREDENTIALS_FILE, which corresponds to the Google Credentials File Format.
	// Possible values:
	//   "TYPE_UNSPECIFIED" - Not specified. Equivalent to TYPE_GOOGLE_CREDENTIALS_FILE.
	//   "TYPE_PKCS12_FILE" - Private key stored in a RFC7292 PKCS #12 document. Password for the PKCS #12 document is "notasecret".
	//   "TYPE_GOOGLE_CREDENTIALS_FILE" - Google Credentials File format.
	// +optional
	// +immutable
	privateKeyType?: null | string @go(PrivateKeyType,*string)

	// PublicKeyType is an optional specification of the output format for the associated public key.
	// The default value is TYPE_RAW_PUBLIC_KEY.
	// Possible values:
	//   "TYPE_NONE" - Not specified. Public key is not retrieved via Google Cloud API.
	//   "TYPE_X509_PEM_FILE" - X509 PEM format.
	//   "TYPE_RAW_PUBLIC_KEY" - Raw public key.
	// +optional
	// +kubebuilder:default=TYPE_RAW_PUBLIC_KEY
	publicKeyType?: null | string @go(PublicKeyType,*string)

	#ServiceAccountReferer
}

// ServiceAccountKeyObservation is used to show the observed state of the
// ServiceAccountKey resource on GCP. All fields in this structure should only
// be populated from GCP responses; any changes made to the k8s resource outside
// of the crossplane gcp controller will be ignored and overwritten.
#ServiceAccountKeyObservation: {
	// Name is the resource name of the service account key in the following format:
	// projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{external-name}.
	// part of https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1#ServiceAccountKey
	name?: string @go(Name)

	// KeyID is the generated unique & stable key id for the service account key.
	keyId?: string @go(KeyID)

	// PrivateKeyType is the output format for the generated private key. Only set in keys.create responses.
	// Determines the encoding for the private key stored in the "connection" secret.
	privateKeyType?: string @go(PrivateKeyType)

	// KeyAlgorithm is the key algorithm & possibly key size used for public/private key pair generation.
	keyAlgorithm?: string @go(KeyAlgorithm)

	// ValidAfterTime is the timestamp after which this key can be used in RFC3339 UTC "Zulu" format.
	validAfterTime?: string @go(ValidAfterTime)

	// ValidBeforeTime is the timestamp before which this key can be used in RFC3339 UTC "Zulu" format.
	validBeforeTime?: string @go(ValidBeforeTime)

	// KeyOrigin is the origin of the key.
	// Possible values:
	//   "ORIGIN_UNSPECIFIED" - Unspecified key origin.
	//   "USER_PROVIDED" - Key is provided by user.
	//   "GOOGLE_PROVIDED" - Key is provided by Google.
	keyOrigin?: string @go(KeyOrigin)

	// KeyType is the type of the key.
	// Possible values:
	//   "KEY_TYPE_UNSPECIFIED" - Unspecified key type.
	//   "USER_MANAGED" - User-managed key (managed and rotated by the user).
	//   "SYSTEM_MANAGED" - System-managed key (managed and rotated by Google).
	keyType?: string @go(KeyType)
}

// ServiceAccountKeySpec defines the desired state of a ServiceAccountKey.
#ServiceAccountKeySpec: {
	forProvider: #ServiceAccountKeyParameters @go(ForProvider)
}

// ServiceAccountKeyStatus represents the observed state of a ServiceAccountKey.
#ServiceAccountKeyStatus: {
	atProvider?: #ServiceAccountKeyObservation @go(AtProvider)
}

// ServiceAccountKey is a managed resource that represents a Google IAM Service Account Key.
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="KEY_ID",type="string",JSONPath=".status.atProvider.keyId"
// +kubebuilder:printcolumn:name="CREATED_AT",type="string",JSONPath=".status.atProvider.validAfterTime"
// +kubebuilder:printcolumn:name="EXPIRES_AT",type="boolean",JSONPath=".status.atProvider.validBeforeTime"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ServiceAccountKey: {
	spec:    #ServiceAccountKeySpec   @go(Spec)
	status?: #ServiceAccountKeyStatus @go(Status)
}

// ServiceAccountKeyList contains a list of ServiceAccountKey types
#ServiceAccountKeyList: {
	items: [...#ServiceAccountKey] @go(Items,[]ServiceAccountKey)
}
