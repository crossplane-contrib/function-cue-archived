// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-gcp/apis/servicenetworking/v1beta1

package v1beta1

// ConnectionParameters define the desired state of a Google Cloud Service
// Networking Connection. Most fields map direct to a Connection:
// https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.connections#Connection
#ConnectionParameters: {
	// Parent: The service that is managing peering connectivity for a service
	// producer's organization. For Google services that support this
	// functionality, this value is services/servicenetworking.googleapis.com.
	// +immutable
	parent: string @go(Parent)

	// Network: The name of service consumer's VPC network that's connected
	// with service producer network, in the following format:
	// `projects/{project}/global/networks/{network}`.
	// `{project}` is a project number, such as in `12345` that includes
	// the VPC service consumer's VPC network. `{network}` is the name of
	// the service consumer's VPC network.
	// +optional
	network?: null | string @go(Network,*string)

	// ReservedPeeringRanges: The name of one or more allocated IP address
	// ranges for this service producer of type `PEERING`.
	// +optional
	reservedPeeringRanges?: [...string] @go(ReservedPeeringRanges,[]string)
}

// ConnectionObservation is used to show the observed state of the Connection.
#ConnectionObservation: {
	// Peering: The name of the VPC Network Peering connection that was created
	// by the service producer.
	peering?: string @go(Peering)

	// Service: The name of the peering service that's associated with this
	// connection, in the following format: `services/{service name}`.
	service?: string @go(Service)
}

// A ConnectionSpec defines the desired state of a Connection.
#ConnectionSpec: {
	forProvider: #ConnectionParameters @go(ForProvider)
}

// A ConnectionStatus represents the observed state of a Connection.
#ConnectionStatus: {
	atProvider?: #ConnectionObservation @go(AtProvider)
}

// A Connection is a managed resource that represents a Google Cloud Service
// Networking Connection.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Connection: {
	spec:    #ConnectionSpec   @go(Spec)
	status?: #ConnectionStatus @go(Status)
}

// ConnectionList contains a list of Connection.
#ConnectionList: {
	items: [...#Connection] @go(Items,[]Connection)
}
