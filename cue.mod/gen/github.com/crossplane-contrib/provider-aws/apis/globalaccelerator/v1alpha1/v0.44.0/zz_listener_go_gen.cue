// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/globalaccelerator/v1alpha1

package v1alpha1

// ListenerParameters defines the desired state of Listener
#ListenerParameters: {
	// Region is which region the Listener will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Client affinity lets you direct all requests from a user to the same endpoint,
	// if you have stateful applications, regardless of the port and protocol of
	// the client request. Client affinity gives you control over whether to always
	// route each client to the same specific endpoint.
	//
	// Global Accelerator uses a consistent-flow hashing algorithm to choose the
	// optimal endpoint for a connection. If client affinity is NONE, Global Accelerator
	// uses the "five-tuple" (5-tuple) properties—source IP address, source port,
	// destination IP address, destination port, and protocol—to select the hash
	// value, and then chooses the best endpoint. However, with this setting, if
	// someone uses different ports to connect to Global Accelerator, their connections
	// might not be always routed to the same endpoint because the hash value changes.
	//
	// If you want a given client to always be routed to the same endpoint, set
	// client affinity to SOURCE_IP instead. When you use the SOURCE_IP setting,
	// Global Accelerator uses the "two-tuple" (2-tuple) properties— source (client)
	// IP address and destination IP address—to select the hash value.
	//
	// The default value is NONE.
	clientAffinity?: null | string @go(ClientAffinity,*string)

	// The list of port ranges to support for connections from clients to your accelerator.
	// +kubebuilder:validation:Required
	portRanges: [...null | #PortRange] @go(PortRanges,[]*PortRange)

	// The protocol for connections from clients to your accelerator.
	// +kubebuilder:validation:Required
	protocol?: null | string @go(Protocol,*string)

	#CustomListenerParameters
}

// ListenerSpec defines the desired state of Listener
#ListenerSpec: {
	forProvider: #ListenerParameters @go(ForProvider)
}

// ListenerObservation defines the observed state of Listener
#ListenerObservation: {
	// The Amazon Resource Name (ARN) of the listener.
	listenerARN?: null | string @go(ListenerARN,*string)
}

// ListenerStatus defines the observed state of Listener.
#ListenerStatus: {
	atProvider?: #ListenerObservation @go(AtProvider)
}

// Listener is the Schema for the Listeners API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Listener: {
	spec:    #ListenerSpec   @go(Spec)
	status?: #ListenerStatus @go(Status)
}

// ListenerList contains a list of Listeners
#ListenerList: {
	items: [...#Listener] @go(Items,[]Listener)
}
