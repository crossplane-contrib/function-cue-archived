// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/globalaccelerator/v1alpha1

package v1alpha1

// EndpointGroupParameters defines the desired state of EndpointGroup
#EndpointGroupParameters: {
	// Region is which region the EndpointGroup will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The list of endpoint objects.
	endpointConfigurations?: [...null | #EndpointConfiguration] @go(EndpointConfigurations,[]*EndpointConfiguration)

	// The Amazon Web Services Region where the endpoint group is located. A listener
	// can have only one endpoint group in a specific Region.
	// +kubebuilder:validation:Required
	endpointGroupRegion?: null | string @go(EndpointGroupRegion,*string)

	// The time—10 seconds or 30 seconds—between each health check for an endpoint.
	// The default value is 30.
	healthCheckIntervalSeconds?: null | int64 @go(HealthCheckIntervalSeconds,*int64)

	// If the protocol is HTTP/S, then this specifies the path that is the destination
	// for health check targets. The default value is slash (/).
	healthCheckPath?: null | string @go(HealthCheckPath,*string)

	// The port that Global Accelerator uses to check the health of endpoints that
	// are part of this endpoint group. The default port is the listener port that
	// this endpoint group is associated with. If listener port is a list of ports,
	// Global Accelerator uses the first port in the list.
	healthCheckPort?: null | int64 @go(HealthCheckPort,*int64)

	// The protocol that Global Accelerator uses to check the health of endpoints
	// that are part of this endpoint group. The default value is TCP.
	healthCheckProtocol?: null | string @go(HealthCheckProtocol,*string)

	// Override specific listener ports used to route traffic to endpoints that
	// are part of this endpoint group. For example, you can create a port override
	// in which the listener receives user traffic on ports 80 and 443, but your
	// accelerator routes that traffic to ports 1080 and 1443, respectively, on
	// the endpoints.
	//
	// For more information, see Overriding listener ports (https://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoint-groups-port-override.html)
	// in the Global Accelerator Developer Guide.
	portOverrides?: [...null | #PortOverride] @go(PortOverrides,[]*PortOverride)

	// The number of consecutive health checks required to set the state of a healthy
	// endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default
	// value is 3.
	thresholdCount?: null | int64 @go(ThresholdCount,*int64)

	// The percentage of traffic to send to an Amazon Web Services Region. Additional
	// traffic is distributed to other endpoint groups for this listener.
	//
	// Use this action to increase (dial up) or decrease (dial down) traffic to
	// a specific Region. The percentage is applied to the traffic that would otherwise
	// have been routed to the Region based on optimal routing.
	//
	// The default value is 100.
	trafficDialPercentage?: null | float64 @go(TrafficDialPercentage,*float64)

	#CustomEndpointGroupParameters
}

// EndpointGroupSpec defines the desired state of EndpointGroup
#EndpointGroupSpec: {
	forProvider: #EndpointGroupParameters @go(ForProvider)
}

// EndpointGroupObservation defines the observed state of EndpointGroup
#EndpointGroupObservation: {
	// The list of endpoint objects.
	endpointDescriptions?: [...null | #EndpointDescription] @go(EndpointDescriptions,[]*EndpointDescription)

	// The Amazon Resource Name (ARN) of the endpoint group.
	endpointGroupARN?: null | string @go(EndpointGroupARN,*string)
}

// EndpointGroupStatus defines the observed state of EndpointGroup.
#EndpointGroupStatus: {
	atProvider?: #EndpointGroupObservation @go(AtProvider)
}

// EndpointGroup is the Schema for the EndpointGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EndpointGroup: {
	spec:    #EndpointGroupSpec   @go(Spec)
	status?: #EndpointGroupStatus @go(Status)
}

// EndpointGroupList contains a list of EndpointGroups
#EndpointGroupList: {
	items: [...#EndpointGroup] @go(Items,[]EndpointGroup)
}
