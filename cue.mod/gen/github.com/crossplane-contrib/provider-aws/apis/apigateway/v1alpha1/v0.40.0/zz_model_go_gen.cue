// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/apigateway/v1alpha1

package v1alpha1

// ModelParameters defines the desired state of Model
#ModelParameters: {
	// Region is which region the Model will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The content-type for the model.
	// +kubebuilder:validation:Required
	contentType?: null | string @go(ContentType,*string)

	// The description of the model.
	description?: null | string @go(Description,*string)

	// The name of the model. Must be alphanumeric.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The schema for the model. For application/json models, this should be JSON
	// schema draft 4 model.
	schema?: null | string @go(Schema,*string)

	#CustomModelParameters
}

// ModelSpec defines the desired state of Model
#ModelSpec: {
	forProvider: #ModelParameters @go(ForProvider)
}

// ModelObservation defines the observed state of Model
#ModelObservation: {
	// The identifier for the model resource.
	id?: null | string @go(ID,*string)
}

// ModelStatus defines the observed state of Model.
#ModelStatus: {
	atProvider?: #ModelObservation @go(AtProvider)
}

// Model is the Schema for the Models API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Model: {
	spec:    #ModelSpec   @go(Spec)
	status?: #ModelStatus @go(Status)
}

// ModelList contains a list of Models
#ModelList: {
	items: [...#Model] @go(Items,[]Model)
}
