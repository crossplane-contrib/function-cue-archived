// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/apigateway/v1alpha1

package v1alpha1

// DomainNameParameters defines the desired state of DomainName
#DomainNameParameters: {
	// Region is which region the DomainName will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The reference to an AWS-managed certificate that will be used by edge-optimized
	// endpoint for this domain name. AWS Certificate Manager is the only supported
	// source.
	certificateARN?: null | string @go(CertificateARN,*string)

	// [Deprecated] The body of the server certificate that will be used by edge-optimized
	// endpoint for this domain name provided by your certificate authority.
	certificateBody?: null | string @go(CertificateBody,*string)

	// [Deprecated] The intermediate certificates and optionally the root certificate,
	// one after the other without any blank lines, used by an edge-optimized endpoint
	// for this domain name. If you include the root certificate, your certificate
	// chain must start with intermediate certificates and end with the root certificate.
	// Use the intermediate certificates that were provided by your certificate
	// authority. Do not include any intermediaries that are not in the chain of
	// trust path.
	certificateChain?: null | string @go(CertificateChain,*string)

	// The user-friendly name of the certificate that will be used by edge-optimized
	// endpoint for this domain name.
	certificateName?: null | string @go(CertificateName,*string)

	// [Deprecated] Your edge-optimized endpoint's domain name certificate's private
	// key.
	certificatePrivateKey?: null | string @go(CertificatePrivateKey,*string)

	// The name of the DomainName resource.
	// +kubebuilder:validation:Required
	domainName?: null | string @go(DomainName,*string)

	// The endpoint configuration of this DomainName showing the endpoint types
	// of the domain name.
	endpointConfiguration?:   null | #EndpointConfiguration        @go(EndpointConfiguration,*EndpointConfiguration)
	mutualTLSAuthentication?: null | #MutualTLSAuthenticationInput @go(MutualTLSAuthentication,*MutualTLSAuthenticationInput)

	// The ARN of the public certificate issued by ACM to validate ownership of
	// your custom domain. Only required when configuring mutual TLS and using an
	// ACM imported or private CA certificate ARN as the regionalCertificateArn.
	ownershipVerificationCertificateARN?: null | string @go(OwnershipVerificationCertificateARN,*string)

	// The reference to an AWS-managed certificate that will be used by regional
	// endpoint for this domain name. AWS Certificate Manager is the only supported
	// source.
	regionalCertificateARN?: null | string @go(RegionalCertificateARN,*string)

	// The user-friendly name of the certificate that will be used by regional endpoint
	// for this domain name.
	regionalCertificateName?: null | string @go(RegionalCertificateName,*string)

	// The Transport Layer Security (TLS) version + cipher suite for this DomainName.
	// The valid values are TLS_1_0 and TLS_1_2.
	securityPolicy?: null | string @go(SecurityPolicy,*string)

	// The key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
	// The tag key can be up to 128 characters and must not start with aws:. The
	// tag value can be up to 256 characters.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	#CustomDomainNameParameters
}

// DomainNameSpec defines the desired state of DomainName
#DomainNameSpec: {
	forProvider: #DomainNameParameters @go(ForProvider)
}

// DomainNameObservation defines the observed state of DomainName
#DomainNameObservation: {
	// The domain name of the Amazon CloudFront distribution associated with this
	// custom domain name for an edge-optimized endpoint. You set up this association
	// when adding a DNS record pointing the custom domain name to this distribution
	// name. For more information about CloudFront distributions, see the Amazon
	// CloudFront documentation.
	distributionDomainName?: null | string @go(DistributionDomainName,*string)

	// The region-agnostic Amazon Route 53 Hosted Zone ID of the edge-optimized
	// endpoint. The valid value is Z2FDTNDATAQYW2 for all the regions. For more
	// information, see Set up a Regional Custom Domain Name and AWS Regions and
	// Endpoints for API Gateway.
	distributionHostedZoneID?: null | string @go(DistributionHostedZoneID,*string)

	// The status of the DomainName migration. The valid values are AVAILABLE and
	// UPDATING. If the status is UPDATING, the domain cannot be modified further
	// until the existing operation is complete. If it is AVAILABLE, the domain
	// can be updated.
	domainNameStatus?: null | string @go(DomainNameStatus,*string)

	// An optional text message containing detailed information about status of
	// the DomainName migration.
	domainNameStatusMessage?: null | string @go(DomainNameStatusMessage,*string)

	// The domain name associated with the regional endpoint for this custom domain
	// name. You set up this association by adding a DNS record that points the
	// custom domain name to this regional domain name. The regional domain name
	// is returned by API Gateway when you create a regional endpoint.
	regionalDomainName?: null | string @go(RegionalDomainName,*string)

	// The region-specific Amazon Route 53 Hosted Zone ID of the regional endpoint.
	// For more information, see Set up a Regional Custom Domain Name and AWS Regions
	// and Endpoints for API Gateway.
	regionalHostedZoneID?: null | string @go(RegionalHostedZoneID,*string)
}

// DomainNameStatus defines the observed state of DomainName.
#DomainNameStatus: {
	atProvider?: #DomainNameObservation @go(AtProvider)
}

// DomainName is the Schema for the DomainNames API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DomainName: {
	spec:    #DomainNameSpec   @go(Spec)
	status?: #DomainNameStatus @go(Status)
}

// DomainNameList contains a list of DomainNames
#DomainNameList: {
	items: [...#DomainName] @go(Items,[]DomainName)
}
