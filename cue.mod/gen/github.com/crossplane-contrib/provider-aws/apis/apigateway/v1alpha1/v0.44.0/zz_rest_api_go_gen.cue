// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/apigateway/v1alpha1

package v1alpha1

// RestAPIParameters defines the desired state of RestAPI
#RestAPIParameters: {
	// Region is which region the RestAPI will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The source of the API key for metering requests according to a usage plan.
	// Valid values are: HEADER to read the API key from the X-API-Key header of
	// a request. AUTHORIZER to read the API key from the UsageIdentifierKey from
	// a custom authorizer.
	apiKeySource?: null | string @go(APIKeySource,*string)

	// The list of binary media types supported by the RestApi. By default, the
	// RestApi supports only UTF-8-encoded text payloads.
	binaryMediaTypes?: [...null | string] @go(BinaryMediaTypes,[]*string)

	// The ID of the RestApi that you want to clone from.
	cloneFrom?: null | string @go(CloneFrom,*string)

	// The description of the RestApi.
	description?: null | string @go(Description,*string)

	// Specifies whether clients can invoke your API by using the default execute-api
	// endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com
	// endpoint. To require that clients use a custom domain name to invoke your
	// API, disable the default endpoint
	disableExecuteAPIEndpoint?: null | bool @go(DisableExecuteAPIEndpoint,*bool)

	// The endpoint configuration of this RestApi showing the endpoint types of
	// the API.
	endpointConfiguration?: null | #EndpointConfiguration @go(EndpointConfiguration,*EndpointConfiguration)

	// A nullable integer that is used to enable compression (with non-negative
	// between 0 and 10485760 (10M) bytes, inclusive) or disable compression (with
	// a null value) on an API. When compression is enabled, compression or decompression
	// is not applied on the payload if the payload size is smaller than this value.
	// Setting it to zero allows compression for any payload size.
	minimumCompressionSize?: null | int64 @go(MinimumCompressionSize,*int64)

	// The name of the RestApi.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// A stringified JSON policy document that applies to this RestApi regardless
	// of the caller and Method configuration.
	policy?: null | string @go(Policy,*string)

	// The key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
	// The tag key can be up to 128 characters and must not start with aws:. The
	// tag value can be up to 256 characters.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A version identifier for the API.
	version?: null | string @go(Version,*string)

	#CustomRestAPIParameters
}

// RestAPISpec defines the desired state of RestAPI
#RestAPISpec: {
	forProvider: #RestAPIParameters @go(ForProvider)
}

// RestAPIObservation defines the observed state of RestAPI
#RestAPIObservation: {
	// The API's identifier. This identifier is unique across all of your APIs in
	// API Gateway.
	id?: null | string @go(ID,*string)

	// The API's root resource ID.
	rootResourceID?: null | string @go(RootResourceID,*string)

	// The warning messages reported when failonwarnings is turned on during API
	// import.
	warnings?: [...null | string] @go(Warnings,[]*string)
}

// RestAPIStatus defines the observed state of RestAPI.
#RestAPIStatus: {
	atProvider?: #RestAPIObservation @go(AtProvider)
}

// RestAPI is the Schema for the RestAPIS API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RestAPI: {
	spec:    #RestAPISpec   @go(Spec)
	status?: #RestAPIStatus @go(Status)
}

// RestAPIList contains a list of RestAPIS
#RestAPIList: {
	items: [...#RestAPI] @go(Items,[]RestAPI)
}
