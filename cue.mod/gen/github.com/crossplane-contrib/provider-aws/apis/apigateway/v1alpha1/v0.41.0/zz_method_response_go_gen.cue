// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/apigateway/v1alpha1

package v1alpha1

// MethodResponseParameters defines the desired state of MethodResponse
#MethodResponseParameters: {
	// Region is which region the MethodResponse will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The HTTP verb of the Method resource.
	// +kubebuilder:validation:Required
	httpMethod?: null | string @go(HTTPMethod,*string)

	// Specifies the Model resources used for the response's content type. Response
	// models are represented as a key/value map, with a content type as the key
	// and a Model name as the value.
	responseModels?: {[string]: null | string} @go(ResponseModels,map[string]*string)

	// A key-value map specifying required or optional response parameters that
	// API Gateway can send back to the caller. A key defines a method response
	// header name and the associated value is a Boolean flag indicating whether
	// the method response parameter is required or not. The method response header
	// names must match the pattern of method.response.header.{name}, where name
	// is a valid and unique header name. The response parameter names defined here
	// are available in the integration response to be mapped from an integration
	// response header expressed in integration.response.header.{name}, a static
	// value enclosed within a pair of single quotes (e.g., 'application/json'),
	// or a JSON expression from the back-end response payload in the form of integration.response.body.{JSON-expression},
	// where JSON-expression is a valid JSON expression without the $ prefix.)
	responseParameters?: {[string]: null | bool} @go(ResponseParameters,map[string]*bool)

	// The method response's status code.
	// +kubebuilder:validation:Required
	statusCode?: null | string @go(StatusCode,*string)

	#CustomMethodResponseParameters
}

// MethodResponseSpec defines the desired state of MethodResponse
#MethodResponseSpec: {
	forProvider: #MethodResponseParameters @go(ForProvider)
}

// MethodResponseObservation defines the observed state of MethodResponse
#MethodResponseObservation: {
}

// MethodResponseStatus defines the observed state of MethodResponse.
#MethodResponseStatus: {
	atProvider?: #MethodResponseObservation @go(AtProvider)
}

// MethodResponse is the Schema for the MethodResponses API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#MethodResponse: {
	spec:    #MethodResponseSpec   @go(Spec)
	status?: #MethodResponseStatus @go(Status)
}

// MethodResponseList contains a list of MethodResponses
#MethodResponseList: {
	items: [...#MethodResponse] @go(Items,[]MethodResponse)
}
