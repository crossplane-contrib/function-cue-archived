// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/apigateway/v1alpha1

package v1alpha1

// IntegrationResponseParameters defines the desired state of IntegrationResponse
#IntegrationResponseParameters: {
	// Region is which region the IntegrationResponse will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Specifies how to handle response payload content type conversions. Supported
	// values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
	//
	// If this property is not defined, the response payload will be passed through
	// from the integration response to the method response without modification.
	contentHandling?: null | string @go(ContentHandling,*string)

	// Specifies a put integration response request's HTTP method.
	// +kubebuilder:validation:Required
	httpMethod?: null | string @go(HTTPMethod,*string)

	// A key-value map specifying response parameters that are passed to the method
	// response from the back end. The key is a method response header parameter
	// name and the mapped value is an integration response header value, a static
	// value enclosed within a pair of single quotes, or a JSON expression from
	// the integration response body. The mapping key must match the pattern of
	// method.response.header.{name}, where name is a valid and unique header name.
	// The mapped non-static value must match the pattern of integration.response.header.{name}
	// or integration.response.body.{JSON-expression}, where name must be a valid
	// and unique response header name and JSON-expression a valid JSON expression
	// without the $ prefix.
	responseParameters?: {[string]: null | string} @go(ResponseParameters,map[string]*string)

	// Specifies a put integration response's templates.
	responseTemplates?: {[string]: null | string} @go(ResponseTemplates,map[string]*string)

	// Specifies the selection pattern of a put integration response.
	selectionPattern?: null | string @go(SelectionPattern,*string)

	// Specifies the status code that is used to map the integration response to
	// an existing MethodResponse.
	// +kubebuilder:validation:Required
	statusCode?: null | string @go(StatusCode,*string)

	#CustomIntegrationResponseParameters
}

// IntegrationResponseSpec defines the desired state of IntegrationResponse
#IntegrationResponseSpec: {
	forProvider: #IntegrationResponseParameters @go(ForProvider)
}

// IntegrationResponseObservation defines the observed state of IntegrationResponse
#IntegrationResponseObservation: {
}

// IntegrationResponseStatus defines the observed state of IntegrationResponse.
#IntegrationResponseStatus: {
	atProvider?: #IntegrationResponseObservation @go(AtProvider)
}

// IntegrationResponse is the Schema for the IntegrationResponses API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#IntegrationResponse: {
	spec:    #IntegrationResponseSpec   @go(Spec)
	status?: #IntegrationResponseStatus @go(Status)
}

// IntegrationResponseList contains a list of IntegrationResponses
#IntegrationResponseList: {
	items: [...#IntegrationResponse] @go(Items,[]IntegrationResponse)
}
