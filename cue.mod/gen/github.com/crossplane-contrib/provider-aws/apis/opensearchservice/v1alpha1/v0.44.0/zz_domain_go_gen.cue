// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/opensearchservice/v1alpha1

package v1alpha1

// DomainParameters defines the desired state of Domain
#DomainParameters: {
	// Region is which region the Domain will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Identity and Access Management (IAM) policy document specifying the access
	// policies for the new domain.
	accessPolicies?: null | string @go(AccessPolicies,*string)

	// Key-value pairs to specify advanced configuration options. The following
	// key-value pairs are supported:
	//
	//    * "rest.action.multi.allow_explicit_index": "true" | "false" - Note the
	//    use of a string rather than a boolean. Specifies whether explicit references
	//    to indexes are allowed inside the body of HTTP requests. If you want to
	//    configure access policies for domain sub-resources, such as specific indexes
	//    and domain APIs, you must disable this property. Default is true.
	//
	//    * "indices.fielddata.cache.size": "80" - Note the use of a string rather
	//    than a boolean. Specifies the percentage of heap space allocated to field
	//    data. Default is unbounded.
	//
	//    * "indices.query.bool.max_clause_count": "1024" - Note the use of a string
	//    rather than a boolean. Specifies the maximum number of clauses allowed
	//    in a Lucene boolean query. Default is 1,024. Queries with more than the
	//    permitted number of clauses result in a TooManyClauses error.
	//
	//    * "override_main_response_version": "true" | "false" - Note the use of
	//    a string rather than a boolean. Specifies whether the domain reports its
	//    version as 7.10 to allow Elasticsearch OSS clients and plugins to continue
	//    working with it. Default is false when creating a domain and true when
	//    upgrading a domain.
	//
	// For more information, see Advanced cluster parameters (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options).
	advancedOptions?: {[string]: null | string} @go(AdvancedOptions,map[string]*string)

	// Options for fine-grained access control.
	advancedSecurityOptions?: null | #AdvancedSecurityOptionsInput @go(AdvancedSecurityOptions,*AdvancedSecurityOptionsInput)

	// Options for Auto-Tune.
	autoTuneOptions?: null | #AutoTuneOptionsInput @go(AutoTuneOptions,*AutoTuneOptionsInput)

	// Container for the cluster configuration of a domain.
	clusterConfig?: null | #ClusterConfig @go(ClusterConfig,*ClusterConfig)

	// Key-value pairs to configure Amazon Cognito authentication. For more information,
	// see Configuring Amazon Cognito authentication for OpenSearch Dashboards (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
	cognitoOptions?: null | #CognitoOptions @go(CognitoOptions,*CognitoOptions)

	// Additional options for the domain endpoint, such as whether to require HTTPS
	// for all traffic.
	domainEndpointOptions?: null | #DomainEndpointOptions @go(DomainEndpointOptions,*DomainEndpointOptions)

	// Container for the parameters required to enable EBS-based storage for an
	// OpenSearch Service domain.
	ebsOptions?: null | #EBSOptions @go(EBSOptions,*EBSOptions)

	// String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine
	// version for the OpenSearch Service domain. For example, OpenSearch_1.0 or
	// Elasticsearch_7.9. For more information, see Creating and managing Amazon
	// OpenSearch Service domains (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	engineVersion?: null | string @go(EngineVersion,*string)

	// Key-value pairs to configure log publishing.
	logPublishingOptions?: {[string]: null | #LogPublishingOption} @go(LogPublishingOptions,map[string]*LogPublishingOption)

	// Enables node-to-node encryption.
	nodeToNodeEncryptionOptions?: null | #NodeToNodeEncryptionOptions @go(NodeToNodeEncryptionOptions,*NodeToNodeEncryptionOptions)

	// Specifies a daily 10-hour time block during which OpenSearch Service can
	// perform configuration changes on the domain, including service software updates
	// and Auto-Tune enhancements that require a blue/green deployment. If no options
	// are specified, the default start time of 10:00 P.M. local time (for the Region
	// that the domain is created in) is used.
	offPeakWindowOptions?: null | #OffPeakWindowOptions @go(OffPeakWindowOptions,*OffPeakWindowOptions)

	// Software update options for the domain.
	softwareUpdateOptions?: null | #SoftwareUpdateOptions @go(SoftwareUpdateOptions,*SoftwareUpdateOptions)

	// List of tags to add to the domain upon creation.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomDomainParameters
}

// DomainSpec defines the desired state of Domain
#DomainSpec: {
	forProvider: #DomainParameters @go(ForProvider)
}

// DomainObservation defines the observed state of Domain
#DomainObservation: {
	// The Amazon Resource Name (ARN) of the domain. For more information, see IAM
	// identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html)
	// in the AWS Identity and Access Management User Guide.
	arn?: null | string @go(ARN,*string)

	// Identity and Access Management (IAM) policy document specifying the access
	// policies for the domain.
	accessPolicies?: null | string @go(AccessPolicies,*string)

	// Key-value pairs that specify advanced configuration options.
	advancedOptions?: {[string]: null | string} @go(AdvancedOptions,map[string]*string)

	// Settings for fine-grained access control.
	advancedSecurityOptions?: null | #AdvancedSecurityOptions @go(AdvancedSecurityOptions,*AdvancedSecurityOptions)

	// Auto-Tune settings for the domain.
	autoTuneOptions?: null | #AutoTuneOptionsOutput @go(AutoTuneOptions,*AutoTuneOptionsOutput)

	// Information about a configuration change happening on the domain.
	changeProgressDetails?: null | #ChangeProgressDetails @go(ChangeProgressDetails,*ChangeProgressDetails)

	// Container for the cluster configuration of the domain.
	clusterConfig?: null | #ClusterConfig @go(ClusterConfig,*ClusterConfig)

	// Key-value pairs to configure Amazon Cognito authentication for OpenSearch
	// Dashboards.
	cognitoOptions?: null | #CognitoOptions @go(CognitoOptions,*CognitoOptions)

	// Creation status of an OpenSearch Service domain. True if domain creation
	// is complete. False if domain creation is still in progress.
	created?: null | bool @go(Created,*bool)

	// Deletion status of an OpenSearch Service domain. True if domain deletion
	// is complete. False if domain deletion is still in progress. Once deletion
	// is complete, the status of the domain is no longer returned.
	deleted?: null | bool @go(Deleted,*bool)

	// Additional options for the domain endpoint, such as whether to require HTTPS
	// for all traffic.
	domainEndpointOptions?: null | #DomainEndpointOptions @go(DomainEndpointOptions,*DomainEndpointOptions)

	// Unique identifier for the domain.
	domainID?: null | string @go(DomainID,*string)

	// Name of the domain. Domain names are unique across all domains owned by the
	// same account within an Amazon Web Services Region.
	domainName?: null | string @go(DomainName,*string)

	// Encryption at rest settings for the domain.
	encryptionAtRestOptions?: null | #EncryptionAtRestOptions @go(EncryptionAtRestOptions,*EncryptionAtRestOptions)

	// Domain-specific endpoint used to submit index, search, and data upload requests
	// to the domain.
	endpoint?: null | string @go(Endpoint,*string)

	// The key-value pair that exists if the OpenSearch Service domain uses VPC
	// endpoints.. Example key, value: 'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'.
	endpoints?: {[string]: null | string} @go(Endpoints,map[string]*string)

	// Version of OpenSearch or Elasticsearch that the domain is running, in the
	// format Elasticsearch_X.Y or OpenSearch_X.Y.
	engineVersion?: null | string @go(EngineVersion,*string)

	// Whether node-to-node encryption is enabled or disabled.
	nodeToNodeEncryptionOptions?: null | #NodeToNodeEncryptionOptions @go(NodeToNodeEncryptionOptions,*NodeToNodeEncryptionOptions)

	// The status of the domain configuration. True if OpenSearch Service is processing
	// configuration changes. False if the configuration is active.
	processing?: null | bool @go(Processing,*bool)

	// The current status of the domain's service software.
	serviceSoftwareOptions?: null | #ServiceSoftwareOptions @go(ServiceSoftwareOptions,*ServiceSoftwareOptions)

	// DEPRECATED. Container for parameters required to configure automated snapshots
	// of domain indexes.
	snapshotOptions?: null | #SnapshotOptions @go(SnapshotOptions,*SnapshotOptions)

	// The status of a domain version upgrade to a new version of OpenSearch or
	// Elasticsearch. True if OpenSearch Service is in the process of a version
	// upgrade. False if the configuration is active.
	upgradeProcessing?: null | bool @go(UpgradeProcessing,*bool)

	// The VPC configuration for the domain.
	vpcOptions?: null | #VPCDerivedInfo @go(VPCOptions,*VPCDerivedInfo)
}

// DomainStatus defines the observed state of Domain.
#DomainStatus: {
	atProvider?: #DomainObservation @go(AtProvider)
}

// Domain is the Schema for the Domains API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Domain: {
	spec:    #DomainSpec   @go(Spec)
	status?: #DomainStatus @go(Status)
}

// DomainList contains a list of Domains
#DomainList: {
	items: [...#Domain] @go(Items,[]Domain)
}
