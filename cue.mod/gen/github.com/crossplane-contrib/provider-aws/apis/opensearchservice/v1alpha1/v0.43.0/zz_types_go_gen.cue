// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/opensearchservice/v1alpha1

package v1alpha1

// +kubebuilder:skipversion
#AWSDomainInformation: {
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	domainName?: null | string @go(DomainName,*string)
}

// +kubebuilder:skipversion
#AccessPoliciesStatus: {
	// Access policy rules for an Amazon OpenSearch Service domain endpoint. For
	// more information, see Configuring access policies (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies).
	// The maximum size of a policy document is 100 KB.
	options?: null | string @go(Options,*string)
}

// +kubebuilder:skipversion
#AdvancedOptionsStatus: {
	// Exposes native OpenSearch configuration values from opensearch.yml. The following
	// advanced options are available:
	//
	//    * Allows references to indexes in an HTTP request body. Must be false
	//    when configuring access to individual sub-resources. Default is true.
	//
	//    * Specifies the percentage of heap space allocated to field data. Default
	//    is unbounded.
	//
	// For more information, see Advanced cluster parameters (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options).
	options?: {[string]: null | string} @go(Options,map[string]*string)
}

// +kubebuilder:skipversion
#AdvancedSecurityOptions: {
	anonymousAuthEnabled?:        null | bool @go(AnonymousAuthEnabled,*bool)
	enabled?:                     null | bool @go(Enabled,*bool)
	internalUserDatabaseEnabled?: null | bool @go(InternalUserDatabaseEnabled,*bool)

	// Describes the SAML application configured for the domain.
	sAMLOptions?: null | #SAMLOptionsOutput @go(SAMLOptions,*SAMLOptionsOutput)
}

// +kubebuilder:skipversion
#AdvancedSecurityOptionsInput: {
	anonymousAuthEnabled?:        null | bool @go(AnonymousAuthEnabled,*bool)
	enabled?:                     null | bool @go(Enabled,*bool)
	internalUserDatabaseEnabled?: null | bool @go(InternalUserDatabaseEnabled,*bool)

	// Credentials for the master user for a domain.
	masterUserOptions?: null | #MasterUserOptions @go(MasterUserOptions,*MasterUserOptions)

	// The SAML authentication configuration for an Amazon OpenSearch Service domain.
	sAMLOptions?: null | #SAMLOptionsInput @go(SAMLOptions,*SAMLOptionsInput)
}

// +kubebuilder:skipversion
#AdvancedSecurityOptionsStatus: {
	// Container for fine-grained access control settings.
	options?: null | #AdvancedSecurityOptions @go(Options,*AdvancedSecurityOptions)
}

// +kubebuilder:skipversion
#AuthorizedPrincipal: {
	principal?: null | string @go(Principal,*string)
}

// +kubebuilder:skipversion
#AutoTuneMaintenanceSchedule: {
	cronExpressionForRecurrence?: null | string @go(CronExpressionForRecurrence,*string)

	// The duration of a maintenance schedule. For more information, see Auto-Tune
	// for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
	duration?: null | #Duration @go(Duration,*Duration)
}

// +kubebuilder:skipversion
#AutoTuneOptions: {
	// The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
	desiredState?: null | string @go(DesiredState,*string)
	maintenanceSchedules?: [...null | #AutoTuneMaintenanceSchedule] @go(MaintenanceSchedules,[]*AutoTuneMaintenanceSchedule)
}

// +kubebuilder:skipversion
#AutoTuneOptionsInput: {
	// The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
	desiredState?: null | string @go(DesiredState,*string)
	maintenanceSchedules?: [...null | #AutoTuneMaintenanceSchedule] @go(MaintenanceSchedules,[]*AutoTuneMaintenanceSchedule)
}

// +kubebuilder:skipversion
#AutoTuneOptionsOutput: {
	errorMessage?: null | string @go(ErrorMessage,*string)

	// The Auto-Tune state for the domain. For valid states see Auto-Tune for Amazon
	// OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
	state?: null | string @go(State,*string)
}

// +kubebuilder:skipversion
#AutoTuneStatus: {
	errorMessage?:    null | string @go(ErrorMessage,*string)
	pendingDeletion?: null | bool   @go(PendingDeletion,*bool)

	// The Auto-Tune state for the domain. For valid states see Auto-Tune for Amazon
	// OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
	state?: null | string @go(State,*string)
}

// +kubebuilder:skipversion
#ChangeProgressDetails: {
	changeID?: null | string @go(ChangeID,*string)
	message?:  null | string @go(Message,*string)
}

// +kubebuilder:skipversion
#ChangeProgressStatusDetails: {
	changeID?: null | string @go(ChangeID,*string)
	completedProperties?: [...null | string] @go(CompletedProperties,[]*string)
	pendingProperties?: [...null | string] @go(PendingProperties,[]*string)
}

// +kubebuilder:skipversion
#ClusterConfig: {
	// Container for the parameters required to enable cold storage for an OpenSearch
	// Service domain. For more information, see Cold storage for Amazon OpenSearch
	// Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cold-storage.html).
	coldStorageOptions?:     null | #ColdStorageOptions @go(ColdStorageOptions,*ColdStorageOptions)
	dedicatedMasterCount?:   null | int64               @go(DedicatedMasterCount,*int64)
	dedicatedMasterEnabled?: null | bool                @go(DedicatedMasterEnabled,*bool)
	dedicatedMasterType?:    null | string              @go(DedicatedMasterType,*string)
	instanceCount?:          null | int64               @go(InstanceCount,*int64)
	instanceType?:           null | string              @go(InstanceType,*string)
	warmCount?:              null | int64               @go(WarmCount,*int64)
	warmEnabled?:            null | bool                @go(WarmEnabled,*bool)
	warmType?:               null | string              @go(WarmType,*string)

	// The zone awareness configuration for an Amazon OpenSearch Service domain.
	zoneAwarenessConfig?:  null | #ZoneAwarenessConfig @go(ZoneAwarenessConfig,*ZoneAwarenessConfig)
	zoneAwarenessEnabled?: null | bool                 @go(ZoneAwarenessEnabled,*bool)
}

// +kubebuilder:skipversion
#ClusterConfigStatus: {
	// Container for the cluster configuration of an OpenSearch Service domain.
	// For more information, see Creating and managing Amazon OpenSearch Service
	// domains (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html).
	options?: null | #ClusterConfig @go(Options,*ClusterConfig)
}

// +kubebuilder:skipversion
#CognitoOptions: {
	enabled?:        null | bool   @go(Enabled,*bool)
	identityPoolID?: null | string @go(IdentityPoolID,*string)
	roleARN?:        null | string @go(RoleARN,*string)
	userPoolID?:     null | string @go(UserPoolID,*string)
}

// +kubebuilder:skipversion
#CognitoOptionsStatus: {
	// Container for the parameters required to enable Cognito authentication for
	// an OpenSearch Service domain. For more information, see Configuring Amazon
	// Cognito authentication for OpenSearch Dashboards (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
	options?: null | #CognitoOptions @go(Options,*CognitoOptions)
}

// +kubebuilder:skipversion
#ColdStorageOptions: {
	enabled?: null | bool @go(Enabled,*bool)
}

// +kubebuilder:skipversion
#CompatibleVersionsMap: {
	sourceVersion?: null | string @go(SourceVersion,*string)
}

// +kubebuilder:skipversion
#DomainConfig: {
	// Container for information about a configuration change happening on a domain.
	changeProgressDetails?: null | #ChangeProgressDetails @go(ChangeProgressDetails,*ChangeProgressDetails)
}

// +kubebuilder:skipversion
#DomainEndpointOptions: {
	customEndpoint?: null | string @go(CustomEndpoint,*string)

	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using AWS
	// Identity and Access Management for more information.
	customEndpointCertificateARN?: null | string @go(CustomEndpointCertificateARN,*string)
	customEndpointEnabled?:        null | bool   @go(CustomEndpointEnabled,*bool)
	enforceHTTPS?:                 null | bool   @go(EnforceHTTPS,*bool)
	tlsSecurityPolicy?:            null | string @go(TLSSecurityPolicy,*string)
}

// +kubebuilder:skipversion
#DomainEndpointOptionsStatus: {
	// Options to configure a custom endpoint for an OpenSearch Service domain.
	options?: null | #DomainEndpointOptions @go(Options,*DomainEndpointOptions)
}

// +kubebuilder:skipversion
#DomainInfo: {
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	domainName?: null | string @go(DomainName,*string)
}

// +kubebuilder:skipversion
#DomainPackageDetails: {
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	domainName?: null | string @go(DomainName,*string)
}

// +kubebuilder:skipversion
#DomainStatus_SDK: {
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using AWS
	// Identity and Access Management for more information.
	arn?: null | string @go(ARN,*string)

	// Access policy rules for an Amazon OpenSearch Service domain endpoint. For
	// more information, see Configuring access policies (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies).
	// The maximum size of a policy document is 100 KB.
	accessPolicies?: null | string @go(AccessPolicies,*string)

	// Exposes native OpenSearch configuration values from opensearch.yml. The following
	// advanced options are available:
	//
	//    * Allows references to indexes in an HTTP request body. Must be false
	//    when configuring access to individual sub-resources. Default is true.
	//
	//    * Specifies the percentage of heap space allocated to field data. Default
	//    is unbounded.
	//
	// For more information, see Advanced cluster parameters (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options).
	advancedOptions?: {[string]: null | string} @go(AdvancedOptions,map[string]*string)

	// Container for fine-grained access control settings.
	advancedSecurityOptions?: null | #AdvancedSecurityOptions @go(AdvancedSecurityOptions,*AdvancedSecurityOptions)

	// The Auto-Tune settings for a domain, displayed when enabling or disabling
	// Auto-Tune.
	autoTuneOptions?: null | #AutoTuneOptionsOutput @go(AutoTuneOptions,*AutoTuneOptionsOutput)

	// Container for information about a configuration change happening on a domain.
	changeProgressDetails?: null | #ChangeProgressDetails @go(ChangeProgressDetails,*ChangeProgressDetails)

	// Container for the cluster configuration of an OpenSearch Service domain.
	// For more information, see Creating and managing Amazon OpenSearch Service
	// domains (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html).
	clusterConfig?: null | #ClusterConfig @go(ClusterConfig,*ClusterConfig)

	// Container for the parameters required to enable Cognito authentication for
	// an OpenSearch Service domain. For more information, see Configuring Amazon
	// Cognito authentication for OpenSearch Dashboards (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
	cognitoOptions?: null | #CognitoOptions @go(CognitoOptions,*CognitoOptions)
	created?:        null | bool            @go(Created,*bool)
	deleted?:        null | bool            @go(Deleted,*bool)

	// Options to configure a custom endpoint for an OpenSearch Service domain.
	domainEndpointOptions?: null | #DomainEndpointOptions @go(DomainEndpointOptions,*DomainEndpointOptions)

	// Unique identifier for an OpenSearch Service domain.
	domainID?: null | string @go(DomainID,*string)

	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	domainName?: null | string @go(DomainName,*string)

	// Container for the parameters required to enable EBS-based storage for an
	// OpenSearch Service domain.
	ebsOptions?: null | #EBSOptions @go(EBSOptions,*EBSOptions)

	// Specifies whether the domain should encrypt data at rest, and if so, the
	// Key Management Service (KMS) key to use. Can be used only to create a new
	// domain, not update an existing one.
	encryptionAtRestOptions?: null | #EncryptionAtRestOptions @go(EncryptionAtRestOptions,*EncryptionAtRestOptions)

	// The domain endpoint to which index and search requests are submitted. For
	// example, search-imdb-movies-oopcnjfn6ugo.eu-west-1.es.amazonaws.com or doc-imdb-movies-oopcnjfn6u.eu-west-1.es.amazonaws.com.
	endpoint?: null | string @go(Endpoint,*string)
	endpoints?: {[string]: null | string} @go(Endpoints,map[string]*string)
	engineVersion?: null | string @go(EngineVersion,*string)
	logPublishingOptions?: {[string]: null | #LogPublishingOption} @go(LogPublishingOptions,map[string]*LogPublishingOption)

	// Enables or disables node-to-node encryption. For more information, see Node-to-node
	// encryption for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html).
	nodeToNodeEncryptionOptions?: null | #NodeToNodeEncryptionOptions @go(NodeToNodeEncryptionOptions,*NodeToNodeEncryptionOptions)
	processing?:                  null | bool                         @go(Processing,*bool)

	// The current status of the service software for an Amazon OpenSearch Service
	// domain. For more information, see Service software updates in Amazon OpenSearch
	// Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html).
	serviceSoftwareOptions?: null | #ServiceSoftwareOptions @go(ServiceSoftwareOptions,*ServiceSoftwareOptions)

	// The time, in UTC format, when OpenSearch Service takes a daily automated
	// snapshot of the specified domain. Default is 0 hours.
	snapshotOptions?:   null | #SnapshotOptions @go(SnapshotOptions,*SnapshotOptions)
	upgradeProcessing?: null | bool             @go(UpgradeProcessing,*bool)

	// Information about the subnets and security groups for an Amazon OpenSearch
	// Service domain provisioned within a virtual private cloud (VPC). For more
	// information, see Launching your Amazon OpenSearch Service domains using a
	// VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
	// This information only exists if the domain was created with VPCOptions.
	vpcOptions?: null | #VPCDerivedInfo @go(VPCOptions,*VPCDerivedInfo)
}

// +kubebuilder:skipversion
#DryRunResults: {
	message?: null | string @go(Message,*string)
}

// +kubebuilder:skipversion
#Duration: {
	// The unit of a maintenance schedule duration. Valid value is HOUR.
	unit?: null | string @go(Unit,*string)

	// Integer that specifies the value of a maintenance schedule duration.
	value?: null | int64 @go(Value,*int64)
}

// +kubebuilder:skipversion
#EBSOptions: {
	ebsEnabled?: null | bool  @go(EBSEnabled,*bool)
	iops?:       null | int64 @go(IOPS,*int64)
	throughput?: null | int64 @go(Throughput,*int64)
	volumeSize?: null | int64 @go(VolumeSize,*int64)

	// The type of EBS volume that a domain uses. For more information, see Configuring
	// EBS-based storage (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs).
	volumeType?: null | string @go(VolumeType,*string)
}

// +kubebuilder:skipversion
#EBSOptionsStatus: {
	// Container for the parameters required to enable EBS-based storage for an
	// OpenSearch Service domain.
	options?: null | #EBSOptions @go(Options,*EBSOptions)
}

// +kubebuilder:skipversion
#EncryptionAtRestOptions: {
	enabled?:  null | bool   @go(Enabled,*bool)
	kmsKeyID?: null | string @go(KMSKeyID,*string)
}

// +kubebuilder:skipversion
#EncryptionAtRestOptionsStatus: {
	// Specifies whether the domain should encrypt data at rest, and if so, the
	// Key Management Service (KMS) key to use. Can be used only to create a new
	// domain, not update an existing one.
	options?: null | #EncryptionAtRestOptions @go(Options,*EncryptionAtRestOptions)
}

// +kubebuilder:skipversion
#InstanceTypeDetails: {
	advancedSecurityEnabled?: null | bool   @go(AdvancedSecurityEnabled,*bool)
	appLogsEnabled?:          null | bool   @go(AppLogsEnabled,*bool)
	cognitoEnabled?:          null | bool   @go(CognitoEnabled,*bool)
	encryptionEnabled?:       null | bool   @go(EncryptionEnabled,*bool)
	instanceType?:            null | string @go(InstanceType,*string)
	warmEnabled?:             null | bool   @go(WarmEnabled,*bool)
}

// +kubebuilder:skipversion
#LogPublishingOption: {
	// ARN of the Cloudwatch log group to publish logs to.
	cloudWatchLogsLogGroupARN?: null | string @go(CloudWatchLogsLogGroupARN,*string)
	enabled?:                   null | bool   @go(Enabled,*bool)
}

// +kubebuilder:skipversion
#LogPublishingOptionsStatus: {
	options?: {[string]: null | #LogPublishingOption} @go(Options,map[string]*LogPublishingOption)
}

// +kubebuilder:skipversion
#MasterUserOptions: {
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using AWS
	// Identity and Access Management for more information.
	masterUserARN?:      null | string @go(MasterUserARN,*string)
	masterUserName?:     null | string @go(MasterUserName,*string)
	masterUserPassword?: null | string @go(MasterUserPassword,*string)
}

// +kubebuilder:skipversion
#NodeToNodeEncryptionOptions: {
	enabled?: null | bool @go(Enabled,*bool)
}

// +kubebuilder:skipversion
#NodeToNodeEncryptionOptionsStatus: {
	// Enables or disables node-to-node encryption. For more information, see Node-to-node
	// encryption for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html).
	options?: null | #NodeToNodeEncryptionOptions @go(Options,*NodeToNodeEncryptionOptions)
}

// +kubebuilder:skipversion
#OptionStatus: {
	pendingDeletion?: null | bool @go(PendingDeletion,*bool)
}

// +kubebuilder:skipversion
#RecurringCharge: {
	recurringChargeFrequency?: null | string @go(RecurringChargeFrequency,*string)
}

// +kubebuilder:skipversion
#ReservedInstance: {
	currencyCode?:               null | string @go(CurrencyCode,*string)
	instanceType?:               null | string @go(InstanceType,*string)
	reservedInstanceID?:         null | string @go(ReservedInstanceID,*string)
	reservedInstanceOfferingID?: null | string @go(ReservedInstanceOfferingID,*string)
	state?:                      null | string @go(State,*string)
}

// +kubebuilder:skipversion
#ReservedInstanceOffering: {
	currencyCode?:               null | string @go(CurrencyCode,*string)
	instanceType?:               null | string @go(InstanceType,*string)
	reservedInstanceOfferingID?: null | string @go(ReservedInstanceOfferingID,*string)
}

// +kubebuilder:skipversion
#SAMLIDp: {
	entityID?:        null | string @go(EntityID,*string)
	metadataContent?: null | string @go(MetadataContent,*string)
}

// +kubebuilder:skipversion
#SAMLOptionsInput: {
	enabled?: null | bool @go(Enabled,*bool)

	// The SAML identity povider information.
	idp?:                   null | #SAMLIDp @go(IDp,*SAMLIDp)
	masterBackendRole?:     null | string   @go(MasterBackendRole,*string)
	masterUserName?:        null | string   @go(MasterUserName,*string)
	rolesKey?:              null | string   @go(RolesKey,*string)
	sessionTimeoutMinutes?: null | int64    @go(SessionTimeoutMinutes,*int64)
	subjectKey?:            null | string   @go(SubjectKey,*string)
}

// +kubebuilder:skipversion
#SAMLOptionsOutput: {
	enabled?: null | bool @go(Enabled,*bool)

	// The SAML identity povider information.
	idp?:                   null | #SAMLIDp @go(IDp,*SAMLIDp)
	rolesKey?:              null | string   @go(RolesKey,*string)
	sessionTimeoutMinutes?: null | int64    @go(SessionTimeoutMinutes,*int64)
	subjectKey?:            null | string   @go(SubjectKey,*string)
}

// +kubebuilder:skipversion
#ServiceSoftwareOptions: {
	cancellable?:        null | bool   @go(Cancellable,*bool)
	currentVersion?:     null | string @go(CurrentVersion,*string)
	description?:        null | string @go(Description,*string)
	newVersion?:         null | string @go(NewVersion,*string)
	optionalDeployment?: null | bool   @go(OptionalDeployment,*bool)
	updateAvailable?:    null | bool   @go(UpdateAvailable,*bool)
	updateStatus?:       null | string @go(UpdateStatus,*string)
}

// +kubebuilder:skipversion
#SnapshotOptions: {
	automatedSnapshotStartHour?: null | int64 @go(AutomatedSnapshotStartHour,*int64)
}

// +kubebuilder:skipversion
#SnapshotOptionsStatus: {
	// The time, in UTC format, when OpenSearch Service takes a daily automated
	// snapshot of the specified domain. Default is 0 hours.
	options?: null | #SnapshotOptions @go(Options,*SnapshotOptions)
}

// +kubebuilder:skipversion
#Tag: {
	// A string between 1 to 128 characters that specifies the key for a tag. Tag
	// keys must be unique for the domain to which they're attached.
	key?: null | string @go(Key,*string)

	// A string between 0 to 256 characters that specifies the value for a tag.
	// Tag values can be null and don't have to be unique in a tag set.
	value?: null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#VPCDerivedInfo: {
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)
	securityGroupIDs?: [...null | string] @go(SecurityGroupIDs,[]*string)
	subnetIDs?: [...null | string] @go(SubnetIDs,[]*string)
	vpcID?: null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#VPCDerivedInfoStatus: {
	// Information about the subnets and security groups for an Amazon OpenSearch
	// Service domain provisioned within a virtual private cloud (VPC). For more
	// information, see Launching your Amazon OpenSearch Service domains using a
	// VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
	// This information only exists if the domain was created with VPCOptions.
	options?: null | #VPCDerivedInfo @go(Options,*VPCDerivedInfo)
}

// +kubebuilder:skipversion
#VPCEndpoint: {
	// Information about the subnets and security groups for an Amazon OpenSearch
	// Service domain provisioned within a virtual private cloud (VPC). For more
	// information, see Launching your Amazon OpenSearch Service domains using a
	// VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
	// This information only exists if the domain was created with VPCOptions.
	vpcOptions?: null | #VPCDerivedInfo @go(VPCOptions,*VPCDerivedInfo)
}

// +kubebuilder:skipversion
#VPCEndpointError: {
	errorMessage?: null | string @go(ErrorMessage,*string)
}

// +kubebuilder:skipversion
#VPCEndpointSummary: {
	vpcEndpointOwner?: null | string @go(VPCEndpointOwner,*string)
}

// +kubebuilder:skipversion
#VPCOptions: {
	securityGroupIDs?: [...null | string] @go(SecurityGroupIDs,[]*string)
	subnetIDs?: [...null | string] @go(SubnetIDs,[]*string)
}

// +kubebuilder:skipversion
#VersionStatus: {
	options?: null | string @go(Options,*string)
}

// +kubebuilder:skipversion
#ZoneAwarenessConfig: {
	availabilityZoneCount?: null | int64 @go(AvailabilityZoneCount,*int64)
}
