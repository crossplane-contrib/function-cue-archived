// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/lambda/manualv1alpha1

package manualv1alpha1

// PermissionParameters define the desired state of a Lambda Permission
#PermissionParameters: {
	// Region is which region the Function will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The name of the Lambda function, version, or alias. Name formats
	//
	// * Function
	// name - my-function (name-only), my-function:v1 (with alias).
	//
	// * Function ARN -
	// arn:aws:lambda:us-west-2:123456789012:function:my-function.
	//
	// * Partial ARN -
	// 123456789012:function:my-function.
	//
	// You can append a version number or alias to
	// any of the formats. The length constraint applies only to the full ARN. If you
	// specify only the function name, it is limited to 64 characters in length.
	//
	// This member is required.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:refFieldName=FunctionNameRef
	// +crossplane:generate:reference:selectorFieldName=FunctionNameSelector
	functionName?: null | string @go(FunctionName,*string)

	// The action that the principal can use on the function. For example,
	// lambda:InvokeFunction or lambda:GetFunction.
	//
	// This member is required.
	action: string @go(Action)

	// The Amazon Web Services service or account that invokes the function. If you
	// specify a service, use SourceArn or SourceAccount to limit who can invoke the
	// function through that service.
	//
	// This member is required.
	principal: string @go(Principal)

	// For Alexa Smart Home functions, a token that must be supplied by the invoker.
	eventSourceToken?: null | string @go(EventSourceToken,*string)

	// The identifier for your organization in Organizations. Use this to grant
	// permissions to all the Amazon Web Services accounts under this organization.
	principalOrgId?: null | string @go(PrincipalOrgID,*string)

	// For Amazon S3, the ID of the account that owns the resource. Use this together
	// with SourceArn to ensure that the resource is owned by the specified account. It
	// is possible for an Amazon S3 bucket to be deleted by its owner and recreated by
	// another account.
	sourceAccount?: null | string @go(SourceAccount,*string)

	// For Amazon Web Services services, the ARN of the Amazon Web Services resource
	// that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.
	// Note that Lambda configures the comparison using the StringLike operator.
	sourceARN?: null | string @go(SourceArn,*string)
}

// A PermissionSpec defines the desired state of a Permission.
#PermissionSpec: {
	forProvider: #PermissionParameters @go(ForProvider)
}

// PermissionObservation keeps the state for the external resource
#PermissionObservation: {
	revisionId?: null | string @go(RevisionID,*string)
}

// A PermissionStatus represents the observed state of a ElasticIP.
#PermissionStatus: {
	atProvider?: #PermissionObservation @go(AtProvider)
}

// A Permission is a managed resource that represents a AWS Lambda Permission.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="SID",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Permission: {
	spec:    #PermissionSpec   @go(Spec)
	status?: #PermissionStatus @go(Status)
}

// PermissionList contains a list of Permissions
#PermissionList: {
	items: [...#Permission] @go(Items,[]Permission)
}
