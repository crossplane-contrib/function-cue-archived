// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/lambda/v1beta1

package v1beta1

// +kubebuilder:skipversion
#AccountLimit: {
	codeSizeUnzipped?: null | int64 @go(CodeSizeUnzipped,*int64)
	codeSizeZipped?:   null | int64 @go(CodeSizeZipped,*int64)
	totalCodeSize?:    null | int64 @go(TotalCodeSize,*int64)
}

// +kubebuilder:skipversion
#AccountUsage: {
	functionCount?: null | int64 @go(FunctionCount,*int64)
	totalCodeSize?: null | int64 @go(TotalCodeSize,*int64)
}

// +kubebuilder:skipversion
#CORS: {
	allowCredentials?: null | bool @go(AllowCredentials,*bool)
	allowHeaders?: [...null | string] @go(AllowHeaders,[]*string)
	allowMethods?: [...null | string] @go(AllowMethods,[]*string)
	allowOrigins?: [...null | string] @go(AllowOrigins,[]*string)
	exposeHeaders?: [...null | string] @go(ExposeHeaders,[]*string)
	maxAge?: null | int64 @go(MaxAge,*int64)
}

// +kubebuilder:skipversion
#CodeSigningConfig: {
	codeSigningConfigARN?: null | string @go(CodeSigningConfigARN,*string)
	description?:          null | string @go(Description,*string)
	lastModified?:         null | string @go(LastModified,*string)
}

// +kubebuilder:skipversion
#DeadLetterConfig: {
	targetARN?: null | string @go(TargetARN,*string)
}

// +kubebuilder:skipversion
#Environment: {
	variables?: {[string]: null | string} @go(Variables,map[string]*string)
}

// +kubebuilder:skipversion
#EnvironmentError: {
	errorCode?: null | string @go(ErrorCode,*string)
	message?:   null | string @go(Message,*string)
}

// +kubebuilder:skipversion
#EnvironmentResponse: {
	// Error messages for environment variables that couldn't be applied.
	error?: null | #EnvironmentError @go(Error,*EnvironmentError)
	variables?: {[string]: null | string} @go(Variables,map[string]*string)
}

// +kubebuilder:skipversion
#EphemeralStorage: {
	size?: null | int64 @go(Size,*int64)
}

// +kubebuilder:skipversion
#FileSystemConfig: {
	arn?:            null | string @go(ARN,*string)
	localMountPath?: null | string @go(LocalMountPath,*string)
}

// +kubebuilder:skipversion
#FunctionCode: {
	imageURI?: null | string @go(ImageURI,*string)
}

// +kubebuilder:skipversion
#FunctionCodeLocation: {
	imageURI?:         null | string @go(ImageURI,*string)
	location?:         null | string @go(Location,*string)
	repositoryType?:   null | string @go(RepositoryType,*string)
	resolvedImageURI?: null | string @go(ResolvedImageURI,*string)
}

// +kubebuilder:skipversion
#FunctionConfiguration: {
	architectures?: [...null | string] @go(Architectures,[]*string)
	codeSHA256?: null | string @go(CodeSHA256,*string)
	codeSize?:   null | int64  @go(CodeSize,*int64)

	// The dead-letter queue (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq)
	// for failed asynchronous invocations.
	deadLetterConfig?: null | #DeadLetterConfig @go(DeadLetterConfig,*DeadLetterConfig)
	description?:      null | string            @go(Description,*string)

	// The results of an operation to update or read environment variables. If the
	// operation succeeds, the response contains the environment variables. If it
	// fails, the response contains details about the error.
	environment?: null | #EnvironmentResponse @go(Environment,*EnvironmentResponse)

	// The size of the function's /tmp directory in MB. The default value is 512,
	// but it can be any whole number between 512 and 10,240 MB.
	ephemeralStorage?: null | #EphemeralStorage @go(EphemeralStorage,*EphemeralStorage)
	fileSystemConfigs?: [...null | #FileSystemConfig] @go(FileSystemConfigs,[]*FileSystemConfig)
	functionARN?:  null | string @go(FunctionARN,*string)
	functionName?: null | string @go(FunctionName,*string)
	handler?:      null | string @go(Handler,*string)

	// Response to a GetFunctionConfiguration request.
	imageConfigResponse?:        null | #ImageConfigResponse @go(ImageConfigResponse,*ImageConfigResponse)
	kmsKeyARN?:                  null | string               @go(KMSKeyARN,*string)
	lastModified?:               null | string               @go(LastModified,*string)
	lastUpdateStatus?:           null | string               @go(LastUpdateStatus,*string)
	lastUpdateStatusReason?:     null | string               @go(LastUpdateStatusReason,*string)
	lastUpdateStatusReasonCode?: null | string               @go(LastUpdateStatusReasonCode,*string)
	masterARN?:                  null | string               @go(MasterARN,*string)
	memorySize?:                 null | int64                @go(MemorySize,*int64)
	packageType?:                null | string               @go(PackageType,*string)
	revisionID?:                 null | string               @go(RevisionID,*string)
	role?:                       null | string               @go(Role,*string)
	runtime?:                    null | string               @go(Runtime,*string)
	signingJobARN?:              null | string               @go(SigningJobARN,*string)
	signingProfileVersionARN?:   null | string               @go(SigningProfileVersionARN,*string)

	// The function's SnapStart (https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html)
	// setting.
	snapStart?:       null | #SnapStartResponse @go(SnapStart,*SnapStartResponse)
	state?:           null | string             @go(State,*string)
	stateReason?:     null | string             @go(StateReason,*string)
	stateReasonCode?: null | string             @go(StateReasonCode,*string)
	timeout?:         null | int64              @go(Timeout,*int64)

	// The function's X-Ray tracing configuration.
	tracingConfig?: null | #TracingConfigResponse @go(TracingConfig,*TracingConfigResponse)
	version?:       null | string                 @go(Version,*string)

	// The VPC security groups and subnets that are attached to a Lambda function.
	vpcConfig?: null | #VPCConfigResponse @go(VPCConfig,*VPCConfigResponse)
}

// +kubebuilder:skipversion
#FunctionEventInvokeConfig: {
	functionARN?: null | string @go(FunctionARN,*string)
}

// +kubebuilder:skipversion
#FunctionURLConfig_SDK: {
	authType?: null | string @go(AuthType,*string)

	// The cross-origin resource sharing (CORS) (https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
	// settings for your Lambda function URL. Use CORS to grant access to your function
	// URL from any origin. You can also use CORS to control access for specific
	// HTTP headers and methods in requests to your function URL.
	cors?:             null | #CORS  @go(CORS,*CORS)
	creationTime?:     null | string @go(CreationTime,*string)
	functionARN?:      null | string @go(FunctionARN,*string)
	functionURL?:      null | string @go(FunctionURL,*string)
	lastModifiedTime?: null | string @go(LastModifiedTime,*string)
}

// +kubebuilder:skipversion
#ImageConfig: {
	command?: [...null | string] @go(Command,[]*string)
	entryPoint?: [...null | string] @go(EntryPoint,[]*string)
	workingDirectory?: null | string @go(WorkingDirectory,*string)
}

// +kubebuilder:skipversion
#ImageConfigError: {
	errorCode?: null | string @go(ErrorCode,*string)
	message?:   null | string @go(Message,*string)
}

// +kubebuilder:skipversion
#ImageConfigResponse: {
	// Error response to GetFunctionConfiguration.
	error?: null | #ImageConfigError @go(Error,*ImageConfigError)

	// Configuration values that override the container image Dockerfile settings.
	// For more information, see Container image settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).
	imageConfig?: null | #ImageConfig @go(ImageConfig,*ImageConfig)
}

// +kubebuilder:skipversion
#Layer: {
	arn?:                      null | string @go(ARN,*string)
	codeSize?:                 null | int64  @go(CodeSize,*int64)
	signingJobARN?:            null | string @go(SigningJobARN,*string)
	signingProfileVersionARN?: null | string @go(SigningProfileVersionARN,*string)
}

// +kubebuilder:skipversion
#LayerVersionContentOutput: {
	codeSHA256?:               null | string @go(CodeSHA256,*string)
	codeSize?:                 null | int64  @go(CodeSize,*int64)
	location?:                 null | string @go(Location,*string)
	signingJobARN?:            null | string @go(SigningJobARN,*string)
	signingProfileVersionARN?: null | string @go(SigningProfileVersionARN,*string)
}

// +kubebuilder:skipversion
#LayerVersionsListItem: {
	createdDate?:     null | string @go(CreatedDate,*string)
	description?:     null | string @go(Description,*string)
	layerVersionARN?: null | string @go(LayerVersionARN,*string)
}

// +kubebuilder:skipversion
#ProvisionedConcurrencyConfigListItem: {
	functionARN?:  null | string @go(FunctionARN,*string)
	lastModified?: null | string @go(LastModified,*string)
	statusReason?: null | string @go(StatusReason,*string)
}

// +kubebuilder:skipversion
#PutFunctionConcurrencyOutput: {
	reservedConcurrentExecutions?: null | int64 @go(ReservedConcurrentExecutions,*int64)
}

// +kubebuilder:skipversion
#SnapStart: {
	applyOn?: null | string @go(ApplyOn,*string)
}

// +kubebuilder:skipversion
#SnapStartResponse: {
	applyOn?:            null | string @go(ApplyOn,*string)
	optimizationStatus?: null | string @go(OptimizationStatus,*string)
}

// +kubebuilder:skipversion
#TracingConfig: {
	mode?: null | string @go(Mode,*string)
}

// +kubebuilder:skipversion
#TracingConfigResponse: {
	mode?: null | string @go(Mode,*string)
}

// +kubebuilder:skipversion
#VPCConfig: {
	securityGroupIDs?: [...null | string] @go(SecurityGroupIDs,[]*string)
	subnetIDs?: [...null | string] @go(SubnetIDs,[]*string)
}

// +kubebuilder:skipversion
#VPCConfigResponse: {
	securityGroupIDs?: [...null | string] @go(SecurityGroupIDs,[]*string)
	subnetIDs?: [...null | string] @go(SubnetIDs,[]*string)
	vpcID?: null | string @go(VPCID,*string)
}
