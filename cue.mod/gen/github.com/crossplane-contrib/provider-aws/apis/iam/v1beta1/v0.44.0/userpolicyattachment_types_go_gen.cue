// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1

package v1beta1

// UserPolicyAttachmentParameters define the desired state of an AWS UserPolicyAttachment.
#UserPolicyAttachmentParameters: {
	// PolicyARN is the Amazon Resource Name (ARN) of the IAM policy you want to
	// attach.
	// +immutable
	// +crossplane:generate:reference:type=Policy
	// +crossplane:generate:reference:extractor=PolicyARN()
	policyArn?: string @go(PolicyARN)

	// UserName presents the name of the User.
	// +immutable
	// +crossplane:generate:reference:type=User
	userName?: string @go(UserName)
}

// A UserPolicyAttachmentSpec defines the desired state of an
// UserPolicyAttachment.
#UserPolicyAttachmentSpec: {
	forProvider: #UserPolicyAttachmentParameters @go(ForProvider)
}

// UserPolicyAttachmentObservation keeps the state for the external resource
#UserPolicyAttachmentObservation: {
	// AttachedPolicyARN is the arn for the attached policy. If nil, the policy
	// is not yet attached
	attachedPolicyArn: string @go(AttachedPolicyARN)
}

// A UserPolicyAttachmentStatus represents the observed state of a UserPolicyAttachment.
#UserPolicyAttachmentStatus: {
	atProvider?: #UserPolicyAttachmentObservation @go(AtProvider)
}

// A UserPolicyAttachment is a managed resource that represents an AWS IAM
// User policy attachment.
// +kubebuilder:printcolumn:name="USERNAME",type="string",JSONPath=".spec.forProvider.userName"
// +kubebuilder:printcolumn:name="POLICYARN",type="string",JSONPath=".spec.forProvider.policyArn"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserPolicyAttachment: {
	spec:    #UserPolicyAttachmentSpec   @go(Spec)
	status?: #UserPolicyAttachmentStatus @go(Status)
}

// UserPolicyAttachmentList contains a list of UserPolicyAttachments
#UserPolicyAttachmentList: {
	items: [...#UserPolicyAttachment] @go(Items,[]UserPolicyAttachment)
}
