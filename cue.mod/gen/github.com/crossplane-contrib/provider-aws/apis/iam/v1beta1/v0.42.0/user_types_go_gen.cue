// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1

package v1beta1

// UserParameters define the desired state of an AWS IAM User.
#UserParameters: {
	// The path for the user name.
	// +optional
	path?: null | string @go(Path,*string)

	// The ARN of the policy that is used to set the permissions boundary for the
	// user.
	// +optional
	permissionsBoundary?: null | string @go(PermissionsBoundary,*string)

	// A list of tags that you want to attach to the newly created user.
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)
}

// UserSpec defines the desired state of an IAM User.
#UserSpec: {
	forProvider: #UserParameters @go(ForProvider)
}

// UserObservation keeps the state for the external resource
#UserObservation: {
	// The Amazon Resource Name (ARN) that identifies the user.
	arn?: string @go(ARN)

	// The stable and unique string identifying the user.
	userId?: string @go(UserID)
}

// A UserStatus represents the observed state of an IAM User.
#UserStatus: {
	atProvider?: #UserObservation @go(AtProvider)
}

// A User is a managed resource that represents an AWS IAM User.
// +kubebuilder:printcolumn:name="ARN",type="string",JSONPath=".status.atProvider.arn"
// +kubebuilder:printcolumn:name="ID",type="string",JSONPath=".status.atProvider.userId"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#User: {
	spec:    #UserSpec   @go(Spec)
	status?: #UserStatus @go(Status)
}

// UserList contains a list of IAM Users
#UserList: {
	items: [...#User] @go(Items,[]User)
}
