// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/athena/v1alpha1

package v1alpha1

// WorkGroupParameters defines the desired state of WorkGroup
#WorkGroupParameters: {
	// Region is which region the WorkGroup will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Contains configuration information for creating an Athena SQL workgroup or
	// Spark enabled Athena workgroup. Athena SQL workgroup configuration includes
	// the location in Amazon S3 where query and calculation results are stored,
	// the encryption configuration, if any, used for encrypting query results,
	// whether the Amazon CloudWatch Metrics are enabled for the workgroup, the
	// limit for the amount of bytes scanned (cutoff) per query, if it is specified,
	// and whether workgroup's settings (specified with EnforceWorkGroupConfiguration)
	// in the WorkGroupConfiguration override client-side settings. See WorkGroupConfiguration$EnforceWorkGroupConfiguration.
	configuration?: null | #WorkGroupConfiguration @go(Configuration,*WorkGroupConfiguration)

	// The workgroup description.
	description?: null | string @go(Description,*string)

	// A list of comma separated tags to add to the workgroup that is created.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomWorkGroupParameters
}

// WorkGroupSpec defines the desired state of WorkGroup
#WorkGroupSpec: {
	forProvider: #WorkGroupParameters @go(ForProvider)
}

// WorkGroupObservation defines the observed state of WorkGroup
#WorkGroupObservation: {
}

// WorkGroupStatus defines the observed state of WorkGroup.
#WorkGroupStatus: {
	atProvider?: #WorkGroupObservation @go(AtProvider)
}

// WorkGroup is the Schema for the WorkGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#WorkGroup: {
	spec:    #WorkGroupSpec   @go(Spec)
	status?: #WorkGroupStatus @go(Status)
}

// WorkGroupList contains a list of WorkGroups
#WorkGroupList: {
	items: [...#WorkGroup] @go(Items,[]WorkGroup)
}
