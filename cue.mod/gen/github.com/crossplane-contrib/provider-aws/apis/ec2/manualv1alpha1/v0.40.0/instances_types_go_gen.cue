// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ec2/manualv1alpha1

package manualv1alpha1

// InstanceParameters define the desired state of the Instances
#InstanceParameters: {
	// The block device mapping entries.
	// +optional
	blockDeviceMappings?: [...#BlockDeviceMapping] @go(BlockDeviceMappings,[]BlockDeviceMapping)

	// Information about the Capacity Reservation targeting option. If you do not
	// specify this parameter, the instance's Capacity Reservation preference defaults
	// to open, which enables it to run in any open Capacity Reservation that has
	// matching attributes (instance type, platform, Availability Zone).
	// +optional
	capacityReservationSpecification?: null | #CapacityReservationSpecification @go(CapacityReservationSpecification,*CapacityReservationSpecification)

	// Unique, case-sensitive identifier you provide to ensure the idempotency of
	// the request. If you do not specify a client token, a randomly generated token
	// is used for the request to ensure idempotency.
	//
	// For more information, see Ensuring Idempotency (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
	//
	// Constraints: Maximum 64 ASCII characters
	// +optional
	clientToken?: null | string @go(ClientToken,*string)

	// The CPU options for the instance. For more information, see Optimizing CPU
	// Options (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html)
	// in the Amazon Elastic Compute Cloud User Guide.
	// +optional
	cpuOptions?: null | #CPUOptionsRequest @go(CPUOptions,*CPUOptionsRequest)

	// The credit option for CPU usage of the burstable performance instance. Valid
	// values are standard and unlimited. To change this attribute after launch,
	// use ModifyInstanceCreditSpecification (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html).
	// For more information, see Burstable Performance Instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html)
	// in the Amazon Elastic Compute Cloud User Guide.
	//
	// Default: standard (T2 instances) or unlimited (T3/T3a instances)
	// +optional
	creditSpecification?: null | #CreditSpecificationRequest @go(CreditSpecification,*CreditSpecificationRequest)

	// If you set this parameter to true, you can't terminate the instance using
	// the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute
	// after launch, use ModifyInstanceAttribute (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html).
	// Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate,
	// you can terminate the instance by running the shutdown command from the instance.
	//
	// Default: false
	// +optional
	disableAPITermination?: null | bool @go(DisableAPITermination,*bool)

	// Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
	// provides dedicated throughput to Amazon EBS and an optimized configuration
	// stack to provide optimal Amazon EBS I/O performance. This optimization isn't
	// available with all instance types. Additional usage charges apply when using
	// an EBS-optimized instance.
	//
	// Default: false
	// +optional
	ebsOptimized?: null | bool @go(EBSOptimized,*bool)

	// An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource
	// that you can attach to your Windows instance to accelerate the graphics performance
	// of your applications. For more information, see Amazon EC2 Elastic GPUs (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html)
	// in the Amazon Elastic Compute Cloud User Guide.
	// +optional
	ElasticGpuSpecification?: [...#ElasticGPUSpecification] @go(ElasticGPUSpecification,[]ElasticGPUSpecification)

	// An elastic inference accelerator to associate with the instance. Elastic
	// inference accelerators are a resource you can attach to your Amazon EC2 instances
	// to accelerate your Deep Learning (DL) inference workloads.
	//
	// You cannot specify accelerators from different generations in the same request.
	// +optional
	elasticInferenceAccelerators?: [...#ElasticInferenceAccelerator] @go(ElasticInferenceAccelerators,[]ElasticInferenceAccelerator)

	// Indicates whether an instance is enabled for hibernation. For more information,
	// see Hibernate Your Instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html)
	// in the Amazon Elastic Compute Cloud User Guide.
	// +optional
	hibernationOptions?: null | #HibernationOptionsRequest @go(HibernationOptions,*HibernationOptionsRequest)

	// The IAM instance profile.
	// +optional
	iamInstanceProfile?: null | #IAMInstanceProfileSpecification @go(IAMInstanceProfile,*IAMInstanceProfileSpecification)

	// The ID of the AMI. An AMI ID is required to launch an instance and must be
	// specified here or in a launch template.
	imageId?: null | string @go(ImageID,*string)

	// Indicates whether an instance stops or terminates when you initiate shutdown
	// from the instance (using the operating system command for system shutdown).
	//
	// Default: stop
	// +optional
	instanceInitiatedShutdownBehavior?: string @go(InstanceInitiatedShutdownBehavior)

	// The market (purchasing) option for the instances.
	//
	// For RunInstances, persistent Spot Instance requests are only supported when
	// InstanceInterruptionBehavior is set to either hibernate or stop.
	// +optional
	instanceMarketOptions?: null | #InstanceMarketOptionsRequest @go(InstanceMarketOptions,*InstanceMarketOptionsRequest)

	// The instance type. For more information, see Instance Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
	// in the Amazon Elastic Compute Cloud User Guide.
	//
	// Default: m1.small
	// +optional
	instanceType?: string @go(InstanceType)

	// [EC2-VPC] The number of IPv6 addresses to associate with the primary network
	// interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	// You cannot specify this option and the option to assign specific IPv6 addresses
	// in the same request. You can specify this option if you've specified a minimum
	// number of instances to launch.
	//
	// You cannot specify this option and the network interfaces option in the same
	// request.
	// +optional
	ipv6AddressCount?: null | int32 @go(IPv6AddressCount,*int32)

	// [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with
	// the primary network interface. You cannot specify this option and the option
	// to assign a number of IPv6 addresses in the same request. You cannot specify
	// this option if you've specified a minimum number of instances to launch.
	//
	// You cannot specify this option and the network interfaces option in the same
	// request.
	// +optional
	ipv6Addresses?: [...#InstanceIPv6Address] @go(IPv6Addresses,[]InstanceIPv6Address)

	// The ID of the kernel.
	//
	// AWS recommends that you use PV-GRUB instead of kernels and RAM disks. For more
	// information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)
	// in the Amazon Elastic Compute Cloud User Guide.
	// +optional
	kernelId?: null | string @go(KernelID,*string)

	// The name of the key pair. You can create a key pair using CreateKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html)
	// or ImportKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html).
	//
	// If you do not specify a key pair, you can't connect to the instance unless
	// you choose an AMI that is configured to allow users another way to log in.
	// +optional
	keyName?: null | string @go(KeyName,*string)

	// The launch template to use to launch the instances. Any parameters that you
	// specify in RunInstances override the same parameters in the launch template.
	// You can specify either the name or ID of a launch template, but not both.
	// +optional
	launchTemplate?: null | #LaunchTemplateSpecification @go(LaunchTemplate,*LaunchTemplateSpecification)

	// The Amazon Resource Name (ARN) of the license configuration
	// +optional
	licenseSpecifications?: [...#LicenseConfigurationRequest] @go(LicenseSpecifications,[]LicenseConfigurationRequest)

	// The metadata options for the instance. For more information, see Instance
	// Metadata and User Data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
	// +optional
	metadataOptions?: null | #InstanceMetadataOptionsRequest @go(MetadataOptions,*InstanceMetadataOptionsRequest)

	// Specifies whether detailed monitoring is enabled for the instance.
	// +optional
	monitoring?: null | #RunInstancesMonitoringEnabled @go(Monitoring,*RunInstancesMonitoringEnabled)

	// The network interfaces to associate with the instance. If you specify a network
	// interface, you must specify any security groups and subnets as part of the
	// network interface.
	// +optional
	networkInterfaces?: [...#InstanceNetworkInterfaceSpecification] @go(NetworkInterfaces,[]InstanceNetworkInterfaceSpecification)

	// The placement for the instance.
	// +optional
	placement?: null | #Placement @go(Placement,*Placement)

	// [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4
	// address range of the subnet.
	//
	// Only one private IP address can be designated as primary. You can't specify
	// this option if you've specified the option to designate a private IP address
	// as the primary IP address in a network interface specification. You cannot
	// specify this option if you're launching more than one instance in the request.
	//
	// You cannot specify this option and the network interfaces option in the same
	// request.
	// +optional
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The ID of the RAM disk to select. Some kernels require additional drivers
	// at launch. Check the kernel requirements for information about whether you
	// need to specify a RAM disk. To find kernel requirements, go to the AWS Resource
	// Center and search for the kernel ID.
	//
	// AWS recommends that you use PV-GRUB instead of kernels and RAM disks. For more
	// information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)
	// in the Amazon Elastic Compute Cloud User Guide.
	// +optional
	ramDiskId?: null | string @go(RAMDiskID,*string)

	// Region is the region you'd like your Instance to be created in.
	region?: null | string @go(Region,*string)

	// The IDs of the security groups. You can create a security group using CreateSecurityGroup
	// (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html).
	//
	// If you specify a network interface, you must specify any security groups
	// as part of the network interface.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupSelector
	securityGroupIds?: [...string] @go(SecurityGroupIDs,[]string)

	// [EC2-VPC] The ID of the subnet to launch the instance into.
	//
	// If you specify a network interface, you must specify any subnets as part
	// of the network interface.
	// +optional
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1.Subnet
	subnetId?: null | string @go(SubnetID,*string)

	// Tags are used as identification helpers between AWS resources.
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)

	// The tags to apply to the resources during launch. You can only tag instances
	// and volumes on launch. The specified tags are applied to all instances or
	// volumes that are created during launch. To tag a resource after it has been
	// created, see CreateTags (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html).
	// +immutable
	// +optional
	tagSpecifications?: [...#TagSpecification] @go(TagSpecifications,[]TagSpecification)

	// The user data to make available to the instance. For more information, see
	// Running Commands on Your Linux Instance at Launch (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html)
	// (Linux) and Adding User Data (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data)
	// (Windows). If you are using a command line tool, base64-encoding is performed
	// for you, and you can load the text from a file. Otherwise, you must provide
	// base64-encoded text. User data is limited to 16 KB.
	// +optional
	// +kubebuilder:validation:Pattern=`^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$`
	userData?: null | string @go(UserData,*string)
}

// An InstanceSpec defines the desired state of Instances.
#InstanceSpec: {
	forProvider: #InstanceParameters @go(ForProvider)
}

// An InstanceStatus represents the observed state of Instances.
#InstanceStatus: {
	atProvider?: #InstanceObservation @go(AtProvider)
}

// InstanceObservation keeps the state for the external resource. The below fields
// follow the Instance response object as closely as possible.
#InstanceObservation: {
	// +optional
	amiLaunchIndex?: null | int32 @go(AmiLaunchIndex,*int32)
	architecture:    string       @go(Architecture)

	// +optional
	blockDeviceMapping?: [...#InstanceBlockDeviceMapping] @go(BlockDeviceMapping,[]InstanceBlockDeviceMapping)

	// +optional
	capacityReservationId?: null | string @go(CapacityReservationID,*string)

	// +optional
	capacityReservationSpecification?: null | #CapacityReservationSpecificationResponse @go(CapacityReservationSpecification,*CapacityReservationSpecificationResponse)

	// +optional
	clientToken?: null | string @go(ClientToken,*string)

	// +optional
	cpuOptions?: null | #CPUOptionsRequest @go(CPUOptons,*CPUOptionsRequest)

	// +optional
	ebsOptimized?: null | bool @go(EBSOptimized,*bool)

	// +optional
	elasticGpuAssociation?: [...#ElasticGPUAssociation] @go(ElasticGPUAssociations,[]ElasticGPUAssociation)

	// +optional
	elasticInferenceAcceleratorAssociations?: [...#ElasticInferenceAcceleratorAssociation] @go(ElasticInferenceAcceleratorAssociations,[]ElasticInferenceAcceleratorAssociation)

	// +optional
	enaSupport?: null | bool @go(EnaSupport,*bool)

	// +optional
	hibernationOptions?: null | #HibernationOptionsRequest @go(HibernationOptions,*HibernationOptionsRequest)

	// +optional
	hypervisor: string @go(Hypervisor)

	// +optional
	iamInstanceProfile?: null | #IAMInstanceProfile @go(IAMInstanceProfile,*IAMInstanceProfile)

	// +optional
	imageId?: null | string @go(ImageID,*string)

	// +optional
	instanceId?: null | string @go(InstanceID,*string)

	// +optional
	instanceLifecyle: string @go(InstanceLifecycle)

	// Supported instance family when set instanceInterruptionBehavior to hibernate
	// C3, C4, C5, M4, M5, R3, R4
	instanceType: string @go(InstanceType)

	// +optional
	kernelId?: null | string @go(KernelID,*string)

	// +optional
	licenseSet?: [...#LicenseConfigurationRequest] @go(Licenses,[]LicenseConfigurationRequest)

	// +optional
	metadataOptions?: null | #InstanceMetadataOptionsRequest @go(MetadataOptions,*InstanceMetadataOptionsRequest)

	// +optional
	monitoring?: null | #Monitoring @go(Monitoring,*Monitoring)

	// +optional
	networkInterfaces?: [...#InstanceNetworkInterface] @go(NetworkInterfaces,[]InstanceNetworkInterface)

	// +optional
	outpostArn?: null | string @go(OutpostARN,*string)

	// +optional
	placement?: null | #Placement @go(Placement,*Placement)
	platform:   string            @go(Platform)

	// +optional
	privateDnsName?: null | string @go(PrivateDNSName,*string)

	// +optional
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// +optional
	productCodes?: [...#ProductCode] @go(ProductCodes,[]ProductCode)

	// +optional
	publicDnsName?: null | string @go(PublicDNSName,*string)

	// +optional
	publicIpAddress?: null | string @go(PublicIPAddress,*string)

	// +optional
	ramDiskId?: null | string @go(RAMDiskID,*string)

	// +optional
	ebs?:           null | string @go(RootDeviceName,*string)
	rootDeviceType: string        @go(RootDeviceType)

	// +optional
	securityGroups?: [...#GroupIdentifier] @go(SecurityGroups,[]GroupIdentifier)

	// +optional
	sourceDestCheck?: null | bool @go(SourceDestCheck,*bool)

	// +optional
	spotInstanceId?: null | string @go(SpotInstanceRequestID,*string)

	// +optional
	sriovNetSupport?: null | string @go(SriovNetSupport,*string)
	state:            string        @go(State)

	// +optional
	stateReason?: null | #StateReason @go(StateReason,*StateReason)

	// +optional
	stateTransitionReason?: null | string @go(StateTransitionReason,*string)

	// +optional
	subnetId?: null | string @go(SubnetID,*string)

	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)
	virualizationType: string @go(VirtualizationType)

	// +optional
	vpcId?: null | string @go(VPCID,*string)
}

// Instance is a managed resource that represents a specified number of AWS EC2 Instance
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="ID",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="STATE",type="string",JSONPath=".status.atProvider.state"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Instance: {
	spec:    #InstanceSpec   @go(Spec)
	status?: #InstanceStatus @go(Status)
}

// InstanceList contains a list of Instances
#InstanceList: {
	items: [...#Instance] @go(Items,[]Instance)
}
