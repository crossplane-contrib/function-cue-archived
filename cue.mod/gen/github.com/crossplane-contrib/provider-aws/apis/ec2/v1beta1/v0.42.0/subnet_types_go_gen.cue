// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ec2/v1beta1

package v1beta1

// SubnetParameters define the desired state of an AWS VPC Subnet.
#SubnetParameters: {
	// Region is the region you'd like your Subnet to be created in.
	// +optional
	region?: null | string @go(Region,*string)

	// CIDRBlock is the IPv4 network range for the Subnet, in CIDR notation. For example, 10.0.0.0/18.
	// +immutable
	cidrBlock: string @go(CIDRBlock)

	// The Availability Zone for the subnet.
	// Default: AWS selects one for you. If you create more than one subnet in your
	// VPC, we may not necessarily select a different zone for each subnet.
	// +optional
	// +immutable
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The AZ ID or the Local Zone ID of the subnet.
	// +optional
	// +immutable
	availabilityZoneId?: null | string @go(AvailabilityZoneID,*string)

	// Indicates whether a network interface created in this subnet (including a
	// network interface created by RunInstances) receives an IPv6 address.
	// +optional
	assignIpv6AddressOnCreation?: null | bool @go(AssignIPv6AddressOnCreation,*bool)

	// The IPv6 network range for the subnet, in CIDR notation. The subnet size
	// must use a /64 prefix length.
	// +optional
	// +immutable
	ipv6CIDRBlock?: null | string @go(IPv6CIDRBlock,*string)

	// Indicates whether instances launched in this subnet receive a public IPv4
	// address.
	// +optional
	mapPublicIPOnLaunch?: null | bool @go(MapPublicIPOnLaunch,*bool)

	// Tags represents to current ec2 tags.
	// +optional
	tags?: [...#Tag] @go(Tags,[]Tag)

	// VPCID is the ID of the VPC.
	// +optional
	// +immutable
	// +crossplane:generate:reference:type=VPC
	vpcId?: null | string @go(VPCID,*string)
}

// A SubnetSpec defines the desired state of a Subnet.
#SubnetSpec: {
	forProvider: #SubnetParameters @go(ForProvider)
}

// SubnetObservation keeps the state for the external resource
#SubnetObservation: {
	// The number of unused private IPv4 addresses in the subnet.
	availableIpAddressCount?: int32 @go(AvailableIPAddressCount)

	// Indicates whether this is the default subnet for the Availability Zone.
	defaultForAz?: bool @go(DefaultForAZ)

	// SubnetState is the current state of the Subnet.
	// +kubebuilder:validation:Enum=pending;available
	subnetState?: string @go(SubnetState)

	// SubnetID is the ID of the Subnet.
	subnetId?: string @go(SubnetID)
}

// A SubnetStatus represents the observed state of a Subnet.
#SubnetStatus: {
	atProvider?: #SubnetObservation @go(AtProvider)
}

// A Subnet is a managed resource that represents an AWS VPC Subnet.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="ID",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="VPC",type="string",JSONPath=".spec.forProvider.vpcId"
// +kubebuilder:printcolumn:name="CIDR",type="string",JSONPath=".spec.forProvider.cidrBlock"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
// +kubebuilder:storageversion
#Subnet: {
	spec:    #SubnetSpec   @go(Spec)
	status?: #SubnetStatus @go(Status)
}

// SubnetList contains a list of Subnets
#SubnetList: {
	items: [...#Subnet] @go(Items,[]Subnet)
}
