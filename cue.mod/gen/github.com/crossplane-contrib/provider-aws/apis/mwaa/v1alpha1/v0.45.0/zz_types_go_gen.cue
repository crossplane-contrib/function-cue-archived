// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/mwaa/v1alpha1

package v1alpha1

// +kubebuilder:skipversion
#Dimension: {
	name?:  null | string @go(Name,*string)
	value?: null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#Environment_SDK: {
	airflowConfigurationOptions?: {[string]: null | string} @go(AirflowConfigurationOptions,map[string]*string)
	airflowVersion?:   null | string @go(AirflowVersion,*string)
	arn?:              null | string @go(ARN,*string)
	dagS3Path?:        null | string @go(DagS3Path,*string)
	environmentClass?: null | string @go(EnvironmentClass,*string)
	executionRoleARN?: null | string @go(ExecutionRoleARN,*string)
	kmsKey?:           null | string @go(KMSKey,*string)

	// Describes the status of the last update on the environment, and any errors
	// that were encountered.
	lastUpdate?: null | #LastUpdate @go(LastUpdate,*LastUpdate)

	// Describes the Apache Airflow log types that are published to CloudWatch Logs.
	loggingConfiguration?:         null | #LoggingConfiguration @go(LoggingConfiguration,*LoggingConfiguration)
	maxWorkers?:                   null | int64                 @go(MaxWorkers,*int64)
	minWorkers?:                   null | int64                 @go(MinWorkers,*int64)
	name?:                         null | string                @go(Name,*string)
	pluginsS3ObjectVersion?:       null | string                @go(PluginsS3ObjectVersion,*string)
	pluginsS3Path?:                null | string                @go(PluginsS3Path,*string)
	requirementsS3ObjectVersion?:  null | string                @go(RequirementsS3ObjectVersion,*string)
	requirementsS3Path?:           null | string                @go(RequirementsS3Path,*string)
	schedulers?:                   null | int64                 @go(Schedulers,*int64)
	serviceRoleARN?:               null | string                @go(ServiceRoleARN,*string)
	sourceBucketARN?:              null | string                @go(SourceBucketARN,*string)
	startupScriptS3ObjectVersion?: null | string                @go(StartupScriptS3ObjectVersion,*string)
	startupScriptS3Path?:          null | string                @go(StartupScriptS3Path,*string)
	status?:                       null | string                @go(Status,*string)
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
	webserverAccessMode?:          null | string @go(WebserverAccessMode,*string)
	webserverURL?:                 null | string @go(WebserverURL,*string)
	weeklyMaintenanceWindowStart?: null | string @go(WeeklyMaintenanceWindowStart,*string)
}

// +kubebuilder:skipversion
#LastUpdate: {
	// Describes the error(s) encountered with the last update of the environment.
	error?:  null | #UpdateError @go(Error,*UpdateError)
	source?: null | string       @go(Source,*string)
	status?: null | string       @go(Status,*string)
}

// +kubebuilder:skipversion
#LoggingConfiguration: {
	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	dagProcessingLogs?: null | #ModuleLoggingConfiguration @go(DagProcessingLogs,*ModuleLoggingConfiguration)

	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	schedulerLogs?: null | #ModuleLoggingConfiguration @go(SchedulerLogs,*ModuleLoggingConfiguration)

	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	taskLogs?: null | #ModuleLoggingConfiguration @go(TaskLogs,*ModuleLoggingConfiguration)

	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	webserverLogs?: null | #ModuleLoggingConfiguration @go(WebserverLogs,*ModuleLoggingConfiguration)

	// Describes the Apache Airflow log details for the log type (e.g. DagProcessingLogs).
	workerLogs?: null | #ModuleLoggingConfiguration @go(WorkerLogs,*ModuleLoggingConfiguration)
}

// +kubebuilder:skipversion
#LoggingConfigurationInput: {
	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	dagProcessingLogs?: null | #ModuleLoggingConfigurationInput @go(DagProcessingLogs,*ModuleLoggingConfigurationInput)

	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	schedulerLogs?: null | #ModuleLoggingConfigurationInput @go(SchedulerLogs,*ModuleLoggingConfigurationInput)

	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	taskLogs?: null | #ModuleLoggingConfigurationInput @go(TaskLogs,*ModuleLoggingConfigurationInput)

	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	webserverLogs?: null | #ModuleLoggingConfigurationInput @go(WebserverLogs,*ModuleLoggingConfigurationInput)

	// Enables the Apache Airflow log type (e.g. DagProcessingLogs) and defines
	// the log level to send to CloudWatch Logs (e.g. INFO).
	workerLogs?: null | #ModuleLoggingConfigurationInput @go(WorkerLogs,*ModuleLoggingConfigurationInput)
}

// +kubebuilder:skipversion
#MetricDatum: {
	metricName?: null | string @go(MetricName,*string)
}

// +kubebuilder:skipversion
#ModuleLoggingConfiguration: {
	cloudWatchLogGroupARN?: null | string @go(CloudWatchLogGroupARN,*string)
	enabled?:               null | bool   @go(Enabled,*bool)
	logLevel?:              null | string @go(LogLevel,*string)
}

// +kubebuilder:skipversion
#ModuleLoggingConfigurationInput: {
	enabled?:  null | bool   @go(Enabled,*bool)
	logLevel?: null | string @go(LogLevel,*string)
}

// +kubebuilder:skipversion
#UpdateError: {
	errorCode?:    null | string @go(ErrorCode,*string)
	errorMessage?: null | string @go(ErrorMessage,*string)
}
