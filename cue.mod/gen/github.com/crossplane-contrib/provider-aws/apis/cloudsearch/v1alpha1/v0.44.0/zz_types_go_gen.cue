// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/cloudsearch/v1alpha1

package v1alpha1

// +kubebuilder:skipversion
#DateArrayOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
}

// +kubebuilder:skipversion
#DateOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
	sortEnabled?:   null | bool @go(SortEnabled,*bool)
}

// +kubebuilder:skipversion
#DomainEndpointOptions: {
	enforceHTTPS?: null | bool @go(EnforceHTTPS,*bool)
}

// +kubebuilder:skipversion
#DomainStatus_SDK: {
	// The Amazon Resource Name (ARN) of the search domain. See Identifiers for
	// IAM Entities (http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html?Using_Identifiers.html)
	// in Using AWS Identity and Access Management for more information.
	arn?:     null | string @go(ARN,*string)
	created?: null | bool   @go(Created,*bool)
	deleted?: null | bool   @go(Deleted,*bool)

	// The endpoint to which service requests can be submitted.
	docService?: null | #ServiceEndpoint @go(DocService,*ServiceEndpoint)

	// An internally generated unique identifier for a domain.
	domainID?: null | string @go(DomainID,*string)

	// A string that represents the name of a domain. Domain names are unique across
	// the domains owned by an account within an AWS region. Domain names start
	// with a letter or number and can contain the following characters: a-z (lowercase),
	// 0-9, and - (hyphen).
	domainName?:             null | string  @go(DomainName,*string)
	limits?:                 null | #Limits @go(Limits,*Limits)
	processing?:             null | bool    @go(Processing,*bool)
	requiresIndexDocuments?: null | bool    @go(RequiresIndexDocuments,*bool)
	searchInstanceCount?:    null | int64   @go(SearchInstanceCount,*int64)

	// The instance type (such as search.m1.small) that is being used to process
	// search requests.
	searchInstanceType?: null | string @go(SearchInstanceType,*string)

	// The number of partitions used to hold the domain's index.
	searchPartitionCount?: null | int64 @go(SearchPartitionCount,*int64)

	// The endpoint to which service requests can be submitted.
	searchService?: null | #ServiceEndpoint @go(SearchService,*ServiceEndpoint)
}

// +kubebuilder:skipversion
#DoubleArrayOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
}

// +kubebuilder:skipversion
#DoubleOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
	sortEnabled?:   null | bool @go(SortEnabled,*bool)
}

// +kubebuilder:skipversion
#IntArrayOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
}

// +kubebuilder:skipversion
#IntOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
	sortEnabled?:   null | bool @go(SortEnabled,*bool)
}

// +kubebuilder:skipversion
#LatLonOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
	sortEnabled?:   null | bool @go(SortEnabled,*bool)
}

// +kubebuilder:skipversion
#Limits: {
	maximumPartitionCount?:   null | int64 @go(MaximumPartitionCount,*int64)
	maximumReplicationCount?: null | int64 @go(MaximumReplicationCount,*int64)
}

// +kubebuilder:skipversion
#LiteralArrayOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
}

// +kubebuilder:skipversion
#LiteralOptions: {
	facetEnabled?:  null | bool @go(FacetEnabled,*bool)
	returnEnabled?: null | bool @go(ReturnEnabled,*bool)
	searchEnabled?: null | bool @go(SearchEnabled,*bool)
	sortEnabled?:   null | bool @go(SortEnabled,*bool)
}

// +kubebuilder:skipversion
#OptionStatus: {
	pendingDeletion?: null | bool @go(PendingDeletion,*bool)
}

// +kubebuilder:skipversion
#ServiceEndpoint: {
	// The endpoint to which service requests can be submitted. For example, search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com
	// or doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com.
	endpoint?: null | string @go(Endpoint,*string)
}

// +kubebuilder:skipversion
#TextArrayOptions: {
	highlightEnabled?: null | bool @go(HighlightEnabled,*bool)
	returnEnabled?:    null | bool @go(ReturnEnabled,*bool)
}

// +kubebuilder:skipversion
#TextOptions: {
	highlightEnabled?: null | bool @go(HighlightEnabled,*bool)
	returnEnabled?:    null | bool @go(ReturnEnabled,*bool)
	sortEnabled?:      null | bool @go(SortEnabled,*bool)
}
