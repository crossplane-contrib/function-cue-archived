// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/servicediscovery/v1alpha1

package v1alpha1

// +kubebuilder:skipversion
#DNSConfig: {
	namespaceID?: null | string @go(NamespaceID,*string)
}

// +kubebuilder:skipversion
#DNSProperties: {
	hostedZoneID?: null | string @go(HostedZoneID,*string)

	// Start of Authority (SOA) properties for a public or private DNS namespace.
	sOA?: null | #SOA @go(SOA,*SOA)
}

// +kubebuilder:skipversion
#DNSRecord: {
	tTL?: null | int64 @go(TTL,*int64)
}

// +kubebuilder:skipversion
#HTTPInstanceSummary: {
	instanceID?:    null | string @go(InstanceID,*string)
	namespaceName?: null | string @go(NamespaceName,*string)
}

// +kubebuilder:skipversion
#HTTPNamespaceChange: {
	description?: null | string @go(Description,*string)
}

// +kubebuilder:skipversion
#Instance: {
	creatorRequestID?: null | string @go(CreatorRequestID,*string)
	id?:               null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#InstanceSummary: {
	id?: null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#Namespace: {
	creatorRequestID?: null | string @go(CreatorRequestID,*string)
	description?:      null | string @go(Description,*string)
	id?:               null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#NamespaceSummary: {
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#Operation: {
	id?: null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#OperationSummary: {
	id?: null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#PrivateDNSNamespaceChange: {
	description?: null | string @go(Description,*string)

	// Updated properties for the private DNS namespace.
	properties?: null | #PrivateDNSNamespacePropertiesChange @go(Properties,*PrivateDNSNamespacePropertiesChange)
}

// +kubebuilder:skipversion
#PrivateDNSNamespaceProperties: {
	// DNS properties for the private DNS namespace.
	dnsProperties?: null | #PrivateDNSPropertiesMutable @go(DNSProperties,*PrivateDNSPropertiesMutable)
}

// +kubebuilder:skipversion
#PrivateDNSNamespacePropertiesChange: {
	// Updated DNS properties for the private DNS namespace.
	dnsProperties?: null | #PrivateDNSPropertiesMutableChange @go(DNSProperties,*PrivateDNSPropertiesMutableChange)
}

// +kubebuilder:skipversion
#PrivateDNSPropertiesMutable: {
	// Start of Authority (SOA) properties for a public or private DNS namespace.
	sOA?: null | #SOA @go(SOA,*SOA)
}

// +kubebuilder:skipversion
#PrivateDNSPropertiesMutableChange: {
	// Updated Start of Authority (SOA) properties for a public or private DNS namespace.
	sOA?: null | #SOAChange @go(SOA,*SOAChange)
}

// +kubebuilder:skipversion
#PublicDNSNamespaceChange: {
	description?: null | string @go(Description,*string)

	// Updated properties for the public DNS namespace.
	properties?: null | #PublicDNSNamespacePropertiesChange @go(Properties,*PublicDNSNamespacePropertiesChange)
}

// +kubebuilder:skipversion
#PublicDNSNamespaceProperties: {
	// DNS properties for the public DNS namespace.
	dnsProperties?: null | #PublicDNSPropertiesMutable @go(DNSProperties,*PublicDNSPropertiesMutable)
}

// +kubebuilder:skipversion
#PublicDNSNamespacePropertiesChange: {
	// Updated DNS properties for the public DNS namespace.
	dnsProperties?: null | #PublicDNSPropertiesMutableChange @go(DNSProperties,*PublicDNSPropertiesMutableChange)
}

// +kubebuilder:skipversion
#PublicDNSPropertiesMutable: {
	// Start of Authority (SOA) properties for a public or private DNS namespace.
	sOA?: null | #SOA @go(SOA,*SOA)
}

// +kubebuilder:skipversion
#PublicDNSPropertiesMutableChange: {
	// Updated Start of Authority (SOA) properties for a public or private DNS namespace.
	sOA?: null | #SOAChange @go(SOA,*SOAChange)
}

// +kubebuilder:skipversion
#SOA: {
	tTL?: null | int64 @go(TTL,*int64)
}

// +kubebuilder:skipversion
#SOAChange: {
	tTL?: null | int64 @go(TTL,*int64)
}

// +kubebuilder:skipversion
#Service: {
	creatorRequestID?: null | string @go(CreatorRequestID,*string)
	description?:      null | string @go(Description,*string)
	id?:               null | string @go(ID,*string)
	namespaceID?:      null | string @go(NamespaceID,*string)
}

// +kubebuilder:skipversion
#ServiceChange: {
	description?: null | string @go(Description,*string)
}

// +kubebuilder:skipversion
#ServiceSummary: {
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#Tag: {
	key?:   null | string @go(Key,*string)
	value?: null | string @go(Value,*string)
}
