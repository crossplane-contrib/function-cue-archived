// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/ram/v1alpha1

package v1alpha1

// ResourceShareParameters defines the desired state of ResourceShare
#ResourceShareParameters: {
	// Region is which region the ResourceShare will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Specifies whether principals outside your organization in Organizations can
	// be associated with a resource share. A value of true lets you share with
	// individual Amazon Web Services accounts that are not in your organization.
	// A value of false only has meaning if your account is a member of an Amazon
	// Web Services Organization. The default value is true.
	allowExternalPrincipals?: null | bool @go(AllowExternalPrincipals,*bool)

	// Specifies a unique, case-sensitive identifier that you provide to ensure
	// the idempotency of the request. This lets you safely retry the request without
	// accidentally performing the same operation a second time. Passing the same
	// value to a later call to an operation requires that you also pass the same
	// value for all other parameters. We recommend that you use a UUID type of
	// value. (https://wikipedia.org/wiki/Universally_unique_identifier).
	//
	// If you don't provide this value, then Amazon Web Services generates a random
	// one for you.
	//
	// If you retry the operation with the same ClientToken, but with different
	// parameters, the retry fails with an IdempotentParameterMismatch error.
	clientToken?: null | string @go(ClientToken,*string)

	// Specifies the name of the resource share.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Specifies the Amazon Resource Names (ARNs) (https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
	// of the RAM permission to associate with the resource share. If you do not
	// specify an ARN for the permission, RAM automatically attaches the default
	// version of the permission for each resource type. You can associate only
	// one permission with each resource type included in the resource share.
	permissionARNs?: [...null | string] @go(PermissionARNs,[]*string)

	// Specifies a list of one or more principals to associate with the resource
	// share.
	//
	// You can include the following values:
	//
	//    * An Amazon Web Services account ID, for example: 123456789012
	//
	//    * An Amazon Resource Name (ARN) (https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
	//    of an organization in Organizations, for example: organizations::123456789012:organization/o-exampleorgid
	//
	//    * An ARN of an organizational unit (OU) in Organizations, for example:
	//    organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123
	//
	//    * An ARN of an IAM role, for example: iam::123456789012:role/rolename
	//
	//    * An ARN of an IAM user, for example: iam::123456789012user/username
	//
	// Not all resource types can be shared with IAM roles and users. For more information,
	// see Sharing with IAM roles and users (https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types)
	// in the Resource Access Manager User Guide.
	principals?: [...null | string] @go(Principals,[]*string)

	// Specifies a list of one or more ARNs of the resources to associate with the
	// resource share.
	resourceARNs?: [...null | string] @go(ResourceARNs,[]*string)

	// Specifies from which source accounts the service principal has access to
	// the resources in this resource share.
	sources?: [...null | string] @go(Sources,[]*string)

	// Specifies one or more tags to attach to the resource share itself. It doesn't
	// attach the tags to the resources associated with the resource share.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomResourceShareParameters
}

// ResourceShareSpec defines the desired state of ResourceShare
#ResourceShareSpec: {
	forProvider: #ResourceShareParameters @go(ForProvider)
}

// ResourceShareObservation defines the observed state of ResourceShare
#ResourceShareObservation: {
	// An object with information about the new resource share.
	resourceShare?: null | #ResourceShare_SDK @go(ResourceShare,*ResourceShare_SDK)
}

// ResourceShareStatus defines the observed state of ResourceShare.
#ResourceShareStatus: {
	atProvider?: #ResourceShareObservation @go(AtProvider)
}

// ResourceShare is the Schema for the ResourceShares API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ResourceShare: {
	spec:    #ResourceShareSpec   @go(Spec)
	status?: #ResourceShareStatus @go(Status)
}

// ResourceShareList contains a list of ResourceShares
#ResourceShareList: {
	items: [...#ResourceShare] @go(Items,[]ResourceShare)
}
