// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/glue/v1alpha1

package v1alpha1

// CrawlerParameters defines the desired state of Crawler
#CrawlerParameters: {
	// Region is which region the Crawler will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Crawler configuration information. This versioned JSON string allows users
	// to specify aspects of a crawler's behavior. For more information, see Setting
	// crawler configuration options (https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html).
	configuration?: null | string @go(Configuration,*string)

	// A description of the new crawler.
	description?: null | string @go(Description,*string)

	// Specifies Lake Formation configuration settings for the crawler.
	lakeFormationConfiguration?: null | #LakeFormationConfiguration @go(LakeFormationConfiguration,*LakeFormationConfiguration)

	// Specifies data lineage configuration settings for the crawler.
	lineageConfiguration?: null | #LineageConfiguration @go(LineageConfiguration,*LineageConfiguration)

	// A policy that specifies whether to crawl the entire dataset again, or to
	// crawl only folders that were added since the last crawler run.
	recrawlPolicy?: null | #RecrawlPolicy @go(RecrawlPolicy,*RecrawlPolicy)

	// A cron expression used to specify the schedule (see Time-Based Schedules
	// for Jobs and Crawlers (https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html).
	// For example, to run something every day at 12:15 UTC, you would specify:
	// cron(15 12 * * ? *).
	schedule?: null | string @go(Schedule,*string)

	// The policy for the crawler's update and deletion behavior.
	schemaChangePolicy?: null | #SchemaChangePolicy @go(SchemaChangePolicy,*SchemaChangePolicy)

	// The table prefix used for catalog tables that are created.
	tablePrefix?: null | string @go(TablePrefix,*string)

	// The tags to use with this crawler request. You may use tags to limit access
	// to the crawler. For more information about tags in Glue, see Amazon Web Services
	// Tags in Glue (https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html)
	// in the developer guide.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	#CustomCrawlerParameters
}

// CrawlerSpec defines the desired state of Crawler
#CrawlerSpec: {
	forProvider: #CrawlerParameters @go(ForProvider)
}

// CrawlerObservation defines the observed state of Crawler
#CrawlerObservation: {
	// If the crawler is running, contains the total time elapsed since the last
	// crawl began.
	crawlElapsedTime?: null | int64 @go(CrawlElapsedTime,*int64)

	// The status of the last crawl, and potentially error information if an error
	// occurred.
	lastCrawl?: null | #LastCrawlInfo @go(LastCrawl,*LastCrawlInfo)

	// The state of the schedule.
	scheduleState?: null | string @go(ScheduleState,*string)

	// Indicates whether the crawler is running, or whether a run is pending.
	state?: null | string @go(State,*string)

	// The version of the crawler.
	version?: null | int64 @go(Version,*int64)
}

// CrawlerStatus defines the observed state of Crawler.
#CrawlerStatus: {
	atProvider?: #CrawlerObservation @go(AtProvider)
}

// Crawler is the Schema for the Crawlers API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Crawler: {
	spec:    #CrawlerSpec   @go(Spec)
	status?: #CrawlerStatus @go(Status)
}

// CrawlerList contains a list of Crawlers
#CrawlerList: {
	items: [...#Crawler] @go(Items,[]Crawler)
}
