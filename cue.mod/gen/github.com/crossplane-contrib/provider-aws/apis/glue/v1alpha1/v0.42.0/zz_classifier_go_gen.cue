// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/glue/v1alpha1

package v1alpha1

// ClassifierParameters defines the desired state of Classifier
#ClassifierParameters: {
	// Region is which region the Classifier will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	#CustomClassifierParameters
}

// ClassifierSpec defines the desired state of Classifier
#ClassifierSpec: {
	forProvider: #ClassifierParameters @go(ForProvider)
}

// ClassifierObservation defines the observed state of Classifier
#ClassifierObservation: {
	// The version of this classifier.
	version?: null | int64 @go(Version,*int64)
}

// ClassifierStatus defines the observed state of Classifier.
#ClassifierStatus: {
	atProvider?: #ClassifierObservation @go(AtProvider)
}

// Classifier is the Schema for the Classifiers API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Classifier: {
	spec:    #ClassifierSpec   @go(Spec)
	status?: #ClassifierStatus @go(Status)
}

// ClassifierList contains a list of Classifiers
#ClassifierList: {
	items: [...#Classifier] @go(Items,[]Classifier)
}
