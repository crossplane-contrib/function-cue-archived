// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/cloudfront/v1alpha1

package v1alpha1

// DistributionParameters defines the desired state of Distribution
#DistributionParameters: {
	// Region is which region the Distribution will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The distribution's configuration information.
	// +kubebuilder:validation:Required
	distributionConfig?: null | #DistributionConfig @go(DistributionConfig,*DistributionConfig)

	#CustomDistributionParameters
}

// DistributionSpec defines the desired state of Distribution
#DistributionSpec: {
	forProvider: #DistributionParameters @go(ForProvider)
}

// DistributionObservation defines the observed state of Distribution
#DistributionObservation: {
	// The distribution's information.
	distribution?: null | #Distribution_SDK @go(Distribution,*Distribution_SDK)

	// The current version of the distribution created.
	eTag?: null | string @go(ETag,*string)

	// The fully qualified URI of the new distribution resource just created.
	location?: null | string @go(Location,*string)
}

// DistributionStatus defines the observed state of Distribution.
#DistributionStatus: {
	atProvider?: #DistributionObservation @go(AtProvider)
}

// Distribution is the Schema for the Distributions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Distribution: {
	spec:    #DistributionSpec   @go(Spec)
	status?: #DistributionStatus @go(Status)
}

// DistributionList contains a list of Distributions
#DistributionList: {
	items: [...#Distribution] @go(Items,[]Distribution)
}
