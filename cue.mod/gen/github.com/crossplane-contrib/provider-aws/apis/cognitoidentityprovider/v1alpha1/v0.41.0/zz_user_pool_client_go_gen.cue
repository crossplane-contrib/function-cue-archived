// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/cognitoidentityprovider/v1alpha1

package v1alpha1

// UserPoolClientParameters defines the desired state of UserPoolClient
#UserPoolClientParameters: {
	// Region is which region the UserPoolClient will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The access token time limit. After this limit expires, your user can't use
	// their access token. To specify the time unit for AccessTokenValidity as seconds,
	// minutes, hours, or days, set a TokenValidityUnits value in your API request.
	//
	// For example, when you set AccessTokenValidity to 10 and TokenValidityUnits
	// to hours, your user can authorize access with their access token for 10 hours.
	//
	// The default time unit for AccessTokenValidity in an API request is hours.
	// Valid range is displayed below in seconds.
	//
	// If you don't specify otherwise in the configuration of your app client, your
	// access tokens are valid for one hour.
	accessTokenValidity?: null | int64 @go(AccessTokenValidity,*int64)

	// The allowed OAuth flows.
	//
	// code
	//
	// Use a code grant flow, which provides an authorization code as the response.
	// This code can be exchanged for access tokens with the /oauth2/token endpoint.
	//
	// implicit
	//
	// Issue the access token (and, optionally, ID token, based on scopes) directly
	// to your user.
	//
	// client_credentials
	//
	// Issue the access token from the /oauth2/token endpoint directly to a non-person
	// user using a combination of the client ID and client secret.
	allowedOAuthFlows?: [...null | string] @go(AllowedOAuthFlows,[]*string)

	// Set to true if the client is allowed to follow the OAuth protocol when interacting
	// with Amazon Cognito user pools.
	allowedOAuthFlowsUserPoolClient?: null | bool @go(AllowedOAuthFlowsUserPoolClient,*bool)

	// The allowed OAuth scopes. Possible values provided by OAuth are phone, email,
	// openid, and profile. Possible values provided by Amazon Web Services are
	// aws.cognito.signin.user.admin. Custom scopes created in Resource Servers
	// are also supported.
	allowedOAuthScopes?: [...null | string] @go(AllowedOAuthScopes,[]*string)

	// The user pool analytics configuration for collecting metrics and sending
	// them to your Amazon Pinpoint campaign.
	//
	// In Amazon Web Services Regions where Amazon Pinpoint isn't available, user
	// pools only support sending events to Amazon Pinpoint projects in Amazon Web
	// Services Region us-east-1. In Regions where Amazon Pinpoint is available,
	// user pools support sending events to Amazon Pinpoint projects within that
	// same Region.
	analyticsConfiguration?: null | #AnalyticsConfigurationType @go(AnalyticsConfiguration,*AnalyticsConfigurationType)

	// Amazon Cognito creates a session token for each API request in an authentication
	// flow. AuthSessionValidity is the duration, in minutes, of that session token.
	// Your user pool native user must respond to each authentication challenge
	// before the session expires.
	authSessionValidity?: null | int64 @go(AuthSessionValidity,*int64)

	// A list of allowed redirect (callback) URLs for the IdPs.
	//
	// A redirect URI must:
	//
	//    * Be an absolute URI.
	//
	//    * Be registered with the authorization server.
	//
	//    * Not include a fragment component.
	//
	// See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2).
	//
	// Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing
	// purposes only.
	//
	// App callback URLs such as myapp://example are also supported.
	callbackURLs?: [...null | string] @go(CallbackURLs,[]*string)

	// The client name for the user pool client you would like to create.
	// +kubebuilder:validation:Required
	clientName?: null | string @go(ClientName,*string)

	// The default redirect URI. Must be in the CallbackURLs list.
	//
	// A redirect URI must:
	//
	//    * Be an absolute URI.
	//
	//    * Be registered with the authorization server.
	//
	//    * Not include a fragment component.
	//
	// See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2).
	//
	// Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing
	// purposes only.
	//
	// App callback URLs such as myapp://example are also supported.
	defaultRedirectURI?: null | string @go(DefaultRedirectURI,*string)

	// Activates the propagation of additional user context data. For more information
	// about propagation of user context data, see Adding advanced security to a
	// user pool (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html).
	// If you donâ€™t include this parameter, you can't send device fingerprint
	// information, including source IP address, to Amazon Cognito advanced security.
	// You can only activate EnablePropagateAdditionalUserContextData in an app
	// client that has a client secret.
	enablePropagateAdditionalUserContextData?: null | bool @go(EnablePropagateAdditionalUserContextData,*bool)

	// Activates or deactivates token revocation. For more information about revoking
	// tokens, see RevokeToken (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html).
	//
	// If you don't include this parameter, token revocation is automatically activated
	// for the new user pool client.
	enableTokenRevocation?: null | bool @go(EnableTokenRevocation,*bool)

	// The authentication flows that you want your user pool client to support.
	// For each app client in your user pool, you can sign in your users with any
	// combination of one or more flows, including with a user name and Secure Remote
	// Password (SRP), a user name and password, or a custom authentication process
	// that you define with Lambda functions.
	//
	// If you don't specify a value for ExplicitAuthFlows, your user client supports
	// ALLOW_REFRESH_TOKEN_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_CUSTOM_AUTH.
	//
	// Valid values include:
	//
	//    * ALLOW_ADMIN_USER_PASSWORD_AUTH: Enable admin based user password authentication
	//    flow ADMIN_USER_PASSWORD_AUTH. This setting replaces the ADMIN_NO_SRP_AUTH
	//    setting. With this authentication flow, your app passes a user name and
	//    password to Amazon Cognito in the request, instead of using the Secure
	//    Remote Password (SRP) protocol to securely transmit the password.
	//
	//    * ALLOW_CUSTOM_AUTH: Enable Lambda trigger based authentication.
	//
	//    * ALLOW_USER_PASSWORD_AUTH: Enable user password-based authentication.
	//    In this flow, Amazon Cognito receives the password in the request instead
	//    of using the SRP protocol to verify passwords.
	//
	//    * ALLOW_USER_SRP_AUTH: Enable SRP-based authentication.
	//
	//    * ALLOW_REFRESH_TOKEN_AUTH: Enable authflow to refresh tokens.
	//
	// In some environments, you will see the values ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY,
	// or USER_PASSWORD_AUTH. You can't assign these legacy ExplicitAuthFlows values
	// to user pool clients at the same time as values that begin with ALLOW_, like
	// ALLOW_USER_SRP_AUTH.
	explicitAuthFlows?: [...null | string] @go(ExplicitAuthFlows,[]*string)

	// Boolean to specify whether you want to generate a secret for the user pool
	// client being created.
	generateSecret?: null | bool @go(GenerateSecret,*bool)

	// The ID token time limit. After this limit expires, your user can't use their
	// ID token. To specify the time unit for IdTokenValidity as seconds, minutes,
	// hours, or days, set a TokenValidityUnits value in your API request.
	//
	// For example, when you set IdTokenValidity as 10 and TokenValidityUnits as
	// hours, your user can authenticate their session with their ID token for 10
	// hours.
	//
	// The default time unit for AccessTokenValidity in an API request is hours.
	// Valid range is displayed below in seconds.
	//
	// If you don't specify otherwise in the configuration of your app client, your
	// ID tokens are valid for one hour.
	idTokenValidity?: null | int64 @go(IDTokenValidity,*int64)

	// A list of allowed logout URLs for the IdPs.
	logoutURLs?: [...null | string] @go(LogoutURLs,[]*string)

	// Errors and responses that you want Amazon Cognito APIs to return during authentication,
	// account confirmation, and password recovery when the user doesn't exist in
	// the user pool. When set to ENABLED and the user doesn't exist, authentication
	// returns an error indicating either the username or password was incorrect.
	// Account confirmation and password recovery return a response indicating a
	// code was sent to a simulated destination. When set to LEGACY, those APIs
	// return a UserNotFoundException exception if the user doesn't exist in the
	// user pool.
	//
	// Valid values include:
	//
	//    * ENABLED - This prevents user existence-related errors.
	//
	//    * LEGACY - This represents the early behavior of Amazon Cognito where
	//    user existence related errors aren't prevented.
	preventUserExistenceErrors?: null | string @go(PreventUserExistenceErrors,*string)

	// The read attributes.
	readAttributes?: [...null | string] @go(ReadAttributes,[]*string)

	// The refresh token time limit. After this limit expires, your user can't use
	// their refresh token. To specify the time unit for RefreshTokenValidity as
	// seconds, minutes, hours, or days, set a TokenValidityUnits value in your
	// API request.
	//
	// For example, when you set RefreshTokenValidity as 10 and TokenValidityUnits
	// as days, your user can refresh their session and retrieve new access and
	// ID tokens for 10 days.
	//
	// The default time unit for RefreshTokenValidity in an API request is days.
	// You can't set RefreshTokenValidity to 0. If you do, Amazon Cognito overrides
	// the value with the default value of 30 days. Valid range is displayed below
	// in seconds.
	//
	// If you don't specify otherwise in the configuration of your app client, your
	// refresh tokens are valid for 30 days.
	refreshTokenValidity?: null | int64 @go(RefreshTokenValidity,*int64)

	// A list of provider names for the identity providers (IdPs) that are supported
	// on this client. The following are supported: COGNITO, Facebook, Google, SignInWithApple,
	// and LoginWithAmazon. You can also specify the names that you configured for
	// the SAML and OIDC IdPs in your user pool, for example MySAMLIdP or MyOIDCIdP.
	supportedIdentityProviders?: [...null | string] @go(SupportedIdentityProviders,[]*string)

	// The units in which the validity times are represented. The default unit for
	// RefreshToken is days, and default for ID and access tokens are hours.
	tokenValidityUnits?: null | #TokenValidityUnitsType @go(TokenValidityUnits,*TokenValidityUnitsType)

	// The user pool attributes that the app client can write to.
	//
	// If your app client allows users to sign in through an IdP, this array must
	// include all attributes that you have mapped to IdP attributes. Amazon Cognito
	// updates mapped attributes when users sign in to your application through
	// an IdP. If your app client does not have write access to a mapped attribute,
	// Amazon Cognito throws an error when it tries to update the attribute. For
	// more information, see Specifying IdP Attribute Mappings for Your user pool
	// (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html).
	writeAttributes?: [...null | string] @go(WriteAttributes,[]*string)

	#CustomUserPoolClientParameters
}

// UserPoolClientSpec defines the desired state of UserPoolClient
#UserPoolClientSpec: {
	forProvider: #UserPoolClientParameters @go(ForProvider)
}

// UserPoolClientObservation defines the observed state of UserPoolClient
#UserPoolClientObservation: {
	// The ID of the client associated with the user pool.
	clientID?: null | string @go(ClientID,*string)

	// The client secret from the user pool request of the client type.
	clientSecret?: null | string @go(ClientSecret,*string)

	// The user pool ID for the user pool client.
	userPoolID?: null | string @go(UserPoolID,*string)
}

// UserPoolClientStatus defines the observed state of UserPoolClient.
#UserPoolClientStatus: {
	atProvider?: #UserPoolClientObservation @go(AtProvider)
}

// UserPoolClient is the Schema for the UserPoolClients API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserPoolClient: {
	spec:    #UserPoolClientSpec   @go(Spec)
	status?: #UserPoolClientStatus @go(Status)
}

// UserPoolClientList contains a list of UserPoolClients
#UserPoolClientList: {
	items: [...#UserPoolClient] @go(Items,[]UserPoolClient)
}
