// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/elbv2/v1alpha1

package v1alpha1

// LoadBalancerParameters defines the desired state of LoadBalancer
#LoadBalancerParameters: {
	// Region is which region the LoadBalancer will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// [Application Load Balancers on Outposts] The ID of the customer-owned address
	// pool (CoIP pool).
	customerOwnedIPv4Pool?: null | string @go(CustomerOwnedIPv4Pool,*string)

	// The type of IP addresses used by the subnets for your load balancer. The
	// possible values are ipv4 (for IPv4 addresses) and dualstack (for IPv4 and
	// IPv6 addresses).
	ipAddressType?: null | string @go(IPAddressType,*string)

	// The name of the load balancer.
	//
	// This name must be unique per region per account, can have a maximum of 32
	// characters, must contain only alphanumeric characters or hyphens, must not
	// begin or end with a hyphen, and must not begin with "internal-".
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The nodes of an Internet-facing load balancer have public IP addresses. The
	// DNS name of an Internet-facing load balancer is publicly resolvable to the
	// public IP addresses of the nodes. Therefore, Internet-facing load balancers
	// can route requests from clients over the internet.
	//
	// The nodes of an internal load balancer have only private IP addresses. The
	// DNS name of an internal load balancer is publicly resolvable to the private
	// IP addresses of the nodes. Therefore, internal load balancers can route requests
	// only from clients with access to the VPC for the load balancer.
	//
	// The default is an Internet-facing load balancer.
	//
	// You cannot specify a scheme for a Gateway Load Balancer.
	scheme?: null | string @go(Scheme,*string)

	// [Application Load Balancers and Network Load Balancers] The IDs of the security
	// groups for the load balancer.
	securityGroups?: [...null | string] @go(SecurityGroups,[]*string)

	// The IDs of the public subnets. You can specify only one subnet per Availability
	// Zone. You must specify either subnets or subnet mappings, but not both.
	//
	// [Application Load Balancers] You must specify subnets from at least two Availability
	// Zones. You cannot specify Elastic IP addresses for your subnets.
	//
	// [Application Load Balancers on Outposts] You must specify one Outpost subnet.
	//
	// [Application Load Balancers on Local Zones] You can specify subnets from
	// one or more Local Zones.
	//
	// [Network Load Balancers] You can specify subnets from one or more Availability
	// Zones. You can specify one Elastic IP address per subnet if you need static
	// IP addresses for your internet-facing load balancer. For internal load balancers,
	// you can specify one private IP address per subnet from the IPv4 range of
	// the subnet. For internet-facing load balancer, you can specify one IPv6 address
	// per subnet.
	//
	// [Gateway Load Balancers] You can specify subnets from one or more Availability
	// Zones. You cannot specify Elastic IP addresses for your subnets.
	subnetMappings?: [...null | #SubnetMapping] @go(SubnetMappings,[]*SubnetMapping)

	// The IDs of the public subnets. You can specify only one subnet per Availability
	// Zone. You must specify either subnets or subnet mappings, but not both. To
	// specify an Elastic IP address, specify subnet mappings instead of subnets.
	//
	// [Application Load Balancers] You must specify subnets from at least two Availability
	// Zones.
	//
	// [Application Load Balancers on Outposts] You must specify one Outpost subnet.
	//
	// [Application Load Balancers on Local Zones] You can specify subnets from
	// one or more Local Zones.
	//
	// [Network Load Balancers] You can specify subnets from one or more Availability
	// Zones.
	//
	// [Gateway Load Balancers] You can specify subnets from one or more Availability
	// Zones.
	subnets?: [...null | string] @go(Subnets,[]*string)

	// The tags to assign to the load balancer.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomLoadBalancerParameters
}

// LoadBalancerSpec defines the desired state of LoadBalancer
#LoadBalancerSpec: {
	forProvider: #LoadBalancerParameters @go(ForProvider)
}

// LoadBalancerObservation defines the observed state of LoadBalancer
#LoadBalancerObservation: {
	// The subnets for the load balancer.
	availabilityZones?: [...null | #AvailabilityZone] @go(AvailabilityZones,[]*AvailabilityZone)

	// The ID of the Amazon Route 53 hosted zone associated with the load balancer.
	canonicalHostedZoneID?: null | string @go(CanonicalHostedZoneID,*string)

	// The public DNS name of the load balancer.
	dnsName?: null | string @go(DNSName,*string)

	// Indicates whether to evaluate inbound security group rules for traffic sent
	// to a Network Load Balancer through Amazon Web Services PrivateLink.
	enforceSecurityGroupInboundRulesOnPrivateLinkTraffic?: null | string @go(EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic,*string)

	// The Amazon Resource Name (ARN) of the load balancer.
	loadBalancerARN?: null | string @go(LoadBalancerARN,*string)

	// The name of the load balancer.
	loadBalancerName?: null | string @go(LoadBalancerName,*string)

	// The state of the load balancer.
	state?: null | #LoadBalancerState @go(State,*LoadBalancerState)

	// The type of load balancer.
	type_?: null | string @go(Type,*string)

	// The ID of the VPC for the load balancer.
	vpcID?: null | string @go(VPCID,*string)
}

// LoadBalancerStatus defines the observed state of LoadBalancer.
#LoadBalancerStatus: {
	atProvider?: #LoadBalancerObservation @go(AtProvider)
}

// LoadBalancer is the Schema for the LoadBalancers API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#LoadBalancer: {
	spec:    #LoadBalancerSpec   @go(Spec)
	status?: #LoadBalancerStatus @go(Status)
}

// LoadBalancerList contains a list of LoadBalancers
#LoadBalancerList: {
	items: [...#LoadBalancer] @go(Items,[]LoadBalancer)
}
