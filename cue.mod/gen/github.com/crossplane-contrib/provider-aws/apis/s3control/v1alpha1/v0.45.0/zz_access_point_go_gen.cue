// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/s3control/v1alpha1

package v1alpha1

// AccessPointParameters defines the desired state of AccessPoint
#AccessPointParameters: {
	// Region is which region the AccessPoint will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The Amazon Web Services account ID for the account that owns the specified
	// access point.
	// +kubebuilder:validation:Required
	accountID?: null | string @go(AccountID,*string)

	// The Amazon Web Services account ID associated with the S3 bucket associated
	// with this access point.
	bucketAccountID?: null | string @go(BucketAccountID,*string)

	// The PublicAccessBlock configuration that you want to apply to the access
	// point.
	publicAccessBlockConfiguration?: null | #PublicAccessBlockConfiguration @go(PublicAccessBlockConfiguration,*PublicAccessBlockConfiguration)

	// If you include this field, Amazon S3 restricts access to this access point
	// to requests from the specified virtual private cloud (VPC).
	//
	// This is required for creating an access point for Amazon S3 on Outposts buckets.
	vpcConfiguration?: null | #VPCConfiguration @go(VPCConfiguration,*VPCConfiguration)

	#CustomAccessPointParameters
}

// AccessPointSpec defines the desired state of AccessPoint
#AccessPointSpec: {
	forProvider: #AccessPointParameters @go(ForProvider)
}

// AccessPointObservation defines the observed state of AccessPoint
#AccessPointObservation: {
	// The ARN of the access point.
	//
	// This is only supported by Amazon S3 on Outposts.
	accessPointARN?: null | string @go(AccessPointARN,*string)

	// The name or alias of the access point.
	alias?: null | string @go(Alias,*string)
}

// AccessPointStatus defines the observed state of AccessPoint.
#AccessPointStatus: {
	atProvider?: #AccessPointObservation @go(AtProvider)
}

// AccessPoint is the Schema for the AccessPoints API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AccessPoint: {
	spec:    #AccessPointSpec   @go(Spec)
	status?: #AccessPointStatus @go(Status)
}

// AccessPointList contains a list of AccessPoints
#AccessPointList: {
	items: [...#AccessPoint] @go(Items,[]AccessPoint)
}
