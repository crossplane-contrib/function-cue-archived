// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/autoscaling/v1beta1

package v1beta1

// +kubebuilder:skipversion
#AcceleratorCountRequest: {
	max?: null | int64 @go(Max,*int64)
	min?: null | int64 @go(Min,*int64)
}

// +kubebuilder:skipversion
#AcceleratorTotalMemoryMiBRequest: {
	max?: null | int64 @go(Max,*int64)
	min?: null | int64 @go(Min,*int64)
}

// +kubebuilder:skipversion
#Activity: {
	activityID?:           null | string @go(ActivityID,*string)
	autoScalingGroupARN?:  null | string @go(AutoScalingGroupARN,*string)
	autoScalingGroupName?: null | string @go(AutoScalingGroupName,*string)
	cause?:                null | string @go(Cause,*string)
	description?:          null | string @go(Description,*string)
	details?:              null | string @go(Details,*string)
	statusMessage?:        null | string @go(StatusMessage,*string)
}

// +kubebuilder:skipversion
#AdjustmentType: {
	adjustmentType?: null | string @go(AdjustmentType,*string)
}

// +kubebuilder:skipversion
#Alarm: {
	alarmARN?:  null | string @go(AlarmARN,*string)
	alarmName?: null | string @go(AlarmName,*string)
}

// +kubebuilder:skipversion
#BaselineEBSBandwidthMbpsRequest: {
	max?: null | int64 @go(Max,*int64)
	min?: null | int64 @go(Min,*int64)
}

// +kubebuilder:skipversion
#BlockDeviceMapping: {
	deviceName?:  null | string @go(DeviceName,*string)
	virtualName?: null | string @go(VirtualName,*string)
}

// +kubebuilder:skipversion
#DesiredConfiguration: {
	// Describes the launch template and the version of the launch template that
	// Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information
	// about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	launchTemplate?: null | #LaunchTemplateSpecification @go(LaunchTemplate,*LaunchTemplateSpecification)

	// Use this structure to launch multiple instance types and On-Demand Instances
	// and Spot Instances within a single Auto Scaling group.
	//
	// A mixed instances policy contains information that Amazon EC2 Auto Scaling
	// can use to launch instances and help optimize your costs. For more information,
	// see Auto Scaling groups with multiple instance types and purchase options
	// (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	mixedInstancesPolicy?: null | #MixedInstancesPolicy @go(MixedInstancesPolicy,*MixedInstancesPolicy)
}

// +kubebuilder:skipversion
#EBS: {
	snapshotID?: null | string @go(SnapshotID,*string)
}

// +kubebuilder:skipversion
#EnabledMetric: {
	granularity?: null | string @go(Granularity,*string)
	metric?:      null | string @go(Metric,*string)
}

// +kubebuilder:skipversion
#FailedScheduledUpdateGroupActionRequest: {
	errorMessage?:        null | string @go(ErrorMessage,*string)
	scheduledActionName?: null | string @go(ScheduledActionName,*string)
}

// +kubebuilder:skipversion
#Filter: {
	name?: null | string @go(Name,*string)
	values?: [...null | string] @go(Values,[]*string)
}

// +kubebuilder:skipversion
#Group: {
	autoScalingGroupARN?:  null | string @go(AutoScalingGroupARN,*string)
	autoScalingGroupName?: null | string @go(AutoScalingGroupName,*string)
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)
	capacityRebalance?:     null | bool   @go(CapacityRebalance,*bool)
	context?:               null | string @go(Context,*string)
	defaultCooldown?:       null | int64  @go(DefaultCooldown,*int64)
	defaultInstanceWarmup?: null | int64  @go(DefaultInstanceWarmup,*int64)
	desiredCapacity?:       null | int64  @go(DesiredCapacity,*int64)
	desiredCapacityType?:   null | string @go(DesiredCapacityType,*string)
	enabledMetrics?: [...null | #EnabledMetric] @go(EnabledMetrics,[]*EnabledMetric)
	healthCheckGracePeriod?: null | int64  @go(HealthCheckGracePeriod,*int64)
	healthCheckType?:        null | string @go(HealthCheckType,*string)
	instances?: [...null | #Instance] @go(Instances,[]*Instance)
	launchConfigurationName?: null | string @go(LaunchConfigurationName,*string)

	// Describes the launch template and the version of the launch template that
	// Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information
	// about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	launchTemplate?: null | #LaunchTemplateSpecification @go(LaunchTemplate,*LaunchTemplateSpecification)
	loadBalancerNames?: [...null | string] @go(LoadBalancerNames,[]*string)
	maxInstanceLifetime?: null | int64 @go(MaxInstanceLifetime,*int64)
	maxSize?:             null | int64 @go(MaxSize,*int64)
	minSize?:             null | int64 @go(MinSize,*int64)

	// Use this structure to launch multiple instance types and On-Demand Instances
	// and Spot Instances within a single Auto Scaling group.
	//
	// A mixed instances policy contains information that Amazon EC2 Auto Scaling
	// can use to launch instances and help optimize your costs. For more information,
	// see Auto Scaling groups with multiple instance types and purchase options
	// (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	mixedInstancesPolicy?:             null | #MixedInstancesPolicy @go(MixedInstancesPolicy,*MixedInstancesPolicy)
	newInstancesProtectedFromScaleIn?: null | bool                  @go(NewInstancesProtectedFromScaleIn,*bool)
	placementGroup?:                   null | string                @go(PlacementGroup,*string)
	predictedCapacity?:                null | int64                 @go(PredictedCapacity,*int64)
	serviceLinkedRoleARN?:             null | string                @go(ServiceLinkedRoleARN,*string)
	status?:                           null | string                @go(Status,*string)
	suspendedProcesses?: [...null | #SuspendedProcess] @go(SuspendedProcesses,[]*SuspendedProcess)
	tags?: [...null | #TagDescription] @go(Tags,[]*TagDescription)
	targetGroupARNs?: [...null | string] @go(TargetGroupARNs,[]*string)
	terminationPolicies?: [...null | string] @go(TerminationPolicies,[]*string)
	trafficSources?: [...null | #TrafficSourceIdentifier] @go(TrafficSources,[]*TrafficSourceIdentifier)
	vpcZoneIdentifier?: null | string @go(VPCZoneIdentifier,*string)

	// Describes a warm pool configuration.
	warmPoolConfiguration?: null | #WarmPoolConfiguration @go(WarmPoolConfiguration,*WarmPoolConfiguration)
	warmPoolSize?:          null | int64                  @go(WarmPoolSize,*int64)
}

// +kubebuilder:skipversion
#Instance: {
	availabilityZone?:        null | string @go(AvailabilityZone,*string)
	healthStatus?:            null | string @go(HealthStatus,*string)
	instanceID?:              null | string @go(InstanceID,*string)
	instanceType?:            null | string @go(InstanceType,*string)
	launchConfigurationName?: null | string @go(LaunchConfigurationName,*string)

	// Describes the launch template and the version of the launch template that
	// Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information
	// about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	launchTemplate?:       null | #LaunchTemplateSpecification @go(LaunchTemplate,*LaunchTemplateSpecification)
	lifecycleState?:       null | string                       @go(LifecycleState,*string)
	protectedFromScaleIn?: null | bool                         @go(ProtectedFromScaleIn,*bool)
	weightedCapacity?:     null | string                       @go(WeightedCapacity,*string)
}

// +kubebuilder:skipversion
#InstanceDetails: {
	autoScalingGroupName?:    null | string @go(AutoScalingGroupName,*string)
	availabilityZone?:        null | string @go(AvailabilityZone,*string)
	healthStatus?:            null | string @go(HealthStatus,*string)
	instanceID?:              null | string @go(InstanceID,*string)
	instanceType?:            null | string @go(InstanceType,*string)
	launchConfigurationName?: null | string @go(LaunchConfigurationName,*string)

	// Describes the launch template and the version of the launch template that
	// Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information
	// about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	launchTemplate?:       null | #LaunchTemplateSpecification @go(LaunchTemplate,*LaunchTemplateSpecification)
	lifecycleState?:       null | string                       @go(LifecycleState,*string)
	protectedFromScaleIn?: null | bool                         @go(ProtectedFromScaleIn,*bool)
	weightedCapacity?:     null | string                       @go(WeightedCapacity,*string)
}

// +kubebuilder:skipversion
#InstanceRefresh: {
	autoScalingGroupName?: null | string @go(AutoScalingGroupName,*string)
	instanceRefreshID?:    null | string @go(InstanceRefreshID,*string)
	statusReason?:         null | string @go(StatusReason,*string)
}

// +kubebuilder:skipversion
#InstanceRequirements: {
	// Specifies the minimum and maximum for the AcceleratorCount object when you
	// specify InstanceRequirements for an Auto Scaling group.
	acceleratorCount?: null | #AcceleratorCountRequest @go(AcceleratorCount,*AcceleratorCountRequest)
	acceleratorManufacturers?: [...null | string] @go(AcceleratorManufacturers,[]*string)
	acceleratorNames?: [...null | string] @go(AcceleratorNames,[]*string)

	// Specifies the minimum and maximum for the AcceleratorTotalMemoryMiB object
	// when you specify InstanceRequirements for an Auto Scaling group.
	acceleratorTotalMemoryMiB?: null | #AcceleratorTotalMemoryMiBRequest @go(AcceleratorTotalMemoryMiB,*AcceleratorTotalMemoryMiBRequest)
	acceleratorTypes?: [...null | string] @go(AcceleratorTypes,[]*string)
	allowedInstanceTypes?: [...null | string] @go(AllowedInstanceTypes,[]*string)
	bareMetal?: null | string @go(BareMetal,*string)

	// Specifies the minimum and maximum for the BaselineEbsBandwidthMbps object
	// when you specify InstanceRequirements for an Auto Scaling group.
	baselineEBSBandwidthMbps?: null | #BaselineEBSBandwidthMbpsRequest @go(BaselineEBSBandwidthMbps,*BaselineEBSBandwidthMbpsRequest)
	burstablePerformance?:     null | string                           @go(BurstablePerformance,*string)
	cpuManufacturers?: [...null | string] @go(CPUManufacturers,[]*string)
	excludedInstanceTypes?: [...null | string] @go(ExcludedInstanceTypes,[]*string)
	instanceGenerations?: [...null | string] @go(InstanceGenerations,[]*string)
	localStorage?: null | string @go(LocalStorage,*string)
	localStorageTypes?: [...null | string] @go(LocalStorageTypes,[]*string)

	// Specifies the minimum and maximum for the MemoryGiBPerVCpu object when you
	// specify InstanceRequirements for an Auto Scaling group.
	memoryGiBPerVCPU?: null | #MemoryGiBPerVCPURequest @go(MemoryGiBPerVCPU,*MemoryGiBPerVCPURequest)

	// Specifies the minimum and maximum for the MemoryMiB object when you specify
	// InstanceRequirements for an Auto Scaling group.
	memoryMiB?: null | #MemoryMiBRequest @go(MemoryMiB,*MemoryMiBRequest)

	// Specifies the minimum and maximum for the NetworkBandwidthGbps object when
	// you specify InstanceRequirements for an Auto Scaling group.
	//
	// Setting the minimum bandwidth does not guarantee that your instance will
	// achieve the minimum bandwidth. Amazon EC2 will identify instance types that
	// support the specified minimum bandwidth, but the actual bandwidth of your
	// instance might go below the specified minimum at times. For more information,
	// see Available instance bandwidth (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth)
	// in the Amazon EC2 User Guide for Linux Instances.
	networkBandwidthGbps?: null | #NetworkBandwidthGbpsRequest @go(NetworkBandwidthGbps,*NetworkBandwidthGbpsRequest)

	// Specifies the minimum and maximum for the NetworkInterfaceCount object when
	// you specify InstanceRequirements for an Auto Scaling group.
	networkInterfaceCount?:                     null | #NetworkInterfaceCountRequest @go(NetworkInterfaceCount,*NetworkInterfaceCountRequest)
	onDemandMaxPricePercentageOverLowestPrice?: null | int64                         @go(OnDemandMaxPricePercentageOverLowestPrice,*int64)
	requireHibernateSupport?:                   null | bool                          @go(RequireHibernateSupport,*bool)
	spotMaxPricePercentageOverLowestPrice?:     null | int64                         @go(SpotMaxPricePercentageOverLowestPrice,*int64)

	// Specifies the minimum and maximum for the TotalLocalStorageGB object when
	// you specify InstanceRequirements for an Auto Scaling group.
	totalLocalStorageGB?: null | #TotalLocalStorageGBRequest @go(TotalLocalStorageGB,*TotalLocalStorageGBRequest)

	// Specifies the minimum and maximum for the VCpuCount object when you specify
	// InstanceRequirements for an Auto Scaling group.
	vCPUCount?: null | #VCPUCountRequest @go(VCPUCount,*VCPUCountRequest)
}

// +kubebuilder:skipversion
#InstanceReusePolicy: {
	reuseOnScaleIn?: null | bool @go(ReuseOnScaleIn,*bool)
}

// +kubebuilder:skipversion
#InstancesDistribution: {
	onDemandAllocationStrategy?:          null | string @go(OnDemandAllocationStrategy,*string)
	onDemandBaseCapacity?:                null | int64  @go(OnDemandBaseCapacity,*int64)
	onDemandPercentageAboveBaseCapacity?: null | int64  @go(OnDemandPercentageAboveBaseCapacity,*int64)
	spotAllocationStrategy?:              null | string @go(SpotAllocationStrategy,*string)
	spotInstancePools?:                   null | int64  @go(SpotInstancePools,*int64)
	spotMaxPrice?:                        null | string @go(SpotMaxPrice,*string)
}

// +kubebuilder:skipversion
#LaunchConfiguration: {
	classicLinkVPCID?:        null | string @go(ClassicLinkVPCID,*string)
	iamInstanceProfile?:      null | string @go(IAMInstanceProfile,*string)
	imageID?:                 null | string @go(ImageID,*string)
	instanceType?:            null | string @go(InstanceType,*string)
	kernelID?:                null | string @go(KernelID,*string)
	keyName?:                 null | string @go(KeyName,*string)
	launchConfigurationARN?:  null | string @go(LaunchConfigurationARN,*string)
	launchConfigurationName?: null | string @go(LaunchConfigurationName,*string)
	ramDiskID?:               null | string @go(RAMDiskID,*string)
}

// +kubebuilder:skipversion
#LaunchTemplate: {
	// Describes the launch template and the version of the launch template that
	// Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information
	// about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	launchTemplateSpecification?: null | #LaunchTemplateSpecification @go(LaunchTemplateSpecification,*LaunchTemplateSpecification)
	overrides?: [...null | #LaunchTemplateOverrides] @go(Overrides,[]*LaunchTemplateOverrides)
}

// +kubebuilder:skipversion
#LaunchTemplateOverrides: {
	// The attributes for the instance types for a mixed instances policy. Amazon
	// EC2 Auto Scaling uses your specified requirements to identify instance types.
	// Then, it uses your On-Demand and Spot allocation strategies to launch instances
	// from these instance types.
	//
	// When you specify multiple attributes, you get instance types that satisfy
	// all of the specified attributes. If you specify multiple values for an attribute,
	// you get instance types that satisfy any of the specified values.
	//
	// To limit the list of instance types from which Amazon EC2 Auto Scaling can
	// identify matching instance types, you can use one of the following parameters,
	// but not both in the same request:
	//
	//    * AllowedInstanceTypes - The instance types to include in the list. All
	//    other instance types are ignored, even if they match your specified attributes.
	//
	//    * ExcludedInstanceTypes - The instance types to exclude from the list,
	//    even if they match your specified attributes.
	//
	// You must specify VCpuCount and MemoryMiB. All other attributes are optional.
	// Any unspecified optional attribute is set to its default.
	//
	// For more information, see Creating an Auto Scaling group using attribute-based
	// instance type selection (https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html)
	// in the Amazon EC2 Auto Scaling User Guide. For help determining which instance
	// types match your attributes before you apply them to your Auto Scaling group,
	// see Preview instance types with specified attributes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements)
	// in the Amazon EC2 User Guide for Linux Instances.
	instanceRequirements?: null | #InstanceRequirements @go(InstanceRequirements,*InstanceRequirements)
	instanceType?:         null | string                @go(InstanceType,*string)

	// Describes the launch template and the version of the launch template that
	// Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information
	// about launch templates, see Launch templates (https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	launchTemplateSpecification?: null | #LaunchTemplateSpecification @go(LaunchTemplateSpecification,*LaunchTemplateSpecification)
	weightedCapacity?:            null | string                       @go(WeightedCapacity,*string)
}

// +kubebuilder:skipversion
#LaunchTemplateSpecification: {
	launchTemplateID?:   null | string @go(LaunchTemplateID,*string)
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)
	version?:            null | string @go(Version,*string)
}

// +kubebuilder:skipversion
#LifecycleHook: {
	autoScalingGroupName?:  null | string @go(AutoScalingGroupName,*string)
	defaultResult?:         null | string @go(DefaultResult,*string)
	heartbeatTimeout?:      null | int64  @go(HeartbeatTimeout,*int64)
	lifecycleHookName?:     null | string @go(LifecycleHookName,*string)
	lifecycleTransition?:   null | string @go(LifecycleTransition,*string)
	notificationMetadata?:  null | string @go(NotificationMetadata,*string)
	notificationTargetARN?: null | string @go(NotificationTargetARN,*string)
	roleARN?:               null | string @go(RoleARN,*string)
}

// +kubebuilder:skipversion
#LifecycleHookSpecification: {
	defaultResult?:         null | string @go(DefaultResult,*string)
	heartbeatTimeout?:      null | int64  @go(HeartbeatTimeout,*int64)
	lifecycleHookName?:     null | string @go(LifecycleHookName,*string)
	lifecycleTransition?:   null | string @go(LifecycleTransition,*string)
	notificationMetadata?:  null | string @go(NotificationMetadata,*string)
	notificationTargetARN?: null | string @go(NotificationTargetARN,*string)
	roleARN?:               null | string @go(RoleARN,*string)
}

// +kubebuilder:skipversion
#LoadBalancerState: {
	loadBalancerName?: null | string @go(LoadBalancerName,*string)
	state?:            null | string @go(State,*string)
}

// +kubebuilder:skipversion
#LoadBalancerTargetGroupState: {
	loadBalancerTargetGroupARN?: null | string @go(LoadBalancerTargetGroupARN,*string)
	state?:                      null | string @go(State,*string)
}

// +kubebuilder:skipversion
#MemoryGiBPerVCPURequest: {
	max?: null | float64 @go(Max,*float64)
	min?: null | float64 @go(Min,*float64)
}

// +kubebuilder:skipversion
#MemoryMiBRequest: {
	max?: null | int64 @go(Max,*int64)
	min?: null | int64 @go(Min,*int64)
}

// +kubebuilder:skipversion
#MetricCollectionType: {
	metric?: null | string @go(Metric,*string)
}

// +kubebuilder:skipversion
#MetricDataQuery: {
	expression?: null | string @go(Expression,*string)
	id?:         null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#MetricGranularityType: {
	granularity?: null | string @go(Granularity,*string)
}

// +kubebuilder:skipversion
#MixedInstancesPolicy: {
	// Use this structure to specify the distribution of On-Demand Instances and
	// Spot Instances and the allocation strategies used to fulfill On-Demand and
	// Spot capacities for a mixed instances policy.
	instancesDistribution?: null | #InstancesDistribution @go(InstancesDistribution,*InstancesDistribution)

	// Use this structure to specify the launch templates and instance types (overrides)
	// for a mixed instances policy.
	launchTemplate?: null | #LaunchTemplate @go(LaunchTemplate,*LaunchTemplate)
}

// +kubebuilder:skipversion
#NetworkBandwidthGbpsRequest: {
	max?: null | float64 @go(Max,*float64)
	min?: null | float64 @go(Min,*float64)
}

// +kubebuilder:skipversion
#NetworkInterfaceCountRequest: {
	max?: null | int64 @go(Max,*int64)
	min?: null | int64 @go(Min,*int64)
}

// +kubebuilder:skipversion
#NotificationConfiguration: {
	autoScalingGroupName?: null | string @go(AutoScalingGroupName,*string)
	notificationType?:     null | string @go(NotificationType,*string)
	topicARN?:             null | string @go(TopicARN,*string)
}

// +kubebuilder:skipversion
#PredefinedMetricSpecification: {
	resourceLabel?: null | string @go(ResourceLabel,*string)
}

// +kubebuilder:skipversion
#PredictiveScalingPredefinedLoadMetric: {
	resourceLabel?: null | string @go(ResourceLabel,*string)
}

// +kubebuilder:skipversion
#PredictiveScalingPredefinedMetricPair: {
	resourceLabel?: null | string @go(ResourceLabel,*string)
}

// +kubebuilder:skipversion
#PredictiveScalingPredefinedScalingMetric: {
	resourceLabel?: null | string @go(ResourceLabel,*string)
}

// +kubebuilder:skipversion
#ProcessType: {
	processName?: null | string @go(ProcessName,*string)
}

// +kubebuilder:skipversion
#RollbackDetails: {
	rollbackReason?: null | string @go(RollbackReason,*string)
}

// +kubebuilder:skipversion
#ScalingPolicy: {
	adjustmentType?:        null | string @go(AdjustmentType,*string)
	autoScalingGroupName?:  null | string @go(AutoScalingGroupName,*string)
	cooldown?:              null | int64  @go(Cooldown,*int64)
	metricAggregationType?: null | string @go(MetricAggregationType,*string)
	policyARN?:             null | string @go(PolicyARN,*string)
	policyName?:            null | string @go(PolicyName,*string)
}

// +kubebuilder:skipversion
#ScheduledUpdateGroupAction: {
	autoScalingGroupName?: null | string @go(AutoScalingGroupName,*string)
	desiredCapacity?:      null | int64  @go(DesiredCapacity,*int64)
	maxSize?:              null | int64  @go(MaxSize,*int64)
	minSize?:              null | int64  @go(MinSize,*int64)
	recurrence?:           null | string @go(Recurrence,*string)
	scheduledActionARN?:   null | string @go(ScheduledActionARN,*string)
	scheduledActionName?:  null | string @go(ScheduledActionName,*string)
	timeZone?:             null | string @go(TimeZone,*string)
}

// +kubebuilder:skipversion
#ScheduledUpdateGroupActionRequest: {
	desiredCapacity?:     null | int64  @go(DesiredCapacity,*int64)
	maxSize?:             null | int64  @go(MaxSize,*int64)
	minSize?:             null | int64  @go(MinSize,*int64)
	recurrence?:          null | string @go(Recurrence,*string)
	scheduledActionName?: null | string @go(ScheduledActionName,*string)
	timeZone?:            null | string @go(TimeZone,*string)
}

// +kubebuilder:skipversion
#SuspendedProcess: {
	processName?:      null | string @go(ProcessName,*string)
	suspensionReason?: null | string @go(SuspensionReason,*string)
}

// +kubebuilder:skipversion
#Tag: {
	key?:               null | string @go(Key,*string)
	propagateAtLaunch?: null | bool   @go(PropagateAtLaunch,*bool)
	resourceID?:        null | string @go(ResourceID,*string)
	resourceType?:      null | string @go(ResourceType,*string)
	value?:             null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#TagDescription: {
	key?:               null | string @go(Key,*string)
	propagateAtLaunch?: null | bool   @go(PropagateAtLaunch,*bool)
	resourceID?:        null | string @go(ResourceID,*string)
	resourceType?:      null | string @go(ResourceType,*string)
	value?:             null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#TargetTrackingMetricDataQuery: {
	expression?: null | string @go(Expression,*string)
	id?:         null | string @go(ID,*string)
}

// +kubebuilder:skipversion
#TotalLocalStorageGBRequest: {
	max?: null | float64 @go(Max,*float64)
	min?: null | float64 @go(Min,*float64)
}

// +kubebuilder:skipversion
#TrafficSourceIdentifier: {
	identifier?: null | string @go(Identifier,*string)
	type_?:      null | string @go(Type,*string)
}

// +kubebuilder:skipversion
#TrafficSourceState: {
	identifier?:    null | string @go(Identifier,*string)
	state?:         null | string @go(State,*string)
	trafficSource?: null | string @go(TrafficSource,*string)
	type_?:         null | string @go(Type,*string)
}

// +kubebuilder:skipversion
#VCPUCountRequest: {
	max?: null | int64 @go(Max,*int64)
	min?: null | int64 @go(Min,*int64)
}

// +kubebuilder:skipversion
#WarmPoolConfiguration: {
	// Describes an instance reuse policy for a warm pool.
	//
	// For more information, see Warm pools for Amazon EC2 Auto Scaling (https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html)
	// in the Amazon EC2 Auto Scaling User Guide.
	instanceReusePolicy?:      null | #InstanceReusePolicy @go(InstanceReusePolicy,*InstanceReusePolicy)
	maxGroupPreparedCapacity?: null | int64                @go(MaxGroupPreparedCapacity,*int64)
	minSize?:                  null | int64                @go(MinSize,*int64)
	poolState?:                null | string               @go(PoolState,*string)
	status?:                   null | string               @go(Status,*string)
}
