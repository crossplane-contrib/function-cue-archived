// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/acmpca/v1alpha1

package v1alpha1

// CertificateAuthorityPermissionSpec defines the desired state of CertificateAuthorityPermission
#CertificateAuthorityPermissionSpec: {
	forProvider: #CertificateAuthorityPermissionParameters @go(ForProvider)
}

// CertificateAuthorityPermissionParameters defines the desired state of an AWS CertificateAuthority.
#CertificateAuthorityPermissionParameters: {
	// Region is the region of CertificateAuthorityPermission.
	region: string @go(Region)

	// The Amazon Resource Name (ARN) of the private certificate authority (CA)that will be used to issue the certificate.
	// +immutable
	// +crossplane:generate:reference:type=CertificateAuthority
	certificateAuthorityARN?: null | string @go(CertificateAuthorityARN,*string)

	// The actions that the specified AWS service principal can use.
	// +optional
	// +immutable
	actions?: [...string] @go(Actions,[]string)

	// The AWS service or identity that receives the permission. At this
	// time, the only valid principal is acm.amazonaws.com.
	// +immutable
	// +kubebuilder:default:=acm.amazonaws.com
	principal: string @go(Principal)

	// Calling Account ID
	// +optional
	// +immutable
	sourceAccount?: null | string @go(SourceAccount,*string)
}

// CertificateAuthorityPermission is a managed resource that represents an AWS CertificateAuthorityPermission Manager.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CertificateAuthorityPermission: {
	spec: #CertificateAuthorityPermissionSpec @go(Spec)
}

// CertificateAuthorityPermissionList contains a list of CertificateAuthorityPermission
#CertificateAuthorityPermissionList: {
	items: [...#CertificateAuthorityPermission] @go(Items,[]CertificateAuthorityPermission)
}
