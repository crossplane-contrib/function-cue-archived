// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/apigatewayv2/v1alpha1

package v1alpha1

// AuthorizerParameters defines the desired state of Authorizer
#AuthorizerParameters: {
	// Region is which region the Authorizer will be created.
	// +kubebuilder:validation:Required
	region:                          string        @go(Region)
	authorizerCredentialsARN?:       null | string @go(AuthorizerCredentialsARN,*string)
	authorizerPayloadFormatVersion?: null | string @go(AuthorizerPayloadFormatVersion,*string)
	authorizerResultTtlInSeconds?:   null | int64  @go(AuthorizerResultTtlInSeconds,*int64)

	// +kubebuilder:validation:Required
	authorizerType?:        null | string @go(AuthorizerType,*string)
	authorizerURI?:         null | string @go(AuthorizerURI,*string)
	enableSimpleResponses?: null | bool   @go(EnableSimpleResponses,*bool)

	// +kubebuilder:validation:Required
	identitySource: [...null | string] @go(IdentitySource,[]*string)
	identityValidationExpression?: null | string            @go(IdentityValidationExpression,*string)
	jwtConfiguration?:             null | #JWTConfiguration @go(JWTConfiguration,*JWTConfiguration)

	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	#CustomAuthorizerParameters
}

// AuthorizerSpec defines the desired state of Authorizer
#AuthorizerSpec: {
	forProvider: #AuthorizerParameters @go(ForProvider)
}

// AuthorizerObservation defines the observed state of Authorizer
#AuthorizerObservation: {
	authorizerID?: null | string @go(AuthorizerID,*string)
}

// AuthorizerStatus defines the observed state of Authorizer.
#AuthorizerStatus: {
	atProvider?: #AuthorizerObservation @go(AtProvider)
}

// Authorizer is the Schema for the Authorizers API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Authorizer: {
	spec:    #AuthorizerSpec   @go(Spec)
	status?: #AuthorizerStatus @go(Status)
}

// AuthorizerList contains a list of Authorizers
#AuthorizerList: {
	items: [...#Authorizer] @go(Items,[]Authorizer)
}
