// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/sesv2/v1alpha1

package v1alpha1

// EmailIdentityParameters defines the desired state of EmailIdentity
#EmailIdentityParameters: {
	// Region is which region the EmailIdentity will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// If your request includes this object, Amazon SES configures the identity
	// to use Bring Your Own DKIM (BYODKIM) for DKIM authentication purposes, or,
	// configures the key length to be used for Easy DKIM (https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html).
	//
	// You can only specify this object if the email identity is a domain, as opposed
	// to an address.
	dkimSigningAttributes?: null | #DkimSigningAttributes @go(DkimSigningAttributes,*DkimSigningAttributes)

	// The email address or domain to verify.
	// +kubebuilder:validation:Required
	emailIdentity?: null | string @go(EmailIdentity,*string)

	// An array of objects that define the tags (keys and values) to associate with
	// the email identity.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomEmailIdentityParameters
}

// EmailIdentitySpec defines the desired state of EmailIdentity
#EmailIdentitySpec: {
	forProvider: #EmailIdentityParameters @go(ForProvider)
}

// EmailIdentityObservation defines the observed state of EmailIdentity
#EmailIdentityObservation: {
	// An object that contains information about the DKIM attributes for the identity.
	dkimAttributes?: null | #DkimAttributes @go(DkimAttributes,*DkimAttributes)

	// The email identity type. Note: the MANAGED_DOMAIN identity type is not supported.
	identityType?: null | string @go(IdentityType,*string)

	// Specifies whether or not the identity is verified. You can only send email
	// from verified email addresses or domains. For more information about verifying
	// identities, see the Amazon Pinpoint User Guide (https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html).
	verifiedForSendingStatus?: null | bool @go(VerifiedForSendingStatus,*bool)
}

// EmailIdentityStatus defines the observed state of EmailIdentity.
#EmailIdentityStatus: {
	atProvider?: #EmailIdentityObservation @go(AtProvider)
}

// EmailIdentity is the Schema for the EmailIdentities API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EmailIdentity: {
	spec:    #EmailIdentitySpec   @go(Spec)
	status?: #EmailIdentityStatus @go(Status)
}

// EmailIdentityList contains a list of EmailIdentities
#EmailIdentityList: {
	items: [...#EmailIdentity] @go(Items,[]EmailIdentity)
}
