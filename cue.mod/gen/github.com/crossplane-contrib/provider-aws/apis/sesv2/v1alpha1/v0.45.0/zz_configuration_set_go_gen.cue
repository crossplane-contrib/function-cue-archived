// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/sesv2/v1alpha1

package v1alpha1

// ConfigurationSetParameters defines the desired state of ConfigurationSet
#ConfigurationSetParameters: {
	// Region is which region the ConfigurationSet will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// An object that defines the dedicated IP pool that is used to send emails
	// that you send using the configuration set.
	deliveryOptions?: null | #DeliveryOptions @go(DeliveryOptions,*DeliveryOptions)

	// An object that defines whether or not Amazon SES collects reputation metrics
	// for the emails that you send that use the configuration set.
	reputationOptions?: null | #ReputationOptions @go(ReputationOptions,*ReputationOptions)

	// An object that defines whether or not Amazon SES can send email that you
	// send using the configuration set.
	sendingOptions?:     null | #SendingOptions     @go(SendingOptions,*SendingOptions)
	suppressionOptions?: null | #SuppressionOptions @go(SuppressionOptions,*SuppressionOptions)

	// An array of objects that define the tags (keys and values) to associate with
	// the configuration set.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	// An object that defines the open and click tracking options for emails that
	// you send using the configuration set.
	trackingOptions?: null | #TrackingOptions @go(TrackingOptions,*TrackingOptions)

	// An object that defines the VDM options for emails that you send using the
	// configuration set.
	vdmOptions?: null | #VdmOptions @go(VdmOptions,*VdmOptions)

	#CustomConfigurationSetParameters
}

// ConfigurationSetSpec defines the desired state of ConfigurationSet
#ConfigurationSetSpec: {
	forProvider: #ConfigurationSetParameters @go(ForProvider)
}

// ConfigurationSetObservation defines the observed state of ConfigurationSet
#ConfigurationSetObservation: {
}

// ConfigurationSetStatus defines the observed state of ConfigurationSet.
#ConfigurationSetStatus: {
	atProvider?: #ConfigurationSetObservation @go(AtProvider)
}

// ConfigurationSet is the Schema for the ConfigurationSets API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConfigurationSet: {
	spec:    #ConfigurationSetSpec   @go(Spec)
	status?: #ConfigurationSetStatus @go(Status)
}

// ConfigurationSetList contains a list of ConfigurationSets
#ConfigurationSetList: {
	items: [...#ConfigurationSet] @go(Items,[]ConfigurationSet)
}
