// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/dax/v1alpha1

package v1alpha1

// +kubebuilder:skipversion
#Cluster_SDK: {
	activeNodes?: null | int64  @go(ActiveNodes,*int64)
	clusterARN?:  null | string @go(ClusterARN,*string)

	// Represents the information required for client programs to connect to the
	// endpoint for a DAX cluster.
	clusterDiscoveryEndpoint?:      null | #Endpoint @go(ClusterDiscoveryEndpoint,*Endpoint)
	clusterEndpointEncryptionType?: null | string    @go(ClusterEndpointEncryptionType,*string)
	clusterName?:                   null | string    @go(ClusterName,*string)
	description?:                   null | string    @go(Description,*string)
	iamRoleARN?:                    null | string    @go(IAMRoleARN,*string)
	nodeIDsToRemove?: [...null | string] @go(NodeIDsToRemove,[]*string)
	nodeType?: null | string @go(NodeType,*string)
	nodes?: [...null | #Node] @go(Nodes,[]*Node)

	// Describes a notification topic and its status. Notification topics are used
	// for publishing DAX events to subscribers using Amazon Simple Notification
	// Service (SNS).
	notificationConfiguration?: null | #NotificationConfiguration @go(NotificationConfiguration,*NotificationConfiguration)

	// The status of a parameter group.
	parameterGroup?:             null | #ParameterGroupStatus_SDK @go(ParameterGroup,*ParameterGroupStatus_SDK)
	preferredMaintenanceWindow?: null | string                    @go(PreferredMaintenanceWindow,*string)

	// The description of the server-side encryption status on the specified DAX
	// cluster.
	sseDescription?: null | #SSEDescription @go(SSEDescription,*SSEDescription)
	securityGroups?: [...null | #SecurityGroupMembership] @go(SecurityGroups,[]*SecurityGroupMembership)
	status?:      null | string @go(Status,*string)
	subnetGroup?: null | string @go(SubnetGroup,*string)
	totalNodes?:  null | int64  @go(TotalNodes,*int64)
}

// +kubebuilder:skipversion
#Endpoint: {
	address?: null | string @go(Address,*string)
	port?:    null | int64  @go(Port,*int64)
	url?:     null | string @go(URL,*string)
}

// +kubebuilder:skipversion
#Event: {
	message?:    null | string @go(Message,*string)
	sourceName?: null | string @go(SourceName,*string)
}

// +kubebuilder:skipversion
#Node: {
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// Represents the information required for client programs to connect to the
	// endpoint for a DAX cluster.
	endpoint?:             null | #Endpoint @go(Endpoint,*Endpoint)
	nodeID?:               null | string    @go(NodeID,*string)
	nodeStatus?:           null | string    @go(NodeStatus,*string)
	parameterGroupStatus?: null | string    @go(ParameterGroupStatus,*string)
}

// +kubebuilder:skipversion
#NodeTypeSpecificValue: {
	nodeType?: null | string @go(NodeType,*string)
	value?:    null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#NotificationConfiguration: {
	topicARN?:    null | string @go(TopicARN,*string)
	topicStatus?: null | string @go(TopicStatus,*string)
}

// +kubebuilder:skipversion
#Parameter: {
	allowedValues?:  null | string @go(AllowedValues,*string)
	dataType?:       null | string @go(DataType,*string)
	description?:    null | string @go(Description,*string)
	parameterName?:  null | string @go(ParameterName,*string)
	parameterValue?: null | string @go(ParameterValue,*string)
	source?:         null | string @go(Source,*string)
}

// +kubebuilder:skipversion
#ParameterGroupStatus_SDK: {
	nodeIDsToReboot?: [...null | string] @go(NodeIDsToReboot,[]*string)
	parameterApplyStatus?: null | string @go(ParameterApplyStatus,*string)
	parameterGroupName?:   null | string @go(ParameterGroupName,*string)
}

// +kubebuilder:skipversion
#ParameterGroup_SDK: {
	description?:        null | string @go(Description,*string)
	parameterGroupName?: null | string @go(ParameterGroupName,*string)
}

// +kubebuilder:skipversion
#ParameterNameValue: {
	parameterName?:  null | string @go(ParameterName,*string)
	parameterValue?: null | string @go(ParameterValue,*string)
}

// +kubebuilder:skipversion
#SSEDescription: {
	status?: null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#SSESpecification: {
	enabled?: null | bool @go(Enabled,*bool)
}

// +kubebuilder:skipversion
#SecurityGroupMembership: {
	securityGroupIdentifier?: null | string @go(SecurityGroupIdentifier,*string)
	status?:                  null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#Subnet: {
	subnetAvailabilityZone?: null | string @go(SubnetAvailabilityZone,*string)
	subnetIdentifier?:       null | string @go(SubnetIdentifier,*string)
}

// +kubebuilder:skipversion
#SubnetGroup_SDK: {
	description?:     null | string @go(Description,*string)
	subnetGroupName?: null | string @go(SubnetGroupName,*string)
	subnets?: [...null | #Subnet] @go(Subnets,[]*Subnet)
	vpcID?: null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#Tag: {
	key?:   null | string @go(Key,*string)
	value?: null | string @go(Value,*string)
}
