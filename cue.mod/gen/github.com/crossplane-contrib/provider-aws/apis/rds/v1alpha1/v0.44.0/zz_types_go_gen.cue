// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/rds/v1alpha1

package v1alpha1

// +kubebuilder:skipversion
#AccountQuota: {
	accountQuotaName?: null | string @go(AccountQuotaName,*string)
}

// +kubebuilder:skipversion
#AvailabilityZone: {
	name?: null | string @go(Name,*string)
}

// +kubebuilder:skipversion
#AvailableProcessorFeature: {
	allowedValues?: null | string @go(AllowedValues,*string)
	defaultValue?:  null | string @go(DefaultValue,*string)
	name?:          null | string @go(Name,*string)
}

// +kubebuilder:skipversion
#BlueGreenDeployment: {
	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	tagList?: [...null | #Tag] @go(TagList,[]*Tag)
}

// +kubebuilder:skipversion
#Certificate: {
	certificateARN?:        null | string @go(CertificateARN,*string)
	certificateIdentifier?: null | string @go(CertificateIdentifier,*string)
	certificateType?:       null | string @go(CertificateType,*string)
	customerOverride?:      null | bool   @go(CustomerOverride,*bool)
	thumbprint?:            null | string @go(Thumbprint,*string)
}

// +kubebuilder:skipversion
#CertificateDetails: {
	cAIdentifier?: null | string @go(CAIdentifier,*string)
}

// +kubebuilder:skipversion
#CharacterSet: {
	characterSetDescription?: null | string @go(CharacterSetDescription,*string)
	characterSetName?:        null | string @go(CharacterSetName,*string)
}

// +kubebuilder:skipversion
#CloudwatchLogsExportConfiguration: {
	disableLogTypes?: [...null | string] @go(DisableLogTypes,[]*string)
	enableLogTypes?: [...null | string] @go(EnableLogTypes,[]*string)
}

// +kubebuilder:skipversion
#ClusterPendingModifiedValues: {
	allocatedStorage?:                 null | int64  @go(AllocatedStorage,*int64)
	backupRetentionPeriod?:            null | int64  @go(BackupRetentionPeriod,*int64)
	dbClusterIdentifier?:              null | string @go(DBClusterIdentifier,*string)
	engineVersion?:                    null | string @go(EngineVersion,*string)
	iamDatabaseAuthenticationEnabled?: null | bool   @go(IAMDatabaseAuthenticationEnabled,*bool)
	iops?:                             null | int64  @go(IOPS,*int64)
	masterUserPassword?:               null | string @go(MasterUserPassword,*string)

	// A list of the log types whose configuration is still pending. In other words,
	// these log types are in the process of being activated or deactivated.
	pendingCloudwatchLogsExports?: null | #PendingCloudwatchLogsExports @go(PendingCloudwatchLogsExports,*PendingCloudwatchLogsExports)
	storageType?:                  null | string                        @go(StorageType,*string)
}

// +kubebuilder:skipversion
#ConnectionPoolConfiguration: {
	connectionBorrowTimeout?:   null | int64  @go(ConnectionBorrowTimeout,*int64)
	initQuery?:                 null | string @go(InitQuery,*string)
	maxConnectionsPercent?:     null | int64  @go(MaxConnectionsPercent,*int64)
	maxIdleConnectionsPercent?: null | int64  @go(MaxIdleConnectionsPercent,*int64)
	sessionPinningFilters?: [...null | string] @go(SessionPinningFilters,[]*string)
}

// +kubebuilder:skipversion
#ConnectionPoolConfigurationInfo: {
	connectionBorrowTimeout?:   null | int64  @go(ConnectionBorrowTimeout,*int64)
	initQuery?:                 null | string @go(InitQuery,*string)
	maxConnectionsPercent?:     null | int64  @go(MaxConnectionsPercent,*int64)
	maxIdleConnectionsPercent?: null | int64  @go(MaxIdleConnectionsPercent,*int64)
	sessionPinningFilters?: [...null | string] @go(SessionPinningFilters,[]*string)
}

// +kubebuilder:skipversion
#CustomDBEngineVersionAMI: {
	imageID?: null | string @go(ImageID,*string)
	status?:  null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#DBClusterAutomatedBackup: {
	allocatedStorage?: null | int64 @go(AllocatedStorage,*int64)
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)
	backupRetentionPeriod?:            null | int64  @go(BackupRetentionPeriod,*int64)
	dbClusterARN?:                     null | string @go(DBClusterARN,*string)
	dbClusterAutomatedBackupsARN?:     null | string @go(DBClusterAutomatedBackupsARN,*string)
	dbClusterIdentifier?:              null | string @go(DBClusterIdentifier,*string)
	dbClusterResourceID?:              null | string @go(DBClusterResourceID,*string)
	engine?:                           null | string @go(Engine,*string)
	engineMode?:                       null | string @go(EngineMode,*string)
	engineVersion?:                    null | string @go(EngineVersion,*string)
	iamDatabaseAuthenticationEnabled?: null | bool   @go(IAMDatabaseAuthenticationEnabled,*bool)
	iops?:                             null | int64  @go(IOPS,*int64)
	kmsKeyID?:                         null | string @go(KMSKeyID,*string)
	licenseModel?:                     null | string @go(LicenseModel,*string)
	masterUsername?:                   null | string @go(MasterUsername,*string)
	port?:                             null | int64  @go(Port,*int64)
	region?:                           null | string @go(Region,*string)
	status?:                           null | string @go(Status,*string)
	storageEncrypted?:                 null | bool   @go(StorageEncrypted,*bool)
	storageType?:                      null | string @go(StorageType,*string)
	vpcID?:                            null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#DBClusterEndpoint: {
	customEndpointType?:                  null | string @go(CustomEndpointType,*string)
	dbClusterEndpointARN?:                null | string @go(DBClusterEndpointARN,*string)
	dbClusterEndpointIdentifier?:         null | string @go(DBClusterEndpointIdentifier,*string)
	dbClusterEndpointResourceIdentifier?: null | string @go(DBClusterEndpointResourceIdentifier,*string)
	dbClusterIdentifier?:                 null | string @go(DBClusterIdentifier,*string)
	endpoint?:                            null | string @go(Endpoint,*string)
	endpointType?:                        null | string @go(EndpointType,*string)
	excludedMembers?: [...null | string] @go(ExcludedMembers,[]*string)
	staticMembers?: [...null | string] @go(StaticMembers,[]*string)
	status?: null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#DBClusterMember: {
	dbClusterParameterGroupStatus?: null | string @go(DBClusterParameterGroupStatus,*string)
	dbInstanceIdentifier?:          null | string @go(DBInstanceIdentifier,*string)
	isClusterWriter?:               null | bool   @go(IsClusterWriter,*bool)
	promotionTier?:                 null | int64  @go(PromotionTier,*int64)
}

// +kubebuilder:skipversion
#DBClusterOptionGroupStatus: {
	dbClusterOptionGroupName?: null | string @go(DBClusterOptionGroupName,*string)
	status?:                   null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#DBClusterParameterGroup_SDK: {
	dbClusterParameterGroupARN?:  null | string @go(DBClusterParameterGroupARN,*string)
	dbClusterParameterGroupName?: null | string @go(DBClusterParameterGroupName,*string)
	dbParameterGroupFamily?:      null | string @go(DBParameterGroupFamily,*string)
	description?:                 null | string @go(Description,*string)
}

// +kubebuilder:skipversion
#DBClusterRole: {
	featureName?: null | string @go(FeatureName,*string)
	roleARN?:     null | string @go(RoleARN,*string)
	status?:      null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#DBClusterSnapshot: {
	allocatedStorage?: null | int64 @go(AllocatedStorage,*int64)
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)
	dbClusterIdentifier?:              null | string @go(DBClusterIdentifier,*string)
	dbClusterSnapshotARN?:             null | string @go(DBClusterSnapshotARN,*string)
	dbClusterSnapshotIdentifier?:      null | string @go(DBClusterSnapshotIdentifier,*string)
	dbSystemID?:                       null | string @go(DBSystemID,*string)
	dbClusterResourceID?:              null | string @go(DBClusterResourceID,*string)
	engine?:                           null | string @go(Engine,*string)
	engineMode?:                       null | string @go(EngineMode,*string)
	engineVersion?:                    null | string @go(EngineVersion,*string)
	iamDatabaseAuthenticationEnabled?: null | bool   @go(IAMDatabaseAuthenticationEnabled,*bool)
	kmsKeyID?:                         null | string @go(KMSKeyID,*string)
	licenseModel?:                     null | string @go(LicenseModel,*string)
	masterUsername?:                   null | string @go(MasterUsername,*string)
	percentProgress?:                  null | int64  @go(PercentProgress,*int64)
	port?:                             null | int64  @go(Port,*int64)
	snapshotType?:                     null | string @go(SnapshotType,*string)
	sourceDBClusterSnapshotARN?:       null | string @go(SourceDBClusterSnapshotARN,*string)
	status?:                           null | string @go(Status,*string)
	storageEncrypted?:                 null | bool   @go(StorageEncrypted,*bool)
	storageType?:                      null | string @go(StorageType,*string)

	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	tagList?: [...null | #Tag] @go(TagList,[]*Tag)
	vpcID?: null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#DBClusterSnapshotAttribute: {
	attributeName?: null | string @go(AttributeName,*string)
}

// +kubebuilder:skipversion
#DBClusterSnapshotAttributesResult: {
	dbClusterSnapshotIdentifier?: null | string @go(DBClusterSnapshotIdentifier,*string)
}

// +kubebuilder:skipversion
#DBCluster_SDK: {
	activityStreamKinesisStreamName?: null | string @go(ActivityStreamKinesisStreamName,*string)
	activityStreamKMSKeyID?:          null | string @go(ActivityStreamKMSKeyID,*string)
	activityStreamMode?:              null | string @go(ActivityStreamMode,*string)
	activityStreamStatus?:            null | string @go(ActivityStreamStatus,*string)
	allocatedStorage?:                null | int64  @go(AllocatedStorage,*int64)
	associatedRoles?: [...null | #DBClusterRole] @go(AssociatedRoles,[]*DBClusterRole)
	autoMinorVersionUpgrade?: null | bool @go(AutoMinorVersionUpgrade,*bool)
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)
	backtrackConsumedChangeRecords?: null | int64  @go(BacktrackConsumedChangeRecords,*int64)
	backtrackWindow?:                null | int64  @go(BacktrackWindow,*int64)
	backupRetentionPeriod?:          null | int64  @go(BackupRetentionPeriod,*int64)
	capacity?:                       null | int64  @go(Capacity,*int64)
	characterSetName?:               null | string @go(CharacterSetName,*string)
	cloneGroupID?:                   null | string @go(CloneGroupID,*string)
	copyTagsToSnapshot?:             null | bool   @go(CopyTagsToSnapshot,*bool)
	crossAccountClone?:              null | bool   @go(CrossAccountClone,*bool)
	customEndpoints?: [...null | string] @go(CustomEndpoints,[]*string)
	dbClusterARN?:           null | string @go(DBClusterARN,*string)
	dbClusterIdentifier?:    null | string @go(DBClusterIdentifier,*string)
	dbClusterInstanceClass?: null | string @go(DBClusterInstanceClass,*string)
	dbClusterMembers?: [...null | #DBClusterMember] @go(DBClusterMembers,[]*DBClusterMember)
	dbClusterOptionGroupMemberships?: [...null | #DBClusterOptionGroupStatus] @go(DBClusterOptionGroupMemberships,[]*DBClusterOptionGroupStatus)
	dbClusterParameterGroup?: null | string @go(DBClusterParameterGroup,*string)
	dbSubnetGroup?:           null | string @go(DBSubnetGroup,*string)
	dbSystemID?:              null | string @go(DBSystemID,*string)
	databaseName?:            null | string @go(DatabaseName,*string)
	dbClusterResourceID?:     null | string @go(DBClusterResourceID,*string)
	deletionProtection?:      null | bool   @go(DeletionProtection,*bool)
	domainMemberships?: [...null | #DomainMembership] @go(DomainMemberships,[]*DomainMembership)
	enabledCloudwatchLogsExports?: [...null | string] @go(EnabledCloudwatchLogsExports,[]*string)
	endpoint?:                         null | string @go(Endpoint,*string)
	engine?:                           null | string @go(Engine,*string)
	engineMode?:                       null | string @go(EngineMode,*string)
	engineVersion?:                    null | string @go(EngineVersion,*string)
	globalWriteForwardingRequested?:   null | bool   @go(GlobalWriteForwardingRequested,*bool)
	globalWriteForwardingStatus?:      null | string @go(GlobalWriteForwardingStatus,*string)
	hostedZoneID?:                     null | string @go(HostedZoneID,*string)
	httpEndpointEnabled?:              null | bool   @go(HTTPEndpointEnabled,*bool)
	iamDatabaseAuthenticationEnabled?: null | bool   @go(IAMDatabaseAuthenticationEnabled,*bool)
	iops?:                             null | int64  @go(IOPS,*int64)
	kmsKeyID?:                         null | string @go(KMSKeyID,*string)
	localWriteForwardingStatus?:       null | string @go(LocalWriteForwardingStatus,*string)

	// Contains the secret managed by RDS in Amazon Web Services Secrets Manager
	// for the master user password.
	//
	// For more information, see Password management with Amazon Web Services Secrets
	// Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
	// in the Amazon RDS User Guide and Password management with Amazon Web Services
	// Secrets Manager (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html)
	// in the Amazon Aurora User Guide.
	masterUserSecret?:                   null | #MasterUserSecret @go(MasterUserSecret,*MasterUserSecret)
	masterUsername?:                     null | string            @go(MasterUsername,*string)
	monitoringInterval?:                 null | int64             @go(MonitoringInterval,*int64)
	monitoringRoleARN?:                  null | string            @go(MonitoringRoleARN,*string)
	multiAZ?:                            null | bool              @go(MultiAZ,*bool)
	networkType?:                        null | string            @go(NetworkType,*string)
	percentProgress?:                    null | string            @go(PercentProgress,*string)
	performanceInsightsEnabled?:         null | bool              @go(PerformanceInsightsEnabled,*bool)
	performanceInsightsKMSKeyID?:        null | string            @go(PerformanceInsightsKMSKeyID,*string)
	performanceInsightsRetentionPeriod?: null | int64             @go(PerformanceInsightsRetentionPeriod,*int64)
	port?:                               null | int64             @go(Port,*int64)
	preferredBackupWindow?:              null | string            @go(PreferredBackupWindow,*string)
	preferredMaintenanceWindow?:         null | string            @go(PreferredMaintenanceWindow,*string)
	publiclyAccessible?:                 null | bool              @go(PubliclyAccessible,*bool)
	readReplicaIdentifiers?: [...null | string] @go(ReadReplicaIdentifiers,[]*string)
	readerEndpoint?:              null | string @go(ReaderEndpoint,*string)
	replicationSourceIdentifier?: null | string @go(ReplicationSourceIdentifier,*string)

	// The scaling configuration for an Aurora DB cluster in serverless DB engine
	// mode.
	//
	// For more information, see Using Amazon Aurora Serverless v1 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html)
	// in the Amazon Aurora User Guide.
	scalingConfigurationInfo?: null | #ScalingConfigurationInfo @go(ScalingConfigurationInfo,*ScalingConfigurationInfo)

	// The scaling configuration for an Aurora Serverless v2 DB cluster.
	//
	// For more information, see Using Amazon Aurora Serverless v2 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html)
	// in the Amazon Aurora User Guide.
	serverlessV2ScalingConfiguration?: null | #ServerlessV2ScalingConfigurationInfo @go(ServerlessV2ScalingConfiguration,*ServerlessV2ScalingConfigurationInfo)
	status?:                           null | string                                @go(Status,*string)
	storageEncrypted?:                 null | bool                                  @go(StorageEncrypted,*bool)
	storageType?:                      null | string                                @go(StorageType,*string)

	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	tagList?: [...null | #Tag] @go(TagList,[]*Tag)
	vpcSecurityGroups?: [...null | #VPCSecurityGroupMembership] @go(VPCSecurityGroups,[]*VPCSecurityGroupMembership)
}

// +kubebuilder:skipversion
#DBEngineVersion: {
	dbEngineDescription?:                   null | string @go(DBEngineDescription,*string)
	dbEngineMediaType?:                     null | string @go(DBEngineMediaType,*string)
	dbEngineVersionARN?:                    null | string @go(DBEngineVersionARN,*string)
	dbEngineVersionDescription?:            null | string @go(DBEngineVersionDescription,*string)
	dbParameterGroupFamily?:                null | string @go(DBParameterGroupFamily,*string)
	databaseInstallationFilesS3BucketName?: null | string @go(DatabaseInstallationFilesS3BucketName,*string)
	databaseInstallationFilesS3Prefix?:     null | string @go(DatabaseInstallationFilesS3Prefix,*string)
	engine?:                                null | string @go(Engine,*string)
	engineVersion?:                         null | string @go(EngineVersion,*string)
	exportableLogTypes?: [...null | string] @go(ExportableLogTypes,[]*string)
	kmsKeyID?:           null | string @go(KMSKeyID,*string)
	majorEngineVersion?: null | string @go(MajorEngineVersion,*string)
	status?:             null | string @go(Status,*string)
	supportedEngineModes?: [...null | string] @go(SupportedEngineModes,[]*string)
	supportsBabelfish?:                         null | bool @go(SupportsBabelfish,*bool)
	supportsCertificateRotationWithoutRestart?: null | bool @go(SupportsCertificateRotationWithoutRestart,*bool)
	supportsGlobalDatabases?:                   null | bool @go(SupportsGlobalDatabases,*bool)
	supportsLocalWriteForwarding?:              null | bool @go(SupportsLocalWriteForwarding,*bool)
	supportsLogExportsToCloudwatchLogs?:        null | bool @go(SupportsLogExportsToCloudwatchLogs,*bool)
	supportsParallelQuery?:                     null | bool @go(SupportsParallelQuery,*bool)
	supportsReadReplica?:                       null | bool @go(SupportsReadReplica,*bool)

	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	tagList?: [...null | #Tag] @go(TagList,[]*Tag)
}

// +kubebuilder:skipversion
#DBInstanceAutomatedBackup: {
	allocatedStorage?:              null | int64  @go(AllocatedStorage,*int64)
	availabilityZone?:              null | string @go(AvailabilityZone,*string)
	backupRetentionPeriod?:         null | int64  @go(BackupRetentionPeriod,*int64)
	backupTarget?:                  null | string @go(BackupTarget,*string)
	dbInstanceARN?:                 null | string @go(DBInstanceARN,*string)
	dbInstanceAutomatedBackupsARN?: null | string @go(DBInstanceAutomatedBackupsARN,*string)
	dbInstanceAutomatedBackupsReplications?: [...null | #DBInstanceAutomatedBackupsReplication] @go(DBInstanceAutomatedBackupsReplications,[]*DBInstanceAutomatedBackupsReplication)
	dbInstanceIdentifier?:             null | string @go(DBInstanceIdentifier,*string)
	dbiResourceID?:                    null | string @go(DBIResourceID,*string)
	encrypted?:                        null | bool   @go(Encrypted,*bool)
	engine?:                           null | string @go(Engine,*string)
	engineVersion?:                    null | string @go(EngineVersion,*string)
	iamDatabaseAuthenticationEnabled?: null | bool   @go(IAMDatabaseAuthenticationEnabled,*bool)
	iops?:                             null | int64  @go(IOPS,*int64)
	kmsKeyID?:                         null | string @go(KMSKeyID,*string)
	licenseModel?:                     null | string @go(LicenseModel,*string)
	masterUsername?:                   null | string @go(MasterUsername,*string)
	optionGroupName?:                  null | string @go(OptionGroupName,*string)
	port?:                             null | int64  @go(Port,*int64)
	region?:                           null | string @go(Region,*string)
	status?:                           null | string @go(Status,*string)
	storageThroughput?:                null | int64  @go(StorageThroughput,*int64)
	storageType?:                      null | string @go(StorageType,*string)
	tdeCredentialARN?:                 null | string @go(TDECredentialARN,*string)
	timezone?:                         null | string @go(Timezone,*string)
	vpcID?:                            null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#DBInstanceAutomatedBackupsReplication: {
	dbInstanceAutomatedBackupsARN?: null | string @go(DBInstanceAutomatedBackupsARN,*string)
}

// +kubebuilder:skipversion
#DBInstanceRole: {
	featureName?: null | string @go(FeatureName,*string)
	roleARN?:     null | string @go(RoleARN,*string)
	status?:      null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#DBInstanceStatusInfo: {
	message?:    null | string @go(Message,*string)
	normal?:     null | bool   @go(Normal,*bool)
	status?:     null | string @go(Status,*string)
	statusType?: null | string @go(StatusType,*string)
}

// +kubebuilder:skipversion
#DBInstance_SDK: {
	activityStreamEngineNativeAuditFieldsIncluded?: null | bool   @go(ActivityStreamEngineNativeAuditFieldsIncluded,*bool)
	activityStreamKinesisStreamName?:               null | string @go(ActivityStreamKinesisStreamName,*string)
	activityStreamKMSKeyID?:                        null | string @go(ActivityStreamKMSKeyID,*string)
	activityStreamMode?:                            null | string @go(ActivityStreamMode,*string)
	activityStreamPolicyStatus?:                    null | string @go(ActivityStreamPolicyStatus,*string)
	activityStreamStatus?:                          null | string @go(ActivityStreamStatus,*string)
	allocatedStorage?:                              null | int64  @go(AllocatedStorage,*int64)
	associatedRoles?: [...null | #DBInstanceRole] @go(AssociatedRoles,[]*DBInstanceRole)
	autoMinorVersionUpgrade?:   null | bool   @go(AutoMinorVersionUpgrade,*bool)
	automationMode?:            null | string @go(AutomationMode,*string)
	availabilityZone?:          null | string @go(AvailabilityZone,*string)
	awsBackupRecoveryPointARN?: null | string @go(AWSBackupRecoveryPointARN,*string)
	backupRetentionPeriod?:     null | int64  @go(BackupRetentionPeriod,*int64)
	backupTarget?:              null | string @go(BackupTarget,*string)
	caCertificateIdentifier?:   null | string @go(CACertificateIdentifier,*string)

	// Returns the details of the DB instance’s server certificate.
	//
	// For more information, see Using SSL/TLS to encrypt a connection to a DB instance
	// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html)
	// in the Amazon RDS User Guide and Using SSL/TLS to encrypt a connection to
	// a DB cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html)
	// in the Amazon Aurora User Guide.
	certificateDetails?:       null | #CertificateDetails @go(CertificateDetails,*CertificateDetails)
	characterSetName?:         null | string              @go(CharacterSetName,*string)
	copyTagsToSnapshot?:       null | bool                @go(CopyTagsToSnapshot,*bool)
	customIAMInstanceProfile?: null | string              @go(CustomIAMInstanceProfile,*string)
	customerOwnedIPEnabled?:   null | bool                @go(CustomerOwnedIPEnabled,*bool)
	dbClusterIdentifier?:      null | string              @go(DBClusterIdentifier,*string)
	dbInstanceARN?:            null | string              @go(DBInstanceARN,*string)
	dbInstanceAutomatedBackupsReplications?: [...null | #DBInstanceAutomatedBackupsReplication] @go(DBInstanceAutomatedBackupsReplications,[]*DBInstanceAutomatedBackupsReplication)
	dbInstanceClass?:      null | string @go(DBInstanceClass,*string)
	dbInstanceIdentifier?: null | string @go(DBInstanceIdentifier,*string)
	dbInstanceStatus?:     null | string @go(DBInstanceStatus,*string)
	dbName?:               null | string @go(DBName,*string)
	dbParameterGroups?: [...null | #DBParameterGroupStatus_SDK] @go(DBParameterGroups,[]*DBParameterGroupStatus_SDK)
	dbSecurityGroups?: [...null | #DBSecurityGroupMembership] @go(DBSecurityGroups,[]*DBSecurityGroupMembership)

	// Contains the details of an Amazon RDS DB subnet group.
	//
	// This data type is used as a response element in the DescribeDBSubnetGroups
	// action.
	dbSubnetGroup?:      null | #DBSubnetGroup @go(DBSubnetGroup,*DBSubnetGroup)
	dbSystemID?:         null | string         @go(DBSystemID,*string)
	dbInstancePort?:     null | int64          @go(DBInstancePort,*int64)
	dbiResourceID?:      null | string         @go(DBIResourceID,*string)
	deletionProtection?: null | bool           @go(DeletionProtection,*bool)
	domainMemberships?: [...null | #DomainMembership] @go(DomainMemberships,[]*DomainMembership)
	enabledCloudwatchLogsExports?: [...null | string] @go(EnabledCloudwatchLogsExports,[]*string)

	// This data type represents the information you need to connect to an Amazon
	// RDS DB instance. This data type is used as a response element in the following
	// actions:
	//
	//    * CreateDBInstance
	//
	//    * DescribeDBInstances
	//
	//    * DeleteDBInstance
	//
	// For the data structure that represents Amazon Aurora DB cluster endpoints,
	// see DBClusterEndpoint.
	endpoint?:                         null | #Endpoint @go(Endpoint,*Endpoint)
	engine?:                           null | string    @go(Engine,*string)
	engineVersion?:                    null | string    @go(EngineVersion,*string)
	enhancedMonitoringResourceARN?:    null | string    @go(EnhancedMonitoringResourceARN,*string)
	iamDatabaseAuthenticationEnabled?: null | bool      @go(IAMDatabaseAuthenticationEnabled,*bool)
	iops?:                             null | int64     @go(IOPS,*int64)
	kmsKeyID?:                         null | string    @go(KMSKeyID,*string)
	licenseModel?:                     null | string    @go(LicenseModel,*string)

	// This data type represents the information you need to connect to an Amazon
	// RDS DB instance. This data type is used as a response element in the following
	// actions:
	//
	//    * CreateDBInstance
	//
	//    * DescribeDBInstances
	//
	//    * DeleteDBInstance
	//
	// For the data structure that represents Amazon Aurora DB cluster endpoints,
	// see DBClusterEndpoint.
	listenerEndpoint?: null | #Endpoint @go(ListenerEndpoint,*Endpoint)

	// Contains the secret managed by RDS in Amazon Web Services Secrets Manager
	// for the master user password.
	//
	// For more information, see Password management with Amazon Web Services Secrets
	// Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
	// in the Amazon RDS User Guide and Password management with Amazon Web Services
	// Secrets Manager (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html)
	// in the Amazon Aurora User Guide.
	masterUserSecret?:      null | #MasterUserSecret @go(MasterUserSecret,*MasterUserSecret)
	masterUsername?:        null | string            @go(MasterUsername,*string)
	maxAllocatedStorage?:   null | int64             @go(MaxAllocatedStorage,*int64)
	monitoringInterval?:    null | int64             @go(MonitoringInterval,*int64)
	monitoringRoleARN?:     null | string            @go(MonitoringRoleARN,*string)
	multiAZ?:               null | bool              @go(MultiAZ,*bool)
	ncharCharacterSetName?: null | string            @go(NcharCharacterSetName,*string)
	networkType?:           null | string            @go(NetworkType,*string)
	optionGroupMemberships?: [...null | #OptionGroupMembership] @go(OptionGroupMemberships,[]*OptionGroupMembership)

	// This data type is used as a response element in the ModifyDBInstance operation
	// and contains changes that will be applied during the next maintenance window.
	pendingModifiedValues?:              null | #PendingModifiedValues @go(PendingModifiedValues,*PendingModifiedValues)
	percentProgress?:                    null | string                 @go(PercentProgress,*string)
	performanceInsightsEnabled?:         null | bool                   @go(PerformanceInsightsEnabled,*bool)
	performanceInsightsKMSKeyID?:        null | string                 @go(PerformanceInsightsKMSKeyID,*string)
	performanceInsightsRetentionPeriod?: null | int64                  @go(PerformanceInsightsRetentionPeriod,*int64)
	preferredBackupWindow?:              null | string                 @go(PreferredBackupWindow,*string)
	preferredMaintenanceWindow?:         null | string                 @go(PreferredMaintenanceWindow,*string)
	processorFeatures?: [...null | #ProcessorFeature] @go(ProcessorFeatures,[]*ProcessorFeature)
	promotionTier?:      null | int64 @go(PromotionTier,*int64)
	publiclyAccessible?: null | bool  @go(PubliclyAccessible,*bool)
	readReplicaDBClusterIdentifiers?: [...null | string] @go(ReadReplicaDBClusterIdentifiers,[]*string)
	readReplicaDBInstanceIdentifiers?: [...null | string] @go(ReadReplicaDBInstanceIdentifiers,[]*string)
	readReplicaSourceDBClusterIdentifier?:  null | string @go(ReadReplicaSourceDBClusterIdentifier,*string)
	readReplicaSourceDBInstanceIdentifier?: null | string @go(ReadReplicaSourceDBInstanceIdentifier,*string)
	replicaMode?:                           null | string @go(ReplicaMode,*string)
	secondaryAvailabilityZone?:             null | string @go(SecondaryAvailabilityZone,*string)
	statusInfos?: [...null | #DBInstanceStatusInfo] @go(StatusInfos,[]*DBInstanceStatusInfo)
	storageEncrypted?:  null | bool   @go(StorageEncrypted,*bool)
	storageThroughput?: null | int64  @go(StorageThroughput,*int64)
	storageType?:       null | string @go(StorageType,*string)

	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	tagList?: [...null | #Tag] @go(TagList,[]*Tag)
	tdeCredentialARN?: null | string @go(TDECredentialARN,*string)
	timezone?:         null | string @go(Timezone,*string)
	vpcSecurityGroups?: [...null | #VPCSecurityGroupMembership] @go(VPCSecurityGroups,[]*VPCSecurityGroupMembership)
}

// +kubebuilder:skipversion
#DBParameterGroupStatus_SDK: {
	dbParameterGroupName?: null | string @go(DBParameterGroupName,*string)
	parameterApplyStatus?: null | string @go(ParameterApplyStatus,*string)
}

// +kubebuilder:skipversion
#DBParameterGroup_SDK: {
	dbParameterGroupARN?:    null | string @go(DBParameterGroupARN,*string)
	dbParameterGroupFamily?: null | string @go(DBParameterGroupFamily,*string)
	dbParameterGroupName?:   null | string @go(DBParameterGroupName,*string)
	description?:            null | string @go(Description,*string)
}

// +kubebuilder:skipversion
#DBProxy: {
	dbProxyARN?:        null | string @go(DBProxyARN,*string)
	dbProxyName?:       null | string @go(DBProxyName,*string)
	debugLogging?:      null | bool   @go(DebugLogging,*bool)
	endpoint?:          null | string @go(Endpoint,*string)
	engineFamily?:      null | string @go(EngineFamily,*string)
	idleClientTimeout?: null | int64  @go(IdleClientTimeout,*int64)
	requireTLS?:        null | bool   @go(RequireTLS,*bool)
	roleARN?:           null | string @go(RoleARN,*string)
	vpcID?:             null | string @go(VPCID,*string)
	vpcSecurityGroupIDs?: [...null | string] @go(VPCSecurityGroupIDs,[]*string)
	vpcSubnetIDs?: [...null | string] @go(VPCSubnetIDs,[]*string)
}

// +kubebuilder:skipversion
#DBProxyEndpoint: {
	dbProxyEndpointARN?:  null | string @go(DBProxyEndpointARN,*string)
	dbProxyEndpointName?: null | string @go(DBProxyEndpointName,*string)
	dbProxyName?:         null | string @go(DBProxyName,*string)
	endpoint?:            null | string @go(Endpoint,*string)
	isDefault?:           null | bool   @go(IsDefault,*bool)
	vpcID?:               null | string @go(VPCID,*string)
	vpcSecurityGroupIDs?: [...null | string] @go(VPCSecurityGroupIDs,[]*string)
	vpcSubnetIDs?: [...null | string] @go(VPCSubnetIDs,[]*string)
}

// +kubebuilder:skipversion
#DBProxyTarget: {
	endpoint?:         null | string @go(Endpoint,*string)
	port?:             null | int64  @go(Port,*int64)
	rdsResourceID?:    null | string @go(RdsResourceID,*string)
	targetARN?:        null | string @go(TargetARN,*string)
	trackedClusterID?: null | string @go(TrackedClusterID,*string)
}

// +kubebuilder:skipversion
#DBProxyTargetGroup: {
	dbProxyName?:     null | string @go(DBProxyName,*string)
	isDefault?:       null | bool   @go(IsDefault,*bool)
	status?:          null | string @go(Status,*string)
	targetGroupARN?:  null | string @go(TargetGroupARN,*string)
	targetGroupName?: null | string @go(TargetGroupName,*string)
}

// +kubebuilder:skipversion
#DBSecurityGroup: {
	dbSecurityGroupARN?:         null | string @go(DBSecurityGroupARN,*string)
	dbSecurityGroupDescription?: null | string @go(DBSecurityGroupDescription,*string)
	dbSecurityGroupName?:        null | string @go(DBSecurityGroupName,*string)
	ownerID?:                    null | string @go(OwnerID,*string)
	vpcID?:                      null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#DBSecurityGroupMembership: {
	dbSecurityGroupName?: null | string @go(DBSecurityGroupName,*string)
	status?:              null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#DBSnapshot: {
	allocatedStorage?:                 null | int64  @go(AllocatedStorage,*int64)
	availabilityZone?:                 null | string @go(AvailabilityZone,*string)
	dbInstanceIdentifier?:             null | string @go(DBInstanceIdentifier,*string)
	dbSnapshotARN?:                    null | string @go(DBSnapshotARN,*string)
	dbSnapshotIdentifier?:             null | string @go(DBSnapshotIdentifier,*string)
	dbSystemID?:                       null | string @go(DBSystemID,*string)
	dbiResourceID?:                    null | string @go(DBIResourceID,*string)
	encrypted?:                        null | bool   @go(Encrypted,*bool)
	engine?:                           null | string @go(Engine,*string)
	engineVersion?:                    null | string @go(EngineVersion,*string)
	iamDatabaseAuthenticationEnabled?: null | bool   @go(IAMDatabaseAuthenticationEnabled,*bool)
	iops?:                             null | int64  @go(IOPS,*int64)
	kmsKeyID?:                         null | string @go(KMSKeyID,*string)
	licenseModel?:                     null | string @go(LicenseModel,*string)
	masterUsername?:                   null | string @go(MasterUsername,*string)
	optionGroupName?:                  null | string @go(OptionGroupName,*string)
	percentProgress?:                  null | int64  @go(PercentProgress,*int64)
	port?:                             null | int64  @go(Port,*int64)
	processorFeatures?: [...null | #ProcessorFeature] @go(ProcessorFeatures,[]*ProcessorFeature)
	snapshotTarget?:             null | string @go(SnapshotTarget,*string)
	snapshotType?:               null | string @go(SnapshotType,*string)
	sourceDBSnapshotIdentifier?: null | string @go(SourceDBSnapshotIdentifier,*string)
	sourceRegion?:               null | string @go(SourceRegion,*string)
	status?:                     null | string @go(Status,*string)
	storageThroughput?:          null | int64  @go(StorageThroughput,*int64)
	storageType?:                null | string @go(StorageType,*string)

	// A list of tags. For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
	// in the Amazon RDS User Guide.
	tagList?: [...null | #Tag] @go(TagList,[]*Tag)
	tdeCredentialARN?: null | string @go(TDECredentialARN,*string)
	timezone?:         null | string @go(Timezone,*string)
	vpcID?:            null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#DBSnapshotAttribute: {
	attributeName?: null | string @go(AttributeName,*string)
}

// +kubebuilder:skipversion
#DBSnapshotAttributesResult: {
	dbSnapshotIdentifier?: null | string @go(DBSnapshotIdentifier,*string)
}

// +kubebuilder:skipversion
#DBSubnetGroup: {
	dbSubnetGroupARN?:         null | string @go(DBSubnetGroupARN,*string)
	dbSubnetGroupDescription?: null | string @go(DBSubnetGroupDescription,*string)
	dbSubnetGroupName?:        null | string @go(DBSubnetGroupName,*string)
	subnetGroupStatus?:        null | string @go(SubnetGroupStatus,*string)
	subnets?: [...null | #Subnet] @go(Subnets,[]*Subnet)
	supportedNetworkTypes?: [...null | string] @go(SupportedNetworkTypes,[]*string)
	vpcID?: null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#DescribeDBLogFilesDetails: {
	logFileName?: null | string @go(LogFileName,*string)
}

// +kubebuilder:skipversion
#DomainMembership: {
	authSecretARN?: null | string @go(AuthSecretARN,*string)
	dnsIPs?: [...null | string] @go(DNSIPs,[]*string)
	domain?:      null | string @go(Domain,*string)
	fQDN?:        null | string @go(FQDN,*string)
	iamRoleName?: null | string @go(IAMRoleName,*string)
	oU?:          null | string @go(OU,*string)
	status?:      null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#EC2SecurityGroup: {
	ec2SecurityGroupID?:      null | string @go(EC2SecurityGroupID,*string)
	ec2SecurityGroupName?:    null | string @go(EC2SecurityGroupName,*string)
	ec2SecurityGroupOwnerID?: null | string @go(EC2SecurityGroupOwnerID,*string)
	status?:                  null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#Endpoint: {
	address?:      null | string @go(Address,*string)
	hostedZoneID?: null | string @go(HostedZoneID,*string)
	port?:         null | int64  @go(Port,*int64)
}

// +kubebuilder:skipversion
#EngineDefaults: {
	dbParameterGroupFamily?: null | string @go(DBParameterGroupFamily,*string)
	marker?:                 null | string @go(Marker,*string)
	parameters?: [...null | #Parameter] @go(Parameters,[]*Parameter)
}

// +kubebuilder:skipversion
#Event: {
	message?:          null | string @go(Message,*string)
	sourceARN?:        null | string @go(SourceARN,*string)
	sourceIdentifier?: null | string @go(SourceIdentifier,*string)
}

// +kubebuilder:skipversion
#EventCategoriesMap: {
	sourceType?: null | string @go(SourceType,*string)
}

// +kubebuilder:skipversion
#EventSubscription: {
	custSubscriptionID?:       null | string @go(CustSubscriptionID,*string)
	customerAWSID?:            null | string @go(CustomerAWSID,*string)
	enabled?:                  null | bool   @go(Enabled,*bool)
	eventSubscriptionARN?:     null | string @go(EventSubscriptionARN,*string)
	snsTopicARN?:              null | string @go(SNSTopicARN,*string)
	sourceType?:               null | string @go(SourceType,*string)
	status?:                   null | string @go(Status,*string)
	subscriptionCreationTime?: null | string @go(SubscriptionCreationTime,*string)
}

// +kubebuilder:skipversion
#ExportTask: {
	exportOnly?: [...null | string] @go(ExportOnly,[]*string)
	exportTaskIdentifier?:   null | string @go(ExportTaskIdentifier,*string)
	failureCause?:           null | string @go(FailureCause,*string)
	iamRoleARN?:             null | string @go(IAMRoleARN,*string)
	kmsKeyID?:               null | string @go(KMSKeyID,*string)
	percentProgress?:        null | int64  @go(PercentProgress,*int64)
	s3Bucket?:               null | string @go(S3Bucket,*string)
	s3Prefix?:               null | string @go(S3Prefix,*string)
	sourceARN?:              null | string @go(SourceARN,*string)
	status?:                 null | string @go(Status,*string)
	totalExtractedDataInGB?: null | int64  @go(TotalExtractedDataInGB,*int64)
	warningMessage?:         null | string @go(WarningMessage,*string)
}

// +kubebuilder:skipversion
#FailoverState: {
	fromDBClusterARN?:  null | string @go(FromDBClusterARN,*string)
	isDataLossAllowed?: null | bool   @go(IsDataLossAllowed,*bool)
	status?:            null | string @go(Status,*string)
	toDBClusterARN?:    null | string @go(ToDBClusterARN,*string)
}

// +kubebuilder:skipversion
#Filter: {
	name?: null | string @go(Name,*string)
	values?: [...null | string] @go(Values,[]*string)
}

// +kubebuilder:skipversion
#GlobalClusterMember: {
	dbClusterARN?:                null | string @go(DBClusterARN,*string)
	globalWriteForwardingStatus?: null | string @go(GlobalWriteForwardingStatus,*string)
	isWriter?:                    null | bool   @go(IsWriter,*bool)
	readers?: [...null | string] @go(Readers,[]*string)
	synchronizationStatus?: null | string @go(SynchronizationStatus,*string)
}

// +kubebuilder:skipversion
#GlobalCluster_SDK: {
	databaseName?:       null | string @go(DatabaseName,*string)
	deletionProtection?: null | bool   @go(DeletionProtection,*bool)
	engine?:             null | string @go(Engine,*string)
	engineVersion?:      null | string @go(EngineVersion,*string)

	// Contains the state of scheduled or in-process operations on a global cluster
	// (Aurora global database). This data type is empty unless a switchover or
	// failover operation is scheduled or is in progress on the Aurora global database.
	failoverState?:           null | #FailoverState @go(FailoverState,*FailoverState)
	globalClusterARN?:        null | string         @go(GlobalClusterARN,*string)
	globalClusterIdentifier?: null | string         @go(GlobalClusterIdentifier,*string)
	globalClusterMembers?: [...null | #GlobalClusterMember] @go(GlobalClusterMembers,[]*GlobalClusterMember)
	globalClusterResourceID?: null | string @go(GlobalClusterResourceID,*string)
	status?:                  null | string @go(Status,*string)
	storageEncrypted?:        null | bool   @go(StorageEncrypted,*bool)
}

// +kubebuilder:skipversion
#IPRange: {
	cidrIP?: null | string @go(CIDRIP,*string)
	status?: null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#MasterUserSecret: {
	kmsKeyID?:     null | string @go(KMSKeyID,*string)
	secretARN?:    null | string @go(SecretARN,*string)
	secretStatus?: null | string @go(SecretStatus,*string)
}

// +kubebuilder:skipversion
#MinimumEngineVersionPerAllowedValue: {
	allowedValue?:         null | string @go(AllowedValue,*string)
	minimumEngineVersion?: null | string @go(MinimumEngineVersion,*string)
}

// +kubebuilder:skipversion
#Option: {
	dbSecurityGroupMemberships?: [...null | #DBSecurityGroupMembership] @go(DBSecurityGroupMemberships,[]*DBSecurityGroupMembership)
	optionDescription?: null | string @go(OptionDescription,*string)
	optionName?:        null | string @go(OptionName,*string)
	optionSettings?: [...null | #OptionSetting] @go(OptionSettings,[]*OptionSetting)
	optionVersion?: null | string @go(OptionVersion,*string)
	permanent?:     null | bool   @go(Permanent,*bool)
	persistent?:    null | bool   @go(Persistent,*bool)
	port?:          null | int64  @go(Port,*int64)
	vpcSecurityGroupMemberships?: [...null | #VPCSecurityGroupMembership] @go(VPCSecurityGroupMemberships,[]*VPCSecurityGroupMembership)
}

// +kubebuilder:skipversion
#OptionConfiguration: {
	dbSecurityGroupMemberships?: [...null | string] @go(DBSecurityGroupMemberships,[]*string)
	optionName?: null | string @go(OptionName,*string)
	optionSettings?: [...null | #OptionSetting] @go(OptionSettings,[]*OptionSetting)
	optionVersion?: null | string @go(OptionVersion,*string)
	port?:          null | int64  @go(Port,*int64)
	vpcSecurityGroupMemberships?: [...null | string] @go(VPCSecurityGroupMemberships,[]*string)
}

// +kubebuilder:skipversion
#OptionGroupMembership: {
	optionGroupName?: null | string @go(OptionGroupName,*string)
	status?:          null | string @go(Status,*string)
}

// +kubebuilder:skipversion
#OptionGroupOption: {
	copyableCrossAccount?:                  null | bool   @go(CopyableCrossAccount,*bool)
	defaultPort?:                           null | int64  @go(DefaultPort,*int64)
	description?:                           null | string @go(Description,*string)
	engineName?:                            null | string @go(EngineName,*string)
	majorEngineVersion?:                    null | string @go(MajorEngineVersion,*string)
	minimumRequiredMinorEngineVersion?:     null | string @go(MinimumRequiredMinorEngineVersion,*string)
	name?:                                  null | string @go(Name,*string)
	permanent?:                             null | bool   @go(Permanent,*bool)
	persistent?:                            null | bool   @go(Persistent,*bool)
	portRequired?:                          null | bool   @go(PortRequired,*bool)
	requiresAutoMinorEngineVersionUpgrade?: null | bool   @go(RequiresAutoMinorEngineVersionUpgrade,*bool)
	supportsOptionVersionDowngrade?:        null | bool   @go(SupportsOptionVersionDowngrade,*bool)
	vpcOnly?:                               null | bool   @go(VPCOnly,*bool)
}

// +kubebuilder:skipversion
#OptionGroupOptionSetting: {
	allowedValues?:      null | string @go(AllowedValues,*string)
	applyType?:          null | string @go(ApplyType,*string)
	defaultValue?:       null | string @go(DefaultValue,*string)
	isModifiable?:       null | bool   @go(IsModifiable,*bool)
	isRequired?:         null | bool   @go(IsRequired,*bool)
	settingDescription?: null | string @go(SettingDescription,*string)
	settingName?:        null | string @go(SettingName,*string)
}

// +kubebuilder:skipversion
#OptionGroup_SDK: {
	allowsVPCAndNonVPCInstanceMemberships?: null | bool   @go(AllowsVPCAndNonVPCInstanceMemberships,*bool)
	engineName?:                            null | string @go(EngineName,*string)
	majorEngineVersion?:                    null | string @go(MajorEngineVersion,*string)
	optionGroupARN?:                        null | string @go(OptionGroupARN,*string)
	optionGroupDescription?:                null | string @go(OptionGroupDescription,*string)
	optionGroupName?:                       null | string @go(OptionGroupName,*string)
	options?: [...null | #Option] @go(Options,[]*Option)
	sourceAccountID?:   null | string @go(SourceAccountID,*string)
	sourceOptionGroup?: null | string @go(SourceOptionGroup,*string)
	vpcID?:             null | string @go(VPCID,*string)
}

// +kubebuilder:skipversion
#OptionSetting: {
	allowedValues?: null | string @go(AllowedValues,*string)
	applyType?:     null | string @go(ApplyType,*string)
	dataType?:      null | string @go(DataType,*string)
	defaultValue?:  null | string @go(DefaultValue,*string)
	description?:   null | string @go(Description,*string)
	isCollection?:  null | bool   @go(IsCollection,*bool)
	isModifiable?:  null | bool   @go(IsModifiable,*bool)
	name?:          null | string @go(Name,*string)
	value?:         null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#OptionVersion: {
	isDefault?: null | bool   @go(IsDefault,*bool)
	version?:   null | string @go(Version,*string)
}

// +kubebuilder:skipversion
#OrderableDBInstanceOption: {
	availabilityZoneGroup?:             null | string  @go(AvailabilityZoneGroup,*string)
	dbInstanceClass?:                   null | string  @go(DBInstanceClass,*string)
	engine?:                            null | string  @go(Engine,*string)
	engineVersion?:                     null | string  @go(EngineVersion,*string)
	licenseModel?:                      null | string  @go(LicenseModel,*string)
	maxIOPSPerDBInstance?:              null | int64   @go(MaxIOPSPerDBInstance,*int64)
	maxIOPSPerGib?:                     null | float64 @go(MaxIOPSPerGib,*float64)
	maxStorageSize?:                    null | int64   @go(MaxStorageSize,*int64)
	maxStorageThroughputPerDBInstance?: null | int64   @go(MaxStorageThroughputPerDBInstance,*int64)
	maxStorageThroughputPerIOPS?:       null | float64 @go(MaxStorageThroughputPerIOPS,*float64)
	minIOPSPerDBInstance?:              null | int64   @go(MinIOPSPerDBInstance,*int64)
	minIOPSPerGib?:                     null | float64 @go(MinIOPSPerGib,*float64)
	minStorageSize?:                    null | int64   @go(MinStorageSize,*int64)
	minStorageThroughputPerDBInstance?: null | int64   @go(MinStorageThroughputPerDBInstance,*int64)
	minStorageThroughputPerIOPS?:       null | float64 @go(MinStorageThroughputPerIOPS,*float64)
	multiAZCapable?:                    null | bool    @go(MultiAZCapable,*bool)
	outpostCapable?:                    null | bool    @go(OutpostCapable,*bool)
	readReplicaCapable?:                null | bool    @go(ReadReplicaCapable,*bool)
	storageType?:                       null | string  @go(StorageType,*string)
	supportedEngineModes?: [...null | string] @go(SupportedEngineModes,[]*string)
	supportedNetworkTypes?: [...null | string] @go(SupportedNetworkTypes,[]*string)
	supportsClusters?:                  null | bool @go(SupportsClusters,*bool)
	supportsEnhancedMonitoring?:        null | bool @go(SupportsEnhancedMonitoring,*bool)
	supportsGlobalDatabases?:           null | bool @go(SupportsGlobalDatabases,*bool)
	supportsIAMDatabaseAuthentication?: null | bool @go(SupportsIAMDatabaseAuthentication,*bool)
	supportsIOPS?:                      null | bool @go(SupportsIOPS,*bool)
	supportsKerberosAuthentication?:    null | bool @go(SupportsKerberosAuthentication,*bool)
	supportsPerformanceInsights?:       null | bool @go(SupportsPerformanceInsights,*bool)
	supportsStorageAutoscaling?:        null | bool @go(SupportsStorageAutoscaling,*bool)
	supportsStorageEncryption?:         null | bool @go(SupportsStorageEncryption,*bool)
	supportsStorageThroughput?:         null | bool @go(SupportsStorageThroughput,*bool)
	vpc?:                               null | bool @go(VPC,*bool)
}

// +kubebuilder:skipversion
#Outpost: {
	arn?: null | string @go(ARN,*string)
}

// +kubebuilder:skipversion
#Parameter: {
	allowedValues?:        null | string @go(AllowedValues,*string)
	applyMethod?:          null | string @go(ApplyMethod,*string)
	applyType?:            null | string @go(ApplyType,*string)
	dataType?:             null | string @go(DataType,*string)
	description?:          null | string @go(Description,*string)
	isModifiable?:         null | bool   @go(IsModifiable,*bool)
	minimumEngineVersion?: null | string @go(MinimumEngineVersion,*string)
	parameterName?:        null | string @go(ParameterName,*string)
	parameterValue?:       null | string @go(ParameterValue,*string)
	source?:               null | string @go(Source,*string)
	supportedEngineModes?: [...null | string] @go(SupportedEngineModes,[]*string)
}

// +kubebuilder:skipversion
#PendingCloudwatchLogsExports: {
	logTypesToDisable?: [...null | string] @go(LogTypesToDisable,[]*string)
	logTypesToEnable?: [...null | string] @go(LogTypesToEnable,[]*string)
}

// +kubebuilder:skipversion
#PendingMaintenanceAction: {
	action?:      null | string @go(Action,*string)
	description?: null | string @go(Description,*string)
	optInStatus?: null | string @go(OptInStatus,*string)
}

// +kubebuilder:skipversion
#PendingModifiedValues: {
	allocatedStorage?:                 null | int64  @go(AllocatedStorage,*int64)
	automationMode?:                   null | string @go(AutomationMode,*string)
	backupRetentionPeriod?:            null | int64  @go(BackupRetentionPeriod,*int64)
	caCertificateIdentifier?:          null | string @go(CACertificateIdentifier,*string)
	dbInstanceClass?:                  null | string @go(DBInstanceClass,*string)
	dbInstanceIdentifier?:             null | string @go(DBInstanceIdentifier,*string)
	dbSubnetGroupName?:                null | string @go(DBSubnetGroupName,*string)
	engine?:                           null | string @go(Engine,*string)
	engineVersion?:                    null | string @go(EngineVersion,*string)
	iamDatabaseAuthenticationEnabled?: null | bool   @go(IAMDatabaseAuthenticationEnabled,*bool)
	iops?:                             null | int64  @go(IOPS,*int64)
	licenseModel?:                     null | string @go(LicenseModel,*string)
	masterUserPassword?:               null | string @go(MasterUserPassword,*string)
	multiAZ?:                          null | bool   @go(MultiAZ,*bool)

	// A list of the log types whose configuration is still pending. In other words,
	// these log types are in the process of being activated or deactivated.
	pendingCloudwatchLogsExports?: null | #PendingCloudwatchLogsExports @go(PendingCloudwatchLogsExports,*PendingCloudwatchLogsExports)
	port?:                         null | int64                         @go(Port,*int64)
	processorFeatures?: [...null | #ProcessorFeature] @go(ProcessorFeatures,[]*ProcessorFeature)
	storageThroughput?: null | int64  @go(StorageThroughput,*int64)
	storageType?:       null | string @go(StorageType,*string)
}

// +kubebuilder:skipversion
#ProcessorFeature: {
	name?:  null | string @go(Name,*string)
	value?: null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#Range: {
	from?: null | int64 @go(From,*int64)
	step?: null | int64 @go(Step,*int64)
	to?:   null | int64 @go(To,*int64)
}

// +kubebuilder:skipversion
#RecurringCharge: {
	recurringChargeFrequency?: null | string @go(RecurringChargeFrequency,*string)
}

// +kubebuilder:skipversion
#ReservedDBInstance: {
	currencyCode?:                  null | string @go(CurrencyCode,*string)
	dbInstanceClass?:               null | string @go(DBInstanceClass,*string)
	dbInstanceCount?:               null | int64  @go(DBInstanceCount,*int64)
	duration?:                      null | int64  @go(Duration,*int64)
	leaseID?:                       null | string @go(LeaseID,*string)
	multiAZ?:                       null | bool   @go(MultiAZ,*bool)
	offeringType?:                  null | string @go(OfferingType,*string)
	productDescription?:            null | string @go(ProductDescription,*string)
	reservedDBInstanceARN?:         null | string @go(ReservedDBInstanceARN,*string)
	reservedDBInstanceID?:          null | string @go(ReservedDBInstanceID,*string)
	reservedDBInstancesOfferingID?: null | string @go(ReservedDBInstancesOfferingID,*string)
	state?:                         null | string @go(State,*string)
}

// +kubebuilder:skipversion
#ReservedDBInstancesOffering: {
	currencyCode?:                  null | string @go(CurrencyCode,*string)
	dbInstanceClass?:               null | string @go(DBInstanceClass,*string)
	duration?:                      null | int64  @go(Duration,*int64)
	multiAZ?:                       null | bool   @go(MultiAZ,*bool)
	offeringType?:                  null | string @go(OfferingType,*string)
	productDescription?:            null | string @go(ProductDescription,*string)
	reservedDBInstancesOfferingID?: null | string @go(ReservedDBInstancesOfferingID,*string)
}

// +kubebuilder:skipversion
#ResourcePendingMaintenanceActions: {
	resourceIdentifier?: null | string @go(ResourceIdentifier,*string)
}

// +kubebuilder:skipversion
#ScalingConfiguration: {
	autoPause?:             null | bool   @go(AutoPause,*bool)
	maxCapacity?:           null | int64  @go(MaxCapacity,*int64)
	minCapacity?:           null | int64  @go(MinCapacity,*int64)
	secondsBeforeTimeout?:  null | int64  @go(SecondsBeforeTimeout,*int64)
	secondsUntilAutoPause?: null | int64  @go(SecondsUntilAutoPause,*int64)
	timeoutAction?:         null | string @go(TimeoutAction,*string)
}

// +kubebuilder:skipversion
#ScalingConfigurationInfo: {
	autoPause?:             null | bool   @go(AutoPause,*bool)
	maxCapacity?:           null | int64  @go(MaxCapacity,*int64)
	minCapacity?:           null | int64  @go(MinCapacity,*int64)
	secondsBeforeTimeout?:  null | int64  @go(SecondsBeforeTimeout,*int64)
	secondsUntilAutoPause?: null | int64  @go(SecondsUntilAutoPause,*int64)
	timeoutAction?:         null | string @go(TimeoutAction,*string)
}

// +kubebuilder:skipversion
#ServerlessV2ScalingConfiguration: {
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)
	minCapacity?: null | float64 @go(MinCapacity,*float64)
}

// +kubebuilder:skipversion
#ServerlessV2ScalingConfigurationInfo: {
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)
	minCapacity?: null | float64 @go(MinCapacity,*float64)
}

// +kubebuilder:skipversion
#SourceRegion: {
	endpoint?:                                      null | string @go(Endpoint,*string)
	regionName?:                                    null | string @go(RegionName,*string)
	status?:                                        null | string @go(Status,*string)
	supportsDBInstanceAutomatedBackupsReplication?: null | bool   @go(SupportsDBInstanceAutomatedBackupsReplication,*bool)
}

// +kubebuilder:skipversion
#Subnet: {
	// Contains Availability Zone information.
	//
	// This data type is used as an element in the OrderableDBInstanceOption data
	// type.
	subnetAvailabilityZone?: null | #AvailabilityZone @go(SubnetAvailabilityZone,*AvailabilityZone)
	subnetIdentifier?:       null | string            @go(SubnetIdentifier,*string)

	// A data type that represents an Outpost.
	//
	// For more information about RDS on Outposts, see Amazon RDS on Amazon Web
	// Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
	// in the Amazon RDS User Guide.
	subnetOutpost?: null | #Outpost @go(SubnetOutpost,*Outpost)
	subnetStatus?:  null | string   @go(SubnetStatus,*string)
}

// +kubebuilder:skipversion
#Tag: {
	key?:   null | string @go(Key,*string)
	value?: null | string @go(Value,*string)
}

// +kubebuilder:skipversion
#TargetHealth: {
	description?: null | string @go(Description,*string)
}

// +kubebuilder:skipversion
#Timezone: {
	timezoneName?: null | string @go(TimezoneName,*string)
}

// +kubebuilder:skipversion
#UpgradeTarget: {
	autoUpgrade?:           null | bool   @go(AutoUpgrade,*bool)
	description?:           null | string @go(Description,*string)
	engine?:                null | string @go(Engine,*string)
	engineVersion?:         null | string @go(EngineVersion,*string)
	isMajorVersionUpgrade?: null | bool   @go(IsMajorVersionUpgrade,*bool)
	supportedEngineModes?: [...null | string] @go(SupportedEngineModes,[]*string)
	supportsBabelfish?:            null | bool @go(SupportsBabelfish,*bool)
	supportsGlobalDatabases?:      null | bool @go(SupportsGlobalDatabases,*bool)
	supportsLocalWriteForwarding?: null | bool @go(SupportsLocalWriteForwarding,*bool)
	supportsParallelQuery?:        null | bool @go(SupportsParallelQuery,*bool)
}

// +kubebuilder:skipversion
#UserAuthConfig: {
	description?: null | string @go(Description,*string)
	secretARN?:   null | string @go(SecretARN,*string)
	userName?:    null | string @go(UserName,*string)
}

// +kubebuilder:skipversion
#UserAuthConfigInfo: {
	description?: null | string @go(Description,*string)
	secretARN?:   null | string @go(SecretARN,*string)
	userName?:    null | string @go(UserName,*string)
}

// +kubebuilder:skipversion
#VPCSecurityGroupMembership: {
	status?:             null | string @go(Status,*string)
	vpcSecurityGroupID?: null | string @go(VPCSecurityGroupID,*string)
}

// +kubebuilder:skipversion
#ValidStorageOptions: {
	storageType?:                null | string @go(StorageType,*string)
	supportsStorageAutoscaling?: null | bool   @go(SupportsStorageAutoscaling,*bool)
}
