// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/rds/v1alpha1

package v1alpha1

// DBInstanceParameters defines the desired state of DBInstance
#DBInstanceParameters: {
	// Region is which region the DBInstance will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The amount of storage in gibibytes (GiB) to allocate for the DB instance.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. Aurora cluster
	// volumes automatically grow as the amount of data in your database increases,
	// though you are only charged for the space that you use in an Aurora cluster
	// volume.
	//
	// Amazon RDS Custom
	//
	// Constraints to the amount of storage for each storage type are the following:
	//
	//    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 40
	//    to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.
	//
	//    * Provisioned IOPS storage (io1): Must be an integer from 40 to 65536
	//    for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.
	//
	// RDS for MariaDB
	//
	// Constraints to the amount of storage for each storage type are the following:
	//
	//    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
	//    to 65536.
	//
	//    * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.
	//
	//    * Magnetic storage (standard): Must be an integer from 5 to 3072.
	//
	// RDS for MySQL
	//
	// Constraints to the amount of storage for each storage type are the following:
	//
	//    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
	//    to 65536.
	//
	//    * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.
	//
	//    * Magnetic storage (standard): Must be an integer from 5 to 3072.
	//
	// RDS for Oracle
	//
	// Constraints to the amount of storage for each storage type are the following:
	//
	//    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
	//    to 65536.
	//
	//    * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.
	//
	//    * Magnetic storage (standard): Must be an integer from 10 to 3072.
	//
	// RDS for PostgreSQL
	//
	// Constraints to the amount of storage for each storage type are the following:
	//
	//    * General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
	//    to 65536.
	//
	//    * Provisioned IOPS storage (io1): Must be an integer from 100 to 65536.
	//
	//    * Magnetic storage (standard): Must be an integer from 5 to 3072.
	//
	// RDS for SQL Server
	//
	// Constraints to the amount of storage for each storage type are the following:
	//
	//    * General Purpose (SSD) storage (gp2, gp3): Enterprise and Standard editions:
	//    Must be an integer from 20 to 16384. Web and Express editions: Must be
	//    an integer from 20 to 16384.
	//
	//    * Provisioned IOPS storage (io1): Enterprise and Standard editions: Must
	//    be an integer from 100 to 16384. Web and Express editions: Must be an
	//    integer from 100 to 16384.
	//
	//    * Magnetic storage (standard): Enterprise and Standard editions: Must
	//    be an integer from 20 to 1024. Web and Express editions: Must be an integer
	//    from 20 to 1024.
	allocatedStorage?: null | int64 @go(AllocatedStorage,*int64)

	// Specifies whether major version upgrades are allowed. Changing this parameter
	// doesn't result in an outage and the change is asynchronously applied as soon
	// as possible.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	//
	// Constraints:
	//
	//    * Major version upgrades must be allowed when specifying a value for the
	//    EngineVersion parameter that's a different major version than the DB instance's
	//    current version.
	allowMajorVersionUpgrade?: null | bool @go(AllowMajorVersionUpgrade,*bool)

	// Specifies whether minor engine upgrades are applied automatically to the
	// DB instance during the maintenance window. By default, minor engine upgrades
	// are applied automatically.
	//
	// If you create an RDS Custom DB instance, you must set AutoMinorVersionUpgrade
	// to false.
	autoMinorVersionUpgrade?: null | bool @go(AutoMinorVersionUpgrade,*bool)

	// The Availability Zone (AZ) where the database will be created. For information
	// on Amazon Web Services Regions and Availability Zones, see Regions and Availability
	// Zones (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
	//
	// For Amazon Aurora, each Aurora DB cluster hosts copies of its storage in
	// three separate Availability Zones. Specify one of these Availability Zones.
	// Aurora automatically chooses an appropriate Availability Zone if you don't
	// specify one.
	//
	// Default: A random, system-chosen Availability Zone in the endpoint's Amazon
	// Web Services Region.
	//
	// Constraints:
	//
	//    * The AvailabilityZone parameter can't be specified if the DB instance
	//    is a Multi-AZ deployment.
	//
	//    * The specified Availability Zone must be in the same Amazon Web Services
	//    Region as the current endpoint.
	//
	// Example: us-east-1d
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The number of days for which automated backups are retained. Setting this
	// parameter to a positive number enables backups. Setting this parameter to
	// 0 disables automated backups.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. The retention period
	// for automated backups is managed by the DB cluster.
	//
	// Default: 1
	//
	// Constraints:
	//
	//    * Must be a value from 0 to 35.
	//
	//    * Can't be set to 0 if the DB instance is a source to read replicas.
	//
	//    * Can't be set to 0 for an RDS Custom for Oracle DB instance.
	backupRetentionPeriod?: null | int64 @go(BackupRetentionPeriod,*int64)

	// The location for storing automated backups and manual snapshots.
	//
	// Valie Values:
	//
	//    * outposts (Amazon Web Services Outposts)
	//
	//    * region (Amazon Web Services Region)
	//
	// Default: region
	//
	// For more information, see Working with Amazon RDS on Amazon Web Services
	// Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
	// in the Amazon RDS User Guide.
	backupTarget?: null | string @go(BackupTarget,*string)

	// The CA certificate identifier to use for the DB instance's server certificate.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	//
	// For more information, see Using SSL/TLS to encrypt a connection to a DB instance
	// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html)
	// in the Amazon RDS User Guide and Using SSL/TLS to encrypt a connection to
	// a DB cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html)
	// in the Amazon Aurora User Guide.
	caCertificateIdentifier?: null | string @go(CACertificateIdentifier,*string)

	// For supported engines, the character set (CharacterSet) to associate the
	// DB instance with.
	//
	// This setting doesn't apply to the following DB instances:
	//
	//    * Amazon Aurora - The character set is managed by the DB cluster. For
	//    more information, see CreateDBCluster.
	//
	//    * RDS Custom - However, if you need to change the character set, you can
	//    change it on the database itself.
	characterSetName?: null | string @go(CharacterSetName,*string)

	// Specifies whether to copy tags from the DB instance to snapshots of the DB
	// instance. By default, tags are not copied.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. Copying tags to
	// snapshots is managed by the DB cluster. Setting this value for an Aurora
	// DB instance has no effect on the DB cluster setting.
	copyTagsToSnapshot?: null | bool @go(CopyTagsToSnapshot,*bool)

	// The instance profile associated with the underlying Amazon EC2 instance of
	// an RDS Custom DB instance.
	//
	// This setting is required for RDS Custom.
	//
	// Constraints:
	//
	//    * The profile must exist in your account.
	//
	//    * The profile must have an IAM role that Amazon EC2 has permissions to
	//    assume.
	//
	//    * The instance profile name and the associated IAM role name must start
	//    with the prefix AWSRDSCustom.
	//
	// For the list of permissions required for the IAM role, see Configure IAM
	// and your VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc)
	// in the Amazon RDS User Guide.
	customIAMInstanceProfile?: null | string @go(CustomIAMInstanceProfile,*string)

	// The identifier of the DB cluster that this DB instance will belong to.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	dbClusterIdentifier?: null | string @go(DBClusterIdentifier,*string)

	// The compute and memory capacity of the DB instance, for example db.m5.large.
	// Not all DB instance classes are available in all Amazon Web Services Regions,
	// or for all database engines. For the full list of DB instance classes, and
	// availability for your engine, see DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
	// in the Amazon RDS User Guide or Aurora DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html)
	// in the Amazon Aurora User Guide.
	// +kubebuilder:validation:Required
	dbInstanceClass?: null | string @go(DBInstanceClass,*string)

	// The meaning of this parameter differs according to the database engine you
	// use.
	//
	// MySQL
	//
	// The name of the database to create when the DB instance is created. If this
	// parameter isn't specified, no database is created in the DB instance.
	//
	// Constraints:
	//
	//    * Must contain 1 to 64 letters or numbers.
	//
	//    * Must begin with a letter. Subsequent characters can be letters, underscores,
	//    or digits (0-9).
	//
	//    * Can't be a word reserved by the specified database engine
	//
	// MariaDB
	//
	// The name of the database to create when the DB instance is created. If this
	// parameter isn't specified, no database is created in the DB instance.
	//
	// Constraints:
	//
	//    * Must contain 1 to 64 letters or numbers.
	//
	//    * Must begin with a letter. Subsequent characters can be letters, underscores,
	//    or digits (0-9).
	//
	//    * Can't be a word reserved by the specified database engine
	//
	// PostgreSQL
	//
	// The name of the database to create when the DB instance is created. If this
	// parameter isn't specified, a database named postgres is created in the DB
	// instance.
	//
	// Constraints:
	//
	//    * Must contain 1 to 63 letters, numbers, or underscores.
	//
	//    * Must begin with a letter. Subsequent characters can be letters, underscores,
	//    or digits (0-9).
	//
	//    * Can't be a word reserved by the specified database engine
	//
	// Oracle
	//
	// The Oracle System ID (SID) of the created DB instance. If you don't specify
	// a value, the default value is ORCL. You can't specify the string null, or
	// any other reserved word, for DBName.
	//
	// Default: ORCL
	//
	// Constraints:
	//
	//    * Can't be longer than 8 characters
	//
	// Amazon RDS Custom for Oracle
	//
	// The Oracle System ID (SID) of the created RDS Custom DB instance. If you
	// don't specify a value, the default value is ORCL for non-CDBs and RDSCDB
	// for CDBs.
	//
	// Default: ORCL
	//
	// Constraints:
	//
	//    * It must contain 1 to 8 alphanumeric characters.
	//
	//    * It must contain a letter.
	//
	//    * It can't be a word reserved by the database engine.
	//
	// Amazon RDS Custom for SQL Server
	//
	// Not applicable. Must be null.
	//
	// SQL Server
	//
	// Not applicable. Must be null.
	//
	// Amazon Aurora MySQL
	//
	// The name of the database to create when the primary DB instance of the Aurora
	// MySQL DB cluster is created. If this parameter isn't specified for an Aurora
	// MySQL DB cluster, no database is created in the DB cluster.
	//
	// Constraints:
	//
	//    * It must contain 1 to 64 alphanumeric characters.
	//
	//    * It can't be a word reserved by the database engine.
	//
	// Amazon Aurora PostgreSQL
	//
	// The name of the database to create when the primary DB instance of the Aurora
	// PostgreSQL DB cluster is created. If this parameter isn't specified for an
	// Aurora PostgreSQL DB cluster, a database named postgres is created in the
	// DB cluster.
	//
	// Constraints:
	//
	//    * It must contain 1 to 63 alphanumeric characters.
	//
	//    * It must begin with a letter. Subsequent characters can be letters, underscores,
	//    or digits (0 to 9).
	//
	//    * It can't be a word reserved by the database engine.
	dbName?: null | string @go(DBName,*string)

	// The name of the DB parameter group to associate with this DB instance. If
	// you don't specify a value, then Amazon RDS uses the default DB parameter
	// group for the specified DB engine and version.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	//
	// Constraints:
	//
	//    * Must be 1 to 255 letters, numbers, or hyphens.
	//
	//    * The first character must be a letter.
	//
	//    * Can't end with a hyphen or contain two consecutive hyphens.
	dbParameterGroupName?: null | string @go(DBParameterGroupName,*string)

	// A DB subnet group to associate with this DB instance.
	//
	// Constraints:
	//
	//    * Must match the name of an existing DB subnet group.
	//
	//    * Must not be default.
	//
	// Example: mydbsubnetgroup
	dbSubnetGroupName?: null | string @go(DBSubnetGroupName,*string)

	// The Oracle system identifier (SID), which is the name of the Oracle database
	// instance that manages your database files. In this context, the term "Oracle
	// database instance" refers exclusively to the system global area (SGA) and
	// Oracle background processes. If you don't specify a SID, the value defaults
	// to RDSCDB. The Oracle SID is also the name of your CDB.
	dbSystemID?: null | string @go(DBSystemID,*string)

	// Specifies whether the DB instance has deletion protection enabled. The database
	// can't be deleted when deletion protection is enabled. By default, deletion
	// protection isn't enabled. For more information, see Deleting a DB Instance
	// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).
	//
	// This setting doesn't apply to Amazon Aurora DB instances. You can enable
	// or disable deletion protection for the DB cluster. For more information,
	// see CreateDBCluster. DB instances in a DB cluster can be deleted even when
	// deletion protection is enabled for the DB cluster.
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// The Active Directory directory ID to create the DB instance in. Currently,
	// only Microsoft SQL Server, MySQL, Oracle, and PostgreSQL DB instances can
	// be created in an Active Directory Domain.
	//
	// For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html)
	// in the Amazon RDS User Guide.
	//
	// This setting doesn't apply to the following DB instances:
	//
	//    * Amazon Aurora (The domain is managed by the DB cluster.)
	//
	//    * RDS Custom
	domain?: null | string @go(Domain,*string)

	// The ARN for the Secrets Manager secret with the credentials for the user
	// joining the domain.
	//
	// Example: arn:aws:secretsmanager:region:account-number:secret:myselfmanagedADtestsecret-123456
	domainAuthSecretARN?: null | string @go(DomainAuthSecretARN,*string)

	// The IPv4 DNS IP addresses of your primary and secondary Active Directory
	// domain controllers.
	//
	// Constraints:
	//
	//    * Two IP addresses must be provided. If there isn't a secondary domain
	//    controller, use the IP address of the primary domain controller for both
	//    entries in the list.
	//
	// Example: 123.124.125.126,234.235.236.237
	domainDNSIPs?: [...null | string] @go(DomainDNSIPs,[]*string)

	// The fully qualified domain name (FQDN) of an Active Directory domain.
	//
	// Constraints:
	//
	//    * Can't be longer than 64 characters.
	//
	// Example: mymanagedADtest.mymanagedAD.mydomain
	domainFqdn?: null | string @go(DomainFqdn,*string)

	// The name of the IAM role to use when making API calls to the Directory Service.
	//
	// This setting doesn't apply to the following DB instances:
	//
	//    * Amazon Aurora (The domain is managed by the DB cluster.)
	//
	//    * RDS Custom
	domainIAMRoleName?: null | string @go(DomainIAMRoleName,*string)

	// The Active Directory organizational unit for your DB instance to join.
	//
	// Constraints:
	//
	//    * Must be in the distinguished name format.
	//
	//    * Can't be longer than 64 characters.
	//
	// Example: OU=mymanagedADtestOU,DC=mymanagedADtest,DC=mymanagedAD,DC=mydomain
	domainOu?: null | string @go(DomainOu,*string)

	// The list of log types that need to be enabled for exporting to CloudWatch
	// Logs. For more information, see Publishing Database Logs to Amazon CloudWatch
	// Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
	// in the Amazon RDS User Guide.
	//
	// This setting doesn't apply to the following DB instances:
	//
	//    * Amazon Aurora (CloudWatch Logs exports are managed by the DB cluster.)
	//
	//    * RDS Custom
	//
	// The following values are valid for each DB engine:
	//
	//    * RDS for MariaDB - audit | error | general | slowquery
	//
	//    * RDS for Microsoft SQL Server - agent | error
	//
	//    * RDS for MySQL - audit | error | general | slowquery
	//
	//    * RDS for Oracle - alert | audit | listener | trace | oemagent
	//
	//    * RDS for PostgreSQL - postgresql | upgrade
	enableCloudwatchLogsExports?: [...null | string] @go(EnableCloudwatchLogsExports,[]*string)

	// Specifies whether to enable a customer-owned IP address (CoIP) for an RDS
	// on Outposts DB instance.
	//
	// A CoIP provides local or external connectivity to resources in your Outpost
	// subnets through your on-premises network. For some use cases, a CoIP can
	// provide lower latency for connections to the DB instance from outside of
	// its virtual private cloud (VPC) on your local network.
	//
	// For more information about RDS on Outposts, see Working with Amazon RDS on
	// Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
	// in the Amazon RDS User Guide.
	//
	// For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
	// in the Amazon Web Services Outposts User Guide.
	enableCustomerOwnedIP?: null | bool @go(EnableCustomerOwnedIP,*bool)

	// Specifies whether to enable mapping of Amazon Web Services Identity and Access
	// Management (IAM) accounts to database accounts. By default, mapping isn't
	// enabled.
	//
	// For more information, see IAM Database Authentication for MySQL and PostgreSQL
	// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html)
	// in the Amazon RDS User Guide.
	//
	// This setting doesn't apply to the following DB instances:
	//
	//    * Amazon Aurora (Mapping Amazon Web Services IAM accounts to database
	//    accounts is managed by the DB cluster.)
	//
	//    * RDS Custom
	enableIAMDatabaseAuthentication?: null | bool @go(EnableIAMDatabaseAuthentication,*bool)

	// Specifies whether to enable Performance Insights for the DB instance. For
	// more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
	// in the Amazon RDS User Guide.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	enablePerformanceInsights?: null | bool @go(EnablePerformanceInsights,*bool)

	// The database engine to use for this DB instance.
	//
	// Not every database engine is available in every Amazon Web Services Region.
	//
	// Valid Values:
	//
	//    * aurora-mysql (for Aurora MySQL DB instances)
	//
	//    * aurora-postgresql (for Aurora PostgreSQL DB instances)
	//
	//    * custom-oracle-ee (for RDS Custom for Oracle DB instances)
	//
	//    * custom-oracle-ee-cdb (for RDS Custom for Oracle DB instances)
	//
	//    * custom-sqlserver-ee (for RDS Custom for SQL Server DB instances)
	//
	//    * custom-sqlserver-se (for RDS Custom for SQL Server DB instances)
	//
	//    * custom-sqlserver-web (for RDS Custom for SQL Server DB instances)
	//
	//    * mariadb
	//
	//    * mysql
	//
	//    * oracle-ee
	//
	//    * oracle-ee-cdb
	//
	//    * oracle-se2
	//
	//    * oracle-se2-cdb
	//
	//    * postgres
	//
	//    * sqlserver-ee
	//
	//    * sqlserver-se
	//
	//    * sqlserver-ex
	//
	//    * sqlserver-web
	// +kubebuilder:validation:Required
	engine?: null | string @go(Engine,*string)

	// The amount of Provisioned IOPS (input/output operations per second) to initially
	// allocate for the DB instance. For information about valid IOPS values, see
	// Amazon RDS DB instance storage (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html)
	// in the Amazon RDS User Guide.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
	// by the DB cluster.
	//
	// Constraints:
	//
	//    * For RDS for MariaDB, MySQL, Oracle, and PostgreSQL - Must be a multiple
	//    between .5 and 50 of the storage amount for the DB instance.
	//
	//    * For RDS for SQL Server - Must be a multiple between 1 and 50 of the
	//    storage amount for the DB instance.
	iops?: null | int64 @go(IOPS,*int64)

	// The Amazon Web Services KMS key identifier for an encrypted DB instance.
	//
	// The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
	// ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
	// Web Services account, specify the key ARN or alias ARN.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. The Amazon Web
	// Services KMS key identifier is managed by the DB cluster. For more information,
	// see CreateDBCluster.
	//
	// If StorageEncrypted is enabled, and you do not specify a value for the KmsKeyId
	// parameter, then Amazon RDS uses your default KMS key. There is a default
	// KMS key for your Amazon Web Services account. Your Amazon Web Services account
	// has a different default KMS key for each Amazon Web Services Region.
	//
	// For Amazon RDS Custom, a KMS key is required for DB instances. For most RDS
	// engines, if you leave this parameter empty while enabling StorageEncrypted,
	// the engine uses the default KMS key. However, RDS Custom doesn't use the
	// default key when this parameter is empty. You must explicitly specify a key.
	kmsKeyID?: null | string @go(KMSKeyID,*string)

	// The license model information for this DB instance.
	//
	// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
	//
	// Valid Values:
	//
	//    * RDS for MariaDB - general-public-license
	//
	//    * RDS for Microsoft SQL Server - license-included
	//
	//    * RDS for MySQL - general-public-license
	//
	//    * RDS for Oracle - bring-your-own-license | license-included
	//
	//    * RDS for PostgreSQL - postgresql-license
	licenseModel?: null | string @go(LicenseModel,*string)

	// Specifies whether to manage the master user password with Amazon Web Services
	// Secrets Manager.
	//
	// For more information, see Password management with Amazon Web Services Secrets
	// Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
	// in the Amazon RDS User Guide.
	//
	// Constraints:
	//
	//    * Can't manage the master user password with Amazon Web Services Secrets
	//    Manager if MasterUserPassword is specified.
	manageMasterUserPassword?: null | bool @go(ManageMasterUserPassword,*bool)

	// The Amazon Web Services KMS key identifier to encrypt a secret that is automatically
	// generated and managed in Amazon Web Services Secrets Manager.
	//
	// This setting is valid only if the master user password is managed by RDS
	// in Amazon Web Services Secrets Manager for the DB instance.
	//
	// The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
	// ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
	// Web Services account, specify the key ARN or alias ARN.
	//
	// If you don't specify MasterUserSecretKmsKeyId, then the aws/secretsmanager
	// KMS key is used to encrypt the secret. If the secret is in a different Amazon
	// Web Services account, then you can't use the aws/secretsmanager KMS key to
	// encrypt the secret, and you must use a customer managed KMS key.
	//
	// There is a default KMS key for your Amazon Web Services account. Your Amazon
	// Web Services account has a different default KMS key for each Amazon Web
	// Services Region.
	masterUserSecretKMSKeyID?: null | string @go(MasterUserSecretKMSKeyID,*string)

	// The name for the master user.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. The name for the
	// master user is managed by the DB cluster.
	//
	// This setting is required for RDS DB instances.
	//
	// Constraints:
	//
	//    * Must be 1 to 16 letters, numbers, or underscores.
	//
	//    * First character must be a letter.
	//
	//    * Can't be a reserved word for the chosen database engine.
	masterUsername?: null | string @go(MasterUsername,*string)

	// The upper limit in gibibytes (GiB) to which Amazon RDS can automatically
	// scale the storage of the DB instance.
	//
	// For more information about this setting, including limitations that apply
	// to it, see Managing capacity automatically with Amazon RDS storage autoscaling
	// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
	// in the Amazon RDS User Guide.
	//
	// This setting doesn't apply to the following DB instances:
	//
	//    * Amazon Aurora (Storage is managed by the DB cluster.)
	//
	//    * RDS Custom
	maxAllocatedStorage?: null | int64 @go(MaxAllocatedStorage,*int64)

	// The interval, in seconds, between points when Enhanced Monitoring metrics
	// are collected for the DB instance. To disable collection of Enhanced Monitoring
	// metrics, specify 0.
	//
	// If MonitoringRoleArn is specified, then you must set MonitoringInterval to
	// a value other than 0.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	//
	// Valid Values: 0 | 1 | 5 | 10 | 15 | 30 | 60
	//
	// Default: 0
	monitoringInterval?: null | int64 @go(MonitoringInterval,*int64)

	// The ARN for the IAM role that permits RDS to send enhanced monitoring metrics
	// to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess.
	// For information on creating a monitoring role, see Setting Up and Enabling
	// Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
	// in the Amazon RDS User Guide.
	//
	// If MonitoringInterval is set to a value other than 0, then you must supply
	// a MonitoringRoleArn value.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	monitoringRoleARN?: null | string @go(MonitoringRoleARN,*string)

	// Specifies whether the DB instance is a Multi-AZ deployment. You can't set
	// the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.
	//
	// This setting doesn't apply to the following DB instances:
	//
	//    * Amazon Aurora (DB instance Availability Zones (AZs) are managed by the
	//    DB cluster.)
	//
	//    * RDS Custom
	multiAZ?: null | bool @go(MultiAZ,*bool)

	// The name of the NCHAR character set for the Oracle DB instance.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	ncharCharacterSetName?: null | string @go(NcharCharacterSetName,*string)

	// The network type of the DB instance.
	//
	// The network type is determined by the DBSubnetGroup specified for the DB
	// instance. A DBSubnetGroup can support only the IPv4 protocol or the IPv4
	// and the IPv6 protocols (DUAL).
	//
	// For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
	// in the Amazon RDS User Guide.
	//
	// Valid Values: IPV4 | DUAL
	networkType?: null | string @go(NetworkType,*string)

	// The option group to associate the DB instance with.
	//
	// Permanent options, such as the TDE option for Oracle Advanced Security TDE,
	// can't be removed from an option group. Also, that option group can't be removed
	// from a DB instance after it is associated with a DB instance.
	//
	// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
	optionGroupName?: null | string @go(OptionGroupName,*string)

	// The Amazon Web Services KMS key identifier for encryption of Performance
	// Insights data.
	//
	// The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
	// ARN, or alias name for the KMS key.
	//
	// If you don't specify a value for PerformanceInsightsKMSKeyId, then Amazon
	// RDS uses your default KMS key. There is a default KMS key for your Amazon
	// Web Services account. Your Amazon Web Services account has a different default
	// KMS key for each Amazon Web Services Region.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	performanceInsightsKMSKeyID?: null | string @go(PerformanceInsightsKMSKeyID,*string)

	// The number of days to retain Performance Insights data.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	//
	// Valid Values:
	//
	//    * 7
	//
	//    * month * 31, where month is a number of months from 1-23. Examples: 93
	//    (3 months * 31), 341 (11 months * 31), 589 (19 months * 31)
	//
	//    * 731
	//
	// Default: 7 days
	//
	// If you specify a retention period that isn't valid, such as 94, Amazon RDS
	// returns an error.
	performanceInsightsRetentionPeriod?: null | int64 @go(PerformanceInsightsRetentionPeriod,*int64)

	// The port number on which the database accepts connections.
	//
	// This setting doesn't apply to Aurora DB instances. The port number is managed
	// by the cluster.
	//
	// Valid Values: 1150-65535
	//
	// Default:
	//
	//    * RDS for MariaDB - 3306
	//
	//    * RDS for Microsoft SQL Server - 1433
	//
	//    * RDS for MySQL - 3306
	//
	//    * RDS for Oracle - 1521
	//
	//    * RDS for PostgreSQL - 5432
	//
	// Constraints:
	//
	//    * For RDS for Microsoft SQL Server, the value can't be 1234, 1434, 3260,
	//    3343, 3389, 47001, or 49152-49156.
	port?: null | int64 @go(Port,*int64)

	// The daily time range during which automated backups are created if automated
	// backups are enabled, using the BackupRetentionPeriod parameter. The default
	// is a 30-minute window selected at random from an 8-hour block of time for
	// each Amazon Web Services Region. For more information, see Backup window
	// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
	// in the Amazon RDS User Guide.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. The daily time
	// range for creating automated backups is managed by the DB cluster.
	//
	// Constraints:
	//
	//    * Must be in the format hh24:mi-hh24:mi.
	//
	//    * Must be in Universal Coordinated Time (UTC).
	//
	//    * Must not conflict with the preferred maintenance window.
	//
	//    * Must be at least 30 minutes.
	preferredBackupWindow?: null | string @go(PreferredBackupWindow,*string)

	// The time range each week during which system maintenance can occur. For more
	// information, see Amazon RDS Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance)
	// in the Amazon RDS User Guide.
	//
	// The default is a 30-minute window selected at random from an 8-hour block
	// of time for each Amazon Web Services Region, occurring on a random day of
	// the week.
	//
	// Constraints:
	//
	//    * Must be in the format ddd:hh24:mi-ddd:hh24:mi.
	//
	//    * The day values must be mon | tue | wed | thu | fri | sat | sun.
	//
	//    * Must be in Universal Coordinated Time (UTC).
	//
	//    * Must not conflict with the preferred backup window.
	//
	//    * Must be at least 30 minutes.
	preferredMaintenanceWindow?: null | string @go(PreferredMaintenanceWindow,*string)

	// The number of CPU cores and the number of threads per core for the DB instance
	// class of the DB instance.
	//
	// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
	processorFeatures?: [...null | #ProcessorFeature] @go(ProcessorFeatures,[]*ProcessorFeature)

	// The order of priority in which an Aurora Replica is promoted to the primary
	// instance after a failure of the existing primary instance. For more information,
	// see Fault Tolerance for an Aurora DB Cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance)
	// in the Amazon Aurora User Guide.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	//
	// Default: 1
	//
	// Valid Values: 0 - 15
	promotionTier?: null | int64 @go(PromotionTier,*int64)

	// Specifies whether the DB instance is publicly accessible.
	//
	// When the DB instance is publicly accessible, its Domain Name System (DNS)
	// endpoint resolves to the private IP address from within the DB instance's
	// virtual private cloud (VPC). It resolves to the public IP address from outside
	// of the DB instance's VPC. Access to the DB instance is ultimately controlled
	// by the security group it uses. That public access is not permitted if the
	// security group assigned to the DB instance doesn't permit it.
	//
	// When the DB instance isn't publicly accessible, it is an internal DB instance
	// with a DNS name that resolves to a private IP address.
	//
	// Default: The default behavior varies depending on whether DBSubnetGroupName
	// is specified.
	//
	// If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified,
	// the following applies:
	//
	//    * If the default VPC in the target Region doesn’t have an internet gateway
	//    attached to it, the DB instance is private.
	//
	//    * If the default VPC in the target Region has an internet gateway attached
	//    to it, the DB instance is public.
	//
	// If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified,
	// the following applies:
	//
	//    * If the subnets are part of a VPC that doesn’t have an internet gateway
	//    attached to it, the DB instance is private.
	//
	//    * If the subnets are part of a VPC that has an internet gateway attached
	//    to it, the DB instance is public.
	publiclyAccessible?: null | bool @go(PubliclyAccessible,*bool)

	// Specifes whether the DB instance is encrypted. By default, it isn't encrypted.
	//
	// For RDS Custom DB instances, either enable this setting or leave it unset.
	// Otherwise, Amazon RDS reports an error.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. The encryption
	// for DB instances is managed by the DB cluster.
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)

	// The storage throughput value for the DB instance.
	//
	// This setting applies only to the gp3 storage type.
	//
	// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
	storageThroughput?: null | int64 @go(StorageThroughput,*int64)

	// The storage type to associate with the DB instance.
	//
	// If you specify io1 or gp3, you must also include a value for the Iops parameter.
	//
	// This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
	// by the DB cluster.
	//
	// Valid Values: gp2 | gp3 | io1 | standard
	//
	// Default: io1, if the Iops parameter is specified. Otherwise, gp2.
	storageType?: null | string @go(StorageType,*string)

	// Tags to assign to the DB instance.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	// The ARN from the key store with which to associate the instance for TDE encryption.
	//
	// This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
	tdeCredentialARN?: null | string @go(TDECredentialARN,*string)

	// The password for the given ARN from the key store in order to access the
	// device.
	//
	// This setting doesn't apply to RDS Custom DB instances.
	tdeCredentialPassword?: null | string @go(TDECredentialPassword,*string)

	// The time zone of the DB instance. The time zone parameter is currently supported
	// only by Microsoft SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
	timezone?: null | string @go(Timezone,*string)

	#CustomDBInstanceParameters
}

// DBInstanceSpec defines the desired state of DBInstance
#DBInstanceSpec: {
	forProvider: #DBInstanceParameters @go(ForProvider)
}

// DBInstanceObservation defines the observed state of DBInstance
#DBInstanceObservation: {
	// Indicates whether engine-native audit fields are included in the database
	// activity stream.
	activityStreamEngineNativeAuditFieldsIncluded?: null | bool @go(ActivityStreamEngineNativeAuditFieldsIncluded,*bool)

	// The name of the Amazon Kinesis data stream used for the database activity
	// stream.
	activityStreamKinesisStreamName?: null | string @go(ActivityStreamKinesisStreamName,*string)

	// The Amazon Web Services KMS key identifier used for encrypting messages in
	// the database activity stream. The Amazon Web Services KMS key identifier
	// is the key ARN, key ID, alias ARN, or alias name for the KMS key.
	activityStreamKMSKeyID?: null | string @go(ActivityStreamKMSKeyID,*string)

	// The mode of the database activity stream. Database events such as a change
	// or access generate an activity stream event. RDS for Oracle always handles
	// these events asynchronously.
	activityStreamMode?: null | string @go(ActivityStreamMode,*string)

	// The status of the policy state of the activity stream.
	activityStreamPolicyStatus?: null | string @go(ActivityStreamPolicyStatus,*string)

	// The status of the database activity stream.
	activityStreamStatus?: null | string @go(ActivityStreamStatus,*string)

	// The Amazon Web Services Identity and Access Management (IAM) roles associated
	// with the DB instance.
	associatedRoles?: [...null | #DBInstanceRole] @go(AssociatedRoles,[]*DBInstanceRole)

	// The automation mode of the RDS Custom DB instance: full or all paused. If
	// full, the DB instance automates monitoring and instance recovery. If all
	// paused, the instance pauses automation for the duration set by --resume-full-automation-mode-minutes.
	automationMode?: null | string @go(AutomationMode,*string)

	// The Amazon Resource Name (ARN) of the recovery point in Amazon Web Services
	// Backup.
	awsBackupRecoveryPointARN?: null | string @go(AWSBackupRecoveryPointARN,*string)

	// The details of the DB instance's server certificate.
	certificateDetails?: null | #CertificateDetails @go(CertificateDetails,*CertificateDetails)

	// Indicates whether a customer-owned IP address (CoIP) is enabled for an RDS
	// on Outposts DB instance.
	//
	// A CoIP provides local or external connectivity to resources in your Outpost
	// subnets through your on-premises network. For some use cases, a CoIP can
	// provide lower latency for connections to the DB instance from outside of
	// its virtual private cloud (VPC) on your local network.
	//
	// For more information about RDS on Outposts, see Working with Amazon RDS on
	// Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
	// in the Amazon RDS User Guide.
	//
	// For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
	// in the Amazon Web Services Outposts User Guide.
	customerOwnedIPEnabled?: null | bool @go(CustomerOwnedIPEnabled,*bool)

	// The Amazon Resource Name (ARN) for the DB instance.
	dbInstanceARN?: null | string @go(DBInstanceARN,*string)

	// The list of replicated automated backups associated with the DB instance.
	dbInstanceAutomatedBackupsReplications?: [...null | #DBInstanceAutomatedBackupsReplication] @go(DBInstanceAutomatedBackupsReplications,[]*DBInstanceAutomatedBackupsReplication)

	// The user-supplied database identifier. This identifier is the unique key
	// that identifies a DB instance.
	dbInstanceIdentifier?: null | string @go(DBInstanceIdentifier,*string)

	// The current state of this database.
	//
	// For information about DB instance statuses, see Viewing DB instance status
	// (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/accessing-monitoring.html#Overview.DBInstance.Status)
	// in the Amazon RDS User Guide.
	dbInstanceStatus?: null | string @go(DBInstanceStatus,*string)

	// The list of DB parameter groups applied to this DB instance.
	dbParameterGroups?: [...null | #DBParameterGroupStatus_SDK] @go(DBParameterGroups,[]*DBParameterGroupStatus_SDK)

	// A list of DB security group elements containing DBSecurityGroup.Name and
	// DBSecurityGroup.Status subelements.
	dbSecurityGroups?: [...null | #DBSecurityGroupMembership] @go(DBSecurityGroups,[]*DBSecurityGroupMembership)

	// Information about the subnet group associated with the DB instance, including
	// the name, description, and subnets in the subnet group.
	dbSubnetGroup?: null | #DBSubnetGroup @go(DBSubnetGroup,*DBSubnetGroup)

	// The port that the DB instance listens on. If the DB instance is part of a
	// DB cluster, this can be a different port than the DB cluster port.
	dbInstancePort?: null | int64 @go(DBInstancePort,*int64)

	// The Amazon Web Services Region-unique, immutable identifier for the DB instance.
	// This identifier is found in Amazon Web Services CloudTrail log entries whenever
	// the Amazon Web Services KMS key for the DB instance is accessed.
	dbiResourceID?: null | string @go(DBIResourceID,*string)

	// The Active Directory Domain membership records associated with the DB instance.
	domainMemberships?: [...null | #DomainMembership] @go(DomainMemberships,[]*DomainMembership)

	// A list of log types that this DB instance is configured to export to CloudWatch
	// Logs.
	//
	// Log types vary by DB engine. For information about the log types for each
	// DB engine, see Monitoring Amazon RDS log files (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html)
	// in the Amazon RDS User Guide.
	enabledCloudwatchLogsExports?: [...null | string] @go(EnabledCloudwatchLogsExports,[]*string)

	// The connection endpoint for the DB instance.
	//
	// The endpoint might not be shown for instances with the status of creating.
	endpoint?: null | #Endpoint @go(Endpoint,*Endpoint)

	// The version of the database engine.
	engineVersion?: null | string @go(EngineVersion,*string)

	// The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that
	// receives the Enhanced Monitoring metrics data for the DB instance.
	enhancedMonitoringResourceARN?: null | string @go(EnhancedMonitoringResourceARN,*string)

	// Indicates whether mapping of Amazon Web Services Identity and Access Management
	// (IAM) accounts to database accounts is enabled for the DB instance.
	//
	// For a list of engine versions that support IAM database authentication, see
	// IAM database authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.IamDatabaseAuthentication.html)
	// in the Amazon RDS User Guide and IAM database authentication in Aurora (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.Aurora_Fea_Regions_DB-eng.Feature.IAMdbauth.html)
	// in the Amazon Aurora User Guide.
	iamDatabaseAuthenticationEnabled?: null | bool @go(IAMDatabaseAuthenticationEnabled,*bool)

	// The listener connection endpoint for SQL Server Always On.
	listenerEndpoint?: null | #Endpoint @go(ListenerEndpoint,*Endpoint)

	// The secret managed by RDS in Amazon Web Services Secrets Manager for the
	// master user password.
	//
	// For more information, see Password management with Amazon Web Services Secrets
	// Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
	// in the Amazon RDS User Guide.
	masterUserSecret?: null | #MasterUserSecret @go(MasterUserSecret,*MasterUserSecret)

	// The list of option group memberships for this DB instance.
	optionGroupMemberships?: [...null | #OptionGroupMembership] @go(OptionGroupMemberships,[]*OptionGroupMembership)

	// Information about pending changes to the DB instance. This information is
	// returned only when there are pending changes. Specific changes are identified
	// by subelements.
	pendingModifiedValues?: null | #PendingModifiedValues @go(PendingModifiedValues,*PendingModifiedValues)

	// The progress of the storage optimization operation as a percentage.
	percentProgress?: null | string @go(PercentProgress,*string)

	// Indicates whether Performance Insights is enabled for the DB instance.
	performanceInsightsEnabled?: null | bool @go(PerformanceInsightsEnabled,*bool)

	// The identifiers of Aurora DB clusters to which the RDS DB instance is replicated
	// as a read replica. For example, when you create an Aurora read replica of
	// an RDS for MySQL DB instance, the Aurora MySQL DB cluster for the Aurora
	// read replica is shown. This output doesn't contain information about cross-Region
	// Aurora read replicas.
	//
	// Currently, each RDS DB instance can have only one Aurora read replica.
	readReplicaDBClusterIdentifiers?: [...null | string] @go(ReadReplicaDBClusterIdentifiers,[]*string)

	// The identifiers of the read replicas associated with this DB instance.
	readReplicaDBInstanceIdentifiers?: [...null | string] @go(ReadReplicaDBInstanceIdentifiers,[]*string)

	// The identifier of the source DB cluster if this DB instance is a read replica.
	readReplicaSourceDBClusterIdentifier?: null | string @go(ReadReplicaSourceDBClusterIdentifier,*string)

	// The identifier of the source DB instance if this DB instance is a read replica.
	readReplicaSourceDBInstanceIdentifier?: null | string @go(ReadReplicaSourceDBInstanceIdentifier,*string)

	// The open mode of an Oracle read replica. The default is open-read-only. For
	// more information, see Working with Oracle Read Replicas for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html)
	// in the Amazon RDS User Guide.
	//
	// This attribute is only supported in RDS for Oracle.
	replicaMode?: null | string @go(ReplicaMode,*string)

	// If present, specifies the name of the secondary Availability Zone for a DB
	// instance with multi-AZ support.
	secondaryAvailabilityZone?: null | string @go(SecondaryAvailabilityZone,*string)

	// The status of a read replica. If the DB instance isn't a read replica, the
	// value is blank.
	statusInfos?: [...null | #DBInstanceStatusInfo] @go(StatusInfos,[]*DBInstanceStatusInfo)
	tagList?: [...null | #Tag] @go(TagList,[]*Tag)

	// The list of Amazon EC2 VPC security groups that the DB instance belongs to.
	vpcSecurityGroups?: [...null | #VPCSecurityGroupMembership] @go(VPCSecurityGroups,[]*VPCSecurityGroupMembership)
}

// DBInstanceStatus defines the observed state of DBInstance.
#DBInstanceStatus: {
	atProvider?: #DBInstanceObservation @go(AtProvider)
}

// DBInstance is the Schema for the DBInstances API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DBInstance: {
	spec:    #DBInstanceSpec   @go(Spec)
	status?: #DBInstanceStatus @go(Status)
}

// DBInstanceList contains a list of DBInstances
#DBInstanceList: {
	items: [...#DBInstance] @go(Items,[]DBInstance)
}
