// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/rds/v1alpha1

package v1alpha1

// DBParameterGroupParameters defines the desired state of DBParameterGroup
#DBParameterGroupParameters: {
	// Region is which region the DBParameterGroup will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The description for the DB parameter group.
	// +kubebuilder:validation:Required
	description?: null | string @go(Description,*string)

	// Tags to assign to the DB parameter group.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomDBParameterGroupParameters
}

// DBParameterGroupSpec defines the desired state of DBParameterGroup
#DBParameterGroupSpec: {
	forProvider: #DBParameterGroupParameters @go(ForProvider)
}

// DBParameterGroupObservation defines the observed state of DBParameterGroup
#DBParameterGroupObservation: {
	// The Amazon Resource Name (ARN) for the DB parameter group.
	dbParameterGroupARN?: null | string @go(DBParameterGroupARN,*string)

	// The name of the DB parameter group family that this DB parameter group is
	// compatible with.
	dbParameterGroupFamily?: null | string @go(DBParameterGroupFamily,*string)

	// The name of the DB parameter group.
	dbParameterGroupName?: null | string @go(DBParameterGroupName,*string)
}

// DBParameterGroupStatus defines the observed state of DBParameterGroup.
#DBParameterGroupStatus: {
	atProvider?: #DBParameterGroupObservation @go(AtProvider)
}

// DBParameterGroup is the Schema for the DBParameterGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DBParameterGroup: {
	spec:    #DBParameterGroupSpec   @go(Spec)
	status?: #DBParameterGroupStatus @go(Status)
}

// DBParameterGroupList contains a list of DBParameterGroups
#DBParameterGroupList: {
	items: [...#DBParameterGroup] @go(Items,[]DBParameterGroup)
}
