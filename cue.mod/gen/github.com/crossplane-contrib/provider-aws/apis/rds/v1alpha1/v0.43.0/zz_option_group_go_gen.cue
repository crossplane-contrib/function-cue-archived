// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/rds/v1alpha1

package v1alpha1

// OptionGroupParameters defines the desired state of OptionGroup
#OptionGroupParameters: {
	// Region is which region the OptionGroup will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// Specifies the name of the engine that this option group should be associated
	// with.
	//
	// Valid Values:
	//
	//    * mariadb
	//
	//    * mysql
	//
	//    * oracle-ee
	//
	//    * oracle-ee-cdb
	//
	//    * oracle-se2
	//
	//    * oracle-se2-cdb
	//
	//    * postgres
	//
	//    * sqlserver-ee
	//
	//    * sqlserver-se
	//
	//    * sqlserver-ex
	//
	//    * sqlserver-web
	// +kubebuilder:validation:Required
	engineName?: null | string @go(EngineName,*string)

	// Specifies the major version of the engine that this option group should be
	// associated with.
	// +kubebuilder:validation:Required
	majorEngineVersion?: null | string @go(MajorEngineVersion,*string)

	// The description of the option group.
	// +kubebuilder:validation:Required
	optionGroupDescription?: null | string @go(OptionGroupDescription,*string)

	// Tags to assign to the option group.
	tags?: [...null | #Tag] @go(Tags,[]*Tag)

	#CustomOptionGroupParameters
}

// OptionGroupSpec defines the desired state of OptionGroup
#OptionGroupSpec: {
	forProvider: #OptionGroupParameters @go(ForProvider)
}

// OptionGroupObservation defines the observed state of OptionGroup
#OptionGroupObservation: {
	// Indicates whether this option group can be applied to both VPC and non-VPC
	// instances. The value true indicates the option group can be applied to both
	// VPC and non-VPC instances.
	allowsVPCAndNonVPCInstanceMemberships?: null | bool @go(AllowsVPCAndNonVPCInstanceMemberships,*bool)

	// Specifies the Amazon Resource Name (ARN) for the option group.
	optionGroupARN?: null | string @go(OptionGroupARN,*string)

	// Specifies the name of the option group.
	optionGroupName?: null | string @go(OptionGroupName,*string)

	// Indicates what options are available in the option group.
	options?: [...null | #Option] @go(Options,[]*Option)

	// Specifies the Amazon Web Services account ID for the option group from which
	// this option group is copied.
	sourceAccountID?: null | string @go(SourceAccountID,*string)

	// Specifies the name of the option group from which this option group is copied.
	sourceOptionGroup?: null | string @go(SourceOptionGroup,*string)

	// If AllowsVpcAndNonVpcInstanceMemberships is false, this field is blank. If
	// AllowsVpcAndNonVpcInstanceMemberships is true and this field is blank, then
	// this option group can be applied to both VPC and non-VPC instances. If this
	// field contains a value, then this option group can only be applied to instances
	// that are in the VPC indicated by this field.
	vpcID?: null | string @go(VPCID,*string)
}

// OptionGroupStatus defines the observed state of OptionGroup.
#OptionGroupStatus: {
	atProvider?: #OptionGroupObservation @go(AtProvider)
}

// OptionGroup is the Schema for the OptionGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#OptionGroup: {
	spec:    #OptionGroupSpec   @go(Spec)
	status?: #OptionGroupStatus @go(Status)
}

// OptionGroupList contains a list of OptionGroups
#OptionGroupList: {
	items: [...#OptionGroup] @go(Items,[]OptionGroup)
}
