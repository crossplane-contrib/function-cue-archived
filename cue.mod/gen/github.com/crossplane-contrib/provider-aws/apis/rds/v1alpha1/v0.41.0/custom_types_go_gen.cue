// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/rds/v1alpha1

package v1alpha1

// CustomDBParameterGroupParameters are custom parameters for DBParameterGroup
#CustomDBParameterGroupParameters: {
	// A list of parameters to associate with this DB parameter group.
	// The fields ApplyMethod, ParameterName and ParameterValue are required
	// for every parameter.
	// Note: AWS actually only modifies the ApplyMethod of a parameter,
	// if the ParameterValue changes too.
	// +optional
	parameters?: [...#CustomParameter] @go(Parameters,[]CustomParameter)

	// The DB parameter group family name. A DB parameter group can be associated
	// with one and only one DB parameter group family, and can be applied only
	// to a DB instance running a database engine and engine version compatible
	// with that DB parameter group family.
	//
	// To list all of the available parameter group families for a DB engine, use
	// the following command:
	//
	// aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
	// --engine <engine>
	//
	// For example, to list all of the available parameter group families for the
	// MySQL DB engine, use the following command:
	//
	// aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
	// --engine mysql
	//
	// The output contains duplicates.
	//
	// The following are the valid DB engine values:
	//
	//    * aurora (for MySQL 5.6-compatible Aurora)
	//
	//    * aurora-mysql (for MySQL 5.7-compatible Aurora)
	//
	//    * aurora-postgresql
	//
	//    * mariadb
	//
	//    * mysql
	//
	//    * oracle-ee
	//
	//    * oracle-ee-cdb
	//
	//    * oracle-se2
	//
	//    * oracle-se2-cdb
	//
	//    * postgres
	//
	//    * sqlserver-ee
	//
	//    * sqlserver-se
	//
	//    * sqlserver-ex
	//
	//    * sqlserver-web
	//
	// One of DBParameterGroupFamily or DBParameterGroupFamilySelector is required.
	//
	// +optional
	dbParameterGroupFamily?: null | string @go(DBParameterGroupFamily,*string)

	// DBParameterGroupFamilySelector determines DBParameterGroupFamily from
	// the engine and engine version.
	//
	// One of DBParameterGroupFamily or DBParameterGroupFamilySelector is required.
	//
	// Will not be used if DBParameterGroupFamily is already set.
	// +optional
	dbParameterGroupFamilySelector?: null | #DBParameterGroupFamilyNameSelector @go(DBParameterGroupFamilySelector,*DBParameterGroupFamilyNameSelector)
}

// CustomDBClusterParameterGroupParameters are custom parameters for DBClusterParameterGroup
#CustomDBClusterParameterGroupParameters: {
	// A list of parameters to associate with this DB cluster parameter group.
	// The fields ApplyMethod, ParameterName and ParameterValue are required
	// for every parameter.
	// Note: AWS actually only modifies the ApplyMethod of a parameter,
	// if the ParameterValue changes too.
	// +optional
	parameters?: [...#CustomParameter] @go(Parameters,[]CustomParameter)

	// The DB cluster parameter group family name. A DB cluster parameter group
	// can be associated with one and only one DB cluster parameter group family,
	// and can be applied only to a DB cluster running a database engine and engine
	// version compatible with that DB cluster parameter group family.
	//
	// Aurora MySQL
	//
	// Example: aurora5.6, aurora-mysql5.7
	//
	// Aurora PostgreSQL
	//
	// Example: aurora-postgresql9.6
	//
	// To list all of the available parameter group families for a DB engine, use
	// the following command:
	//
	// aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
	// --engine <engine>
	//
	// For example, to list all of the available parameter group families for the
	// Aurora PostgreSQL DB engine, use the following command:
	//
	// aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
	// --engine aurora-postgresql
	//
	// The output contains duplicates.
	//
	// The following are the valid DB engine values:
	//
	//    * aurora (for MySQL 5.6-compatible Aurora)
	//
	//    * aurora-mysql (for MySQL 5.7-compatible Aurora)
	//
	//    * aurora-postgresql
	//
	// One of DBParameterGroupFamily or DBParameterGroupFamilySelector is required.
	//
	// +optional
	dbParameterGroupFamily?: null | string @go(DBParameterGroupFamily,*string)

	// DBParameterGroupFamilySelector determines DBParameterGroupFamily from
	// the engine and engine version.
	//
	// One of DBParameterGroupFamily or DBParameterGroupFamilySelector is required.
	//
	// Will not be used if DBParameterGroupFamily is already set.
	// +optional
	dbParameterGroupFamilySelector?: null | #DBParameterGroupFamilyNameSelector @go(DBParameterGroupFamilySelector,*DBParameterGroupFamilyNameSelector)
}

// DBParameterGroupFamilyNameSelector allows determining the family name from the
// database engine and engine version.
#DBParameterGroupFamilyNameSelector: {
	// Engine is the name of the database engine.
	// +kubebuilder:validation:Required
	engine: string @go(Engine)

	// EngineVersion is the version of the database engine.
	// If it is nil, the default engine version given by AWS will be used.
	// +optional
	engineVersion?: null | string @go(EngineVersion,*string)
}

// CustomDBClusterParameters are custom parameters for DBCluster
#CustomDBClusterParameters: {
	// AutogeneratePassword indicates whether the controller should generate
	// a random password for the master user if one is not provided via
	// MasterUserPasswordSecretRef.
	//
	// If a password is generated, it will
	// be stored as a secret at the location specified by MasterUserPasswordSecretRef.
	// +optional
	autogeneratePassword?: bool @go(AutogeneratePassword)

	// The version number of the database engine to use.
	//
	// To list all of the available engine versions for MySQL 5.6-compatible Aurora,
	// use the following command:
	//
	// aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"
	//
	// To list all of the available engine versions for MySQL 5.7-compatible and
	// MySQL 8.0-compatible Aurora, use the following command:
	//
	// aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"
	//
	// To list all of the available engine versions for Aurora PostgreSQL, use the
	// following command:
	//
	// aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"
	//
	// To list all of the available engine versions for RDS for MySQL, use the following
	// command:
	//
	// aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"
	//
	// To list all of the available engine versions for RDS for PostgreSQL, use
	// the following command:
	//
	// aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"
	//
	// Aurora MySQL
	//
	// For information, see MySQL on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html)
	// in the Amazon Aurora User Guide.
	//
	// Aurora PostgreSQL
	//
	// For information, see Amazon Aurora PostgreSQL releases and engine versions
	// (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html)
	// in the Amazon Aurora User Guide.
	//
	// MySQL
	//
	// For information, see MySQL on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
	// in the Amazon RDS User Guide.
	//
	// PostgreSQL
	//
	// For information, see Amazon RDS for PostgreSQL versions and extensions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts)
	// in the Amazon RDS User Guide.
	//
	// Note: Downgrades are not allowed by AWS and attempts to set a lower version
	// will be ignored.
	//
	// Valid for: Aurora DB clusters and Multi-AZ DB clusters
	engineVersion?: null | string @go(EngineVersion,*string)

	// A list of VPC security groups that the DB cluster will belong to.
	//
	// Valid for: Aurora DB clusters and Multi-AZ DB clusters
	vpcSecurityGroupIDs?: [...string] @go(VPCSecurityGroupIDs,[]string)

	// The DB cluster snapshot identifier of the new DB cluster snapshot created
	// when SkipFinalSnapshot is disabled.
	//
	// Specifying this parameter and also skipping the creation of a final DB cluster
	// snapshot with the SkipFinalShapshot parameter results in an error.
	//
	// Constraints:
	//
	//    * Must be 1 to 255 letters, numbers, or hyphens.
	//
	//    * First character must be a letter
	//
	//    * Can't end with a hyphen or contain two consecutive hyphens
	// +immutable
	// +optional
	finalDBSnapshotIdentifier?: string @go(FinalDBSnapshotIdentifier)

	// A value that indicates whether to skip the creation of a final DB cluster
	// snapshot before the DB cluster is deleted. If skip is specified, no DB cluster
	// snapshot is created. If skip isn't specified, a DB cluster snapshot is created
	// before the DB cluster is deleted. By default, skip isn't specified, and the
	// DB cluster snapshot is created. By default, this parameter is disabled.
	//
	// You must specify a FinalDBSnapshotIdentifier parameter if SkipFinalSnapshot
	// is disabled.
	// +immutable
	// +optional
	skipFinalSnapshot?: bool @go(SkipFinalSnapshot)

	// A value that indicates whether the modifications in this request and any
	// pending modifications are asynchronously applied as soon as possible, regardless
	// of the PreferredMaintenanceWindow setting for the DB cluster. If this parameter
	// is disabled, changes to the DB cluster are applied during the next maintenance
	// window.
	//
	// The ApplyImmediately parameter only affects the EnableIAMDatabaseAuthentication,
	// MasterUserPassword values. If the ApplyImmediately
	// parameter is disabled, then changes to the EnableIAMDatabaseAuthentication,
	// MasterUserPassword values are applied during
	// the next maintenance window. All other changes are applied immediately, regardless
	// of the value of the ApplyImmediately parameter.
	//
	// By default, this parameter is disabled.
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// RestoreFrom specifies the details of the backup to restore when creating a new DBCluster.
	// +optional
	restoreFrom?: null | #RestoreDBClusterBackupConfiguration @go(RestoreFrom,*RestoreDBClusterBackupConfiguration)
}

// S3RestoreBackupConfiguration defines the details of the S3 backup to restore from.
#S3RestoreBackupConfiguration: {
	// BucketName is the name of the S3 bucket containing the backup to restore.
	bucketName?: null | string @go(BucketName,*string)

	// IngestionRoleARN is the IAM role RDS can assume that will allow it to access the contents of the S3 bucket.
	ingestionRoleARN?: null | string @go(IngestionRoleARN,*string)

	// Prefix is the path prefix of the S3 bucket within which the backup to restore is located.
	// +optional
	prefix?: null | string @go(Prefix,*string)

	// SourceEngine is the engine used to create the backup.
	// Must be "mysql".
	sourceEngine?: null | string @go(SourceEngine,*string)

	// SourceEngineVersion is the version of the engine used to create the backup.
	// Example: "5.7.30"
	sourceEngineVersion?: null | string @go(SourceEngineVersion,*string)
}

// SnapshotRestoreBackupConfiguration defines the details of the snapshot to restore from.
#SnapshotRestoreBackupConfiguration: {
	// SnapshotIdentifier is the identifier of the snapshot to restore.
	snapshotIdentifier?: null | string @go(SnapshotIdentifier,*string)
}

// PointInTimeRestoreBackupConfiguration defines the details of the time to restore from
#PointInTimeRestoreBackupConfiguration: {
	// UseLatestRestorableTime indicates that the DB instance is restored from the latest backup
	// Can't be specified if the restoreTime parameter is provided.
	// +optional
	useLatestRestorableTime: bool @go(UseLatestRestorableTime)

	// SourceDBInstanceAutomatedBackupsArn specifies the Amazon Resource Name (ARN) of the replicated automated backups
	// from which to restore. Example: arn:aws:rds:useast-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE
	// +optional
	sourceDBInstanceAutomatedBackupsArn?: null | string @go(SourceDBInstanceAutomatedBackupsArn,*string)

	// SourceDBInstanceIdentifier specifies the identifier of the source DB instance from which to restore. Constraints:
	// Must match the identifier of an existing DB instance.
	// +optional
	sourceDBInstanceIdentifier?: null | string @go(SourceDBInstanceIdentifier,*string)

	// SourceDbiResourceID specifies the resource ID of the source DB instance from which to restore.
	// +optional
	sourceDbiResourceId?: null | string @go(SourceDbiResourceID,*string)
}

// PointInTimeRestoreDBClusterBackupConfiguration defines the details of the time to restore from
#PointInTimeRestoreDBClusterBackupConfiguration: {
	// UseLatestRestorableTime indicates that the DB instance is restored from the latest backup
	// Can't be specified if the restoreTime parameter is provided.
	// +optional
	useLatestRestorableTime: bool @go(UseLatestRestorableTime)

	// SourceDBInstanceAutomatedBackupsArn specifies the Amazon Resource Name (ARN) of the replicated automated backups
	// from which to restore. Example: arn:aws:rds:useast-1:123456789012:auto-backup:ab-L2IJCEXJP7XQ7HOJ4SIEXAMPLE
	// +optional
	sourceDBInstanceAutomatedBackupsArn?: null | string @go(SourceDBInstanceAutomatedBackupsArn,*string)

	// SourceDBClusterIdentifier specifies the identifier of the source DB cluster from which to restore. Constraints:
	// Must match the identifier of an existing DB instance.
	// +optional
	sourceDBClusterIdentifier?: null | string @go(SourceDBClusterIdentifier,*string)

	// SourceDbiResourceID specifies the resource ID of the source DB instance from which to restore.
	// +optional
	sourceDbiResourceId?: null | string @go(SourceDbiResourceID,*string)

	// The type of restore to be performed. You can specify one of the following
	// values:
	//
	//    * full-copy - The new DB cluster is restored as a full copy of the source
	//    DB cluster.
	//
	//    * copy-on-write - The new DB cluster is restored as a clone of the source
	//    DB cluster.
	//
	// Constraints: You can't specify copy-on-write if the engine version of the
	// source DB cluster is earlier than 1.11.
	//
	// If you don't specify a RestoreType value, then the new DB cluster is restored
	// as a full copy of the source DB cluster.
	//
	// Valid for: Aurora DB clusters and Multi-AZ DB clusters
	// +optional
	// +kubebuilder:validation:Enum=full-copy;copy-on-write
	restoreType?: null | string @go(RestoreType,*string)
}

// RestoreDBInstanceBackupConfiguration defines the backup to restore a new DBCluster from.
#RestoreDBInstanceBackupConfiguration: {
	// S3 specifies the details of the S3 backup to restore from.
	// +optional
	s3?: null | #S3RestoreBackupConfiguration @go(S3,*S3RestoreBackupConfiguration)

	// Snapshot specifies the details of the snapshot to restore from.
	// +optional
	snapshot?: null | #SnapshotRestoreBackupConfiguration @go(Snapshot,*SnapshotRestoreBackupConfiguration)

	// PointInTime specifies the details of the point in time restore.
	// +optional
	pointInTime?: null | #PointInTimeRestoreBackupConfiguration @go(PointInTime,*PointInTimeRestoreBackupConfiguration)

	// Source is the type of the backup to restore when creating a new  DBCluster or DBInstance.
	// S3, Snapshot and PointInTime are supported.
	// +kubebuilder:validation:Enum=S3;Snapshot;PointInTime
	source?: null | string @go(Source,*string)
}

// RestoreDBClusterBackupConfiguration defines the backup to restore a new DBCluster from.
#RestoreDBClusterBackupConfiguration: {
	// S3 specifies the details of the S3 backup to restore from.
	// +optional
	s3?: null | #S3RestoreBackupConfiguration @go(S3,*S3RestoreBackupConfiguration)

	// Snapshot specifies the details of the snapshot to restore from.
	// +optional
	snapshot?: null | #SnapshotRestoreBackupConfiguration @go(Snapshot,*SnapshotRestoreBackupConfiguration)

	// PointInTime specifies the details of the point in time restore.
	// +optional
	pointInTime?: null | #PointInTimeRestoreDBClusterBackupConfiguration @go(PointInTime,*PointInTimeRestoreDBClusterBackupConfiguration)

	// Source is the type of the backup to restore when creating a new  DBCluster or DBInstance.
	// S3, Snapshot and PointInTime are supported.
	// +kubebuilder:validation:Enum=S3;Snapshot;PointInTime
	source?: null | string @go(Source,*string)
}

// CustomDBInstanceParameters are custom parameters for the DBInstance
#CustomDBInstanceParameters: {
	// AutogeneratePassword indicates whether the controller should generate
	// a random password for the master user if one is not provided via
	// MasterUserPasswordSecretRef.
	//
	// If a password is generated, it will
	// be stored as a secret at the location specified by MasterUserPasswordSecretRef.
	// +optional
	autogeneratePassword?: bool @go(AutogeneratePassword)

	// A list of database security groups to associate with this DB instance
	dbSecurityGroups?: [...string] @go(DBSecurityGroups,[]string)

	// The version number of the database engine to use.
	//
	// For a list of valid engine versions, use the DescribeDBEngineVersions operation.
	//
	// The following are the database engines and links to information about the
	// major and minor versions that are available with Amazon RDS. Not every database
	// engine is available for every Amazon Web Services Region.
	//
	// Amazon Aurora
	//
	// Not applicable. The version number of the database engine to be used by the
	// DB instance is managed by the DB cluster.
	//
	// Amazon RDS Custom for Oracle
	//
	// A custom engine version (CEV) that you have previously created. This setting
	// is required for RDS Custom for Oracle. The CEV name has the following format:
	// 19.customized_string. A valid CEV name is 19.my_cev1. For more information,
	// see Creating an RDS Custom for Oracle DB instance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-creating.html#custom-creating.create)
	// in the Amazon RDS User Guide.
	//
	// Amazon RDS Custom for SQL Server
	//
	// See RDS Custom for SQL Server general requirements (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html)
	// in the Amazon RDS User Guide.
	//
	// MariaDB
	//
	// For information, see MariaDB on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
	// in the Amazon RDS User Guide.
	//
	// Microsoft SQL Server
	//
	// For information, see Microsoft SQL Server Versions on Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport)
	// in the Amazon RDS User Guide.
	//
	// MySQL
	//
	// For information, see MySQL on Amazon RDS Versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
	// in the Amazon RDS User Guide.
	//
	// Oracle
	//
	// For information, see Oracle Database Engine Release Notes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
	// in the Amazon RDS User Guide.
	//
	// PostgreSQL
	//
	// For information, see Amazon RDS for PostgreSQL versions and extensions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts)
	// in the Amazon RDS User Guide.
	//
	// Note: Downgrades are not allowed by AWS and attempts to set a lower version
	// will be ignored.
	engineVersion?: null | string @go(EngineVersion,*string)

	// The DB instance snapshot identifier of the new DB instance snapshot created
	// when SkipFinalSnapshot is disabled.
	//
	// Specifying this parameter and also skipping the creation of a final DB instance
	// snapshot with the SkipFinalShapshot parameter results in an error.
	//
	// Constraints:
	//
	//    * Must be 1 to 255 letters, numbers, or hyphens.
	//
	//    * First character must be a letter
	//
	//    * Can't end with a hyphen or contain two consecutive hyphens
	// +immutable
	// +optional
	finalDBSnapshotIdentifier?: string @go(FinalDBSnapshotIdentifier)

	// A value that indicates whether to skip the creation of a final DB instance
	// snapshot before the DB instance is deleted. If skip is specified, no DB instance
	// snapshot is created. If skip isn't specified, a DB instance snapshot is created
	// before the DB instance is deleted. By default, skip isn't specified, and the
	// DB instance snapshot is created. By default, this parameter is disabled.
	//
	// You must specify a FinalDBSnapshotIdentifier parameter if SkipFinalSnapshot
	// is disabled.
	// +immutable
	// +optional
	skipFinalSnapshot?: bool @go(SkipFinalSnapshot)

	// A list of Amazon EC2 VPC security groups to authorize on this DB instance.
	// This change is asynchronously applied as soon as possible.
	//
	// This setting doesn't apply to RDS Custom.
	//
	// Amazon Aurora
	// Not applicable. The associated list of EC2 VPC security groups is managed
	// by the DB cluster. For more information, see ModifyDBCluster.
	//
	// Constraints:
	//    * If supplied, must match existing VpcSecurityGroupIds.
	vpcSecurityGroupIDs?: [...string] @go(VPCSecurityGroupIDs,[]string)

	// A value that indicates whether the modifications in this request and any
	// pending modifications are asynchronously applied as soon as possible, regardless
	// of the PreferredMaintenanceWindow setting for the DB instance. By default,
	// this parameter is disabled.
	//
	// If this parameter is disabled, changes to the DB instance are applied during
	// the next maintenance window. Some parameter changes can cause an outage and
	// are applied on the next call to RebootDBInstance, or the next failure reboot.
	// Review the table of parameters in Modifying a DB Instance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	// in the Amazon RDS User Guide. to see the impact of enabling or disabling
	// ApplyImmediately for each modified parameter and to determine when the changes
	// are applied.
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// RestoreFrom specifies the details of the backup to restore when creating a new DBInstance.
	// +optional
	restoreFrom?: null | #RestoreDBInstanceBackupConfiguration @go(RestoreFrom,*RestoreDBInstanceBackupConfiguration)

	// DeleteAutomatedBackups indicates whether to remove automated backups
	// immediately after the DB instance is deleted. The default is to
	// remove automated backups immediately after the DB instance is
	// deleted.
	// +optional
	deleteAutomatedBackups?: null | bool @go(DeleteAutomatedBackups,*bool)
}

// CustomDBInstanceRoleAssociationParameters are custom parameters for the DBInstanceRoleAssociation
#CustomDBInstanceRoleAssociationParameters: {
	// The name of the DB instance to associate the IAM role with.
	// +crossplane:generate:reference:type=DBInstance
	// +optional
	dbInstanceIdentifier?: null | string @go(DBInstanceIdentifier,*string)

	// The Amazon Resource Name (ARN) of the IAM role to associate with the DB instance,
	// for example arn:aws:iam::123456789012:role/AccessRole.
	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/crossplane-contrib/provider-aws/apis/iam/v1beta1.RoleARN()
	// +optional
	roleArn?: null | string @go(RoleARN,*string)
}

// CustomOptionGroupParameters are custom parameters for the OptionGroup
#CustomOptionGroupParameters: {
	// Option in this list are added to the option group or, if already present,
	// the specified configuration is used to update the existing configuration.
	option?: [...null | #CustomOptionConfiguration] @go(Option,[]*CustomOptionConfiguration)

	// A value that indicates whether to apply the change immediately or during
	// the next maintenance window for each instance associated with the option
	// group.
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)
}

// CustomOptionConfiguration are custom parameters for the OptionConfiguration
#CustomOptionConfiguration: {
	dbSecurityGroupMemberships?: [...null | string] @go(DBSecurityGroupMemberships,[]*string)
	optionName?: null | string @go(OptionName,*string)
	optionSettings?: [...null | #CustomOptionGroupOptionSetting] @go(OptionSettings,[]*CustomOptionGroupOptionSetting)
	optionVersion?: null | string @go(OptionVersion,*string)
	port?:          null | int64  @go(Port,*int64)
	vpcSecurityGroupMemberships?: [...null | string] @go(VPCSecurityGroupMemberships,[]*string)
}

// CustomOptionGroupOptionSetting are custom parameters for the OptionGroupOptionSetting
#CustomOptionGroupOptionSetting: {
	name?:  null | string @go(Name,*string)
	value?: null | string @go(Value,*string)
}

// CustomParameter are custom parameters for the Parameter
#CustomParameter: {
	// The apply method of the parameter.
	// AWS actually only modifies to value set here, if the parameter value changes too.
	// +kubebuilder:validation:Enum=immediate;pending-reboot
	// +kubebuilder:validation:Required
	applyMethod?: null | string @go(ApplyMethod,*string)

	// The name of the parameter.
	// +kubebuilder:validation:Required
	parameterName?: null | string @go(ParameterName,*string)

	// The value of the parameter.
	// +kubebuilder:validation:Required
	parameterValue?: null | string @go(ParameterValue,*string)
}
