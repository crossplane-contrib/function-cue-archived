// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/batch/v1alpha1

package v1alpha1

// JobQueueParameters defines the desired state of JobQueue
#JobQueueParameters: {
	// Region is which region the JobQueue will be created.
	// +kubebuilder:validation:Required
	region: string @go(Region)

	// The priority of the job queue. Job queues with a higher priority (or a higher
	// integer value for the priority parameter) are evaluated first when associated
	// with the same compute environment. Priority is determined in descending order.
	// For example, a job queue with a priority value of 10 is given scheduling
	// preference over a job queue with a priority value of 1. All of the compute
	// environments must be either EC2 (EC2 or SPOT) or Fargate (FARGATE or FARGATE_SPOT);
	// EC2 and Fargate compute environments can't be mixed.
	// +kubebuilder:validation:Required
	priority?: null | int64 @go(Priority,*int64)

	// The Amazon Resource Name (ARN) of the fair share scheduling policy. If this
	// parameter is specified, the job queue uses a fair share scheduling policy.
	// If this parameter isn't specified, the job queue uses a first in, first out
	// (FIFO) scheduling policy. After a job queue is created, you can replace but
	// can't remove the fair share scheduling policy. The format is aws:Partition:batch:Region:Account:scheduling-policy/Name
	// . An example is aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy.
	schedulingPolicyARN?: null | string @go(SchedulingPolicyARN,*string)

	// The tags that you apply to the job queue to help you categorize and organize
	// your resources. Each tag consists of a key and an optional value. For more
	// information, see Tagging your Batch resources (https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html)
	// in Batch User Guide.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	#CustomJobQueueParameters
}

// JobQueueSpec defines the desired state of JobQueue
#JobQueueSpec: {
	forProvider: #JobQueueParameters @go(ForProvider)
}

// JobQueueObservation defines the observed state of JobQueue
#JobQueueObservation: {
	// The Amazon Resource Name (ARN) of the job queue.
	jobQueueARN?: null | string @go(JobQueueARN,*string)

	// The name of the job queue.
	jobQueueName?: null | string @go(JobQueueName,*string)

	// Describes the ability of the queue to accept new jobs. If the job queue state
	// is ENABLED, it can accept jobs. If the job queue state is DISABLED, new jobs
	// can't be added to the queue, but jobs already in the queue can finish.
	state?: null | string @go(State,*string)

	// The status of the job queue (for example, CREATING or VALID).
	status?: null | string @go(Status,*string)
}

// JobQueueStatus defines the observed state of JobQueue.
#JobQueueStatus: {
	atProvider?: #JobQueueObservation @go(AtProvider)
}

// JobQueue is the Schema for the JobQueues API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#JobQueue: {
	spec:    #JobQueueSpec   @go(Spec)
	status?: #JobQueueStatus @go(Status)
}

// JobQueueList contains a list of JobQueues
#JobQueueList: {
	items: [...#JobQueue] @go(Items,[]JobQueue)
}
