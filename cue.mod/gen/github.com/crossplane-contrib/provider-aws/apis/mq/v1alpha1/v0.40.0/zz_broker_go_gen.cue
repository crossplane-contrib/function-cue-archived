// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/crossplane-contrib/provider-aws/apis/mq/v1alpha1

package v1alpha1

// BrokerParameters defines the desired state of Broker
#BrokerParameters: {
	// Region is which region the Broker will be created.
	// +kubebuilder:validation:Required
	region:                  string        @go(Region)
	authenticationStrategy?: null | string @go(AuthenticationStrategy,*string)

	// +kubebuilder:validation:Required
	autoMinorVersionUpgrade?: null | bool             @go(AutoMinorVersionUpgrade,*bool)
	configuration?:           null | #ConfigurationID @go(Configuration,*ConfigurationID)
	creatorRequestID?:        null | string           @go(CreatorRequestID,*string)

	// +kubebuilder:validation:Required
	deploymentMode?:    null | string             @go(DeploymentMode,*string)
	encryptionOptions?: null | #EncryptionOptions @go(EncryptionOptions,*EncryptionOptions)

	// +kubebuilder:validation:Required
	engineType?: null | string @go(EngineType,*string)

	// +kubebuilder:validation:Required
	engineVersion?: null | string @go(EngineVersion,*string)

	// +kubebuilder:validation:Required
	hostInstanceType?:           null | string                   @go(HostInstanceType,*string)
	ldapServerMetadata?:         null | #LDAPServerMetadataInput @go(LDAPServerMetadata,*LDAPServerMetadataInput)
	logs?:                       null | #Logs                    @go(Logs,*Logs)
	maintenanceWindowStartTime?: null | #WeeklyStartTime         @go(MaintenanceWindowStartTime,*WeeklyStartTime)

	// +kubebuilder:validation:Required
	publiclyAccessible?: null | bool   @go(PubliclyAccessible,*bool)
	storageType?:        null | string @go(StorageType,*string)
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	#CustomBrokerParameters
}

// BrokerSpec defines the desired state of Broker
#BrokerSpec: {
	forProvider: #BrokerParameters @go(ForProvider)
}

// BrokerObservation defines the observed state of Broker
#BrokerObservation: {
	brokerARN?: null | string @go(BrokerARN,*string)
	brokerID?:  null | string @go(BrokerID,*string)
	brokerInstances?: [...null | #BrokerInstance] @go(BrokerInstances,[]*BrokerInstance)
	brokerState?:                   null | string                    @go(BrokerState,*string)
	configurations?:                null | #Configurations           @go(Configurations,*Configurations)
	logsSummary?:                   null | #LogsSummary              @go(LogsSummary,*LogsSummary)
	pendingAuthenticationStrategy?: null | string                    @go(PendingAuthenticationStrategy,*string)
	pendingEngineVersion?:          null | string                    @go(PendingEngineVersion,*string)
	pendingHostInstanceType?:       null | string                    @go(PendingHostInstanceType,*string)
	pendingLDAPServerMetadata?:     null | #LDAPServerMetadataOutput @go(PendingLDAPServerMetadata,*LDAPServerMetadataOutput)
	pendingSecurityGroups?: [...null | string] @go(PendingSecurityGroups,[]*string)
	users?: [...null | #UserSummary] @go(Users,[]*UserSummary)
}

// BrokerStatus defines the observed state of Broker.
#BrokerStatus: {
	atProvider?: #BrokerObservation @go(AtProvider)
}

// Broker is the Schema for the Brokers API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:storageversion
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Broker: {
	spec:    #BrokerSpec   @go(Spec)
	status?: #BrokerStatus @go(Status)
}

// BrokerList contains a list of Brokers
#BrokerList: {
	items: [...#Broker] @go(Items,[]Broker)
}
