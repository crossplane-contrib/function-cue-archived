// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/workflows/v1beta1

package v1beta1

#WorkflowInitParameters: {
	// The KMS key used to encrypt workflow and execution data.
	// Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	cryptoKeyName?: null | string @go(CryptoKeyName,*string)

	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	description?: null | string @go(Description,*string)

	// A set of key/value label pairs to assign to this Workflow.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// Name of the Workflow.
	name?: null | string @go(Name,*string)

	// Creates a unique name beginning with the
	// specified prefix. If this and name are unspecified, a random value is chosen for the name.
	namePrefix?: null | string @go(NamePrefix,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The region of the workflow.
	region?: null | string @go(Region,*string)

	// Workflow code to be executed. The size limit is 32KB.
	sourceContents?: null | string @go(SourceContents,*string)
}

#WorkflowObservation: {
	// The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	createTime?: null | string @go(CreateTime,*string)

	// The KMS key used to encrypt workflow and execution data.
	// Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	cryptoKeyName?: null | string @go(CryptoKeyName,*string)

	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	description?: null | string @go(Description,*string)

	// an identifier for the resource with format projects/{{project}}/locations/{{region}}/workflows/{{name}}
	id?: null | string @go(ID,*string)

	// A set of key/value label pairs to assign to this Workflow.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// Name of the Workflow.
	name?: null | string @go(Name,*string)

	// Creates a unique name beginning with the
	// specified prefix. If this and name are unspecified, a random value is chosen for the name.
	namePrefix?: null | string @go(NamePrefix,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The region of the workflow.
	region?: null | string @go(Region,*string)

	// The revision of the workflow. A new one is generated if the service account or source contents is changed.
	revisionId?: null | string @go(RevisionID,*string)

	// Name of the service account associated with the latest workflow version. This service
	// account represents the identity of the workflow and determines what permissions the workflow has.
	// Format: projects/{project}/serviceAccounts/{account} or {account}.
	// Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
	// The {account} value can be the email address or the unique_id of the service account.
	// If not provided, workflow will use the project's default service account.
	// Modifying this field for an existing workflow results in a new workflow revision.
	serviceAccount?: null | string @go(ServiceAccount,*string)

	// Workflow code to be executed. The size limit is 32KB.
	sourceContents?: null | string @go(SourceContents,*string)

	// State of the workflow deployment.
	state?: null | string @go(State,*string)

	// The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	updateTime?: null | string @go(UpdateTime,*string)
}

#WorkflowParameters: {
	// The KMS key used to encrypt workflow and execution data.
	// Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	// +kubebuilder:validation:Optional
	cryptoKeyName?: null | string @go(CryptoKeyName,*string)

	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A set of key/value label pairs to assign to this Workflow.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// Name of the Workflow.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Creates a unique name beginning with the
	// specified prefix. If this and name are unspecified, a random value is chosen for the name.
	// +kubebuilder:validation:Optional
	namePrefix?: null | string @go(NamePrefix,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The region of the workflow.
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)

	// Name of the service account associated with the latest workflow version. This service
	// account represents the identity of the workflow and determines what permissions the workflow has.
	// Format: projects/{project}/serviceAccounts/{account} or {account}.
	// Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
	// The {account} value can be the email address or the unique_id of the service account.
	// If not provided, workflow will use the project's default service account.
	// Modifying this field for an existing workflow results in a new workflow revision.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serviceAccount?: null | string @go(ServiceAccount,*string)

	// Workflow code to be executed. The size limit is 32KB.
	// +kubebuilder:validation:Optional
	sourceContents?: null | string @go(SourceContents,*string)
}

// WorkflowSpec defines the desired state of Workflow
#WorkflowSpec: {
	forProvider: #WorkflowParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #WorkflowInitParameters @go(InitProvider)
}

// WorkflowStatus defines the observed state of Workflow.
#WorkflowStatus: {
	atProvider?: #WorkflowObservation @go(AtProvider)
}

// Workflow is the Schema for the Workflows API. Workflow program to be executed by Workflows.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Workflow: {
	spec:    #WorkflowSpec   @go(Spec)
	status?: #WorkflowStatus @go(Status)
}

// WorkflowList contains a list of Workflows
#WorkflowList: {
	items: [...#Workflow] @go(Items,[]Workflow)
}
