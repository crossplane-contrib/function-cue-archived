// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/dialogflowcx/v1beta1

package v1beta1

#AgentObservation: {
	// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
	avatarUri?: null | string @go(AvatarURI,*string)

	// The default language of the agent as a language tag. See Language Support
	// for a list of the currently supported language codes. This field cannot be updated after creation.
	defaultLanguageCode?: null | string @go(DefaultLanguageCode,*string)

	// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
	description?: null | string @go(Description,*string)

	// The human-readable name of the agent, unique within the location.
	displayName?: null | string @go(DisplayName,*string)

	// Indicates if automatic spell correction is enabled in detect intent requests.
	enableSpellCorrection?: null | bool @go(EnableSpellCorrection,*bool)

	// Determines whether this agent should log conversation queries.
	enableStackdriverLogging?: null | bool @go(EnableStackdriverLogging,*bool)

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/agents/{{name}}
	id?: null | string @go(ID,*string)

	// The name of the location this agent is located in.
	// ~> Note: The first time you are deploying an Agent in your project you must configure location settings.
	// This is a one time step but at the moment you can only configure location settings via the Dialogflow CX console.
	// Another options is to use global location so you don't need to manually configure location settings.
	location?: null | string @go(Location,*string)

	// The unique identifier of the agent.
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Name of the SecuritySettings reference for the agent. Format: projects//locations//securitySettings/.
	securitySettings?: null | string @go(SecuritySettings,*string)

	// Settings related to speech recognition.
	// Structure is documented below.
	speechToTextSettings?: [...#SpeechToTextSettingsObservation] @go(SpeechToTextSettings,[]SpeechToTextSettingsObservation)

	// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects//locations//agents//flows/.
	startFlow?: null | string @go(StartFlow,*string)

	// The list of all languages supported by this agent (except for the default_language_code).
	supportedLanguageCodes?: [...null | string] @go(SupportedLanguageCodes,[]*string)

	// The time zone of this agent from the time zone database, e.g., America/New_York,
	// Europe/Paris.
	timeZone?: null | string @go(TimeZone,*string)
}

#AgentParameters: {
	// The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted Web Demo integration.
	// +kubebuilder:validation:Optional
	avatarUri?: null | string @go(AvatarURI,*string)

	// The default language of the agent as a language tag. See Language Support
	// for a list of the currently supported language codes. This field cannot be updated after creation.
	// +kubebuilder:validation:Optional
	defaultLanguageCode?: null | string @go(DefaultLanguageCode,*string)

	// The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The human-readable name of the agent, unique within the location.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// Indicates if automatic spell correction is enabled in detect intent requests.
	// +kubebuilder:validation:Optional
	enableSpellCorrection?: null | bool @go(EnableSpellCorrection,*bool)

	// Determines whether this agent should log conversation queries.
	// +kubebuilder:validation:Optional
	enableStackdriverLogging?: null | bool @go(EnableStackdriverLogging,*bool)

	// The name of the location this agent is located in.
	// ~> Note: The first time you are deploying an Agent in your project you must configure location settings.
	// This is a one time step but at the moment you can only configure location settings via the Dialogflow CX console.
	// Another options is to use global location so you don't need to manually configure location settings.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// Name of the SecuritySettings reference for the agent. Format: projects//locations//securitySettings/.
	// +kubebuilder:validation:Optional
	securitySettings?: null | string @go(SecuritySettings,*string)

	// Settings related to speech recognition.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	speechToTextSettings?: [...#SpeechToTextSettingsParameters] @go(SpeechToTextSettings,[]SpeechToTextSettingsParameters)

	// The list of all languages supported by this agent (except for the default_language_code).
	// +kubebuilder:validation:Optional
	supportedLanguageCodes?: [...null | string] @go(SupportedLanguageCodes,[]*string)

	// The time zone of this agent from the time zone database, e.g., America/New_York,
	// Europe/Paris.
	// +kubebuilder:validation:Optional
	timeZone?: null | string @go(TimeZone,*string)
}

#SpeechToTextSettingsObservation: {
	// Whether to use speech adaptation for speech recognition.
	enableSpeechAdaptation?: null | bool @go(EnableSpeechAdaptation,*bool)
}

#SpeechToTextSettingsParameters: {
	// Whether to use speech adaptation for speech recognition.
	// +kubebuilder:validation:Optional
	enableSpeechAdaptation?: null | bool @go(EnableSpeechAdaptation,*bool)
}

// AgentSpec defines the desired state of Agent
#AgentSpec: {
	forProvider: #AgentParameters @go(ForProvider)
}

// AgentStatus defines the observed state of Agent.
#AgentStatus: {
	atProvider?: #AgentObservation @go(AtProvider)
}

// Agent is the Schema for the Agents API. Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Agent: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.defaultLanguageCode)",message="defaultLanguageCode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.timeZone)",message="timeZone is a required parameter"
	spec:    #AgentSpec   @go(Spec)
	status?: #AgentStatus @go(Status)
}

// AgentList contains a list of Agents
#AgentList: {
	items: [...#Agent] @go(Items,[]Agent)
}
