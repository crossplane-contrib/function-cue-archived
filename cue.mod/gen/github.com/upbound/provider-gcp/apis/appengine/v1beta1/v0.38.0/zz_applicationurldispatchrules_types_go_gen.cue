// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/appengine/v1beta1

package v1beta1

#ApplicationURLDispatchRulesInitParameters: {
	// Rules to match an HTTP request and dispatch that request to a service.
	// Structure is documented below.
	dispatchRules?: [...#DispatchRulesInitParameters] @go(DispatchRules,[]DispatchRulesInitParameters)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#ApplicationURLDispatchRulesObservation: {
	// Rules to match an HTTP request and dispatch that request to a service.
	// Structure is documented below.
	dispatchRules?: [...#DispatchRulesObservation] @go(DispatchRules,[]DispatchRulesObservation)

	// an identifier for the resource with format {{project}}
	id?: null | string @go(ID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#ApplicationURLDispatchRulesParameters: {
	// Rules to match an HTTP request and dispatch that request to a service.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	dispatchRules?: [...#DispatchRulesParameters] @go(DispatchRules,[]DispatchRulesParameters)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

#DispatchRulesInitParameters: {
	// Domain name to match against. The wildcard "" is supported if specified before a period: ".".
	// Defaults to matching all domains: "*".
	domain?: null | string @go(Domain,*string)

	// Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
	// The sum of the lengths of the domain and path may not exceed 100 characters.
	path?: null | string @go(Path,*string)
}

#DispatchRulesObservation: {
	// Domain name to match against. The wildcard "" is supported if specified before a period: ".".
	// Defaults to matching all domains: "*".
	domain?: null | string @go(Domain,*string)

	// Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
	// The sum of the lengths of the domain and path may not exceed 100 characters.
	path?: null | string @go(Path,*string)

	// Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
	// The sum of the lengths of the domain and path may not exceed 100 characters.
	service?: null | string @go(Service,*string)
}

#DispatchRulesParameters: {
	// Domain name to match against. The wildcard "" is supported if specified before a period: ".".
	// Defaults to matching all domains: "*".
	// +kubebuilder:validation:Optional
	domain?: null | string @go(Domain,*string)

	// Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
	// The sum of the lengths of the domain and path may not exceed 100 characters.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.
	// The sum of the lengths of the domain and path may not exceed 100 characters.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/appengine/v1beta1.StandardAppVersion
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("service",false)
	// +kubebuilder:validation:Optional
	service?: null | string @go(Service,*string)
}

// ApplicationURLDispatchRulesSpec defines the desired state of ApplicationURLDispatchRules
#ApplicationURLDispatchRulesSpec: {
	forProvider: #ApplicationURLDispatchRulesParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ApplicationURLDispatchRulesInitParameters @go(InitProvider)
}

// ApplicationURLDispatchRulesStatus defines the observed state of ApplicationURLDispatchRules.
#ApplicationURLDispatchRulesStatus: {
	atProvider?: #ApplicationURLDispatchRulesObservation @go(AtProvider)
}

// ApplicationURLDispatchRules is the Schema for the ApplicationURLDispatchRuless API. Rules to match an HTTP request and dispatch that request to a service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ApplicationURLDispatchRules: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dispatchRules) || (has(self.initProvider) && has(self.initProvider.dispatchRules))",message="spec.forProvider.dispatchRules is a required parameter"
	spec:    #ApplicationURLDispatchRulesSpec   @go(Spec)
	status?: #ApplicationURLDispatchRulesStatus @go(Status)
}

// ApplicationURLDispatchRulesList contains a list of ApplicationURLDispatchRuless
#ApplicationURLDispatchRulesList: {
	items: [...#ApplicationURLDispatchRules] @go(Items,[]ApplicationURLDispatchRules)
}
