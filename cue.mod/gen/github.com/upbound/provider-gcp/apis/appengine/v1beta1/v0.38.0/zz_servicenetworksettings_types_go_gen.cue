// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/appengine/v1beta1

package v1beta1

#NetworkSettingsInitParameters: {
	// The ingress settings for version or service.
	// Default value is INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED.
	// Possible values are: INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED, INGRESS_TRAFFIC_ALLOWED_ALL, INGRESS_TRAFFIC_ALLOWED_INTERNAL_ONLY, INGRESS_TRAFFIC_ALLOWED_INTERNAL_AND_LB.
	ingressTrafficAllowed?: null | string @go(IngressTrafficAllowed,*string)
}

#NetworkSettingsObservation: {
	// The ingress settings for version or service.
	// Default value is INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED.
	// Possible values are: INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED, INGRESS_TRAFFIC_ALLOWED_ALL, INGRESS_TRAFFIC_ALLOWED_INTERNAL_ONLY, INGRESS_TRAFFIC_ALLOWED_INTERNAL_AND_LB.
	ingressTrafficAllowed?: null | string @go(IngressTrafficAllowed,*string)
}

#NetworkSettingsParameters: {
	// The ingress settings for version or service.
	// Default value is INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED.
	// Possible values are: INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED, INGRESS_TRAFFIC_ALLOWED_ALL, INGRESS_TRAFFIC_ALLOWED_INTERNAL_ONLY, INGRESS_TRAFFIC_ALLOWED_INTERNAL_AND_LB.
	// +kubebuilder:validation:Optional
	ingressTrafficAllowed?: null | string @go(IngressTrafficAllowed,*string)
}

#ServiceNetworkSettingsInitParameters: {
	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	networkSettings?: [...#NetworkSettingsInitParameters] @go(NetworkSettings,[]NetworkSettingsInitParameters)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#ServiceNetworkSettingsObservation: {
	// an identifier for the resource with format apps/{{project}}/services/{{service}}
	id?: null | string @go(ID,*string)

	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	networkSettings?: [...#NetworkSettingsObservation] @go(NetworkSettings,[]NetworkSettingsObservation)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The name of the service these settings apply to.
	service?: null | string @go(Service,*string)
}

#ServiceNetworkSettingsParameters: {
	// Ingress settings for this service. Will apply to all versions.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	networkSettings?: [...#NetworkSettingsParameters] @go(NetworkSettings,[]NetworkSettingsParameters)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The name of the service these settings apply to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/appengine/v1beta1.StandardAppVersion
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("service",false)
	// +kubebuilder:validation:Optional
	service?: null | string @go(Service,*string)
}

// ServiceNetworkSettingsSpec defines the desired state of ServiceNetworkSettings
#ServiceNetworkSettingsSpec: {
	forProvider: #ServiceNetworkSettingsParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ServiceNetworkSettingsInitParameters @go(InitProvider)
}

// ServiceNetworkSettingsStatus defines the observed state of ServiceNetworkSettings.
#ServiceNetworkSettingsStatus: {
	atProvider?: #ServiceNetworkSettingsObservation @go(AtProvider)
}

// ServiceNetworkSettings is the Schema for the ServiceNetworkSettingss API. A NetworkSettings resource is a container for ingress settings for a version or service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ServiceNetworkSettings: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.networkSettings) || (has(self.initProvider) && has(self.initProvider.networkSettings))",message="spec.forProvider.networkSettings is a required parameter"
	spec:    #ServiceNetworkSettingsSpec   @go(Spec)
	status?: #ServiceNetworkSettingsStatus @go(Status)
}

// ServiceNetworkSettingsList contains a list of ServiceNetworkSettingss
#ServiceNetworkSettingsList: {
	items: [...#ServiceNetworkSettings] @go(Items,[]ServiceNetworkSettings)
}
