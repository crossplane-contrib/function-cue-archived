// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/containerazure/v1beta1

package v1beta1

#AutoscalingObservation: {
	// Maximum number of nodes in the node pool. Must be >= min_node_count.
	maxNodeCount?: null | float64 @go(MaxNodeCount,*float64)

	// Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
	minNodeCount?: null | float64 @go(MinNodeCount,*float64)
}

#AutoscalingParameters: {
	// Maximum number of nodes in the node pool. Must be >= min_node_count.
	// +kubebuilder:validation:Required
	maxNodeCount?: null | float64 @go(MaxNodeCount,*float64)

	// Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
	// +kubebuilder:validation:Required
	minNodeCount?: null | float64 @go(MinNodeCount,*float64)
}

#ConfigObservation: {
	// Proxy configuration for outbound HTTP(S) traffic.
	proxyConfig?: [...#ConfigProxyConfigObservation] @go(ProxyConfig,[]ConfigProxyConfigObservation)

	// Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
	rootVolume?: [...#ConfigRootVolumeObservation] @go(RootVolume,[]ConfigRootVolumeObservation)

	// SSH configuration for how to access the node pool machines.
	sshConfig?: [...#ConfigSSHConfigObservation] @go(SSHConfig,[]ConfigSSHConfigObservation)

	// Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Optional. The Azure VM size name. Example: Standard_DS2_v2. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to Standard_DS2_v2.
	vmSize?: null | string @go(VMSize,*string)
}

#ConfigParameters: {
	// Proxy configuration for outbound HTTP(S) traffic.
	// +kubebuilder:validation:Optional
	proxyConfig?: [...#ConfigProxyConfigParameters] @go(ProxyConfig,[]ConfigProxyConfigParameters)

	// Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
	// +kubebuilder:validation:Optional
	rootVolume?: [...#ConfigRootVolumeParameters] @go(RootVolume,[]ConfigRootVolumeParameters)

	// SSH configuration for how to access the node pool machines.
	// +kubebuilder:validation:Required
	sshConfig: [...#ConfigSSHConfigParameters] @go(SSHConfig,[]ConfigSSHConfigParameters)

	// Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Optional. The Azure VM size name. Example: Standard_DS2_v2. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to Standard_DS2_v2.
	// +kubebuilder:validation:Optional
	vmSize?: null | string @go(VMSize,*string)
}

#ConfigProxyConfigObservation: {
	// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>
	resourceGroupId?: null | string @go(ResourceGroupID,*string)

	// The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
	secretId?: null | string @go(SecretID,*string)
}

#ConfigProxyConfigParameters: {
	// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>
	// +kubebuilder:validation:Required
	resourceGroupId?: null | string @go(ResourceGroupID,*string)

	// The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
	// +kubebuilder:validation:Required
	secretId?: null | string @go(SecretID,*string)
}

#ConfigRootVolumeObservation: {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	sizeGib?: null | float64 @go(SizeGib,*float64)
}

#ConfigRootVolumeParameters: {
	// Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
	// +kubebuilder:validation:Optional
	sizeGib?: null | float64 @go(SizeGib,*float64)
}

#ConfigSSHConfigObservation: {
	// The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
	authorizedKey?: null | string @go(AuthorizedKey,*string)
}

#ConfigSSHConfigParameters: {
	// The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
	// +kubebuilder:validation:Required
	authorizedKey?: null | string @go(AuthorizedKey,*string)
}

#MaxPodsConstraintObservation: {
	// The maximum number of pods to schedule on a single node.
	maxPodsPerNode?: null | float64 @go(MaxPodsPerNode,*float64)
}

#MaxPodsConstraintParameters: {
	// The maximum number of pods to schedule on a single node.
	// +kubebuilder:validation:Required
	maxPodsPerNode?: null | float64 @go(MaxPodsPerNode,*float64)
}

#NodePoolObservation: {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// Autoscaler configuration for this node pool.
	autoscaling?: [...#AutoscalingObservation] @go(Autoscaling,[]AutoscalingObservation)

	// Optional. The Azure availability zone of the nodes in this nodepool. When unspecified, it defaults to 1.
	azureAvailabilityZone?: null | string @go(AzureAvailabilityZone,*string)

	// The azureCluster for the resource
	cluster?: null | string @go(Cluster,*string)

	// The node configuration of the node pool.
	config?: [...#ConfigObservation] @go(Config,[]ConfigObservation)

	// Output only. The time at which this node pool was created.
	createTime?: null | string @go(CreateTime,*string)

	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	etag?: null | string @go(Etag,*string)

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/azureClusters/{{cluster}}/azureNodePools/{{name}}
	id?: null | string @go(ID,*string)

	// The location for the resource
	location?: null | string @go(Location,*string)

	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	maxPodsConstraint?: [...#MaxPodsConstraintObservation] @go(MaxPodsConstraint,[]MaxPodsConstraintObservation)

	// The project for the resource
	project?: null | string @go(Project,*string)

	// Output only. If set, there are currently pending changes to the node pool.
	reconciling?: null | bool @go(Reconciling,*bool)

	// Output only. The current state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
	state?: null | string @go(State,*string)

	// The ARM ID of the subnet where the node pool VMs run. Make sure it's a subnet under the virtual network in the cluster configuration.
	subnetId?: null | string @go(SubnetID,*string)

	// Output only. A globally unique identifier for the node pool.
	uid?: null | string @go(UID,*string)

	// Output only. The time at which this node pool was last updated.
	updateTime?: null | string @go(UpdateTime,*string)

	// The Kubernetes version (e.g. 1.19.10-gke.1000) running on this node pool.
	version?: null | string @go(Version,*string)
}

#NodePoolParameters: {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	// +kubebuilder:validation:Optional
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// Autoscaler configuration for this node pool.
	// +kubebuilder:validation:Optional
	autoscaling?: [...#AutoscalingParameters] @go(Autoscaling,[]AutoscalingParameters)

	// Optional. The Azure availability zone of the nodes in this nodepool. When unspecified, it defaults to 1.
	// +kubebuilder:validation:Optional
	azureAvailabilityZone?: null | string @go(AzureAvailabilityZone,*string)

	// The azureCluster for the resource
	// +crossplane:generate:reference:type=Cluster
	// +kubebuilder:validation:Optional
	cluster?: null | string @go(Cluster,*string)

	// The node configuration of the node pool.
	// +kubebuilder:validation:Optional
	config?: [...#ConfigParameters] @go(Config,[]ConfigParameters)

	// The location for the resource
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	// +kubebuilder:validation:Optional
	maxPodsConstraint?: [...#MaxPodsConstraintParameters] @go(MaxPodsConstraint,[]MaxPodsConstraintParameters)

	// The project for the resource
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The ARM ID of the subnet where the node pool VMs run. Make sure it's a subnet under the virtual network in the cluster configuration.
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)

	// The Kubernetes version (e.g. 1.19.10-gke.1000) running on this node pool.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

// NodePoolSpec defines the desired state of NodePool
#NodePoolSpec: {
	forProvider: #NodePoolParameters @go(ForProvider)
}

// NodePoolStatus defines the observed state of NodePool.
#NodePoolStatus: {
	atProvider?: #NodePoolObservation @go(AtProvider)
}

// NodePool is the Schema for the NodePools API. An Anthos node pool running on Azure.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#NodePool: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.autoscaling)",message="autoscaling is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.config)",message="config is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.maxPodsConstraint)",message="maxPodsConstraint is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.subnetId)",message="subnetId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.version)",message="version is a required parameter"
	spec:    #NodePoolSpec   @go(Spec)
	status?: #NodePoolStatus @go(Status)
}

// NodePoolList contains a list of NodePools
#NodePoolList: {
	items: [...#NodePool] @go(Items,[]NodePool)
}
