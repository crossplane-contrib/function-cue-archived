// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1

package v1beta1

#AuditLogConfigObservation: {
	exemptedMembers?: [...null | string] @go(ExemptedMembers,[]*string)
	logType?: null | string @go(LogType,*string)
}

#AuditLogConfigParameters: {
	// +kubebuilder:validation:Optional
	exemptedMembers?: [...null | string] @go(ExemptedMembers,[]*string)

	// +kubebuilder:validation:Required
	logType?: null | string @go(LogType,*string)
}

#OrganizationIAMAuditConfigObservation: {
	auditLogConfig?: [...#AuditLogConfigObservation] @go(AuditLogConfig,[]AuditLogConfigObservation)
	etag?:    null | string @go(Etag,*string)
	id?:      null | string @go(ID,*string)
	orgId?:   null | string @go(OrgID,*string)
	service?: null | string @go(Service,*string)
}

#OrganizationIAMAuditConfigParameters: {
	// +kubebuilder:validation:Optional
	auditLogConfig?: [...#AuditLogConfigParameters] @go(AuditLogConfig,[]AuditLogConfigParameters)

	// +kubebuilder:validation:Optional
	orgId?: null | string @go(OrgID,*string)

	// +kubebuilder:validation:Optional
	service?: null | string @go(Service,*string)
}

// OrganizationIAMAuditConfigSpec defines the desired state of OrganizationIAMAuditConfig
#OrganizationIAMAuditConfigSpec: {
	forProvider: #OrganizationIAMAuditConfigParameters @go(ForProvider)
}

// OrganizationIAMAuditConfigStatus defines the observed state of OrganizationIAMAuditConfig.
#OrganizationIAMAuditConfigStatus: {
	atProvider?: #OrganizationIAMAuditConfigObservation @go(AtProvider)
}

// OrganizationIAMAuditConfig is the Schema for the OrganizationIAMAuditConfigs API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#OrganizationIAMAuditConfig: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.auditLogConfig)",message="auditLogConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.orgId)",message="orgId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.service)",message="service is a required parameter"
	spec:    #OrganizationIAMAuditConfigSpec   @go(Spec)
	status?: #OrganizationIAMAuditConfigStatus @go(Status)
}

// OrganizationIAMAuditConfigList contains a list of OrganizationIAMAuditConfigs
#OrganizationIAMAuditConfigList: {
	items: [...#OrganizationIAMAuditConfig] @go(Items,[]OrganizationIAMAuditConfig)
}
