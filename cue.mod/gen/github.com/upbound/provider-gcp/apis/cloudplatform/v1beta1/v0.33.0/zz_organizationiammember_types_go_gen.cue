// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1

package v1beta1

#OrganizationIAMMemberConditionObservation: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#OrganizationIAMMemberConditionParameters: {
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// +kubebuilder:validation:Required
	expression?: null | string @go(Expression,*string)

	// +kubebuilder:validation:Required
	title?: null | string @go(Title,*string)
}

#OrganizationIAMMemberObservation: {
	condition?: [...#OrganizationIAMMemberConditionObservation] @go(Condition,[]OrganizationIAMMemberConditionObservation)
	etag?:   null | string @go(Etag,*string)
	id?:     null | string @go(ID,*string)
	member?: null | string @go(Member,*string)
	orgId?:  null | string @go(OrgID,*string)
	role?:   null | string @go(Role,*string)
}

#OrganizationIAMMemberParameters: {
	// +kubebuilder:validation:Optional
	condition?: [...#OrganizationIAMMemberConditionParameters] @go(Condition,[]OrganizationIAMMemberConditionParameters)

	// +kubebuilder:validation:Optional
	member?: null | string @go(Member,*string)

	// +kubebuilder:validation:Optional
	orgId?: null | string @go(OrgID,*string)

	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)
}

// OrganizationIAMMemberSpec defines the desired state of OrganizationIAMMember
#OrganizationIAMMemberSpec: {
	forProvider: #OrganizationIAMMemberParameters @go(ForProvider)
}

// OrganizationIAMMemberStatus defines the observed state of OrganizationIAMMember.
#OrganizationIAMMemberStatus: {
	atProvider?: #OrganizationIAMMemberObservation @go(AtProvider)
}

// OrganizationIAMMember is the Schema for the OrganizationIAMMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#OrganizationIAMMember: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.member)",message="member is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.orgId)",message="orgId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.role)",message="role is a required parameter"
	spec:    #OrganizationIAMMemberSpec   @go(Spec)
	status?: #OrganizationIAMMemberStatus @go(Status)
}

// OrganizationIAMMemberList contains a list of OrganizationIAMMembers
#OrganizationIAMMemberList: {
	items: [...#OrganizationIAMMember] @go(Items,[]OrganizationIAMMember)
}
