// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/cloudrun/v1beta1

package v1beta1

#ConfigMapRefInitParameters: {
	// The Secret to select from.
	// Structure is documented below.
	localObjectReference?: [...#LocalObjectReferenceInitParameters] @go(LocalObjectReference,[]LocalObjectReferenceInitParameters)

	// Specify whether the Secret must be defined
	optional?: null | bool @go(Optional,*bool)
}

#ConfigMapRefObservation: {
	// The Secret to select from.
	// Structure is documented below.
	localObjectReference?: [...#LocalObjectReferenceObservation] @go(LocalObjectReference,[]LocalObjectReferenceObservation)

	// Specify whether the Secret must be defined
	optional?: null | bool @go(Optional,*bool)
}

#ConfigMapRefParameters: {
	// The Secret to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	localObjectReference?: [...#LocalObjectReferenceParameters] @go(LocalObjectReference,[]LocalObjectReferenceParameters)

	// Specify whether the Secret must be defined
	// +kubebuilder:validation:Optional
	optional?: null | bool @go(Optional,*bool)
}

#ContainersInitParameters: {
	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	args?: [...null | string] @go(Args,[]*string)

	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	command?: [...null | string] @go(Command,[]*string)

	// List of environment variables to set in the container.
	// Structure is documented below.
	env?: [...#EnvInitParameters] @go(Env,[]EnvInitParameters)

	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.
	// Structure is documented below.
	envFrom?: [...#EnvFromInitParameters] @go(EnvFrom,[]EnvFromInitParameters)

	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	image?: null | string @go(Image,*string)

	// Periodic probe of container liveness. Container will be restarted if the probe fails.
	// Structure is documented below.
	livenessProbe?: [...#LivenessProbeInitParameters] @go(LivenessProbe,[]LivenessProbeInitParameters)

	// Volume's name.
	name?: null | string @go(Name,*string)

	// List of open ports in the container.
	// Structure is documented below.
	ports?: [...#PortsInitParameters] @go(Ports,[]PortsInitParameters)

	// Compute Resources required by this container. Used to set values such as max memory
	// Structure is documented below.
	resources?: [...#ResourcesInitParameters] @go(Resources,[]ResourcesInitParameters)

	// Startup probe of application within the container.
	// All other probes are disabled if a startup probe is provided, until it
	// succeeds. Container will not be added to service endpoints if the probe fails.
	// Structure is documented below.
	startupProbe?: [...#StartupProbeInitParameters] @go(StartupProbe,[]StartupProbeInitParameters)

	// Volume to mount into the container's filesystem.
	// Only supports SecretVolumeSources.
	// Structure is documented below.
	volumeMounts?: [...#VolumeMountsInitParameters] @go(VolumeMounts,[]VolumeMountsInitParameters)

	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	workingDir?: null | string @go(WorkingDir,*string)
}

#ContainersObservation: {
	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	args?: [...null | string] @go(Args,[]*string)

	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	command?: [...null | string] @go(Command,[]*string)

	// List of environment variables to set in the container.
	// Structure is documented below.
	env?: [...#EnvObservation] @go(Env,[]EnvObservation)

	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.
	// Structure is documented below.
	envFrom?: [...#EnvFromObservation] @go(EnvFrom,[]EnvFromObservation)

	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	image?: null | string @go(Image,*string)

	// Periodic probe of container liveness. Container will be restarted if the probe fails.
	// Structure is documented below.
	livenessProbe?: [...#LivenessProbeObservation] @go(LivenessProbe,[]LivenessProbeObservation)

	// Volume's name.
	name?: null | string @go(Name,*string)

	// List of open ports in the container.
	// Structure is documented below.
	ports?: [...#PortsObservation] @go(Ports,[]PortsObservation)

	// Compute Resources required by this container. Used to set values such as max memory
	// Structure is documented below.
	resources?: [...#ResourcesObservation] @go(Resources,[]ResourcesObservation)

	// Startup probe of application within the container.
	// All other probes are disabled if a startup probe is provided, until it
	// succeeds. Container will not be added to service endpoints if the probe fails.
	// Structure is documented below.
	startupProbe?: [...#StartupProbeObservation] @go(StartupProbe,[]StartupProbeObservation)

	// Volume to mount into the container's filesystem.
	// Only supports SecretVolumeSources.
	// Structure is documented below.
	volumeMounts?: [...#VolumeMountsObservation] @go(VolumeMounts,[]VolumeMountsObservation)

	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	workingDir?: null | string @go(WorkingDir,*string)
}

#ContainersParameters: {
	// Arguments to the entrypoint.
	// The docker image's CMD is used if this is not provided.
	// +kubebuilder:validation:Optional
	args?: [...null | string] @go(Args,[]*string)

	// Entrypoint array. Not executed within a shell.
	// The docker image's ENTRYPOINT is used if this is not provided.
	// +kubebuilder:validation:Optional
	command?: [...null | string] @go(Command,[]*string)

	// List of environment variables to set in the container.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	env?: [...#EnvParameters] @go(Env,[]EnvParameters)

	// List of sources to populate environment variables in the container.
	// All invalid keys will be reported as an event when the container is starting.
	// When a key exists in multiple sources, the value associated with the last source will
	// take precedence. Values defined by an Env with a duplicate key will take
	// precedence.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	envFrom?: [...#EnvFromParameters] @go(EnvFrom,[]EnvFromParameters)

	// Docker image name. This is most often a reference to a container located
	// in the container registry, such as gcr.io/cloudrun/hello
	// +kubebuilder:validation:Optional
	image?: null | string @go(Image,*string)

	// Periodic probe of container liveness. Container will be restarted if the probe fails.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	livenessProbe?: [...#LivenessProbeParameters] @go(LivenessProbe,[]LivenessProbeParameters)

	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// List of open ports in the container.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	ports?: [...#PortsParameters] @go(Ports,[]PortsParameters)

	// Compute Resources required by this container. Used to set values such as max memory
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	resources?: [...#ResourcesParameters] @go(Resources,[]ResourcesParameters)

	// Startup probe of application within the container.
	// All other probes are disabled if a startup probe is provided, until it
	// succeeds. Container will not be added to service endpoints if the probe fails.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	startupProbe?: [...#StartupProbeParameters] @go(StartupProbe,[]StartupProbeParameters)

	// Volume to mount into the container's filesystem.
	// Only supports SecretVolumeSources.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	volumeMounts?: [...#VolumeMountsParameters] @go(VolumeMounts,[]VolumeMountsParameters)

	// Container's working directory.
	// If not specified, the container runtime's default will be used, which
	// might be configured in the container image.
	// +kubebuilder:validation:Optional
	workingDir?: null | string @go(WorkingDir,*string)
}

#EnvFromInitParameters: {
	// The ConfigMap to select from.
	// Structure is documented below.
	configMapRef?: [...#ConfigMapRefInitParameters] @go(ConfigMapRef,[]ConfigMapRefInitParameters)

	// An optional identifier to prepend to each key in the ConfigMap.
	prefix?: null | string @go(Prefix,*string)

	// The Secret to select from.
	// Structure is documented below.
	secretRef?: [...#SecretRefInitParameters] @go(SecretRef,[]SecretRefInitParameters)
}

#EnvFromObservation: {
	// The ConfigMap to select from.
	// Structure is documented below.
	configMapRef?: [...#ConfigMapRefObservation] @go(ConfigMapRef,[]ConfigMapRefObservation)

	// An optional identifier to prepend to each key in the ConfigMap.
	prefix?: null | string @go(Prefix,*string)

	// The Secret to select from.
	// Structure is documented below.
	secretRef?: [...#SecretRefObservation] @go(SecretRef,[]SecretRefObservation)
}

#EnvFromParameters: {
	// The ConfigMap to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	configMapRef?: [...#ConfigMapRefParameters] @go(ConfigMapRef,[]ConfigMapRefParameters)

	// An optional identifier to prepend to each key in the ConfigMap.
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// The Secret to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	secretRef?: [...#SecretRefParameters] @go(SecretRef,[]SecretRefParameters)
}

#EnvInitParameters: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The header field value.
	value?: null | string @go(Value,*string)

	// Source for the environment variable's value. Only supports secret_key_ref.
	// Structure is documented below.
	valueFrom?: [...#ValueFromInitParameters] @go(ValueFrom,[]ValueFromInitParameters)
}

#EnvObservation: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The header field value.
	value?: null | string @go(Value,*string)

	// Source for the environment variable's value. Only supports secret_key_ref.
	// Structure is documented below.
	valueFrom?: [...#ValueFromObservation] @go(ValueFrom,[]ValueFromObservation)
}

#EnvParameters: {
	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The header field value.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)

	// Source for the environment variable's value. Only supports secret_key_ref.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	valueFrom?: [...#ValueFromParameters] @go(ValueFrom,[]ValueFromParameters)
}

#GRPCInitParameters: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	service?: null | string @go(Service,*string)
}

#GRPCObservation: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	service?: null | string @go(Service,*string)
}

#GRPCParameters: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	// +kubebuilder:validation:Optional
	service?: null | string @go(Service,*string)
}

#HTTPGetHTTPHeadersInitParameters: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The header field value.
	value?: null | string @go(Value,*string)
}

#HTTPGetHTTPHeadersObservation: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The header field value.
	value?: null | string @go(Value,*string)
}

#HTTPGetHTTPHeadersParameters: {
	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The header field value.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#HTTPGetInitParameters: {
	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	httpHeaders?: [...#HTTPHeadersInitParameters] @go(HTTPHeaders,[]HTTPHeadersInitParameters)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	path?: null | string @go(Path,*string)

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)
}

#HTTPGetObservation: {
	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	httpHeaders?: [...#HTTPHeadersObservation] @go(HTTPHeaders,[]HTTPHeadersObservation)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	path?: null | string @go(Path,*string)

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)
}

#HTTPGetParameters: {
	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	httpHeaders?: [...#HTTPHeadersParameters] @go(HTTPHeaders,[]HTTPHeadersParameters)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)
}

#HTTPHeadersInitParameters: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The header field value.
	value?: null | string @go(Value,*string)
}

#HTTPHeadersObservation: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The header field value.
	value?: null | string @go(Value,*string)
}

#HTTPHeadersParameters: {
	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The header field value.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#ItemsInitParameters: {
	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	key?: null | string @go(Key,*string)

	// Mode bits to use on this file, must be a value between 0000 and 0777. If
	// not specified, the volume defaultMode will be used. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and
	// the result can be other mode bits set.
	mode?: null | float64 @go(Mode,*float64)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	path?: null | string @go(Path,*string)
}

#ItemsObservation: {
	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	key?: null | string @go(Key,*string)

	// Mode bits to use on this file, must be a value between 0000 and 0777. If
	// not specified, the volume defaultMode will be used. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and
	// the result can be other mode bits set.
	mode?: null | float64 @go(Mode,*float64)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	path?: null | string @go(Path,*string)
}

#ItemsParameters: {
	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// Mode bits to use on this file, must be a value between 0000 and 0777. If
	// not specified, the volume defaultMode will be used. This might be in
	// conflict with other options that affect the file mode, like fsGroup, and
	// the result can be other mode bits set.
	// +kubebuilder:validation:Optional
	mode?: null | float64 @go(Mode,*float64)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)
}

#LivenessProbeInitParameters: {
	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | float64 @go(FailureThreshold,*float64)

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	grpc?: [...#GRPCInitParameters] @go(GRPC,[]GRPCInitParameters)

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	httpGet?: [...#HTTPGetInitParameters] @go(HTTPGet,[]HTTPGetInitParameters)

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	initialDelaySeconds?: null | float64 @go(InitialDelaySeconds,*float64)

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	periodSeconds?: null | float64 @go(PeriodSeconds,*float64)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)
}

#LivenessProbeObservation: {
	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | float64 @go(FailureThreshold,*float64)

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	grpc?: [...#GRPCObservation] @go(GRPC,[]GRPCObservation)

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	httpGet?: [...#HTTPGetObservation] @go(HTTPGet,[]HTTPGetObservation)

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	initialDelaySeconds?: null | float64 @go(InitialDelaySeconds,*float64)

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	periodSeconds?: null | float64 @go(PeriodSeconds,*float64)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)
}

#LivenessProbeParameters: {
	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	// +kubebuilder:validation:Optional
	failureThreshold?: null | float64 @go(FailureThreshold,*float64)

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	grpc?: [...#GRPCParameters] @go(GRPC,[]GRPCParameters)

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	httpGet?: [...#HTTPGetParameters] @go(HTTPGet,[]HTTPGetParameters)

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	// +kubebuilder:validation:Optional
	initialDelaySeconds?: null | float64 @go(InitialDelaySeconds,*float64)

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	// +kubebuilder:validation:Optional
	periodSeconds?: null | float64 @go(PeriodSeconds,*float64)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	// +kubebuilder:validation:Optional
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)
}

#LocalObjectReferenceInitParameters: {
	// Volume's name.
	name?: null | string @go(Name,*string)
}

#LocalObjectReferenceObservation: {
	// Volume's name.
	name?: null | string @go(Name,*string)
}

#LocalObjectReferenceParameters: {
	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#PortsInitParameters: {
	// Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to "8080".
	containerPort?: null | float64 @go(ContainerPort,*float64)

	// Volume's name.
	name?: null | string @go(Name,*string)

	// Protocol for port. Must be "TCP". Defaults to "TCP".
	protocol?: null | string @go(Protocol,*string)
}

#PortsObservation: {
	// Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to "8080".
	containerPort?: null | float64 @go(ContainerPort,*float64)

	// Volume's name.
	name?: null | string @go(Name,*string)

	// Protocol for port. Must be "TCP". Defaults to "TCP".
	protocol?: null | string @go(Protocol,*string)
}

#PortsParameters: {
	// Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to "8080".
	// +kubebuilder:validation:Optional
	containerPort?: null | float64 @go(ContainerPort,*float64)

	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Protocol for port. Must be "TCP". Defaults to "TCP".
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)
}

#ResourcesInitParameters: {
	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	limits?: {[string]: null | string} @go(Limits,map[string]*string)

	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	requests?: {[string]: null | string} @go(Requests,map[string]*string)
}

#ResourcesObservation: {
	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	limits?: {[string]: null | string} @go(Limits,map[string]*string)

	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	requests?: {[string]: null | string} @go(Requests,map[string]*string)
}

#ResourcesParameters: {
	// Limits describes the maximum amount of compute resources allowed.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +kubebuilder:validation:Optional
	limits?: {[string]: null | string} @go(Limits,map[string]*string)

	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is
	// explicitly specified, otherwise to an implementation-defined value.
	// The values of the map is string form of the 'quantity' k8s type:
	// https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
	// +kubebuilder:validation:Optional
	requests?: {[string]: null | string} @go(Requests,map[string]*string)
}

#SecretInitParameters: {
	// Mode bits to use on created files by default. Must be a value between 0000
	// and 0777. Defaults to 0644. Directories within the path are not affected by
	// this setting. This might be in conflict with other options that affect the
	// file mode, like fsGroup, and the result can be other mode bits set.
	defaultMode?: null | float64 @go(DefaultMode,*float64)

	// If unspecified, the volume will expose a file whose name is the
	// secret_name.
	// If specified, the key will be used as the version to fetch from Cloud
	// Secret Manager and the path will be the name of the file exposed in the
	// volume. When items are defined, they must specify a key and a path.
	// Structure is documented below.
	items?: [...#ItemsInitParameters] @go(Items,[]ItemsInitParameters)
}

#SecretKeyRefInitParameters: {
	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	key?: null | string @go(Key,*string)
}

#SecretKeyRefObservation: {
	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	key?: null | string @go(Key,*string)

	// Volume's name.
	name?: null | string @go(Name,*string)
}

#SecretKeyRefParameters: {
	// A Cloud Secret Manager secret version. Must be 'latest' for the latest
	// version or an integer for a specific version.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// Volume's name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#SecretObservation: {
	// Mode bits to use on created files by default. Must be a value between 0000
	// and 0777. Defaults to 0644. Directories within the path are not affected by
	// this setting. This might be in conflict with other options that affect the
	// file mode, like fsGroup, and the result can be other mode bits set.
	defaultMode?: null | float64 @go(DefaultMode,*float64)

	// If unspecified, the volume will expose a file whose name is the
	// secret_name.
	// If specified, the key will be used as the version to fetch from Cloud
	// Secret Manager and the path will be the name of the file exposed in the
	// volume. When items are defined, they must specify a key and a path.
	// Structure is documented below.
	items?: [...#ItemsObservation] @go(Items,[]ItemsObservation)

	// The name of the secret in Cloud Secret Manager. By default, the secret
	// is assumed to be in the same project.
	// If the secret is in another project, you must define an alias.
	// An alias definition has the form:
	// {alias}:projects/{project-id|project-number}/secrets/{secret-name}.
	// If multiple alias definitions are needed, they must be separated by
	// commas.
	// The alias definitions must be set on the run.googleapis.com/secrets
	// annotation.
	secretName?: null | string @go(SecretName,*string)
}

#SecretParameters: {
	// Mode bits to use on created files by default. Must be a value between 0000
	// and 0777. Defaults to 0644. Directories within the path are not affected by
	// this setting. This might be in conflict with other options that affect the
	// file mode, like fsGroup, and the result can be other mode bits set.
	// +kubebuilder:validation:Optional
	defaultMode?: null | float64 @go(DefaultMode,*float64)

	// If unspecified, the volume will expose a file whose name is the
	// secret_name.
	// If specified, the key will be used as the version to fetch from Cloud
	// Secret Manager and the path will be the name of the file exposed in the
	// volume. When items are defined, they must specify a key and a path.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	items?: [...#ItemsParameters] @go(Items,[]ItemsParameters)

	// The name of the secret in Cloud Secret Manager. By default, the secret
	// is assumed to be in the same project.
	// If the secret is in another project, you must define an alias.
	// An alias definition has the form:
	// {alias}:projects/{project-id|project-number}/secrets/{secret-name}.
	// If multiple alias definitions are needed, they must be separated by
	// commas.
	// The alias definitions must be set on the run.googleapis.com/secrets
	// annotation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/secretmanager/v1beta1.Secret
	// +kubebuilder:validation:Optional
	secretName?: null | string @go(SecretName,*string)
}

#SecretRefInitParameters: {
	// The Secret to select from.
	// Structure is documented below.
	localObjectReference?: [...#SecretRefLocalObjectReferenceInitParameters] @go(LocalObjectReference,[]SecretRefLocalObjectReferenceInitParameters)

	// Specify whether the Secret must be defined
	optional?: null | bool @go(Optional,*bool)
}

#SecretRefLocalObjectReferenceInitParameters: {
	// Volume's name.
	name?: null | string @go(Name,*string)
}

#SecretRefLocalObjectReferenceObservation: {
	// Volume's name.
	name?: null | string @go(Name,*string)
}

#SecretRefLocalObjectReferenceParameters: {
	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#SecretRefObservation: {
	// The Secret to select from.
	// Structure is documented below.
	localObjectReference?: [...#SecretRefLocalObjectReferenceObservation] @go(LocalObjectReference,[]SecretRefLocalObjectReferenceObservation)

	// Specify whether the Secret must be defined
	optional?: null | bool @go(Optional,*bool)
}

#SecretRefParameters: {
	// The Secret to select from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	localObjectReference?: [...#SecretRefLocalObjectReferenceParameters] @go(LocalObjectReference,[]SecretRefLocalObjectReferenceParameters)

	// Specify whether the Secret must be defined
	// +kubebuilder:validation:Optional
	optional?: null | bool @go(Optional,*bool)
}

#ServiceInitParameters: {
	// If set to true, the revision name (template.metadata.name) will be omitted and
	// autogenerated by Cloud Run. This cannot be set to true while template.metadata.name
	// is also set.
	// (For legacy support, if template.metadata.name is unset in state while
	// this field is set to false, the revision name will still autogenerate.)
	autogenerateRevisionName?: null | bool @go(AutogenerateRevisionName,*bool)

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	metadata?: [...#ServiceMetadataInitParameters] @go(Metadata,[]ServiceMetadataInitParameters)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// template holds the latest specification for the Revision to
	// be stamped out. The template references the container image, and may also
	// include labels and annotations that should be attached to the Revision.
	// To correlate a Revision, and/or to force a Revision to be created when the
	// spec doesn't otherwise change, a nonce label may be provided in the
	// template metadata. For more details, see:
	// https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
	// Cloud Run does not currently support referencing a build that is
	// responsible for materializing the container image from source.
	// Structure is documented below.
	template?: [...#TemplateInitParameters] @go(Template,[]TemplateInitParameters)

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	traffic?: [...#ServiceTrafficInitParameters] @go(Traffic,[]ServiceTrafficInitParameters)
}

#ServiceMetadataInitParameters: {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)
}

#ServiceMetadataObservation: {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// (Output)
	// A sequence number representing a specific generation of the desired state.
	generation?: null | float64 @go(Generation,*float64)

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	namespace?: null | string @go(Namespace,*string)

	// (Output)
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	resourceVersion?: null | string @go(ResourceVersion,*string)

	// (Output)
	// SelfLink is a URL representing this object.
	selfLink?: null | string @go(SelfLink,*string)

	// (Output)
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	uid?: null | string @go(UID,*string)
}

#ServiceMetadataParameters: {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +kubebuilder:validation:Optional
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.Project
	// +kubebuilder:validation:Optional
	namespace?: null | string @go(Namespace,*string)
}

#ServiceObservation: {
	// If set to true, the revision name (template.metadata.name) will be omitted and
	// autogenerated by Cloud Run. This cannot be set to true while template.metadata.name
	// is also set.
	// (For legacy support, if template.metadata.name is unset in state while
	// this field is set to false, the revision name will still autogenerate.)
	autogenerateRevisionName?: null | bool @go(AutogenerateRevisionName,*bool)

	// an identifier for the resource with format locations/{{location}}/namespaces/{{project}}/services/{{name}}
	id?: null | string @go(ID,*string)

	// The location of the cloud run instance. eg us-central1
	location?: null | string @go(Location,*string)

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	metadata?: [...#ServiceMetadataObservation] @go(Metadata,[]ServiceMetadataObservation)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The current status of the Service.
	// Structure is documented below.
	status?: [...#ServiceStatusObservation] @go(Status,[]ServiceStatusObservation)

	// template holds the latest specification for the Revision to
	// be stamped out. The template references the container image, and may also
	// include labels and annotations that should be attached to the Revision.
	// To correlate a Revision, and/or to force a Revision to be created when the
	// spec doesn't otherwise change, a nonce label may be provided in the
	// template metadata. For more details, see:
	// https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
	// Cloud Run does not currently support referencing a build that is
	// responsible for materializing the container image from source.
	// Structure is documented below.
	template?: [...#TemplateObservation] @go(Template,[]TemplateObservation)

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	traffic?: [...#ServiceTrafficObservation] @go(Traffic,[]ServiceTrafficObservation)
}

#ServiceParameters: {
	// If set to true, the revision name (template.metadata.name) will be omitted and
	// autogenerated by Cloud Run. This cannot be set to true while template.metadata.name
	// is also set.
	// (For legacy support, if template.metadata.name is unset in state while
	// this field is set to false, the revision name will still autogenerate.)
	// +kubebuilder:validation:Optional
	autogenerateRevisionName?: null | bool @go(AutogenerateRevisionName,*bool)

	// The location of the cloud run instance. eg us-central1
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	metadata?: [...#ServiceMetadataParameters] @go(Metadata,[]ServiceMetadataParameters)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// template holds the latest specification for the Revision to
	// be stamped out. The template references the container image, and may also
	// include labels and annotations that should be attached to the Revision.
	// To correlate a Revision, and/or to force a Revision to be created when the
	// spec doesn't otherwise change, a nonce label may be provided in the
	// template metadata. For more details, see:
	// https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
	// Cloud Run does not currently support referencing a build that is
	// responsible for materializing the container image from source.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	template?: [...#TemplateParameters] @go(Template,[]TemplateParameters)

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	traffic?: [...#ServiceTrafficParameters] @go(Traffic,[]ServiceTrafficParameters)
}

#ServiceStatusInitParameters: {
}

#ServiceStatusObservation: {
	// (Output)
	// Array of observed Service Conditions, indicating the current ready state of the service.
	// Structure is documented below.
	conditions?: [...#StatusConditionsObservation] @go(Conditions,[]StatusConditionsObservation)

	// (Output)
	// From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created
	// from this Service's Configuration. It might not be ready yet, for that use
	// LatestReadyRevisionName.
	latestCreatedRevisionName?: null | string @go(LatestCreatedRevisionName,*string)

	// (Output)
	// From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision
	// stamped out from this Service's Configuration that has had its "Ready" condition become
	// "True".
	latestReadyRevisionName?: null | string @go(LatestReadyRevisionName,*string)

	// (Output)
	// ObservedGeneration is the 'Generation' of the Route that was last processed by the
	// controller.
	// Clients polling for completed reconciliation should poll until observedGeneration =
	// metadata.generation and the Ready condition's status is True or False.
	observedGeneration?: null | float64 @go(ObservedGeneration,*float64)

	// (Output)
	// Traffic specifies how to distribute traffic over a collection of Knative Revisions
	// and Configurations
	// Structure is documented below.
	traffic?: [...#TrafficObservation] @go(Traffic,[]TrafficObservation)

	// (Output)
	// From RouteStatus. URL holds the url that will distribute traffic over the provided traffic
	// targets. It generally has the form
	// https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
	url?: null | string @go(URL,*string)
}

#ServiceStatusParameters: {
}

#ServiceTrafficInitParameters: {
	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	latestRevision?: null | bool @go(LatestRevision,*bool)

	// Percent specifies percent of the traffic to this Revision or Configuration.
	percent?: null | float64 @go(Percent,*float64)

	// RevisionName of a specific revision to which to send this portion of traffic.
	revisionName?: null | string @go(RevisionName,*string)

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	tag?: null | string @go(Tag,*string)
}

#ServiceTrafficObservation: {
	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	latestRevision?: null | bool @go(LatestRevision,*bool)

	// Percent specifies percent of the traffic to this Revision or Configuration.
	percent?: null | float64 @go(Percent,*float64)

	// RevisionName of a specific revision to which to send this portion of traffic.
	revisionName?: null | string @go(RevisionName,*string)

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	tag?: null | string @go(Tag,*string)

	// (Output)
	// URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
	// and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
	// but may not contain anything else (e.g. basic auth, url path, etc.)
	url?: null | string @go(URL,*string)
}

#ServiceTrafficParameters: {
	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	// +kubebuilder:validation:Optional
	latestRevision?: null | bool @go(LatestRevision,*bool)

	// Percent specifies percent of the traffic to this Revision or Configuration.
	// +kubebuilder:validation:Optional
	percent?: null | float64 @go(Percent,*float64)

	// RevisionName of a specific revision to which to send this portion of traffic.
	// +kubebuilder:validation:Optional
	revisionName?: null | string @go(RevisionName,*string)

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	// +kubebuilder:validation:Optional
	tag?: null | string @go(Tag,*string)
}

#StartupProbeGRPCInitParameters: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	service?: null | string @go(Service,*string)
}

#StartupProbeGRPCObservation: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	service?: null | string @go(Service,*string)
}

#StartupProbeGRPCParameters: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// The name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	// If this is not specified, the default behavior is defined by gRPC.
	// +kubebuilder:validation:Optional
	service?: null | string @go(Service,*string)
}

#StartupProbeHTTPGetInitParameters: {
	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	httpHeaders?: [...#HTTPGetHTTPHeadersInitParameters] @go(HTTPHeaders,[]HTTPGetHTTPHeadersInitParameters)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	path?: null | string @go(Path,*string)

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)
}

#StartupProbeHTTPGetObservation: {
	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	httpHeaders?: [...#HTTPGetHTTPHeadersObservation] @go(HTTPHeaders,[]HTTPGetHTTPHeadersObservation)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	path?: null | string @go(Path,*string)

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)
}

#StartupProbeHTTPGetParameters: {
	// Custom headers to set in the request. HTTP allows repeated headers.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	httpHeaders?: [...#HTTPGetHTTPHeadersParameters] @go(HTTPHeaders,[]HTTPGetHTTPHeadersParameters)

	// The relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)
}

#StartupProbeInitParameters: {
	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | float64 @go(FailureThreshold,*float64)

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	grpc?: [...#StartupProbeGRPCInitParameters] @go(GRPC,[]StartupProbeGRPCInitParameters)

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	httpGet?: [...#StartupProbeHTTPGetInitParameters] @go(HTTPGet,[]StartupProbeHTTPGetInitParameters)

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	initialDelaySeconds?: null | float64 @go(InitialDelaySeconds,*float64)

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	periodSeconds?: null | float64 @go(PeriodSeconds,*float64)

	// TcpSocket specifies an action involving a TCP port.
	// Structure is documented below.
	tcpSocket?: [...#TCPSocketInitParameters] @go(TCPSocket,[]TCPSocketInitParameters)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)
}

#StartupProbeObservation: {
	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	failureThreshold?: null | float64 @go(FailureThreshold,*float64)

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	grpc?: [...#StartupProbeGRPCObservation] @go(GRPC,[]StartupProbeGRPCObservation)

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	httpGet?: [...#StartupProbeHTTPGetObservation] @go(HTTPGet,[]StartupProbeHTTPGetObservation)

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	initialDelaySeconds?: null | float64 @go(InitialDelaySeconds,*float64)

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	periodSeconds?: null | float64 @go(PeriodSeconds,*float64)

	// TcpSocket specifies an action involving a TCP port.
	// Structure is documented below.
	tcpSocket?: [...#TCPSocketObservation] @go(TCPSocket,[]TCPSocketObservation)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)
}

#StartupProbeParameters: {
	// Minimum consecutive failures for the probe to be considered failed after
	// having succeeded. Defaults to 3. Minimum value is 1.
	// +kubebuilder:validation:Optional
	failureThreshold?: null | float64 @go(FailureThreshold,*float64)

	// GRPC specifies an action involving a GRPC port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	grpc?: [...#StartupProbeGRPCParameters] @go(GRPC,[]StartupProbeGRPCParameters)

	// HttpGet specifies the http request to perform.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	httpGet?: [...#StartupProbeHTTPGetParameters] @go(HTTPGet,[]StartupProbeHTTPGetParameters)

	// Number of seconds after the container has started before the probe is
	// initiated.
	// Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
	// +kubebuilder:validation:Optional
	initialDelaySeconds?: null | float64 @go(InitialDelaySeconds,*float64)

	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1. Maximum value is 240.
	// +kubebuilder:validation:Optional
	periodSeconds?: null | float64 @go(PeriodSeconds,*float64)

	// TcpSocket specifies an action involving a TCP port.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	tcpSocket?: [...#TCPSocketParameters] @go(TCPSocket,[]TCPSocketParameters)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	// +kubebuilder:validation:Optional
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)
}

#StatusConditionsInitParameters: {
}

#StatusConditionsObservation: {
	// (Output)
	// Human readable message indicating details about the current status.
	message?: null | string @go(Message,*string)

	// (Output)
	// One-word CamelCase reason for the condition's current status.
	reason?: null | string @go(Reason,*string)

	// The current status of the Service.
	// Structure is documented below.
	status?: null | string @go(Status,*string)

	// (Output)
	// Type of domain mapping condition.
	type?: null | string @go(Type,*string)
}

#StatusConditionsParameters: {
}

#TCPSocketInitParameters: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)
}

#TCPSocketObservation: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	port?: null | float64 @go(Port,*float64)
}

#TCPSocketParameters: {
	// Port number to access on the container. Number must be in the range 1 to 65535.
	// If not specified, defaults to the same value as container.ports[0].containerPort.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)
}

#TemplateInitParameters: {
	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	metadata?: [...#TemplateMetadataInitParameters] @go(Metadata,[]TemplateMetadataInitParameters)

	// RevisionSpec holds the desired state of the Revision (from the client).
	// Structure is documented below.
	spec?: [...#TemplateSpecInitParameters] @go(Spec,[]TemplateSpecInitParameters)
}

#TemplateMetadataInitParameters: {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// Volume's name.
	name?: null | string @go(Name,*string)

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	namespace?: null | string @go(Namespace,*string)
}

#TemplateMetadataObservation: {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// (Output)
	// A sequence number representing a specific generation of the desired state.
	generation?: null | float64 @go(Generation,*float64)

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// Volume's name.
	name?: null | string @go(Name,*string)

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	namespace?: null | string @go(Namespace,*string)

	// (Output)
	// An opaque value that represents the internal version of this object that
	// can be used by clients to determine when objects have changed. May be used
	// for optimistic concurrency, change detection, and the watch operation on a
	// resource or set of resources. They may only be valid for a
	// particular resource or set of resources.
	resourceVersion?: null | string @go(ResourceVersion,*string)

	// (Output)
	// SelfLink is a URL representing this object.
	selfLink?: null | string @go(SelfLink,*string)

	// (Output)
	// UID is a unique id generated by the server on successful creation of a resource and is not
	// allowed to change on PUT operations.
	uid?: null | string @go(UID,*string)
}

#TemplateMetadataParameters: {
	// Annotations is a key value map stored with a resource that
	// may be set by external tools to store and retrieve arbitrary metadata. More
	// info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
	// Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
	// Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation
	// keys to configure features on a Revision template:
	// +kubebuilder:validation:Optional
	annotations?: {[string]: null | string} @go(Annotations,map[string]*string)

	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// In Cloud Run the namespace must be equal to either the
	// project ID or project number. It will default to the resource's project.
	// +kubebuilder:validation:Optional
	namespace?: null | string @go(Namespace,*string)
}

#TemplateObservation: {
	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	metadata?: [...#TemplateMetadataObservation] @go(Metadata,[]TemplateMetadataObservation)

	// RevisionSpec holds the desired state of the Revision (from the client).
	// Structure is documented below.
	spec?: [...#TemplateSpecObservation] @go(Spec,[]TemplateSpecObservation)
}

#TemplateParameters: {
	// Optional metadata for this Revision, including labels and annotations.
	// Name will be generated by the Configuration. To set minimum instances
	// for this revision, use the "autoscaling.knative.dev/minScale" annotation
	// key. To set maximum instances for this revision, use the
	// "autoscaling.knative.dev/maxScale" annotation key. To set Cloud SQL
	// connections for the revision, use the "run.googleapis.com/cloudsql-instances"
	// annotation key.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	metadata?: [...#TemplateMetadataParameters] @go(Metadata,[]TemplateMetadataParameters)

	// RevisionSpec holds the desired state of the Revision (from the client).
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	spec?: [...#TemplateSpecParameters] @go(Spec,[]TemplateSpecParameters)
}

#TemplateSpecInitParameters: {
	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	containerConcurrency?: null | float64 @go(ContainerConcurrency,*float64)

	// Containers defines the unit of execution for this Revision.
	// Structure is documented below.
	containers?: [...#ContainersInitParameters] @go(Containers,[]ContainersInitParameters)

	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	serviceAccountName?: null | string @go(ServiceAccountName,*string)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)

	// Volume represents a named volume in a container.
	// Structure is documented below.
	volumes?: [...#VolumesInitParameters] @go(Volumes,[]VolumesInitParameters)
}

#TemplateSpecObservation: {
	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	containerConcurrency?: null | float64 @go(ContainerConcurrency,*float64)

	// Containers defines the unit of execution for this Revision.
	// Structure is documented below.
	containers?: [...#ContainersObservation] @go(Containers,[]ContainersObservation)

	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	serviceAccountName?: null | string @go(ServiceAccountName,*string)

	// (Output, Deprecated)
	// ServingState holds a value describing the state the resources
	// are in for this Revision.
	// It is expected
	// that the system will manipulate this based on routability and load.
	servingState?: null | string @go(ServingState,*string)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)

	// Volume represents a named volume in a container.
	// Structure is documented below.
	volumes?: [...#VolumesObservation] @go(Volumes,[]VolumesObservation)
}

#TemplateSpecParameters: {
	// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
	// requests per container of the Revision. Values are:
	// +kubebuilder:validation:Optional
	containerConcurrency?: null | float64 @go(ContainerConcurrency,*float64)

	// Containers defines the unit of execution for this Revision.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	containers?: [...#ContainersParameters] @go(Containers,[]ContainersParameters)

	// Email address of the IAM service account associated with the revision of the
	// service. The service account represents the identity of the running revision,
	// and determines what permissions the revision has. If not provided, the revision
	// will use the project's default service account.
	// +kubebuilder:validation:Optional
	serviceAccountName?: null | string @go(ServiceAccountName,*string)

	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
	// Must be smaller than periodSeconds.
	// +kubebuilder:validation:Optional
	timeoutSeconds?: null | float64 @go(TimeoutSeconds,*float64)

	// Volume represents a named volume in a container.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	volumes?: [...#VolumesParameters] @go(Volumes,[]VolumesParameters)
}

#TrafficInitParameters: {
}

#TrafficObservation: {
	// LatestRevision may be optionally provided to indicate that the latest ready
	// Revision of the Configuration should be used for this traffic target. When
	// provided LatestRevision must be true if RevisionName is empty; it must be
	// false when RevisionName is non-empty.
	latestRevision?: null | bool @go(LatestRevision,*bool)

	// Percent specifies percent of the traffic to this Revision or Configuration.
	percent?: null | float64 @go(Percent,*float64)

	// RevisionName of a specific revision to which to send this portion of traffic.
	revisionName?: null | string @go(RevisionName,*string)

	// Tag is optionally used to expose a dedicated url for referencing this target exclusively.
	tag?: null | string @go(Tag,*string)

	// (Output)
	// URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
	// and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
	// but may not contain anything else (e.g. basic auth, url path, etc.)
	url?: null | string @go(URL,*string)
}

#TrafficParameters: {
}

#ValueFromInitParameters: {
	// Selects a key (version) of a secret in Secret Manager.
	// Structure is documented below.
	secretKeyRef?: [...#SecretKeyRefInitParameters] @go(SecretKeyRef,[]SecretKeyRefInitParameters)
}

#ValueFromObservation: {
	// Selects a key (version) of a secret in Secret Manager.
	// Structure is documented below.
	secretKeyRef?: [...#SecretKeyRefObservation] @go(SecretKeyRef,[]SecretKeyRefObservation)
}

#ValueFromParameters: {
	// Selects a key (version) of a secret in Secret Manager.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	secretKeyRef: [...#SecretKeyRefParameters] @go(SecretKeyRef,[]SecretKeyRefParameters)
}

#VolumeMountsInitParameters: {
	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	mountPath?: null | string @go(MountPath,*string)

	// Volume's name.
	name?: null | string @go(Name,*string)
}

#VolumeMountsObservation: {
	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	mountPath?: null | string @go(MountPath,*string)

	// Volume's name.
	name?: null | string @go(Name,*string)
}

#VolumeMountsParameters: {
	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	// +kubebuilder:validation:Optional
	mountPath?: null | string @go(MountPath,*string)

	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#VolumesInitParameters: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The secret's value will be presented as the content of a file whose
	// name is defined in the item path. If no items are defined, the name of
	// the file is the secret_name.
	// Structure is documented below.
	secret?: [...#SecretInitParameters] @go(Secret,[]SecretInitParameters)
}

#VolumesObservation: {
	// Volume's name.
	name?: null | string @go(Name,*string)

	// The secret's value will be presented as the content of a file whose
	// name is defined in the item path. If no items are defined, the name of
	// the file is the secret_name.
	// Structure is documented below.
	secret?: [...#SecretObservation] @go(Secret,[]SecretObservation)
}

#VolumesParameters: {
	// Volume's name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The secret's value will be presented as the content of a file whose
	// name is defined in the item path. If no items are defined, the name of
	// the file is the secret_name.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	secret?: [...#SecretParameters] @go(Secret,[]SecretParameters)
}

// ServiceSpec defines the desired state of Service
#ServiceSpec: {
	forProvider: #ServiceParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ServiceInitParameters @go(InitProvider)
}

// ServiceStatus defines the observed state of Service.
#ServiceStatus: {
	atProvider?: #ServiceObservation @go(AtProvider)
}

// Service is the Schema for the Services API. A Cloud Run service has a unique endpoint and autoscales containers.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Service: {
	spec:    #ServiceSpec   @go(Spec)
	status?: #ServiceStatus @go(Status)
}

// ServiceList contains a list of Services
#ServiceList: {
	items: [...#Service] @go(Items,[]Service)
}
