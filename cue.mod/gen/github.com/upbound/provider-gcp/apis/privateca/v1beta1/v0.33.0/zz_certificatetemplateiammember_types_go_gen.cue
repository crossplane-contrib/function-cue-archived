// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/privateca/v1beta1

package v1beta1

#CertificateTemplateIAMMemberConditionObservation: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#CertificateTemplateIAMMemberConditionParameters: {
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// +kubebuilder:validation:Required
	expression?: null | string @go(Expression,*string)

	// +kubebuilder:validation:Required
	title?: null | string @go(Title,*string)
}

#CertificateTemplateIAMMemberObservation: {
	certificateTemplate?: null | string @go(CertificateTemplate,*string)
	condition?: [...#CertificateTemplateIAMMemberConditionObservation] @go(Condition,[]CertificateTemplateIAMMemberConditionObservation)
	etag?:     null | string @go(Etag,*string)
	id?:       null | string @go(ID,*string)
	location?: null | string @go(Location,*string)
	member?:   null | string @go(Member,*string)
	project?:  null | string @go(Project,*string)
	role?:     null | string @go(Role,*string)
}

#CertificateTemplateIAMMemberParameters: {
	// +crossplane:generate:reference:type=CertificateTemplate
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.ExtractResourceID()
	// +kubebuilder:validation:Optional
	certificateTemplate?: null | string @go(CertificateTemplate,*string)

	// +kubebuilder:validation:Optional
	condition?: [...#CertificateTemplateIAMMemberConditionParameters] @go(Condition,[]CertificateTemplateIAMMemberConditionParameters)

	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// +kubebuilder:validation:Optional
	member?: null | string @go(Member,*string)

	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)
}

// CertificateTemplateIAMMemberSpec defines the desired state of CertificateTemplateIAMMember
#CertificateTemplateIAMMemberSpec: {
	forProvider: #CertificateTemplateIAMMemberParameters @go(ForProvider)
}

// CertificateTemplateIAMMemberStatus defines the observed state of CertificateTemplateIAMMember.
#CertificateTemplateIAMMemberStatus: {
	atProvider?: #CertificateTemplateIAMMemberObservation @go(AtProvider)
}

// CertificateTemplateIAMMember is the Schema for the CertificateTemplateIAMMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#CertificateTemplateIAMMember: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.member)",message="member is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.role)",message="role is a required parameter"
	spec:    #CertificateTemplateIAMMemberSpec   @go(Spec)
	status?: #CertificateTemplateIAMMemberStatus @go(Status)
}

// CertificateTemplateIAMMemberList contains a list of CertificateTemplateIAMMembers
#CertificateTemplateIAMMemberList: {
	items: [...#CertificateTemplateIAMMember] @go(Items,[]CertificateTemplateIAMMember)
}
