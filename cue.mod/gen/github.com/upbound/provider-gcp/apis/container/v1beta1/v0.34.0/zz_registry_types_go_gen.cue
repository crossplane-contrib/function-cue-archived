// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/container/v1beta1

package v1beta1

#RegistryObservation: {
	// The URI of the created resource.
	bucketSelfLink?: null | string @go(BucketSelfLink,*string)

	// The name of the bucket that supports the Container Registry. In the form of artifacts.{project}.appspot.com or {location}.artifacts.{project}.appspot.com if location is specified.
	id?: null | string @go(ID,*string)

	// The location of the registry. One of ASIA, EU, US or not specified. See the official documentation for more information on registry locations.
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#RegistryParameters: {
	// The location of the registry. One of ASIA, EU, US or not specified. See the official documentation for more information on registry locations.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// RegistrySpec defines the desired state of Registry
#RegistrySpec: {
	forProvider: #RegistryParameters @go(ForProvider)
}

// RegistryStatus defines the observed state of Registry.
#RegistryStatus: {
	atProvider?: #RegistryObservation @go(AtProvider)
}

// Registry is the Schema for the Registrys API. Ensures the GCS bucket backing Google Container Registry exists.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Registry: {
	spec:    #RegistrySpec   @go(Spec)
	status?: #RegistryStatus @go(Status)
}

// RegistryList contains a list of Registrys
#RegistryList: {
	items: [...#Registry] @go(Items,[]Registry)
}
