// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/iam/v1beta1

package v1beta1

#WorkloadIdentityPoolObservation: {
	// A description of the pool. Cannot exceed 256 characters.
	description?: null | string @go(Description,*string)

	// Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use
	// existing tokens to access resources. If the pool is re-enabled, existing tokens grant
	// access again.
	disabled?: null | bool @go(Disabled,*bool)

	// A display name for the pool. Cannot exceed 32 characters.
	displayName?: null | string @go(DisplayName,*string)

	// an identifier for the resource with format projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
	id?: null | string @go(ID,*string)

	// The resource name of the pool as
	// projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}.
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The state of the pool.
	state?: null | string @go(State,*string)
}

#WorkloadIdentityPoolParameters: {
	// A description of the pool. Cannot exceed 256 characters.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use
	// existing tokens to access resources. If the pool is re-enabled, existing tokens grant
	// access again.
	// +kubebuilder:validation:Optional
	disabled?: null | bool @go(Disabled,*bool)

	// A display name for the pool. Cannot exceed 32 characters.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// WorkloadIdentityPoolSpec defines the desired state of WorkloadIdentityPool
#WorkloadIdentityPoolSpec: {
	forProvider: #WorkloadIdentityPoolParameters @go(ForProvider)
}

// WorkloadIdentityPoolStatus defines the observed state of WorkloadIdentityPool.
#WorkloadIdentityPoolStatus: {
	atProvider?: #WorkloadIdentityPoolObservation @go(AtProvider)
}

// WorkloadIdentityPool is the Schema for the WorkloadIdentityPools API. Represents a collection of external workload identities.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#WorkloadIdentityPool: {
	spec:    #WorkloadIdentityPoolSpec   @go(Spec)
	status?: #WorkloadIdentityPoolStatus @go(Status)
}

// WorkloadIdentityPoolList contains a list of WorkloadIdentityPools
#WorkloadIdentityPoolList: {
	items: [...#WorkloadIdentityPool] @go(Items,[]WorkloadIdentityPool)
}
