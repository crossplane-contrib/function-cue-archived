// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#AddressInitParameters: {
	// The static external IP address represented by this resource. Only
	// IPv4 is supported. An address may only be specified for INTERNAL
	// address types. The IP address must be inside the specified subnetwork,
	// if any. Set by the API if undefined.
	address?: null | string @go(Address,*string)

	// The type of address to reserve.
	// Note: if you set this argument's value as INTERNAL you need to leave the network_tier argument unset in that resource block.
	// Default value is EXTERNAL.
	// Possible values are: INTERNAL, EXTERNAL.
	addressType?: null | string @go(AddressType,*string)

	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// The networking tier used for configuring this address. If this field is not
	// specified, it is assumed to be PREMIUM.
	// This argument should not be used when configuring Internal addresses, because network tier cannot be set for internal traffic; it's always Premium.
	// Possible values are: PREMIUM, STANDARD.
	networkTier?: null | string @go(NetworkTier,*string)

	// The prefix length if the resource represents an IP range.
	prefixLength?: null | float64 @go(PrefixLength,*float64)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The purpose of this resource, which can be one of the following values.
	purpose?: null | string @go(Purpose,*string)
}

#AddressObservation: {
	// The static external IP address represented by this resource. Only
	// IPv4 is supported. An address may only be specified for INTERNAL
	// address types. The IP address must be inside the specified subnetwork,
	// if any. Set by the API if undefined.
	address?: null | string @go(Address,*string)

	// The type of address to reserve.
	// Note: if you set this argument's value as INTERNAL you need to leave the network_tier argument unset in that resource block.
	// Default value is EXTERNAL.
	// Possible values are: INTERNAL, EXTERNAL.
	addressType?: null | string @go(AddressType,*string)

	// Creation timestamp in RFC3339 text format.
	creationTimestamp?: null | string @go(CreationTimestamp,*string)

	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// an identifier for the resource with format projects/{{project}}/regions/{{region}}/addresses/{{name}}
	id?: null | string @go(ID,*string)

	// The URL of the network in which to reserve the address. This field
	// can only be used with INTERNAL type with the VPC_PEERING and
	// IPSEC_INTERCONNECT purposes.
	network?: null | string @go(Network,*string)

	// The networking tier used for configuring this address. If this field is not
	// specified, it is assumed to be PREMIUM.
	// This argument should not be used when configuring Internal addresses, because network tier cannot be set for internal traffic; it's always Premium.
	// Possible values are: PREMIUM, STANDARD.
	networkTier?: null | string @go(NetworkTier,*string)

	// The prefix length if the resource represents an IP range.
	prefixLength?: null | float64 @go(PrefixLength,*float64)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The purpose of this resource, which can be one of the following values.
	purpose?: null | string @go(Purpose,*string)

	// The Region in which the created address should reside.
	// If it is not provided, the provider region is used.
	region?: null | string @go(Region,*string)

	// The URI of the created resource.
	selfLink?: null | string @go(SelfLink,*string)

	// The URL of the subnetwork in which to reserve the address. If an IP
	// address is specified, it must be within the subnetwork's IP range.
	// This field can only be used with INTERNAL type with
	// GCE_ENDPOINT/DNS_RESOLVER purposes.
	subnetwork?: null | string @go(Subnetwork,*string)

	// The URLs of the resources that are using this address.
	users?: [...null | string] @go(Users,[]*string)
}

#AddressParameters: {
	// The static external IP address represented by this resource. Only
	// IPv4 is supported. An address may only be specified for INTERNAL
	// address types. The IP address must be inside the specified subnetwork,
	// if any. Set by the API if undefined.
	// +kubebuilder:validation:Optional
	address?: null | string @go(Address,*string)

	// The type of address to reserve.
	// Note: if you set this argument's value as INTERNAL you need to leave the network_tier argument unset in that resource block.
	// Default value is EXTERNAL.
	// Possible values are: INTERNAL, EXTERNAL.
	// +kubebuilder:validation:Optional
	addressType?: null | string @go(AddressType,*string)

	// An optional description of this resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The URL of the network in which to reserve the address. This field
	// can only be used with INTERNAL type with the VPC_PEERING and
	// IPSEC_INTERCONNECT purposes.
	// +crossplane:generate:reference:type=Network
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.SelfLinkExtractor()
	// +kubebuilder:validation:Optional
	network?: null | string @go(Network,*string)

	// The networking tier used for configuring this address. If this field is not
	// specified, it is assumed to be PREMIUM.
	// This argument should not be used when configuring Internal addresses, because network tier cannot be set for internal traffic; it's always Premium.
	// Possible values are: PREMIUM, STANDARD.
	// +kubebuilder:validation:Optional
	networkTier?: null | string @go(NetworkTier,*string)

	// The prefix length if the resource represents an IP range.
	// +kubebuilder:validation:Optional
	prefixLength?: null | float64 @go(PrefixLength,*float64)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The purpose of this resource, which can be one of the following values.
	// +kubebuilder:validation:Optional
	purpose?: null | string @go(Purpose,*string)

	// The Region in which the created address should reside.
	// If it is not provided, the provider region is used.
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The URL of the subnetwork in which to reserve the address. If an IP
	// address is specified, it must be within the subnetwork's IP range.
	// This field can only be used with INTERNAL type with
	// GCE_ENDPOINT/DNS_RESOLVER purposes.
	// +crossplane:generate:reference:type=Subnetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.SelfLinkExtractor()
	// +kubebuilder:validation:Optional
	subnetwork?: null | string @go(Subnetwork,*string)
}

// AddressSpec defines the desired state of Address
#AddressSpec: {
	forProvider: #AddressParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AddressInitParameters @go(InitProvider)
}

// AddressStatus defines the observed state of Address.
#AddressStatus: {
	atProvider?: #AddressObservation @go(AtProvider)
}

// Address is the Schema for the Addresss API. Represents an Address resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Address: {
	spec:    #AddressSpec   @go(Spec)
	status?: #AddressStatus @go(Status)
}

// AddressList contains a list of Addresss
#AddressList: {
	items: [...#Address] @go(Items,[]Address)
}
