// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#DiskResourcePolicyAttachmentObservation: {
	// The name of the disk in which the resource policies are attached to.
	disk?: null | string @go(Disk,*string)

	// an identifier for the resource with format {{project}}/{{zone}}/{{disk}}/{{name}}
	id?: null | string @go(ID,*string)

	// The resource policy to be attached to the disk for scheduling snapshot
	// creation. Do not specify the self link.
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// A reference to the zone where the disk resides.
	zone?: null | string @go(Zone,*string)
}

#DiskResourcePolicyAttachmentParameters: {
	// The name of the disk in which the resource policies are attached to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Disk
	// +kubebuilder:validation:Optional
	disk?: null | string @go(Disk,*string)

	// The resource policy to be attached to the disk for scheduling snapshot
	// creation. Do not specify the self link.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.ResourcePolicy
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// A reference to the zone where the disk resides.
	// +kubebuilder:validation:Optional
	zone?: null | string @go(Zone,*string)
}

// DiskResourcePolicyAttachmentSpec defines the desired state of DiskResourcePolicyAttachment
#DiskResourcePolicyAttachmentSpec: {
	forProvider: #DiskResourcePolicyAttachmentParameters @go(ForProvider)
}

// DiskResourcePolicyAttachmentStatus defines the observed state of DiskResourcePolicyAttachment.
#DiskResourcePolicyAttachmentStatus: {
	atProvider?: #DiskResourcePolicyAttachmentObservation @go(AtProvider)
}

// DiskResourcePolicyAttachment is the Schema for the DiskResourcePolicyAttachments API. Adds existing resource policies to a disk.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#DiskResourcePolicyAttachment: {
	spec:    #DiskResourcePolicyAttachmentSpec   @go(Spec)
	status?: #DiskResourcePolicyAttachmentStatus @go(Status)
}

// DiskResourcePolicyAttachmentList contains a list of DiskResourcePolicyAttachments
#DiskResourcePolicyAttachmentList: {
	items: [...#DiskResourcePolicyAttachment] @go(Items,[]DiskResourcePolicyAttachment)
}
