// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#SubnetworkIAMMemberConditionInitParameters: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#SubnetworkIAMMemberConditionObservation: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#SubnetworkIAMMemberConditionParameters: {
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// +kubebuilder:validation:Optional
	expression?: null | string @go(Expression,*string)

	// +kubebuilder:validation:Optional
	title?: null | string @go(Title,*string)
}

#SubnetworkIAMMemberInitParameters: {
	condition?: [...#SubnetworkIAMMemberConditionInitParameters] @go(Condition,[]SubnetworkIAMMemberConditionInitParameters)
	member?:  null | string @go(Member,*string)
	project?: null | string @go(Project,*string)
	region?:  null | string @go(Region,*string)
	role?:    null | string @go(Role,*string)
}

#SubnetworkIAMMemberObservation: {
	condition?: [...#SubnetworkIAMMemberConditionObservation] @go(Condition,[]SubnetworkIAMMemberConditionObservation)
	etag?:       null | string @go(Etag,*string)
	id?:         null | string @go(ID,*string)
	member?:     null | string @go(Member,*string)
	project?:    null | string @go(Project,*string)
	region?:     null | string @go(Region,*string)
	role?:       null | string @go(Role,*string)
	subnetwork?: null | string @go(Subnetwork,*string)
}

#SubnetworkIAMMemberParameters: {
	// +kubebuilder:validation:Optional
	condition?: [...#SubnetworkIAMMemberConditionParameters] @go(Condition,[]SubnetworkIAMMemberConditionParameters)

	// +kubebuilder:validation:Optional
	member?: null | string @go(Member,*string)

	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)

	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)

	// +crossplane:generate:reference:type=Subnetwork
	// +kubebuilder:validation:Optional
	subnetwork?: null | string @go(Subnetwork,*string)
}

// SubnetworkIAMMemberSpec defines the desired state of SubnetworkIAMMember
#SubnetworkIAMMemberSpec: {
	forProvider: #SubnetworkIAMMemberParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SubnetworkIAMMemberInitParameters @go(InitProvider)
}

// SubnetworkIAMMemberStatus defines the observed state of SubnetworkIAMMember.
#SubnetworkIAMMemberStatus: {
	atProvider?: #SubnetworkIAMMemberObservation @go(AtProvider)
}

// SubnetworkIAMMember is the Schema for the SubnetworkIAMMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#SubnetworkIAMMember: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.member) || (has(self.initProvider) && has(self.initProvider.member))",message="spec.forProvider.member is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.region) || (has(self.initProvider) && has(self.initProvider.region))",message="spec.forProvider.region is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.role) || (has(self.initProvider) && has(self.initProvider.role))",message="spec.forProvider.role is a required parameter"
	spec:    #SubnetworkIAMMemberSpec   @go(Spec)
	status?: #SubnetworkIAMMemberStatus @go(Status)
}

// SubnetworkIAMMemberList contains a list of SubnetworkIAMMembers
#SubnetworkIAMMemberList: {
	items: [...#SubnetworkIAMMember] @go(Items,[]SubnetworkIAMMember)
}
