// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#ProjectDefaultNetworkTierObservation: {
	// an identifier for the resource with format {{project}}
	id?: null | string @go(ID,*string)

	// The default network tier to be configured for the project.
	// This field can take the following values: PREMIUM or STANDARD.
	networkTier?: null | string @go(NetworkTier,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#ProjectDefaultNetworkTierParameters: {
	// The default network tier to be configured for the project.
	// This field can take the following values: PREMIUM or STANDARD.
	// +kubebuilder:validation:Optional
	networkTier?: null | string @go(NetworkTier,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// ProjectDefaultNetworkTierSpec defines the desired state of ProjectDefaultNetworkTier
#ProjectDefaultNetworkTierSpec: {
	forProvider: #ProjectDefaultNetworkTierParameters @go(ForProvider)
}

// ProjectDefaultNetworkTierStatus defines the observed state of ProjectDefaultNetworkTier.
#ProjectDefaultNetworkTierStatus: {
	atProvider?: #ProjectDefaultNetworkTierObservation @go(AtProvider)
}

// ProjectDefaultNetworkTier is the Schema for the ProjectDefaultNetworkTiers API. Configures the default network tier for a project.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ProjectDefaultNetworkTier: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.networkTier)",message="networkTier is a required parameter"
	spec:    #ProjectDefaultNetworkTierSpec   @go(Spec)
	status?: #ProjectDefaultNetworkTierStatus @go(Status)
}

// ProjectDefaultNetworkTierList contains a list of ProjectDefaultNetworkTiers
#ProjectDefaultNetworkTierList: {
	items: [...#ProjectDefaultNetworkTier] @go(Items,[]ProjectDefaultNetworkTier)
}
