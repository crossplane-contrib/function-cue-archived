// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#ConditionObservation: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#ConditionParameters: {
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// +kubebuilder:validation:Required
	expression?: null | string @go(Expression,*string)

	// +kubebuilder:validation:Required
	title?: null | string @go(Title,*string)
}

#DiskIAMMemberObservation: {
	condition?: [...#ConditionObservation] @go(Condition,[]ConditionObservation)
	etag?:    null | string @go(Etag,*string)
	id?:      null | string @go(ID,*string)
	member?:  null | string @go(Member,*string)
	name?:    null | string @go(Name,*string)
	project?: null | string @go(Project,*string)
	role?:    null | string @go(Role,*string)
	zone?:    null | string @go(Zone,*string)
}

#DiskIAMMemberParameters: {
	// +kubebuilder:validation:Optional
	condition?: [...#ConditionParameters] @go(Condition,[]ConditionParameters)

	// +kubebuilder:validation:Optional
	member?: null | string @go(Member,*string)

	// +crossplane:generate:reference:type=Disk
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)

	// +kubebuilder:validation:Optional
	zone?: null | string @go(Zone,*string)
}

// DiskIAMMemberSpec defines the desired state of DiskIAMMember
#DiskIAMMemberSpec: {
	forProvider: #DiskIAMMemberParameters @go(ForProvider)
}

// DiskIAMMemberStatus defines the observed state of DiskIAMMember.
#DiskIAMMemberStatus: {
	atProvider?: #DiskIAMMemberObservation @go(AtProvider)
}

// DiskIAMMember is the Schema for the DiskIAMMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#DiskIAMMember: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.member)",message="member is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.role)",message="role is a required parameter"
	spec:    #DiskIAMMemberSpec   @go(Spec)
	status?: #DiskIAMMemberStatus @go(Status)
}

// DiskIAMMemberList contains a list of DiskIAMMembers
#DiskIAMMemberList: {
	items: [...#DiskIAMMember] @go(Items,[]DiskIAMMember)
}
