// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#TargetHTTPProxyObservation: {
	// Creation timestamp in RFC3339 text format.
	creationTimestamp?: null | string @go(CreationTimestamp,*string)

	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// an identifier for the resource with format projects/{{project}}/global/targetHttpProxies/{{name}}
	id?: null | string @go(ID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// The unique identifier for the resource.
	proxyId?: null | float64 @go(ProxyID,*float64)

	// The URI of the created resource.
	selfLink?: null | string @go(SelfLink,*string)

	// A reference to the UrlMap resource that defines the mapping from URL
	// to the BackendService.
	urlMap?: null | string @go(URLMap,*string)
}

#TargetHTTPProxyParameters: {
	// An optional description of this resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	// +kubebuilder:validation:Optional
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// A reference to the UrlMap resource that defines the mapping from URL
	// to the BackendService.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.URLMap
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	urlMap?: null | string @go(URLMap,*string)
}

// TargetHTTPProxySpec defines the desired state of TargetHTTPProxy
#TargetHTTPProxySpec: {
	forProvider: #TargetHTTPProxyParameters @go(ForProvider)
}

// TargetHTTPProxyStatus defines the observed state of TargetHTTPProxy.
#TargetHTTPProxyStatus: {
	atProvider?: #TargetHTTPProxyObservation @go(AtProvider)
}

// TargetHTTPProxy is the Schema for the TargetHTTPProxys API. Represents a TargetHttpProxy resource, which is used by one or more global forwarding rule to route incoming HTTP requests to a URL map.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#TargetHTTPProxy: {
	spec:    #TargetHTTPProxySpec   @go(Spec)
	status?: #TargetHTTPProxyStatus @go(Status)
}

// TargetHTTPProxyList contains a list of TargetHTTPProxys
#TargetHTTPProxyList: {
	items: [...#TargetHTTPProxy] @go(Items,[]TargetHTTPProxy)
}
