// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#BackendServiceSignedURLKeyObservation: {
	// The backend service this signed URL key belongs.
	backendService?: null | string @go(BackendService,*string)

	// an identifier for the resource with format projects/{{project}}/global/backendServices/{{backend_service}}
	id?: null | string @go(ID,*string)

	// Name of the signed URL key.
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#BackendServiceSignedURLKeyParameters: {
	// The backend service this signed URL key belongs.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.BackendService
	// +kubebuilder:validation:Optional
	backendService?: null | string @go(BackendService,*string)

	// Name of the signed URL key.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// BackendServiceSignedURLKeySpec defines the desired state of BackendServiceSignedURLKey
#BackendServiceSignedURLKeySpec: {
	forProvider: #BackendServiceSignedURLKeyParameters @go(ForProvider)
}

// BackendServiceSignedURLKeyStatus defines the observed state of BackendServiceSignedURLKey.
#BackendServiceSignedURLKeyStatus: {
	atProvider?: #BackendServiceSignedURLKeyObservation @go(AtProvider)
}

// BackendServiceSignedURLKey is the Schema for the BackendServiceSignedURLKeys API. A key for signing Cloud CDN signed URLs for Backend Services.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#BackendServiceSignedURLKey: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.keyValueSecretRef)",message="keyValueSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #BackendServiceSignedURLKeySpec   @go(Spec)
	status?: #BackendServiceSignedURLKeyStatus @go(Status)
}

// BackendServiceSignedURLKeyList contains a list of BackendServiceSignedURLKeys
#BackendServiceSignedURLKeyList: {
	items: [...#BackendServiceSignedURLKey] @go(Items,[]BackendServiceSignedURLKey)
}
