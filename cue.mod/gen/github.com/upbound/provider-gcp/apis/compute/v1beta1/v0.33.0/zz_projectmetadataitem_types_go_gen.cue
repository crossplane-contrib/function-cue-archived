// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#ProjectMetadataItemObservation: {
	// an identifier for the resource with format `{{key}}`
	id?: null | string @go(ID,*string)

	// The metadata key to set.
	key?: null | string @go(Key,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The value to set for the given metadata key.
	value?: null | string @go(Value,*string)
}

#ProjectMetadataItemParameters: {
	// The metadata key to set.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The value to set for the given metadata key.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

// ProjectMetadataItemSpec defines the desired state of ProjectMetadataItem
#ProjectMetadataItemSpec: {
	forProvider: #ProjectMetadataItemParameters @go(ForProvider)
}

// ProjectMetadataItemStatus defines the observed state of ProjectMetadataItem.
#ProjectMetadataItemStatus: {
	atProvider?: #ProjectMetadataItemObservation @go(AtProvider)
}

// ProjectMetadataItem is the Schema for the ProjectMetadataItems API. Manages a single key/value pair on common instance metadata
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ProjectMetadataItem: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.key)",message="key is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.value)",message="value is a required parameter"
	spec:    #ProjectMetadataItemSpec   @go(Spec)
	status?: #ProjectMetadataItemStatus @go(Status)
}

// ProjectMetadataItemList contains a list of ProjectMetadataItems
#ProjectMetadataItemList: {
	items: [...#ProjectMetadataItem] @go(Items,[]ProjectMetadataItem)
}
