// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

#FirewallPolicyAssociationObservation: {
	// The target that the firewall policy is attached to.
	attachmentTarget?: null | string @go(AttachmentTarget,*string)

	// The firewall policy ID of the association.
	firewallPolicy?: null | string @go(FirewallPolicy,*string)

	// an identifier for the resource with format locations/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}
	id?: null | string @go(ID,*string)

	// The name for an association.
	name?: null | string @go(Name,*string)

	// The short name of the firewall policy of the association.
	shortName?: null | string @go(ShortName,*string)
}

#FirewallPolicyAssociationParameters: {
	// The target that the firewall policy is attached to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.Folder
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("name",true)
	// +kubebuilder:validation:Optional
	attachmentTarget?: null | string @go(AttachmentTarget,*string)

	// The firewall policy ID of the association.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.FirewallPolicy
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	firewallPolicy?: null | string @go(FirewallPolicy,*string)

	// The name for an association.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

// FirewallPolicyAssociationSpec defines the desired state of FirewallPolicyAssociation
#FirewallPolicyAssociationSpec: {
	forProvider: #FirewallPolicyAssociationParameters @go(ForProvider)
}

// FirewallPolicyAssociationStatus defines the observed state of FirewallPolicyAssociation.
#FirewallPolicyAssociationStatus: {
	atProvider?: #FirewallPolicyAssociationObservation @go(AtProvider)
}

// FirewallPolicyAssociation is the Schema for the FirewallPolicyAssociations API. Applies a hierarchical firewall policy to a target resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#FirewallPolicyAssociation: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #FirewallPolicyAssociationSpec   @go(Spec)
	status?: #FirewallPolicyAssociationStatus @go(Status)
}

// FirewallPolicyAssociationList contains a list of FirewallPolicyAssociations
#FirewallPolicyAssociationList: {
	items: [...#FirewallPolicyAssociation] @go(Items,[]FirewallPolicyAssociation)
}
