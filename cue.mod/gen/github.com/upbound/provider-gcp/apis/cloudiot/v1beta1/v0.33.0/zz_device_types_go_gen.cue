// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/cloudiot/v1beta1

package v1beta1

#ConfigObservation: {
	// The device configuration data.
	binaryData?: null | string @go(BinaryData,*string)

	// (Output)
	// The time at which this configuration version was updated in Cloud IoT Core.
	cloudUpdateTime?: null | string @go(CloudUpdateTime,*string)

	// (Output)
	// The time at which Cloud IoT Core received the acknowledgment from the device,
	// indicating that the device has received this configuration version.
	deviceAckTime?: null | string @go(DeviceAckTime,*string)

	// (Output)
	// The version of this update.
	version?: null | string @go(Version,*string)
}

#ConfigParameters: {
}

#CredentialsObservation: {
	// The time at which this credential becomes invalid.
	expirationTime?: null | string @go(ExpirationTime,*string)

	// A public key used to verify the signature of JSON Web Tokens (JWTs).
	// Structure is documented below.
	publicKey?: [...#PublicKeyObservation] @go(PublicKey,[]PublicKeyObservation)
}

#CredentialsParameters: {
	// The time at which this credential becomes invalid.
	// +kubebuilder:validation:Optional
	expirationTime?: null | string @go(ExpirationTime,*string)

	// A public key used to verify the signature of JSON Web Tokens (JWTs).
	// Structure is documented below.
	// +kubebuilder:validation:Required
	publicKey: [...#PublicKeyParameters] @go(PublicKey,[]PublicKeyParameters)
}

#DeviceObservation: {
	// If a device is blocked, connections or requests from this device will fail.
	blocked?: null | bool @go(Blocked,*bool)

	// The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
	// Structure is documented below.
	config?: [...#ConfigObservation] @go(Config,[]ConfigObservation)

	// The credentials used to authenticate this device.
	// Structure is documented below.
	credentials?: [...#CredentialsObservation] @go(Credentials,[]CredentialsObservation)

	// Gateway-related configuration and state.
	// Structure is documented below.
	gatewayConfig?: [...#GatewayConfigObservation] @go(GatewayConfig,[]GatewayConfigObservation)

	// an identifier for the resource with format {{registry}}/devices/{{name}}
	id?: null | string @go(ID,*string)

	// The last time a cloud-to-device config version acknowledgment was received from the device.
	lastConfigAckTime?: null | string @go(LastConfigAckTime,*string)

	// The last time a cloud-to-device config version was sent to the device.
	lastConfigSendTime?: null | string @go(LastConfigSendTime,*string)

	// The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
	// Structure is documented below.
	lastErrorStatus?: [...#LastErrorStatusObservation] @go(LastErrorStatus,[]LastErrorStatusObservation)

	// The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
	lastErrorTime?: null | string @go(LastErrorTime,*string)

	// The last time a telemetry event was received.
	lastEventTime?: null | string @go(LastEventTime,*string)

	// The last time an MQTT PINGREQ was received.
	lastHeartbeatTime?: null | string @go(LastHeartbeatTime,*string)

	// The last time a state event was received.
	lastStateTime?: null | string @go(LastStateTime,*string)

	// The logging verbosity for device activity.
	// Possible values are: NONE, ERROR, INFO, DEBUG.
	logLevel?: null | string @go(LogLevel,*string)

	// The metadata key-value pairs assigned to the device.
	metadata?: {[string]: null | string} @go(Metadata,map[string]*string)

	// A server-defined unique numeric ID for the device.
	// This is a more compact way to identify devices, and it is globally unique.
	numId?: null | string @go(NumID,*string)

	// The name of the device registry where this device should be created.
	registry?: null | string @go(Registry,*string)

	// The state most recently received from the device.
	// Structure is documented below.
	state?: [...#StateObservation] @go(State,[]StateObservation)
}

#DeviceParameters: {
	// If a device is blocked, connections or requests from this device will fail.
	// +kubebuilder:validation:Optional
	blocked?: null | bool @go(Blocked,*bool)

	// The credentials used to authenticate this device.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	credentials?: [...#CredentialsParameters] @go(Credentials,[]CredentialsParameters)

	// Gateway-related configuration and state.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	gatewayConfig?: [...#GatewayConfigParameters] @go(GatewayConfig,[]GatewayConfigParameters)

	// The logging verbosity for device activity.
	// Possible values are: NONE, ERROR, INFO, DEBUG.
	// +kubebuilder:validation:Optional
	logLevel?: null | string @go(LogLevel,*string)

	// The metadata key-value pairs assigned to the device.
	// +kubebuilder:validation:Optional
	metadata?: {[string]: null | string} @go(Metadata,map[string]*string)

	// The name of the device registry where this device should be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudiot/v1beta1.Registry
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	registry?: null | string @go(Registry,*string)
}

#GatewayConfigObservation: {
	// Indicates whether the device is a gateway.
	// Possible values are: ASSOCIATION_ONLY, DEVICE_AUTH_TOKEN_ONLY, ASSOCIATION_AND_DEVICE_AUTH_TOKEN.
	gatewayAuthMethod?: null | string @go(GatewayAuthMethod,*string)

	// Indicates whether the device is a gateway.
	// Default value is NON_GATEWAY.
	// Possible values are: GATEWAY, NON_GATEWAY.
	gatewayType?: null | string @go(GatewayType,*string)

	// (Output)
	// The ID of the gateway the device accessed most recently.
	lastAccessedGatewayId?: null | string @go(LastAccessedGatewayID,*string)

	// (Output)
	// The most recent time at which the device accessed the gateway specified in last_accessed_gateway.
	lastAccessedGatewayTime?: null | string @go(LastAccessedGatewayTime,*string)
}

#GatewayConfigParameters: {
	// Indicates whether the device is a gateway.
	// Possible values are: ASSOCIATION_ONLY, DEVICE_AUTH_TOKEN_ONLY, ASSOCIATION_AND_DEVICE_AUTH_TOKEN.
	// +kubebuilder:validation:Optional
	gatewayAuthMethod?: null | string @go(GatewayAuthMethod,*string)

	// Indicates whether the device is a gateway.
	// Default value is NON_GATEWAY.
	// Possible values are: GATEWAY, NON_GATEWAY.
	// +kubebuilder:validation:Optional
	gatewayType?: null | string @go(GatewayType,*string)
}

#LastErrorStatusObservation: {
	// A list of messages that carry the error details.
	details?: [...string] @go(Details,[]string)

	// A developer-facing error message, which should be in English.
	message?: null | string @go(Message,*string)

	// The status code, which should be an enum value of google.rpc.Code.
	number?: null | float64 @go(Number,*float64)
}

#LastErrorStatusParameters: {
}

#PublicKeyObservation: {
	// The format of the key.
	// Possible values are: RSA_PEM, RSA_X509_PEM, ES256_PEM, ES256_X509_PEM.
	format?: null | string @go(Format,*string)

	// The key data.
	key?: null | string @go(Key,*string)
}

#PublicKeyParameters: {
	// The format of the key.
	// Possible values are: RSA_PEM, RSA_X509_PEM, ES256_PEM, ES256_X509_PEM.
	// +kubebuilder:validation:Required
	format?: null | string @go(Format,*string)

	// The key data.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)
}

#StateObservation: {
	// The device state data.
	binaryData?: null | string @go(BinaryData,*string)

	// The time at which this state version was updated in Cloud IoT Core.
	updateTime?: null | string @go(UpdateTime,*string)
}

#StateParameters: {
}

// DeviceSpec defines the desired state of Device
#DeviceSpec: {
	forProvider: #DeviceParameters @go(ForProvider)
}

// DeviceStatus defines the observed state of Device.
#DeviceStatus: {
	atProvider?: #DeviceObservation @go(AtProvider)
}

// Device is the Schema for the Devices API. A Google Cloud IoT Core device.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Device: {
	spec:    #DeviceSpec   @go(Spec)
	status?: #DeviceStatus @go(Status)
}

// DeviceList contains a list of Devices
#DeviceList: {
	items: [...#Device] @go(Items,[]Device)
}
