// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/apigee/v1beta1

package v1beta1

#OrganizationObservation: {
	// Primary GCP region for analytics data storage. For valid values, see Create an Apigee organization.
	analyticsRegion?: null | string @go(AnalyticsRegion,*string)

	// Compute Engine network used for Service Networking to be peered with Apigee runtime instances.
	// See Getting started with the Service Networking API.
	// Valid only when RuntimeType is set to CLOUD. The value can be updated only when there are no runtime instances. For example: "default".
	authorizedNetwork?: null | string @go(AuthorizedNetwork,*string)

	// Billing type of the Apigee organization. See Apigee pricing.
	billingType?: null | string @go(BillingType,*string)

	// Output only. Base64-encoded public certificate for the root CA of the Apigee organization.
	// Valid only when RuntimeType is CLOUD. A base64-encoded string.
	caCertificate?: null | string @go(CACertificate,*string)

	// Description of the Apigee organization.
	description?: null | string @go(Description,*string)

	// The display name of the Apigee organization.
	displayName?: null | string @go(DisplayName,*string)

	// an identifier for the resource with format organizations/{{name}}
	id?: null | string @go(ID,*string)

	// Output only. Name of the Apigee organization.
	name?: null | string @go(Name,*string)

	// The project ID associated with the Apigee organization.
	projectId?: null | string @go(ProjectID,*string)

	// Properties defined in the Apigee organization profile.
	// Structure is documented below.
	properties?: [...#PropertiesObservation] @go(Properties,[]PropertiesObservation)

	// Optional. This setting is applicable only for organizations that are soft-deleted (i.e., BillingType
	// is not EVALUATION). It controls how long Organization data will be retained after the initial delete
	// operation completes. During this period, the Organization may be restored to its last known state.
	// After this period, the Organization will no longer be able to be restored.
	// Default value is DELETION_RETENTION_UNSPECIFIED.
	// Possible values are: DELETION_RETENTION_UNSPECIFIED, MINIMUM.
	retention?: null | string @go(Retention,*string)

	// Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances.
	// Update is not allowed after the organization is created.
	// If not specified, a Google-Managed encryption key will be used.
	// Valid only when RuntimeType is CLOUD. For example: projects/foo/locations/us/keyRings/bar/cryptoKeys/baz.
	runtimeDatabaseEncryptionKeyName?: null | string @go(RuntimeDatabaseEncryptionKeyName,*string)

	// Runtime type of the Apigee organization based on the Apigee subscription purchased.
	// Default value is CLOUD.
	// Possible values are: CLOUD, HYBRID.
	runtimeType?: null | string @go(RuntimeType,*string)

	// Output only. Subscription type of the Apigee organization.
	// Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased).
	subscriptionType?: null | string @go(SubscriptionType,*string)
}

#OrganizationParameters: {
	// Primary GCP region for analytics data storage. For valid values, see Create an Apigee organization.
	// +kubebuilder:validation:Optional
	analyticsRegion?: null | string @go(AnalyticsRegion,*string)

	// Compute Engine network used for Service Networking to be peered with Apigee runtime instances.
	// See Getting started with the Service Networking API.
	// Valid only when RuntimeType is set to CLOUD. The value can be updated only when there are no runtime instances. For example: "default".
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	authorizedNetwork?: null | string @go(AuthorizedNetwork,*string)

	// Billing type of the Apigee organization. See Apigee pricing.
	// +kubebuilder:validation:Optional
	billingType?: null | string @go(BillingType,*string)

	// Description of the Apigee organization.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The display name of the Apigee organization.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The project ID associated with the Apigee organization.
	// +kubebuilder:validation:Optional
	projectId?: null | string @go(ProjectID,*string)

	// Properties defined in the Apigee organization profile.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	properties?: [...#PropertiesParameters] @go(Properties,[]PropertiesParameters)

	// Optional. This setting is applicable only for organizations that are soft-deleted (i.e., BillingType
	// is not EVALUATION). It controls how long Organization data will be retained after the initial delete
	// operation completes. During this period, the Organization may be restored to its last known state.
	// After this period, the Organization will no longer be able to be restored.
	// Default value is DELETION_RETENTION_UNSPECIFIED.
	// Possible values are: DELETION_RETENTION_UNSPECIFIED, MINIMUM.
	// +kubebuilder:validation:Optional
	retention?: null | string @go(Retention,*string)

	// Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances.
	// Update is not allowed after the organization is created.
	// If not specified, a Google-Managed encryption key will be used.
	// Valid only when RuntimeType is CLOUD. For example: projects/foo/locations/us/keyRings/bar/cryptoKeys/baz.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/kms/v1beta1.CryptoKey
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	runtimeDatabaseEncryptionKeyName?: null | string @go(RuntimeDatabaseEncryptionKeyName,*string)

	// Runtime type of the Apigee organization based on the Apigee subscription purchased.
	// Default value is CLOUD.
	// Possible values are: CLOUD, HYBRID.
	// +kubebuilder:validation:Optional
	runtimeType?: null | string @go(RuntimeType,*string)
}

#PropertiesObservation: {
	// List of all properties in the object.
	// Structure is documented below.
	property?: [...#PropertyObservation] @go(Property,[]PropertyObservation)
}

#PropertiesParameters: {
	// List of all properties in the object.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	property?: [...#PropertyParameters] @go(Property,[]PropertyParameters)
}

#PropertyObservation: {
	// Name of the property.
	name?: null | string @go(Name,*string)

	// Value of the property.
	value?: null | string @go(Value,*string)
}

#PropertyParameters: {
	// Name of the property.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Value of the property.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

// OrganizationSpec defines the desired state of Organization
#OrganizationSpec: {
	forProvider: #OrganizationParameters @go(ForProvider)
}

// OrganizationStatus defines the observed state of Organization.
#OrganizationStatus: {
	atProvider?: #OrganizationObservation @go(AtProvider)
}

// Organization is the Schema for the Organizations API. An
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Organization: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.projectId)",message="projectId is a required parameter"
	spec:    #OrganizationSpec   @go(Spec)
	status?: #OrganizationStatus @go(Status)
}

// OrganizationList contains a list of Organizations
#OrganizationList: {
	items: [...#Organization] @go(Items,[]Organization)
}
