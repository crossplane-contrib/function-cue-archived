// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/bigtable/v1beta1

package v1beta1

#ColumnFamilyInitParameters: {
	// The name of the column family.
	family?: null | string @go(Family,*string)
}

#ColumnFamilyObservation: {
	// The name of the column family.
	family?: null | string @go(Family,*string)
}

#ColumnFamilyParameters: {
	// The name of the column family.
	// +kubebuilder:validation:Optional
	family?: null | string @go(Family,*string)
}

#TableInitParameters: {
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	changeStreamRetention?: null | string @go(ChangeStreamRetention,*string)

	// A group of columns within a table which share a common configuration. This can be specified multiple times. Structure is documented below.
	columnFamily?: [...#ColumnFamilyInitParameters] @go(ColumnFamily,[]ColumnFamilyInitParameters)

	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column families in the table, and the instance containing the table would be prohibited. If not provided, deletion protection will be set to UNPROTECTED.
	deletionProtection?: null | string @go(DeletionProtection,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// A list of predefined keys to split the table on.
	splitKeys?: [...null | string] @go(SplitKeys,[]*string)
}

#TableObservation: {
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	changeStreamRetention?: null | string @go(ChangeStreamRetention,*string)

	// A group of columns within a table which share a common configuration. This can be specified multiple times. Structure is documented below.
	columnFamily?: [...#ColumnFamilyObservation] @go(ColumnFamily,[]ColumnFamilyObservation)

	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column families in the table, and the instance containing the table would be prohibited. If not provided, deletion protection will be set to UNPROTECTED.
	deletionProtection?: null | string @go(DeletionProtection,*string)

	// an identifier for the resource with format projects/{{project}}/instances/{{instance_name}}/tables/{{name}}
	id?: null | string @go(ID,*string)

	// The name of the Bigtable instance.
	instanceName?: null | string @go(InstanceName,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// A list of predefined keys to split the table on.
	splitKeys?: [...null | string] @go(SplitKeys,[]*string)
}

#TableParameters: {
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	// +kubebuilder:validation:Optional
	changeStreamRetention?: null | string @go(ChangeStreamRetention,*string)

	// A group of columns within a table which share a common configuration. This can be specified multiple times. Structure is documented below.
	// +kubebuilder:validation:Optional
	columnFamily?: [...#ColumnFamilyParameters] @go(ColumnFamily,[]ColumnFamilyParameters)

	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column families in the table, and the instance containing the table would be prohibited. If not provided, deletion protection will be set to UNPROTECTED.
	// +kubebuilder:validation:Optional
	deletionProtection?: null | string @go(DeletionProtection,*string)

	// The name of the Bigtable instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigtable/v1beta1.Instance
	// +kubebuilder:validation:Optional
	instanceName?: null | string @go(InstanceName,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// A list of predefined keys to split the table on.
	// +kubebuilder:validation:Optional
	splitKeys?: [...null | string] @go(SplitKeys,[]*string)
}

// TableSpec defines the desired state of Table
#TableSpec: {
	forProvider: #TableParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TableInitParameters @go(InitProvider)
}

// TableStatus defines the observed state of Table.
#TableStatus: {
	atProvider?: #TableObservation @go(AtProvider)
}

// Table is the Schema for the Tables API. Creates a Google Cloud Bigtable table inside an instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Table: {
	spec:    #TableSpec   @go(Spec)
	status?: #TableStatus @go(Status)
}

// TableList contains a list of Tables
#TableList: {
	items: [...#Table] @go(Items,[]Table)
}
