// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/bigtable/v1beta1

package v1beta1

#ColumnFamilyObservation: {
	// The name of the column family.
	family?: null | string @go(Family,*string)
}

#ColumnFamilyParameters: {
	// The name of the column family.
	// +kubebuilder:validation:Required
	family?: null | string @go(Family,*string)
}

#TableObservation: {
	// A group of columns within a table which share a common configuration. This can be specified multiple times. Structure is documented below.
	columnFamily?: [...#ColumnFamilyObservation] @go(ColumnFamily,[]ColumnFamilyObservation)

	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column families in the table, and the instance containing the table would be prohibited. If not provided, deletion protection will be set to UNPROTECTED.
	deletionProtection?: null | string @go(DeletionProtection,*string)

	// an identifier for the resource with format projects/{{project}}/instances/{{instance_name}}/tables/{{name}}
	id?: null | string @go(ID,*string)

	// The name of the Bigtable instance.
	instanceName?: null | string @go(InstanceName,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// A list of predefined keys to split the table on.
	splitKeys?: [...null | string] @go(SplitKeys,[]*string)
}

#TableParameters: {
	// A group of columns within a table which share a common configuration. This can be specified multiple times. Structure is documented below.
	// +kubebuilder:validation:Optional
	columnFamily?: [...#ColumnFamilyParameters] @go(ColumnFamily,[]ColumnFamilyParameters)

	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column families in the table, and the instance containing the table would be prohibited. If not provided, deletion protection will be set to UNPROTECTED.
	// +kubebuilder:validation:Optional
	deletionProtection?: null | string @go(DeletionProtection,*string)

	// The name of the Bigtable instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigtable/v1beta1.Instance
	// +kubebuilder:validation:Optional
	instanceName?: null | string @go(InstanceName,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// A list of predefined keys to split the table on.
	// +kubebuilder:validation:Optional
	splitKeys?: [...null | string] @go(SplitKeys,[]*string)
}

// TableSpec defines the desired state of Table
#TableSpec: {
	forProvider: #TableParameters @go(ForProvider)
}

// TableStatus defines the observed state of Table.
#TableStatus: {
	atProvider?: #TableObservation @go(AtProvider)
}

// Table is the Schema for the Tables API. Creates a Google Cloud Bigtable table inside an instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Table: {
	spec:    #TableSpec   @go(Spec)
	status?: #TableStatus @go(Status)
}

// TableList contains a list of Tables
#TableList: {
	items: [...#Table] @go(Items,[]Table)
}
