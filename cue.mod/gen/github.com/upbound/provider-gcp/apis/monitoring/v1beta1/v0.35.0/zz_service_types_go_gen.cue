// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/monitoring/v1beta1

package v1beta1

#BasicServiceInitParameters: {
	// Labels that specify the resource that emits the monitoring data
	// which is used for SLO reporting of this Service.
	serviceLabels?: {[string]: null | string} @go(ServiceLabels,map[string]*string)

	// The type of service that this basic service defines, e.g.
	// APP_ENGINE service type
	serviceType?: null | string @go(ServiceType,*string)
}

#BasicServiceObservation: {
	// Labels that specify the resource that emits the monitoring data
	// which is used for SLO reporting of this Service.
	serviceLabels?: {[string]: null | string} @go(ServiceLabels,map[string]*string)

	// The type of service that this basic service defines, e.g.
	// APP_ENGINE service type
	serviceType?: null | string @go(ServiceType,*string)
}

#BasicServiceParameters: {
	// Labels that specify the resource that emits the monitoring data
	// which is used for SLO reporting of this Service.
	// +kubebuilder:validation:Optional
	serviceLabels?: {[string]: null | string} @go(ServiceLabels,map[string]*string)

	// The type of service that this basic service defines, e.g.
	// APP_ENGINE service type
	// +kubebuilder:validation:Optional
	serviceType?: null | string @go(ServiceType,*string)
}

#ServiceInitParameters: {
	// A well-known service type, defined by its service type and service labels.
	// Valid values of service types and services labels are described at
	// https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli
	// Structure is documented below.
	basicService?: [...#BasicServiceInitParameters] @go(BasicService,[]BasicServiceInitParameters)

	// Name used for UI elements listing this Service.
	displayName?: null | string @go(DisplayName,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Labels which have been used to annotate the service. Label keys must start
	// with a letter. Label keys and values may contain lowercase letters,
	// numbers, underscores, and dashes. Label keys and values have a maximum
	// length of 63 characters, and must be less than 128 bytes in size. Up to 64
	// label entries may be stored. For labels which do not have a semantic value,
	// the empty string may be supplied for the label value.
	userLabels?: {[string]: null | string} @go(UserLabels,map[string]*string)
}

#ServiceObservation: {
	// A well-known service type, defined by its service type and service labels.
	// Valid values of service types and services labels are described at
	// https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli
	// Structure is documented below.
	basicService?: [...#BasicServiceObservation] @go(BasicService,[]BasicServiceObservation)

	// Name used for UI elements listing this Service.
	displayName?: null | string @go(DisplayName,*string)

	// an identifier for the resource with format projects/{{project}}/services/{{service_id}}
	id?: null | string @go(ID,*string)

	// The full resource name for this service. The syntax is:
	// projects/[PROJECT_ID]/services/[SERVICE_ID].
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Configuration for how to query telemetry on a Service.
	// Structure is documented below.
	telemetry?: [...#ServiceTelemetryObservation] @go(Telemetry,[]ServiceTelemetryObservation)

	// Labels which have been used to annotate the service. Label keys must start
	// with a letter. Label keys and values may contain lowercase letters,
	// numbers, underscores, and dashes. Label keys and values have a maximum
	// length of 63 characters, and must be less than 128 bytes in size. Up to 64
	// label entries may be stored. For labels which do not have a semantic value,
	// the empty string may be supplied for the label value.
	userLabels?: {[string]: null | string} @go(UserLabels,map[string]*string)
}

#ServiceParameters: {
	// A well-known service type, defined by its service type and service labels.
	// Valid values of service types and services labels are described at
	// https://cloud.google.com/stackdriver/docs/solutions/slo-monitoring/api/api-structures#basic-svc-w-basic-sli
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	basicService?: [...#BasicServiceParameters] @go(BasicService,[]BasicServiceParameters)

	// Name used for UI elements listing this Service.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// Labels which have been used to annotate the service. Label keys must start
	// with a letter. Label keys and values may contain lowercase letters,
	// numbers, underscores, and dashes. Label keys and values have a maximum
	// length of 63 characters, and must be less than 128 bytes in size. Up to 64
	// label entries may be stored. For labels which do not have a semantic value,
	// the empty string may be supplied for the label value.
	// +kubebuilder:validation:Optional
	userLabels?: {[string]: null | string} @go(UserLabels,map[string]*string)
}

#ServiceTelemetryInitParameters: {
}

#ServiceTelemetryObservation: {
	// The full name of the resource that defines this service.
	// Formatted as described in
	// https://cloud.google.com/apis/design/resource_names.
	resourceName?: null | string @go(ResourceName,*string)
}

#ServiceTelemetryParameters: {
}

// ServiceSpec defines the desired state of Service
#ServiceSpec: {
	forProvider: #ServiceParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ServiceInitParameters @go(InitProvider)
}

// ServiceStatus defines the observed state of Service.
#ServiceStatus: {
	atProvider?: #ServiceObservation @go(AtProvider)
}

// Service is the Schema for the Services API. A Service is a discrete, autonomous, and network-accessible unit, designed to solve an individual concern (Wikipedia).
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Service: {
	spec:    #ServiceSpec   @go(Spec)
	status?: #ServiceStatus @go(Status)
}

// ServiceList contains a list of Services
#ServiceList: {
	items: [...#Service] @go(Items,[]Service)
}
