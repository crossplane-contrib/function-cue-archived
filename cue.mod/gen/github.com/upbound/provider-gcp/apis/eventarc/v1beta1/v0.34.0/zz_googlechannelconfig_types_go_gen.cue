// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/eventarc/v1beta1

package v1beta1

#GoogleChannelConfigObservation: {
	// Optional. Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt their event data. It must match the pattern projects/*/locations/*/keyRings/*/cryptoKeys/*.
	cryptoKeyName?: null | string @go(CryptoKeyName,*string)

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/googleChannelConfig
	id?: null | string @go(ID,*string)

	// The location for the resource
	location?: null | string @go(Location,*string)

	// The project for the resource
	project?: null | string @go(Project,*string)

	// Output only. The last-modified time.
	updateTime?: null | string @go(UpdateTime,*string)
}

#GoogleChannelConfigParameters: {
	// Optional. Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt their event data. It must match the pattern projects/*/locations/*/keyRings/*/cryptoKeys/*.
	// +kubebuilder:validation:Optional
	cryptoKeyName?: null | string @go(CryptoKeyName,*string)

	// The location for the resource
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// The project for the resource
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// GoogleChannelConfigSpec defines the desired state of GoogleChannelConfig
#GoogleChannelConfigSpec: {
	forProvider: #GoogleChannelConfigParameters @go(ForProvider)
}

// GoogleChannelConfigStatus defines the observed state of GoogleChannelConfig.
#GoogleChannelConfigStatus: {
	atProvider?: #GoogleChannelConfigObservation @go(AtProvider)
}

// GoogleChannelConfig is the Schema for the GoogleChannelConfigs API. The Eventarc GoogleChannelConfig resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#GoogleChannelConfig: {
	spec:    #GoogleChannelConfigSpec   @go(Spec)
	status?: #GoogleChannelConfigStatus @go(Status)
}

// GoogleChannelConfigList contains a list of GoogleChannelConfigs
#GoogleChannelConfigList: {
	items: [...#GoogleChannelConfig] @go(Items,[]GoogleChannelConfig)
}
