// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/certificatemanager/v1beta1

package v1beta1

#CertificateMapEntryObservation: {
	// A set of Certificates defines for the given hostname.
	// There can be defined up to fifteen certificates in each Certificate Map Entry.
	// Each certificate must match pattern projects//locations//certificates/*.
	certificates?: [...null | string] @go(Certificates,[]*string)

	// Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
	// with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	createTime?: null | string @go(CreateTime,*string)

	// A human-readable description of the resource.
	description?: null | string @go(Description,*string)

	// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
	// for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
	// selecting a proper certificate.
	hostname?: null | string @go(Hostname,*string)

	// an identifier for the resource with format projects/{{project}}/locations/global/certificateMaps/{{map}}/certificateMapEntries/{{name}}
	id?: null | string @go(ID,*string)

	// Set of labels associated with a Certificate Map Entry.
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// A map entry that is inputted into the cetrificate map
	map?: null | string @go(Map,*string)

	// A predefined matcher for particular cases, other than SNI selection
	matcher?: null | string @go(Matcher,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// A serving state of this Certificate Map Entry.
	state?: null | string @go(State,*string)

	// Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
	// with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	updateTime?: null | string @go(UpdateTime,*string)
}

#CertificateMapEntryParameters: {
	// A set of Certificates defines for the given hostname.
	// There can be defined up to fifteen certificates in each Certificate Map Entry.
	// Each certificate must match pattern projects//locations//certificates/*.
	// +kubebuilder:validation:Optional
	certificates?: [...null | string] @go(Certificates,[]*string)

	// A human-readable description of the resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
	// for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
	// selecting a proper certificate.
	// +kubebuilder:validation:Optional
	hostname?: null | string @go(Hostname,*string)

	// Set of labels associated with a Certificate Map Entry.
	// An object containing a list of "key": value pairs.
	// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// A map entry that is inputted into the cetrificate map
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/certificatemanager/v1beta1.CertificateMap
	// +kubebuilder:validation:Optional
	map?: null | string @go(Map,*string)

	// A predefined matcher for particular cases, other than SNI selection
	// +kubebuilder:validation:Optional
	matcher?: null | string @go(Matcher,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// CertificateMapEntrySpec defines the desired state of CertificateMapEntry
#CertificateMapEntrySpec: {
	forProvider: #CertificateMapEntryParameters @go(ForProvider)
}

// CertificateMapEntryStatus defines the observed state of CertificateMapEntry.
#CertificateMapEntryStatus: {
	atProvider?: #CertificateMapEntryObservation @go(AtProvider)
}

// CertificateMapEntry is the Schema for the CertificateMapEntrys API. CertificateMapEntry is a list of certificate configurations, that have been issued for a particular hostname
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#CertificateMapEntry: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.certificates)",message="certificates is a required parameter"
	spec:    #CertificateMapEntrySpec   @go(Spec)
	status?: #CertificateMapEntryStatus @go(Status)
}

// CertificateMapEntryList contains a list of CertificateMapEntrys
#CertificateMapEntryList: {
	items: [...#CertificateMapEntry] @go(Items,[]CertificateMapEntry)
}
