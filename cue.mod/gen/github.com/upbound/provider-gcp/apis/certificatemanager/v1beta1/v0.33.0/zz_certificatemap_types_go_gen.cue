// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/certificatemanager/v1beta1

package v1beta1

#CertificateMapObservation: {
	// Creation timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds with up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	createTime?: null | string @go(CreateTime,*string)

	// A human-readable description of the resource.
	description?: null | string @go(Description,*string)

	// A list of target proxies that use this Certificate Map
	// Structure is documented below.
	gclbTargets?: [...#GclbTargetsObservation] @go(GclbTargets,[]GclbTargetsObservation)

	// an identifier for the resource with format projects/{{project}}/locations/global/certificateMaps/{{name}}
	id?: null | string @go(ID,*string)

	// Set of labels associated with a Certificate Map resource.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Update timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format,
	// accurate to nanoseconds with up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	updateTime?: null | string @go(UpdateTime,*string)
}

#CertificateMapParameters: {
	// A human-readable description of the resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Set of labels associated with a Certificate Map resource.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

#GclbTargetsObservation: {
	// An IP configuration where this Certificate Map is serving
	// Structure is documented below.
	ipConfigs?: [...#IPConfigsObservation] @go(IPConfigs,[]IPConfigsObservation)

	// Proxy name must be in the format projects//locations//targetHttpsProxies/*.
	// This field is part of a union field target_proxy: Only one of targetHttpsProxy or
	// targetSslProxy may be set.
	targetHttpsProxy?: null | string @go(TargetHTTPSProxy,*string)

	// Proxy name must be in the format projects//locations//targetSslProxies/*.
	// This field is part of a union field target_proxy: Only one of targetHttpsProxy or
	// targetSslProxy may be set.
	targetSslProxy?: null | string @go(TargetSSLProxy,*string)
}

#GclbTargetsParameters: {
}

#IPConfigsObservation: {
	// An external IP address
	ipAddress?: null | string @go(IPAddress,*string)

	// A list of ports
	ports?: [...null | float64] @go(Ports,[]*float64)
}

#IPConfigsParameters: {
}

// CertificateMapSpec defines the desired state of CertificateMap
#CertificateMapSpec: {
	forProvider: #CertificateMapParameters @go(ForProvider)
}

// CertificateMapStatus defines the observed state of CertificateMap.
#CertificateMapStatus: {
	atProvider?: #CertificateMapObservation @go(AtProvider)
}

// CertificateMap is the Schema for the CertificateMaps API. CertificateMap defines a collection of certificate configurations, which are usable by any associated target proxies
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#CertificateMap: {
	spec:    #CertificateMapSpec   @go(Spec)
	status?: #CertificateMapStatus @go(Status)
}

// CertificateMapList contains a list of CertificateMaps
#CertificateMapList: {
	items: [...#CertificateMap] @go(Items,[]CertificateMap)
}
