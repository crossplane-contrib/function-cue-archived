// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/filestore/v1beta1

package v1beta1

#SnapshotInitParameters: {
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	description?: null | string @go(Description,*string)

	// Resource labels to represent user-provided metadata.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#SnapshotObservation: {
	// The time when the snapshot was created in RFC3339 text format.
	createTime?: null | string @go(CreateTime,*string)

	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	description?: null | string @go(Description,*string)

	// The amount of bytes needed to allocate a full copy of the snapshot content.
	filesystemUsedBytes?: null | string @go(FilesystemUsedBytes,*string)

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/instances/{{instance}}/snapshots/{{name}}
	id?: null | string @go(ID,*string)

	// The resource name of the filestore instance.
	instance?: null | string @go(Instance,*string)

	// Resource labels to represent user-provided metadata.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The snapshot state.
	state?: null | string @go(State,*string)
}

#SnapshotParameters: {
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The resource name of the filestore instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/filestore/v1beta1.Instance
	// +kubebuilder:validation:Optional
	instance?: null | string @go(Instance,*string)

	// Resource labels to represent user-provided metadata.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// SnapshotSpec defines the desired state of Snapshot
#SnapshotSpec: {
	forProvider: #SnapshotParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SnapshotInitParameters @go(InitProvider)
}

// SnapshotStatus defines the observed state of Snapshot.
#SnapshotStatus: {
	atProvider?: #SnapshotObservation @go(AtProvider)
}

// Snapshot is the Schema for the Snapshots API. A Google Cloud Filestore snapshot.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Snapshot: {
	spec:    #SnapshotSpec   @go(Spec)
	status?: #SnapshotStatus @go(Status)
}

// SnapshotList contains a list of Snapshots
#SnapshotList: {
	items: [...#Snapshot] @go(Items,[]Snapshot)
}
