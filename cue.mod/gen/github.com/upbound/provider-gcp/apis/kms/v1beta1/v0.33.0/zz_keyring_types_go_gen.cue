// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/kms/v1beta1

package v1beta1

#KeyRingObservation: {
	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/keyRings/{{name}}
	id?: null | string @go(ID,*string)

	// The location for the KeyRing.
	// A full list of valid locations can be found by running gcloud kms locations list.
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#KeyRingParameters: {
	// The location for the KeyRing.
	// A full list of valid locations can be found by running gcloud kms locations list.
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

// KeyRingSpec defines the desired state of KeyRing
#KeyRingSpec: {
	forProvider: #KeyRingParameters @go(ForProvider)
}

// KeyRingStatus defines the observed state of KeyRing.
#KeyRingStatus: {
	atProvider?: #KeyRingObservation @go(AtProvider)
}

// KeyRing is the Schema for the KeyRings API. A
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#KeyRing: {
	spec:    #KeyRingSpec   @go(Spec)
	status?: #KeyRingStatus @go(Status)
}

// KeyRingList contains a list of KeyRings
#KeyRingList: {
	items: [...#KeyRing] @go(Items,[]KeyRing)
}
