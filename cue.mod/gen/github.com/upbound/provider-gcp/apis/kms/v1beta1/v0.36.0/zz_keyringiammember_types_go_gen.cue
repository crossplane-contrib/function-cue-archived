// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/kms/v1beta1

package v1beta1

#KeyRingIAMMemberConditionInitParameters: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#KeyRingIAMMemberConditionObservation: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#KeyRingIAMMemberConditionParameters: {
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// +kubebuilder:validation:Optional
	expression?: null | string @go(Expression,*string)

	// +kubebuilder:validation:Optional
	title?: null | string @go(Title,*string)
}

#KeyRingIAMMemberInitParameters: {
	condition?: [...#KeyRingIAMMemberConditionInitParameters] @go(Condition,[]KeyRingIAMMemberConditionInitParameters)
	member?: null | string @go(Member,*string)
	role?:   null | string @go(Role,*string)
}

#KeyRingIAMMemberObservation: {
	condition?: [...#KeyRingIAMMemberConditionObservation] @go(Condition,[]KeyRingIAMMemberConditionObservation)
	etag?:      null | string @go(Etag,*string)
	id?:        null | string @go(ID,*string)
	keyRingId?: null | string @go(KeyRingID,*string)
	member?:    null | string @go(Member,*string)
	role?:      null | string @go(Role,*string)
}

#KeyRingIAMMemberParameters: {
	// +kubebuilder:validation:Optional
	condition?: [...#KeyRingIAMMemberConditionParameters] @go(Condition,[]KeyRingIAMMemberConditionParameters)

	// +crossplane:generate:reference:type=KeyRing
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.ExtractResourceID()
	// +kubebuilder:validation:Optional
	keyRingId?: null | string @go(KeyRingID,*string)

	// +kubebuilder:validation:Optional
	member?: null | string @go(Member,*string)

	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)
}

// KeyRingIAMMemberSpec defines the desired state of KeyRingIAMMember
#KeyRingIAMMemberSpec: {
	forProvider: #KeyRingIAMMemberParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #KeyRingIAMMemberInitParameters @go(InitProvider)
}

// KeyRingIAMMemberStatus defines the observed state of KeyRingIAMMember.
#KeyRingIAMMemberStatus: {
	atProvider?: #KeyRingIAMMemberObservation @go(AtProvider)
}

// KeyRingIAMMember is the Schema for the KeyRingIAMMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#KeyRingIAMMember: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.member) || has(self.initProvider.member)",message="member is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.role) || has(self.initProvider.role)",message="role is a required parameter"
	spec:    #KeyRingIAMMemberSpec   @go(Spec)
	status?: #KeyRingIAMMemberStatus @go(Status)
}

// KeyRingIAMMemberList contains a list of KeyRingIAMMembers
#KeyRingIAMMemberList: {
	items: [...#KeyRingIAMMember] @go(Items,[]KeyRingIAMMember)
}
