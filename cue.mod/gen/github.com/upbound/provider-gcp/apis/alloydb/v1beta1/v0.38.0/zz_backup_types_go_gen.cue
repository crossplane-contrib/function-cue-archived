// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/alloydb/v1beta1

package v1beta1

#BackupInitParameters: {
	// User-provided description of the backup.
	description?: null | string @go(Description,*string)

	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
	// Structure is documented below.
	encryptionConfig?: [...#EncryptionConfigInitParameters] @go(EncryptionConfig,[]EncryptionConfigInitParameters)

	// User-defined labels for the alloydb backup.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#BackupObservation: {
	// The full resource name of the backup source cluster (e.g., projects/{project}/locations/{location}/clusters/{clusterId}).
	clusterName?: null | string @go(ClusterName,*string)

	// Time the Backup was created in UTC.
	createTime?: null | string @go(CreateTime,*string)

	// User-provided description of the backup.
	description?: null | string @go(Description,*string)

	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
	// Structure is documented below.
	encryptionConfig?: [...#EncryptionConfigObservation] @go(EncryptionConfig,[]EncryptionConfigObservation)

	// EncryptionInfo describes the encryption information of a cluster or a backup.
	// Structure is documented below.
	encryptionInfo?: [...#EncryptionInfoObservation] @go(EncryptionInfo,[]EncryptionInfoObservation)

	// A hash of the resource.
	etag?: null | string @go(Etag,*string)

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/backups/{{backup_id}}
	id?: null | string @go(ID,*string)

	// User-defined labels for the alloydb backup.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The location where the alloydb backup should reside.
	location?: null | string @go(Location,*string)

	// Output only. The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backupId}
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// If true, indicates that the service is actively updating the resource. This can happen due to user-triggered updates or system actions like failover or maintenance.
	reconciling?: null | bool @go(Reconciling,*bool)

	// The current state of the backup.
	state?: null | string @go(State,*string)

	// Output only. The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.
	uid?: null | string @go(UID,*string)

	// Time the Backup was updated in UTC.
	updateTime?: null | string @go(UpdateTime,*string)
}

#BackupParameters: {
	// The full resource name of the backup source cluster (e.g., projects/{project}/locations/{location}/clusters/{clusterId}).
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/alloydb/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("name",true)
	// +kubebuilder:validation:Optional
	clusterName?: null | string @go(ClusterName,*string)

	// User-provided description of the backup.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	encryptionConfig?: [...#EncryptionConfigParameters] @go(EncryptionConfig,[]EncryptionConfigParameters)

	// User-defined labels for the alloydb backup.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The location where the alloydb backup should reside.
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)
}

#EncryptionConfigInitParameters: {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	kmsKeyName?: null | string @go(KMSKeyName,*string)
}

#EncryptionConfigObservation: {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	kmsKeyName?: null | string @go(KMSKeyName,*string)
}

#EncryptionConfigParameters: {
	// The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].
	// +kubebuilder:validation:Optional
	kmsKeyName?: null | string @go(KMSKeyName,*string)
}

#EncryptionInfoInitParameters: {
}

#EncryptionInfoObservation: {
	// (Output)
	// Output only. Type of encryption.
	encryptionType?: null | string @go(EncryptionType,*string)

	// (Output)
	// Output only. Cloud KMS key versions that are being used to protect the database or the backup.
	kmsKeyVersions?: [...null | string] @go(KMSKeyVersions,[]*string)
}

#EncryptionInfoParameters: {
}

// BackupSpec defines the desired state of Backup
#BackupSpec: {
	forProvider: #BackupParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BackupInitParameters @go(InitProvider)
}

// BackupStatus defines the observed state of Backup.
#BackupStatus: {
	atProvider?: #BackupObservation @go(AtProvider)
}

// Backup is the Schema for the Backups API. An AlloyDB Backup.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Backup: {
	spec:    #BackupSpec   @go(Spec)
	status?: #BackupStatus @go(Status)
}

// BackupList contains a list of Backups
#BackupList: {
	items: [...#Backup] @go(Items,[]Backup)
}
