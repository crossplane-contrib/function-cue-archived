// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/accesscontextmanager/v1beta1

package v1beta1

#ServicePerimeterResourceInitParameters: {
	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	resource?: null | string @go(Resource,*string)
}

#ServicePerimeterResourceObservation: {
	// an identifier for the resource with format {{perimeter_name}}/{{resource}}
	id?: null | string @go(ID,*string)

	// The name of the Service Perimeter to add this resource to.
	perimeterName?: null | string @go(PerimeterName,*string)

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	resource?: null | string @go(Resource,*string)
}

#ServicePerimeterResourceParameters: {
	// The name of the Service Perimeter to add this resource to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/accesscontextmanager/v1beta1.ServicePerimeter
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	perimeterName?: null | string @go(PerimeterName,*string)

	// A GCP resource that is inside of the service perimeter.
	// Currently only projects are allowed.
	// Format: projects/{project_number}
	// +kubebuilder:validation:Optional
	resource?: null | string @go(Resource,*string)
}

// ServicePerimeterResourceSpec defines the desired state of ServicePerimeterResource
#ServicePerimeterResourceSpec: {
	forProvider: #ServicePerimeterResourceParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ServicePerimeterResourceInitParameters @go(InitProvider)
}

// ServicePerimeterResourceStatus defines the observed state of ServicePerimeterResource.
#ServicePerimeterResourceStatus: {
	atProvider?: #ServicePerimeterResourceObservation @go(AtProvider)
}

// ServicePerimeterResource is the Schema for the ServicePerimeterResources API. Allows configuring a single GCP resource that should be inside of a service perimeter.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ServicePerimeterResource: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resource) || has(self.initProvider.resource)",message="resource is a required parameter"
	spec:    #ServicePerimeterResourceSpec   @go(Spec)
	status?: #ServicePerimeterResourceStatus @go(Status)
}

// ServicePerimeterResourceList contains a list of ServicePerimeterResources
#ServicePerimeterResourceList: {
	items: [...#ServicePerimeterResource] @go(Items,[]ServicePerimeterResource)
}
