// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/accesscontextmanager/v1beta1

package v1beta1

#AccessPolicyInitParameters: {
	// The parent of this AccessPolicy in the Cloud Resource Hierarchy.
	// Format: organizations/{organization_id}
	parent?: null | string @go(Parent,*string)

	// Folder or project on which this policy is applicable.
	// Format: folders/{{folder_id}} or projects/{{project_id}}
	scopes?: [...null | string] @go(Scopes,[]*string)

	// Human readable title. Does not affect behavior.
	title?: null | string @go(Title,*string)
}

#AccessPolicyObservation: {
	// Time the AccessPolicy was created in UTC.
	createTime?: null | string @go(CreateTime,*string)

	// an identifier for the resource with format {{name}}
	id?: null | string @go(ID,*string)

	// Resource name of the AccessPolicy. Format: {policy_id}
	name?: null | string @go(Name,*string)

	// The parent of this AccessPolicy in the Cloud Resource Hierarchy.
	// Format: organizations/{organization_id}
	parent?: null | string @go(Parent,*string)

	// Folder or project on which this policy is applicable.
	// Format: folders/{{folder_id}} or projects/{{project_id}}
	scopes?: [...null | string] @go(Scopes,[]*string)

	// Human readable title. Does not affect behavior.
	title?: null | string @go(Title,*string)

	// Time the AccessPolicy was updated in UTC.
	updateTime?: null | string @go(UpdateTime,*string)
}

#AccessPolicyParameters: {
	// The parent of this AccessPolicy in the Cloud Resource Hierarchy.
	// Format: organizations/{organization_id}
	// +kubebuilder:validation:Optional
	parent?: null | string @go(Parent,*string)

	// Folder or project on which this policy is applicable.
	// Format: folders/{{folder_id}} or projects/{{project_id}}
	// +kubebuilder:validation:Optional
	scopes?: [...null | string] @go(Scopes,[]*string)

	// Human readable title. Does not affect behavior.
	// +kubebuilder:validation:Optional
	title?: null | string @go(Title,*string)
}

// AccessPolicySpec defines the desired state of AccessPolicy
#AccessPolicySpec: {
	forProvider: #AccessPolicyParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AccessPolicyInitParameters @go(InitProvider)
}

// AccessPolicyStatus defines the observed state of AccessPolicy.
#AccessPolicyStatus: {
	atProvider?: #AccessPolicyObservation @go(AtProvider)
}

// AccessPolicy is the Schema for the AccessPolicys API. AccessPolicy is a container for AccessLevels (which define the necessary attributes to use GCP services) and ServicePerimeters (which define regions of services able to freely pass data within a perimeter).
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#AccessPolicy: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.parent) || has(self.initProvider.parent)",message="parent is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.title) || has(self.initProvider.title)",message="title is a required parameter"
	spec:    #AccessPolicySpec   @go(Spec)
	status?: #AccessPolicyStatus @go(Status)
}

// AccessPolicyList contains a list of AccessPolicys
#AccessPolicyList: {
	items: [...#AccessPolicy] @go(Items,[]AccessPolicy)
}
