// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/bigquery/v1beta1

package v1beta1

#DatasetAccessDatasetDatasetInitParameters: {
	// The ID of the project containing this table.
	projectId?: null | string @go(ProjectID,*string)
}

#DatasetAccessDatasetDatasetObservation: {
	// The ID of the dataset containing this table.
	datasetId?: null | string @go(DatasetID,*string)

	// The ID of the project containing this table.
	projectId?: null | string @go(ProjectID,*string)
}

#DatasetAccessDatasetDatasetParameters: {
	// The ID of the dataset containing this table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Dataset
	// +kubebuilder:validation:Optional
	datasetId?: null | string @go(DatasetID,*string)

	// The ID of the project containing this table.
	// +kubebuilder:validation:Optional
	projectId?: null | string @go(ProjectID,*string)
}

#DatasetAccessDatasetInitParameters: {
	// The dataset this entry applies to
	// Structure is documented below.
	dataset?: [...#DatasetAccessDatasetDatasetInitParameters] @go(Dataset,[]DatasetAccessDatasetDatasetInitParameters)

	// Which resources in the dataset this entry applies to. Currently, only views are supported,
	// but additional target types may be added in the future. Possible values: VIEWS
	targetTypes?: [...null | string] @go(TargetTypes,[]*string)
}

#DatasetAccessDatasetObservation: {
	// The dataset this entry applies to
	// Structure is documented below.
	dataset?: [...#DatasetAccessDatasetDatasetObservation] @go(Dataset,[]DatasetAccessDatasetDatasetObservation)

	// Which resources in the dataset this entry applies to. Currently, only views are supported,
	// but additional target types may be added in the future. Possible values: VIEWS
	targetTypes?: [...null | string] @go(TargetTypes,[]*string)
}

#DatasetAccessDatasetParameters: {
	// The dataset this entry applies to
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	dataset: [...#DatasetAccessDatasetDatasetParameters] @go(Dataset,[]DatasetAccessDatasetDatasetParameters)

	// Which resources in the dataset this entry applies to. Currently, only views are supported,
	// but additional target types may be added in the future. Possible values: VIEWS
	// +kubebuilder:validation:Optional
	targetTypes: [...null | string] @go(TargetTypes,[]*string)
}

#DatasetAccessInitParameters: {
	// Grants all resources of particular types in a particular dataset read access to the current dataset.
	// Structure is documented below.
	dataset?: [...#DatasetAccessDatasetInitParameters] @go(Dataset,[]DatasetAccessDatasetInitParameters)

	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	domain?: null | string @go(Domain,*string)

	// An email address of a Google Group to grant access to.
	groupByEmail?: null | string @go(GroupByEmail,*string)

	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: allUsers
	iamMember?: null | string @go(IAMMember,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Describes the rights granted to the user specified by the other
	// member of the access object. Basic, predefined, and custom roles are
	// supported. Predefined roles that have equivalent basic roles are
	// swapped by the API to their basic counterparts, and will show a diff
	// post-create. See
	// official docs.
	role?: null | string @go(Role,*string)

	// A routine from a different dataset to grant access to. Queries
	// executed against that routine will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that routine is updated by any user, access to the routine
	// needs to be granted again via an update operation.
	// Structure is documented below.
	routine?: [...#DatasetAccessRoutineInitParameters] @go(Routine,[]DatasetAccessRoutineInitParameters)

	// A special group to grant access to. Possible values include:
	specialGroup?: null | string @go(SpecialGroup,*string)

	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.
	// Structure is documented below.
	view?: [...#DatasetAccessViewInitParameters] @go(View,[]DatasetAccessViewInitParameters)
}

#DatasetAccessObservation: {
	apiUpdatedMember?: null | bool @go(APIUpdatedMember,*bool)

	// Grants all resources of particular types in a particular dataset read access to the current dataset.
	// Structure is documented below.
	dataset?: [...#DatasetAccessDatasetObservation] @go(Dataset,[]DatasetAccessDatasetObservation)

	// A unique ID for this dataset, without the project name. The ID
	// must contain only letters (a-z, A-Z), numbers (0-9), or
	// underscores (_). The maximum length is 1,024 characters.
	datasetId?: null | string @go(DatasetID,*string)

	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	domain?: null | string @go(Domain,*string)

	// An email address of a Google Group to grant access to.
	groupByEmail?: null | string @go(GroupByEmail,*string)

	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: allUsers
	iamMember?: null | string @go(IAMMember,*string)

	// an identifier for the resource with format projects/{{project}}/datasets/{{dataset_id}}
	id?: null | string @go(ID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Describes the rights granted to the user specified by the other
	// member of the access object. Basic, predefined, and custom roles are
	// supported. Predefined roles that have equivalent basic roles are
	// swapped by the API to their basic counterparts, and will show a diff
	// post-create. See
	// official docs.
	role?: null | string @go(Role,*string)

	// A routine from a different dataset to grant access to. Queries
	// executed against that routine will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that routine is updated by any user, access to the routine
	// needs to be granted again via an update operation.
	// Structure is documented below.
	routine?: [...#DatasetAccessRoutineObservation] @go(Routine,[]DatasetAccessRoutineObservation)

	// A special group to grant access to. Possible values include:
	specialGroup?: null | string @go(SpecialGroup,*string)

	// An email address of a user to grant access to. For example:
	// fred@example.com
	userByEmail?: null | string @go(UserByEmail,*string)

	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.
	// Structure is documented below.
	view?: [...#DatasetAccessViewObservation] @go(View,[]DatasetAccessViewObservation)
}

#DatasetAccessParameters: {
	// Grants all resources of particular types in a particular dataset read access to the current dataset.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	dataset?: [...#DatasetAccessDatasetParameters] @go(Dataset,[]DatasetAccessDatasetParameters)

	// A unique ID for this dataset, without the project name. The ID
	// must contain only letters (a-z, A-Z), numbers (0-9), or
	// underscores (_). The maximum length is 1,024 characters.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Dataset
	// +kubebuilder:validation:Optional
	datasetId?: null | string @go(DatasetID,*string)

	// A domain to grant access to. Any users signed in with the
	// domain specified will be granted the specified access
	// +kubebuilder:validation:Optional
	domain?: null | string @go(Domain,*string)

	// An email address of a Google Group to grant access to.
	// +kubebuilder:validation:Optional
	groupByEmail?: null | string @go(GroupByEmail,*string)

	// Some other type of member that appears in the IAM Policy but isn't a user,
	// group, domain, or special group. For example: allUsers
	// +kubebuilder:validation:Optional
	iamMember?: null | string @go(IAMMember,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// Describes the rights granted to the user specified by the other
	// member of the access object. Basic, predefined, and custom roles are
	// supported. Predefined roles that have equivalent basic roles are
	// swapped by the API to their basic counterparts, and will show a diff
	// post-create. See
	// official docs.
	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)

	// A routine from a different dataset to grant access to. Queries
	// executed against that routine will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that routine is updated by any user, access to the routine
	// needs to be granted again via an update operation.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	routine?: [...#DatasetAccessRoutineParameters] @go(Routine,[]DatasetAccessRoutineParameters)

	// A special group to grant access to. Possible values include:
	// +kubebuilder:validation:Optional
	specialGroup?: null | string @go(SpecialGroup,*string)

	// An email address of a user to grant access to. For example:
	// fred@example.com
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("email",true)
	// +kubebuilder:validation:Optional
	userByEmail?: null | string @go(UserByEmail,*string)

	// A view from a different dataset to grant access to. Queries
	// executed against that view will have read access to tables in
	// this dataset. The role field is not required when this field is
	// set. If that view is updated by any user, access to the view
	// needs to be granted again via an update operation.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	view?: [...#DatasetAccessViewParameters] @go(View,[]DatasetAccessViewParameters)
}

#DatasetAccessRoutineInitParameters: {
}

#DatasetAccessRoutineObservation: {
	// The ID of the dataset containing this table.
	datasetId?: null | string @go(DatasetID,*string)

	// The ID of the project containing this table.
	projectId?: null | string @go(ProjectID,*string)

	// The ID of the routine. The ID must contain only letters (a-z,
	// A-Z), numbers (0-9), or underscores (_). The maximum length
	// is 256 characters.
	routineId?: null | string @go(RoutineID,*string)
}

#DatasetAccessRoutineParameters: {
	// The ID of the dataset containing this table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Routine
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("dataset_id",false)
	// +kubebuilder:validation:Optional
	datasetId?: null | string @go(DatasetID,*string)

	// The ID of the project containing this table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Routine
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("project",false)
	// +kubebuilder:validation:Optional
	projectId?: null | string @go(ProjectID,*string)

	// The ID of the routine. The ID must contain only letters (a-z,
	// A-Z), numbers (0-9), or underscores (_). The maximum length
	// is 256 characters.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Routine
	// +kubebuilder:validation:Optional
	routineId?: null | string @go(RoutineID,*string)
}

#DatasetAccessViewInitParameters: {
	// The ID of the project containing this table.
	projectId?: null | string @go(ProjectID,*string)
}

#DatasetAccessViewObservation: {
	// The ID of the dataset containing this table.
	datasetId?: null | string @go(DatasetID,*string)

	// The ID of the project containing this table.
	projectId?: null | string @go(ProjectID,*string)

	// The ID of the table. The ID must contain only letters (a-z,
	// A-Z), numbers (0-9), or underscores (_). The maximum length
	// is 1,024 characters.
	tableId?: null | string @go(TableID,*string)
}

#DatasetAccessViewParameters: {
	// The ID of the dataset containing this table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Dataset
	// +kubebuilder:validation:Optional
	datasetId?: null | string @go(DatasetID,*string)

	// The ID of the project containing this table.
	// +kubebuilder:validation:Optional
	projectId?: null | string @go(ProjectID,*string)

	// The ID of the table. The ID must contain only letters (a-z,
	// A-Z), numbers (0-9), or underscores (_). The maximum length
	// is 1,024 characters.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Table
	// +kubebuilder:validation:Optional
	tableId?: null | string @go(TableID,*string)
}

// DatasetAccessSpec defines the desired state of DatasetAccess
#DatasetAccessSpec: {
	forProvider: #DatasetAccessParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #DatasetAccessInitParameters @go(InitProvider)
}

// DatasetAccessStatus defines the observed state of DatasetAccess.
#DatasetAccessStatus: {
	atProvider?: #DatasetAccessObservation @go(AtProvider)
}

// DatasetAccess is the Schema for the DatasetAccesss API. Gives dataset access for a single entity.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#DatasetAccess: {
	spec:    #DatasetAccessSpec   @go(Spec)
	status?: #DatasetAccessStatus @go(Status)
}

// DatasetAccessList contains a list of DatasetAccesss
#DatasetAccessList: {
	items: [...#DatasetAccess] @go(Items,[]DatasetAccess)
}
