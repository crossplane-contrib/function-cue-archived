// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/bigquery/v1beta1

package v1beta1

#TableIAMMemberConditionInitParameters: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#TableIAMMemberConditionObservation: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#TableIAMMemberConditionParameters: {
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// +kubebuilder:validation:Optional
	expression?: null | string @go(Expression,*string)

	// +kubebuilder:validation:Optional
	title?: null | string @go(Title,*string)
}

#TableIAMMemberInitParameters: {
	condition?: [...#TableIAMMemberConditionInitParameters] @go(Condition,[]TableIAMMemberConditionInitParameters)
	role?: null | string @go(Role,*string)
}

#TableIAMMemberObservation: {
	condition?: [...#TableIAMMemberConditionObservation] @go(Condition,[]TableIAMMemberConditionObservation)
	datasetId?: null | string @go(DatasetID,*string)
	etag?:      null | string @go(Etag,*string)
	id?:        null | string @go(ID,*string)
	member?:    null | string @go(Member,*string)
	project?:   null | string @go(Project,*string)
	role?:      null | string @go(Role,*string)
	tableId?:   null | string @go(TableID,*string)
}

#TableIAMMemberParameters: {
	// +kubebuilder:validation:Optional
	condition?: [...#TableIAMMemberConditionParameters] @go(Condition,[]TableIAMMemberConditionParameters)

	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Dataset
	// +kubebuilder:validation:Optional
	datasetId?: null | string @go(DatasetID,*string)

	// +kubebuilder:validation:Required
	member?: null | string @go(Member,*string)

	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)

	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/bigquery/v1beta1.Table
	// +kubebuilder:validation:Optional
	tableId?: null | string @go(TableID,*string)
}

// TableIAMMemberSpec defines the desired state of TableIAMMember
#TableIAMMemberSpec: {
	forProvider: #TableIAMMemberParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TableIAMMemberInitParameters @go(InitProvider)
}

// TableIAMMemberStatus defines the observed state of TableIAMMember.
#TableIAMMemberStatus: {
	atProvider?: #TableIAMMemberObservation @go(AtProvider)
}

// TableIAMMember is the Schema for the TableIAMMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#TableIAMMember: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.role) || (has(self.initProvider) && has(self.initProvider.role))",message="spec.forProvider.role is a required parameter"
	spec:    #TableIAMMemberSpec   @go(Spec)
	status?: #TableIAMMemberStatus @go(Status)
}

// TableIAMMemberList contains a list of TableIAMMembers
#TableIAMMemberList: {
	items: [...#TableIAMMember] @go(Items,[]TableIAMMember)
}
