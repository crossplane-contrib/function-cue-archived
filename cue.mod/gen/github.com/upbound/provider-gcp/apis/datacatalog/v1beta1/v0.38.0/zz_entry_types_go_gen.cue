// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/datacatalog/v1beta1

package v1beta1

#BigqueryDateShardedSpecInitParameters: {
}

#BigqueryDateShardedSpecObservation: {
	// (Output)
	// The Data Catalog resource name of the dataset entry the current table belongs to, for example,
	// projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
	dataset?: null | string @go(Dataset,*string)

	// (Output)
	// Total number of shards.
	shardCount?: null | float64 @go(ShardCount,*float64)

	// (Output)
	// The table name prefix of the shards. The name of any given shard is [tablePrefix]YYYYMMDD,
	// for example, for shard MyTable20180101, the tablePrefix is MyTable.
	tablePrefix?: null | string @go(TablePrefix,*string)
}

#BigqueryDateShardedSpecParameters: {
}

#BigqueryTableSpecInitParameters: {
}

#BigqueryTableSpecObservation: {
	// (Output)
	// The table source type.
	tableSourceType?: null | string @go(TableSourceType,*string)

	// (Output)
	// Spec of a BigQuery table. This field should only be populated if tableSourceType is BIGQUERY_TABLE.
	// Structure is documented below.
	tableSpec?: [...#TableSpecObservation] @go(TableSpec,[]TableSpecObservation)

	// (Output)
	// Table view specification. This field should only be populated if tableSourceType is BIGQUERY_VIEW.
	// Structure is documented below.
	viewSpec?: [...#ViewSpecObservation] @go(ViewSpec,[]ViewSpecObservation)
}

#BigqueryTableSpecParameters: {
}

#EntryInitParameters: {
	// Entry description, which can consist of several sentences or paragraphs that describe entry contents.
	description?: null | string @go(Description,*string)

	// Display information such as title and description. A short name to identify the entry,
	// for example, "Analytics Data - Jan 2011".
	displayName?: null | string @go(DisplayName,*string)

	// The id of the entry to create.
	entryId?: null | string @go(EntryID,*string)

	// Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.
	// Structure is documented below.
	gcsFilesetSpec?: [...#GcsFilesetSpecInitParameters] @go(GcsFilesetSpec,[]GcsFilesetSpecInitParameters)

	// The resource this metadata entry refers to.
	// For Google Cloud Platform resources, linkedResource is the full name of the resource.
	// For example, the linkedResource for a table resource from BigQuery is:
	// //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
	// Output only when Entry is of type in the EntryType enum. For entries with userSpecifiedType,
	// this field is optional and defaults to an empty string.
	linkedResource?: null | string @go(LinkedResource,*string)

	// Schema of the entry (e.g. BigQuery, GoogleSQL, Avro schema), as a json string. An entry might not have any schema
	// attached to it. See
	// https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
	// for what fields this schema can contain.
	schema?: null | string @go(Schema,*string)

	// The type of the entry. Only used for Entries with types in the EntryType enum.
	// Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use userSpecifiedType.
	// Possible values are: FILESET.
	type?: null | string @go(Type,*string)

	// This field indicates the entry's source system that Data Catalog does not integrate with.
	// userSpecifiedSystem strings must begin with a letter or underscore and can only contain letters, numbers,
	// and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	userSpecifiedSystem?: null | string @go(UserSpecifiedSystem,*string)

	// Entry type if it does not fit any of the input-allowed values listed in EntryType enum above.
	// When creating an entry, users should check the enum values first, if nothing matches the entry
	// to be created, then provide a custom value, for example "my_special_type".
	// userSpecifiedType strings must begin with a letter or underscore and can only contain letters,
	// numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	userSpecifiedType?: null | string @go(UserSpecifiedType,*string)
}

#EntryObservation: {
	// Specification for a group of BigQuery tables with name pattern [prefix]YYYYMMDD.
	// Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
	// Structure is documented below.
	bigqueryDateShardedSpec?: [...#BigqueryDateShardedSpecObservation] @go(BigqueryDateShardedSpec,[]BigqueryDateShardedSpecObservation)

	// Specification that applies to a BigQuery table. This is only valid on entries of type TABLE.
	// Structure is documented below.
	bigqueryTableSpec?: [...#BigqueryTableSpecObservation] @go(BigqueryTableSpec,[]BigqueryTableSpecObservation)

	// Entry description, which can consist of several sentences or paragraphs that describe entry contents.
	description?: null | string @go(Description,*string)

	// Display information such as title and description. A short name to identify the entry,
	// for example, "Analytics Data - Jan 2011".
	displayName?: null | string @go(DisplayName,*string)

	// The name of the entry group this entry is in.
	entryGroup?: null | string @go(EntryGroup,*string)

	// The id of the entry to create.
	entryId?: null | string @go(EntryID,*string)

	// Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.
	// Structure is documented below.
	gcsFilesetSpec?: [...#GcsFilesetSpecObservation] @go(GcsFilesetSpec,[]GcsFilesetSpecObservation)

	// an identifier for the resource with format {{name}}
	id?: null | string @go(ID,*string)

	// This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
	integratedSystem?: null | string @go(IntegratedSystem,*string)

	// The resource this metadata entry refers to.
	// For Google Cloud Platform resources, linkedResource is the full name of the resource.
	// For example, the linkedResource for a table resource from BigQuery is:
	// //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
	// Output only when Entry is of type in the EntryType enum. For entries with userSpecifiedType,
	// this field is optional and defaults to an empty string.
	linkedResource?: null | string @go(LinkedResource,*string)

	// The Data Catalog resource name of the entry in URL format.
	// Example: projects/{project_id}/locations/{location}/entryGroups/{entryGroupId}/entries/{entryId}.
	// Note that this Entry and its child resources may not actually be stored in the location in this name.
	name?: null | string @go(Name,*string)

	// Schema of the entry (e.g. BigQuery, GoogleSQL, Avro schema), as a json string. An entry might not have any schema
	// attached to it. See
	// https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
	// for what fields this schema can contain.
	schema?: null | string @go(Schema,*string)

	// The type of the entry. Only used for Entries with types in the EntryType enum.
	// Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use userSpecifiedType.
	// Possible values are: FILESET.
	type?: null | string @go(Type,*string)

	// This field indicates the entry's source system that Data Catalog does not integrate with.
	// userSpecifiedSystem strings must begin with a letter or underscore and can only contain letters, numbers,
	// and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	userSpecifiedSystem?: null | string @go(UserSpecifiedSystem,*string)

	// Entry type if it does not fit any of the input-allowed values listed in EntryType enum above.
	// When creating an entry, users should check the enum values first, if nothing matches the entry
	// to be created, then provide a custom value, for example "my_special_type".
	// userSpecifiedType strings must begin with a letter or underscore and can only contain letters,
	// numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	userSpecifiedType?: null | string @go(UserSpecifiedType,*string)
}

#EntryParameters: {
	// Entry description, which can consist of several sentences or paragraphs that describe entry contents.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Display information such as title and description. A short name to identify the entry,
	// for example, "Analytics Data - Jan 2011".
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The name of the entry group this entry is in.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/datacatalog/v1beta1.EntryGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	entryGroup?: null | string @go(EntryGroup,*string)

	// The id of the entry to create.
	// +kubebuilder:validation:Optional
	entryId?: null | string @go(EntryID,*string)

	// Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	gcsFilesetSpec?: [...#GcsFilesetSpecParameters] @go(GcsFilesetSpec,[]GcsFilesetSpecParameters)

	// The resource this metadata entry refers to.
	// For Google Cloud Platform resources, linkedResource is the full name of the resource.
	// For example, the linkedResource for a table resource from BigQuery is:
	// //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
	// Output only when Entry is of type in the EntryType enum. For entries with userSpecifiedType,
	// this field is optional and defaults to an empty string.
	// +kubebuilder:validation:Optional
	linkedResource?: null | string @go(LinkedResource,*string)

	// Schema of the entry (e.g. BigQuery, GoogleSQL, Avro schema), as a json string. An entry might not have any schema
	// attached to it. See
	// https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
	// for what fields this schema can contain.
	// +kubebuilder:validation:Optional
	schema?: null | string @go(Schema,*string)

	// The type of the entry. Only used for Entries with types in the EntryType enum.
	// Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use userSpecifiedType.
	// Possible values are: FILESET.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// This field indicates the entry's source system that Data Catalog does not integrate with.
	// userSpecifiedSystem strings must begin with a letter or underscore and can only contain letters, numbers,
	// and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	// +kubebuilder:validation:Optional
	userSpecifiedSystem?: null | string @go(UserSpecifiedSystem,*string)

	// Entry type if it does not fit any of the input-allowed values listed in EntryType enum above.
	// When creating an entry, users should check the enum values first, if nothing matches the entry
	// to be created, then provide a custom value, for example "my_special_type".
	// userSpecifiedType strings must begin with a letter or underscore and can only contain letters,
	// numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	// +kubebuilder:validation:Optional
	userSpecifiedType?: null | string @go(UserSpecifiedType,*string)
}

#GcsFilesetSpecInitParameters: {
	// Patterns to identify a set of files in Google Cloud Storage.
	// See Cloud Storage documentation
	// for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
	filePatterns?: [...null | string] @go(FilePatterns,[]*string)
}

#GcsFilesetSpecObservation: {
	// Patterns to identify a set of files in Google Cloud Storage.
	// See Cloud Storage documentation
	// for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
	filePatterns?: [...null | string] @go(FilePatterns,[]*string)

	// (Output)
	// Sample files contained in this fileset, not all files contained in this fileset are represented here.
	// Structure is documented below.
	sampleGcsFileSpecs?: [...#SampleGcsFileSpecsObservation] @go(SampleGcsFileSpecs,[]SampleGcsFileSpecsObservation)
}

#GcsFilesetSpecParameters: {
	// Patterns to identify a set of files in Google Cloud Storage.
	// See Cloud Storage documentation
	// for more information. Note that bucket wildcards are currently not supported. Examples of valid filePatterns:
	// +kubebuilder:validation:Optional
	filePatterns: [...null | string] @go(FilePatterns,[]*string)
}

#SampleGcsFileSpecsInitParameters: {
}

#SampleGcsFileSpecsObservation: {
	// (Output)
	// The full file path
	filePath?: null | string @go(FilePath,*string)

	// (Output)
	// The size of the file, in bytes.
	sizeBytes?: null | float64 @go(SizeBytes,*float64)
}

#SampleGcsFileSpecsParameters: {
}

#TableSpecInitParameters: {
}

#TableSpecObservation: {
	// (Output)
	// If the table is a dated shard, i.e., with name pattern [prefix]YYYYMMDD, groupedEntry is the
	// Data Catalog resource name of the date sharded grouped entry, for example,
	// projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}.
	// Otherwise, groupedEntry is empty.
	groupedEntry?: null | string @go(GroupedEntry,*string)
}

#TableSpecParameters: {
}

#ViewSpecInitParameters: {
}

#ViewSpecObservation: {
	// (Output)
	// The query that defines the table view.
	viewQuery?: null | string @go(ViewQuery,*string)
}

#ViewSpecParameters: {
}

// EntrySpec defines the desired state of Entry
#EntrySpec: {
	forProvider: #EntryParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #EntryInitParameters @go(InitProvider)
}

// EntryStatus defines the observed state of Entry.
#EntryStatus: {
	atProvider?: #EntryObservation @go(AtProvider)
}

// Entry is the Schema for the Entrys API. Entry Metadata.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Entry: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.entryId) || (has(self.initProvider) && has(self.initProvider.entryId))",message="spec.forProvider.entryId is a required parameter"
	spec:    #EntrySpec   @go(Spec)
	status?: #EntryStatus @go(Status)
}

// EntryList contains a list of Entrys
#EntryList: {
	items: [...#Entry] @go(Items,[]Entry)
}
