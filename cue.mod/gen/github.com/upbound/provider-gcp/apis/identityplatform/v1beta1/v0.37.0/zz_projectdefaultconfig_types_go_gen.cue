// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/identityplatform/v1beta1

package v1beta1

#AnonymousInitParameters: {
	// Whether phone number auth is enabled for the project or not.
	enabled?: null | bool @go(Enabled,*bool)
}

#AnonymousObservation: {
	// Whether phone number auth is enabled for the project or not.
	enabled?: null | bool @go(Enabled,*bool)
}

#AnonymousParameters: {
	// Whether phone number auth is enabled for the project or not.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)
}

#EmailInitParameters: {
	// Whether phone number auth is enabled for the project or not.
	enabled?: null | bool @go(Enabled,*bool)

	// Whether a password is required for email auth or not. If true, both an email and
	// password must be provided to sign in. If false, a user may sign in via either
	// email/password or email link.
	passwordRequired?: null | bool @go(PasswordRequired,*bool)
}

#EmailObservation: {
	// Whether phone number auth is enabled for the project or not.
	enabled?: null | bool @go(Enabled,*bool)

	// Whether a password is required for email auth or not. If true, both an email and
	// password must be provided to sign in. If false, a user may sign in via either
	// email/password or email link.
	passwordRequired?: null | bool @go(PasswordRequired,*bool)
}

#EmailParameters: {
	// Whether phone number auth is enabled for the project or not.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Whether a password is required for email auth or not. If true, both an email and
	// password must be provided to sign in. If false, a user may sign in via either
	// email/password or email link.
	// +kubebuilder:validation:Optional
	passwordRequired?: null | bool @go(PasswordRequired,*bool)
}

#HashConfigInitParameters: {
}

#HashConfigObservation: {
	// (Output)
	// Different password hash algorithms used in Identity Toolkit.
	algorithm?: null | string @go(Algorithm,*string)

	// (Output)
	// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
	memoryCost?: null | float64 @go(MemoryCost,*float64)

	// (Output)
	// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
	rounds?: null | float64 @go(Rounds,*float64)

	// (Output)
	// Non-printable character to be inserted between the salt and plain text password in base64.
	saltSeparator?: null | string @go(SaltSeparator,*string)

	// (Output)
	// Signer key in base64.
	signerKey?: null | string @go(SignerKey,*string)
}

#HashConfigParameters: {
}

#PhoneNumberInitParameters: {
	// Whether phone number auth is enabled for the project or not.
	enabled?: null | bool @go(Enabled,*bool)

	// A map of <test phone number, fake code> that can be used for phone auth testing.
	testPhoneNumbers?: {[string]: null | string} @go(TestPhoneNumbers,map[string]*string)
}

#PhoneNumberObservation: {
	// Whether phone number auth is enabled for the project or not.
	enabled?: null | bool @go(Enabled,*bool)

	// A map of <test phone number, fake code> that can be used for phone auth testing.
	testPhoneNumbers?: {[string]: null | string} @go(TestPhoneNumbers,map[string]*string)
}

#PhoneNumberParameters: {
	// Whether phone number auth is enabled for the project or not.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// A map of <test phone number, fake code> that can be used for phone auth testing.
	// +kubebuilder:validation:Optional
	testPhoneNumbers?: {[string]: null | string} @go(TestPhoneNumbers,map[string]*string)
}

#ProjectDefaultConfigInitParameters: {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Configuration related to local sign in methods.
	// Structure is documented below.
	signIn?: [...#SignInInitParameters] @go(SignIn,[]SignInInitParameters)
}

#ProjectDefaultConfigObservation: {
	// an identifier for the resource with format {{project}}
	id?: null | string @go(ID,*string)

	// The name of the Config resource. Example: "projects/my-awesome-project/config"
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// Configuration related to local sign in methods.
	// Structure is documented below.
	signIn?: [...#SignInObservation] @go(SignIn,[]SignInObservation)
}

#ProjectDefaultConfigParameters: {
	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// Configuration related to local sign in methods.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	signIn?: [...#SignInParameters] @go(SignIn,[]SignInParameters)
}

#SignInInitParameters: {
	// Whether to allow more than one account to have the same email.
	allowDuplicateEmails?: null | bool @go(AllowDuplicateEmails,*bool)

	// Configuration options related to authenticating an anonymous user.
	// Structure is documented below.
	anonymous?: [...#AnonymousInitParameters] @go(Anonymous,[]AnonymousInitParameters)

	// Configuration options related to authenticating a user by their email address.
	// Structure is documented below.
	email?: [...#EmailInitParameters] @go(Email,[]EmailInitParameters)

	// Configuration options related to authenticated a user by their phone number.
	// Structure is documented below.
	phoneNumber?: [...#PhoneNumberInitParameters] @go(PhoneNumber,[]PhoneNumberInitParameters)
}

#SignInObservation: {
	// Whether to allow more than one account to have the same email.
	allowDuplicateEmails?: null | bool @go(AllowDuplicateEmails,*bool)

	// Configuration options related to authenticating an anonymous user.
	// Structure is documented below.
	anonymous?: [...#AnonymousObservation] @go(Anonymous,[]AnonymousObservation)

	// Configuration options related to authenticating a user by their email address.
	// Structure is documented below.
	email?: [...#EmailObservation] @go(Email,[]EmailObservation)

	// (Output)
	// Output only. Hash config information.
	// Structure is documented below.
	hashConfig?: [...#HashConfigObservation] @go(HashConfig,[]HashConfigObservation)

	// Configuration options related to authenticated a user by their phone number.
	// Structure is documented below.
	phoneNumber?: [...#PhoneNumberObservation] @go(PhoneNumber,[]PhoneNumberObservation)
}

#SignInParameters: {
	// Whether to allow more than one account to have the same email.
	// +kubebuilder:validation:Optional
	allowDuplicateEmails?: null | bool @go(AllowDuplicateEmails,*bool)

	// Configuration options related to authenticating an anonymous user.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	anonymous?: [...#AnonymousParameters] @go(Anonymous,[]AnonymousParameters)

	// Configuration options related to authenticating a user by their email address.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	email?: [...#EmailParameters] @go(Email,[]EmailParameters)

	// Configuration options related to authenticated a user by their phone number.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	phoneNumber?: [...#PhoneNumberParameters] @go(PhoneNumber,[]PhoneNumberParameters)
}

// ProjectDefaultConfigSpec defines the desired state of ProjectDefaultConfig
#ProjectDefaultConfigSpec: {
	forProvider: #ProjectDefaultConfigParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ProjectDefaultConfigInitParameters @go(InitProvider)
}

// ProjectDefaultConfigStatus defines the observed state of ProjectDefaultConfig.
#ProjectDefaultConfigStatus: {
	atProvider?: #ProjectDefaultConfigObservation @go(AtProvider)
}

// ProjectDefaultConfig is the Schema for the ProjectDefaultConfigs API. There is no persistent data associated with this resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ProjectDefaultConfig: {
	spec:    #ProjectDefaultConfigSpec   @go(Spec)
	status?: #ProjectDefaultConfigStatus @go(Status)
}

// ProjectDefaultConfigList contains a list of ProjectDefaultConfigs
#ProjectDefaultConfigList: {
	items: [...#ProjectDefaultConfig] @go(Items,[]ProjectDefaultConfig)
}
