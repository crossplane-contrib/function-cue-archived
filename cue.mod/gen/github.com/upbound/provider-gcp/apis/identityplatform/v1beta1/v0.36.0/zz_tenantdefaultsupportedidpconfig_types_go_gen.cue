// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/identityplatform/v1beta1

package v1beta1

#TenantDefaultSupportedIdPConfigInitParameters: {
	// If this IDP allows the user to sign in
	enabled?: null | bool @go(Enabled,*bool)

	// ID of the IDP. Possible values include:
	idpId?: null | string @go(IdPID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#TenantDefaultSupportedIdPConfigObservation: {
	// If this IDP allows the user to sign in
	enabled?: null | bool @go(Enabled,*bool)

	// an identifier for the resource with format projects/{{project}}/tenants/{{tenant}}/defaultSupportedIdpConfigs/{{idp_id}}
	id?: null | string @go(ID,*string)

	// ID of the IDP. Possible values include:
	idpId?: null | string @go(IdPID,*string)

	// The name of the default supported IDP config resource
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The name of the tenant where this DefaultSupportedIdpConfig resource exists
	tenant?: null | string @go(Tenant,*string)
}

#TenantDefaultSupportedIdPConfigParameters: {
	// If this IDP allows the user to sign in
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// ID of the IDP. Possible values include:
	// +kubebuilder:validation:Optional
	idpId?: null | string @go(IdPID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The name of the tenant where this DefaultSupportedIdpConfig resource exists
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/identityplatform/v1beta1.Tenant
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("name",true)
	// +kubebuilder:validation:Optional
	tenant?: null | string @go(Tenant,*string)
}

// TenantDefaultSupportedIdPConfigSpec defines the desired state of TenantDefaultSupportedIdPConfig
#TenantDefaultSupportedIdPConfigSpec: {
	forProvider: #TenantDefaultSupportedIdPConfigParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TenantDefaultSupportedIdPConfigInitParameters @go(InitProvider)
}

// TenantDefaultSupportedIdPConfigStatus defines the observed state of TenantDefaultSupportedIdPConfig.
#TenantDefaultSupportedIdPConfigStatus: {
	atProvider?: #TenantDefaultSupportedIdPConfigObservation @go(AtProvider)
}

// TenantDefaultSupportedIdPConfig is the Schema for the TenantDefaultSupportedIdPConfigs API. Configurations options for the tenant for authenticating with a the standard set of Identity Toolkit-trusted IDPs.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#TenantDefaultSupportedIdPConfig: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clientIdSecretRef)",message="clientIdSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clientSecretSecretRef)",message="clientSecretSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.idpId) || has(self.initProvider.idpId)",message="idpId is a required parameter"
	spec:    #TenantDefaultSupportedIdPConfigSpec   @go(Spec)
	status?: #TenantDefaultSupportedIdPConfigStatus @go(Status)
}

// TenantDefaultSupportedIdPConfigList contains a list of TenantDefaultSupportedIdPConfigs
#TenantDefaultSupportedIdPConfigList: {
	items: [...#TenantDefaultSupportedIdPConfig] @go(Items,[]TenantDefaultSupportedIdPConfig)
}
