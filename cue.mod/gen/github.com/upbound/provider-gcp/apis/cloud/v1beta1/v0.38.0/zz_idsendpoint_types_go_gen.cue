// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/cloud/v1beta1

package v1beta1

#IdsEndpointInitParameters: {
	// An optional description of the endpoint.
	description?: null | string @go(Description,*string)

	// The location for the endpoint.
	location?: null | string @go(Location,*string)

	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The minimum alert severity level that is reported by the endpoint.
	// Possible values are: INFORMATIONAL, LOW, MEDIUM, HIGH, CRITICAL.
	severity?: null | string @go(Severity,*string)

	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	threatExceptions?: [...null | string] @go(ThreatExceptions,[]*string)
}

#IdsEndpointObservation: {
	// Creation timestamp in RFC 3339 text format.
	createTime?: null | string @go(CreateTime,*string)

	// An optional description of the endpoint.
	description?: null | string @go(Description,*string)

	// URL of the endpoint's network address to which traffic is to be sent by Packet Mirroring.
	endpointForwardingRule?: null | string @go(EndpointForwardingRule,*string)

	// Internal IP address of the endpoint's network entry point.
	endpointIp?: null | string @go(EndpointIP,*string)

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/endpoints/{{name}}
	id?: null | string @go(ID,*string)

	// The location for the endpoint.
	location?: null | string @go(Location,*string)

	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	name?: null | string @go(Name,*string)

	// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
	network?: null | string @go(Network,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The minimum alert severity level that is reported by the endpoint.
	// Possible values are: INFORMATIONAL, LOW, MEDIUM, HIGH, CRITICAL.
	severity?: null | string @go(Severity,*string)

	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	threatExceptions?: [...null | string] @go(ThreatExceptions,[]*string)

	// Last update timestamp in RFC 3339 text format.
	updateTime?: null | string @go(UpdateTime,*string)
}

#IdsEndpointParameters: {
	// An optional description of the endpoint.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The location for the endpoint.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	network?: null | string @go(Network,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The minimum alert severity level that is reported by the endpoint.
	// Possible values are: INFORMATIONAL, LOW, MEDIUM, HIGH, CRITICAL.
	// +kubebuilder:validation:Optional
	severity?: null | string @go(Severity,*string)

	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	// +kubebuilder:validation:Optional
	threatExceptions?: [...null | string] @go(ThreatExceptions,[]*string)
}

// IdsEndpointSpec defines the desired state of IdsEndpoint
#IdsEndpointSpec: {
	forProvider: #IdsEndpointParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #IdsEndpointInitParameters @go(InitProvider)
}

// IdsEndpointStatus defines the observed state of IdsEndpoint.
#IdsEndpointStatus: {
	atProvider?: #IdsEndpointObservation @go(AtProvider)
}

// IdsEndpoint is the Schema for the IdsEndpoints API. Cloud IDS is an intrusion detection service that provides threat detection for intrusions, malware, spyware, and command-and-control attacks on your network.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#IdsEndpoint: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.severity) || (has(self.initProvider) && has(self.initProvider.severity))",message="spec.forProvider.severity is a required parameter"
	spec:    #IdsEndpointSpec   @go(Spec)
	status?: #IdsEndpointStatus @go(Status)
}

// IdsEndpointList contains a list of IdsEndpoints
#IdsEndpointList: {
	items: [...#IdsEndpoint] @go(Items,[]IdsEndpoint)
}
