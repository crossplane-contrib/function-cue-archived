// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/essentialcontacts/v1beta1

package v1beta1

#ContactObservation: {
	// The email address to send notifications to. This does not need to be a Google account.
	email?: null | string @go(Email,*string)

	// an identifier for the resource with format {{name}}
	id?: null | string @go(ID,*string)

	// The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
	languageTag?: null | string @go(LanguageTag,*string)

	// The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
	name?: null | string @go(Name,*string)

	// The categories of notifications that the contact will receive communications for.
	notificationCategorySubscriptions?: [...null | string] @go(NotificationCategorySubscriptions,[]*string)

	// The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
	parent?: null | string @go(Parent,*string)
}

#ContactParameters: {
	// The email address to send notifications to. This does not need to be a Google account.
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
	// +kubebuilder:validation:Optional
	languageTag?: null | string @go(LanguageTag,*string)

	// The categories of notifications that the contact will receive communications for.
	// +kubebuilder:validation:Optional
	notificationCategorySubscriptions?: [...null | string] @go(NotificationCategorySubscriptions,[]*string)

	// The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
	// +kubebuilder:validation:Optional
	parent?: null | string @go(Parent,*string)
}

// ContactSpec defines the desired state of Contact
#ContactSpec: {
	forProvider: #ContactParameters @go(ForProvider)
}

// ContactStatus defines the observed state of Contact.
#ContactStatus: {
	atProvider?: #ContactObservation @go(AtProvider)
}

// Contact is the Schema for the Contacts API. A contact that will receive notifications from Google Cloud.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Contact: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.email)",message="email is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.languageTag)",message="languageTag is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.notificationCategorySubscriptions)",message="notificationCategorySubscriptions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.parent)",message="parent is a required parameter"
	spec:    #ContactSpec   @go(Spec)
	status?: #ContactStatus @go(Status)
}

// ContactList contains a list of Contacts
#ContactList: {
	items: [...#Contact] @go(Items,[]Contact)
}
