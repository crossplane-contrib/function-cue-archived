// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/essentialcontacts/v1beta1

package v1beta1

#ContactInitParameters: {
	// The email address to send notifications to. This does not need to be a Google account.
	email?: null | string @go(Email,*string)

	// The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
	languageTag?: null | string @go(LanguageTag,*string)

	// The categories of notifications that the contact will receive communications for.
	notificationCategorySubscriptions?: [...null | string] @go(NotificationCategorySubscriptions,[]*string)

	// The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
	parent?: null | string @go(Parent,*string)
}

#ContactObservation: {
	// The email address to send notifications to. This does not need to be a Google account.
	email?: null | string @go(Email,*string)

	// an identifier for the resource with format {{name}}
	id?: null | string @go(ID,*string)

	// The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
	languageTag?: null | string @go(LanguageTag,*string)

	// The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
	name?: null | string @go(Name,*string)

	// The categories of notifications that the contact will receive communications for.
	notificationCategorySubscriptions?: [...null | string] @go(NotificationCategorySubscriptions,[]*string)

	// The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
	parent?: null | string @go(Parent,*string)
}

#ContactParameters: {
	// The email address to send notifications to. This does not need to be a Google account.
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
	// +kubebuilder:validation:Optional
	languageTag?: null | string @go(LanguageTag,*string)

	// The categories of notifications that the contact will receive communications for.
	// +kubebuilder:validation:Optional
	notificationCategorySubscriptions?: [...null | string] @go(NotificationCategorySubscriptions,[]*string)

	// The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
	// +kubebuilder:validation:Optional
	parent?: null | string @go(Parent,*string)
}

// ContactSpec defines the desired state of Contact
#ContactSpec: {
	forProvider: #ContactParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ContactInitParameters @go(InitProvider)
}

// ContactStatus defines the observed state of Contact.
#ContactStatus: {
	atProvider?: #ContactObservation @go(AtProvider)
}

// Contact is the Schema for the Contacts API. A contact that will receive notifications from Google Cloud.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#Contact: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.email) || (has(self.initProvider) && has(self.initProvider.email))",message="spec.forProvider.email is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.languageTag) || (has(self.initProvider) && has(self.initProvider.languageTag))",message="spec.forProvider.languageTag is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.notificationCategorySubscriptions) || (has(self.initProvider) && has(self.initProvider.notificationCategorySubscriptions))",message="spec.forProvider.notificationCategorySubscriptions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.parent) || (has(self.initProvider) && has(self.initProvider.parent))",message="spec.forProvider.parent is a required parameter"
	spec:    #ContactSpec   @go(Spec)
	status?: #ContactStatus @go(Status)
}

// ContactList contains a list of Contacts
#ContactList: {
	items: [...#Contact] @go(Items,[]Contact)
}
