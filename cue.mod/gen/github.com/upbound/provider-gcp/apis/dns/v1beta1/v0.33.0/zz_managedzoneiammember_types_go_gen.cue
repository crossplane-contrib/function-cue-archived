// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/dns/v1beta1

package v1beta1

#ConditionObservation: {
	description?: null | string @go(Description,*string)
	expression?:  null | string @go(Expression,*string)
	title?:       null | string @go(Title,*string)
}

#ConditionParameters: {
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// +kubebuilder:validation:Required
	expression?: null | string @go(Expression,*string)

	// +kubebuilder:validation:Required
	title?: null | string @go(Title,*string)
}

#ManagedZoneIAMMemberObservation: {
	condition?: [...#ConditionObservation] @go(Condition,[]ConditionObservation)
	etag?:        null | string @go(Etag,*string)
	id?:          null | string @go(ID,*string)
	managedZone?: null | string @go(ManagedZone,*string)
	member?:      null | string @go(Member,*string)
	project?:     null | string @go(Project,*string)
	role?:        null | string @go(Role,*string)
}

#ManagedZoneIAMMemberParameters: {
	// +kubebuilder:validation:Optional
	condition?: [...#ConditionParameters] @go(Condition,[]ConditionParameters)

	// +kubebuilder:validation:Optional
	managedZone?: null | string @go(ManagedZone,*string)

	// +kubebuilder:validation:Optional
	member?: null | string @go(Member,*string)

	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// +kubebuilder:validation:Optional
	role?: null | string @go(Role,*string)
}

// ManagedZoneIAMMemberSpec defines the desired state of ManagedZoneIAMMember
#ManagedZoneIAMMemberSpec: {
	forProvider: #ManagedZoneIAMMemberParameters @go(ForProvider)
}

// ManagedZoneIAMMemberStatus defines the observed state of ManagedZoneIAMMember.
#ManagedZoneIAMMemberStatus: {
	atProvider?: #ManagedZoneIAMMemberObservation @go(AtProvider)
}

// ManagedZoneIAMMember is the Schema for the ManagedZoneIAMMembers API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#ManagedZoneIAMMember: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.managedZone)",message="managedZone is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.member)",message="member is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.role)",message="role is a required parameter"
	spec:    #ManagedZoneIAMMemberSpec   @go(Spec)
	status?: #ManagedZoneIAMMemberStatus @go(Status)
}

// ManagedZoneIAMMemberList contains a list of ManagedZoneIAMMembers
#ManagedZoneIAMMemberList: {
	items: [...#ManagedZoneIAMMember] @go(Items,[]ManagedZoneIAMMember)
}
