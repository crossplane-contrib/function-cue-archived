// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/dns/v1beta1

package v1beta1

#BackupGeoHealthCheckedTargetsObservation: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	internalLoadBalancers?: [...#HealthCheckedTargetsInternalLoadBalancersObservation] @go(InternalLoadBalancers,[]HealthCheckedTargetsInternalLoadBalancersObservation)
}

#BackupGeoHealthCheckedTargetsParameters: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	// +kubebuilder:validation:Required
	internalLoadBalancers: [...#HealthCheckedTargetsInternalLoadBalancersParameters] @go(InternalLoadBalancers,[]HealthCheckedTargetsInternalLoadBalancersParameters)
}

#BackupGeoObservation: {
	// The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
	// Structure is document below.
	healthCheckedTargets?: [...#BackupGeoHealthCheckedTargetsObservation] @go(HealthCheckedTargets,[]BackupGeoHealthCheckedTargetsObservation)

	// The location name defined in Google Cloud.
	location?: null | string @go(Location,*string)

	// Same as rrdatas above.
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)
}

#BackupGeoParameters: {
	// The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
	// Structure is document below.
	// +kubebuilder:validation:Optional
	healthCheckedTargets?: [...#BackupGeoHealthCheckedTargetsParameters] @go(HealthCheckedTargets,[]BackupGeoHealthCheckedTargetsParameters)

	// The location name defined in Google Cloud.
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// Same as rrdatas above.
	// +kubebuilder:validation:Optional
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)
}

#GeoObservation: {
	// The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
	// Structure is document below.
	healthCheckedTargets?: [...#HealthCheckedTargetsObservation] @go(HealthCheckedTargets,[]HealthCheckedTargetsObservation)

	// The location name defined in Google Cloud.
	location?: null | string @go(Location,*string)

	// Same as rrdatas above.
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)
}

#GeoParameters: {
	// The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
	// Structure is document below.
	// +kubebuilder:validation:Optional
	healthCheckedTargets?: [...#HealthCheckedTargetsParameters] @go(HealthCheckedTargets,[]HealthCheckedTargetsParameters)

	// The location name defined in Google Cloud.
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// Same as rrdatas above.
	// +kubebuilder:validation:Optional
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)
}

#HealthCheckedTargetsInternalLoadBalancersObservation: {
	// The frontend IP address of the load balancer.
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	region?: null | string @go(Region,*string)
}

#HealthCheckedTargetsInternalLoadBalancersParameters: {
	// The frontend IP address of the load balancer.
	// +kubebuilder:validation:Required
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	// +kubebuilder:validation:Required
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	// +kubebuilder:validation:Required
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	// +kubebuilder:validation:Required
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	// +kubebuilder:validation:Required
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Required
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)
}

#HealthCheckedTargetsObservation: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	internalLoadBalancers?: [...#InternalLoadBalancersObservation] @go(InternalLoadBalancers,[]InternalLoadBalancersObservation)
}

#HealthCheckedTargetsParameters: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	// +kubebuilder:validation:Required
	internalLoadBalancers: [...#InternalLoadBalancersParameters] @go(InternalLoadBalancers,[]InternalLoadBalancersParameters)
}

#InternalLoadBalancersObservation: {
	// The frontend IP address of the load balancer.
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	region?: null | string @go(Region,*string)
}

#InternalLoadBalancersParameters: {
	// The frontend IP address of the load balancer.
	// +kubebuilder:validation:Required
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	// +kubebuilder:validation:Required
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	// +kubebuilder:validation:Required
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	// +kubebuilder:validation:Required
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	// +kubebuilder:validation:Required
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Required
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)
}

#PrimaryBackupObservation: {
	// The backup geo targets, which provide a regional failover policy for the otherwise global primary targets.
	// Structure is document above.
	backupGeo?: [...#BackupGeoObservation] @go(BackupGeo,[]BackupGeoObservation)

	// Specifies whether to enable fencing for backup geo queries.
	enableGeoFencingForBackups?: null | bool @go(EnableGeoFencingForBackups,*bool)

	// The list of global primary targets to be health checked.
	// Structure is document below.
	primary?: [...#PrimaryObservation] @go(Primary,[]PrimaryObservation)

	// Specifies the percentage of traffic to send to the backup targets even when the primary targets are healthy.
	trickleRatio?: null | float64 @go(TrickleRatio,*float64)
}

#PrimaryBackupParameters: {
	// The backup geo targets, which provide a regional failover policy for the otherwise global primary targets.
	// Structure is document above.
	// +kubebuilder:validation:Required
	backupGeo: [...#BackupGeoParameters] @go(BackupGeo,[]BackupGeoParameters)

	// Specifies whether to enable fencing for backup geo queries.
	// +kubebuilder:validation:Optional
	enableGeoFencingForBackups?: null | bool @go(EnableGeoFencingForBackups,*bool)

	// The list of global primary targets to be health checked.
	// Structure is document below.
	// +kubebuilder:validation:Required
	primary: [...#PrimaryParameters] @go(Primary,[]PrimaryParameters)

	// Specifies the percentage of traffic to send to the backup targets even when the primary targets are healthy.
	// +kubebuilder:validation:Optional
	trickleRatio?: null | float64 @go(TrickleRatio,*float64)
}

#PrimaryInternalLoadBalancersObservation: {
	// The frontend IP address of the load balancer.
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	region?: null | string @go(Region,*string)
}

#PrimaryInternalLoadBalancersParameters: {
	// The frontend IP address of the load balancer.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.ForwardingRule
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("ip_address",false)
	// +kubebuilder:validation:Optional
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	// +kubebuilder:validation:Required
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	// +kubebuilder:validation:Required
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Network
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	// +kubebuilder:validation:Required
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.ForwardingRule
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("project",false)
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.ForwardingRule
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("region",false)
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)
}

#PrimaryObservation: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	internalLoadBalancers?: [...#PrimaryInternalLoadBalancersObservation] @go(InternalLoadBalancers,[]PrimaryInternalLoadBalancersObservation)
}

#PrimaryParameters: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	// +kubebuilder:validation:Required
	internalLoadBalancers: [...#PrimaryInternalLoadBalancersParameters] @go(InternalLoadBalancers,[]PrimaryInternalLoadBalancersParameters)
}

#RecordSetObservation: {
	// an identifier for the resource with format projects/{{project}}/managedZones/{{zone}}/rrsets/{{name}}/{{type}}
	id?: null | string @go(ID,*string)

	// The name of the zone in which this record set will
	// reside.
	managedZone?: null | string @go(ManagedZone,*string)

	// The DNS name this record set will apply to.
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The configuration for steering traffic based on query.
	// Now you can specify either Weighted Round Robin(WRR) type or Geolocation(GEO) type.
	// Structure is documented below.
	routingPolicy?: [...#RoutingPolicyObservation] @go(RoutingPolicy,[]RoutingPolicyObservation)

	// The string data for the records in this record set
	// whose meaning depends on the DNS type. For TXT record, if the string data contains spaces, add surrounding \" if you don't want your string to get split on spaces.g. "first255characters\" \"morecharacters").
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)

	// The time-to-live of this record set (seconds).
	ttl?: null | float64 @go(TTL,*float64)

	// The DNS record set type.
	type?: null | string @go(Type,*string)
}

#RecordSetParameters: {
	// The name of the zone in which this record set will
	// reside.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/dns/v1beta1.ManagedZone
	// +kubebuilder:validation:Optional
	managedZone?: null | string @go(ManagedZone,*string)

	// The DNS name this record set will apply to.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The configuration for steering traffic based on query.
	// Now you can specify either Weighted Round Robin(WRR) type or Geolocation(GEO) type.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	routingPolicy?: [...#RoutingPolicyParameters] @go(RoutingPolicy,[]RoutingPolicyParameters)

	// The string data for the records in this record set
	// whose meaning depends on the DNS type. For TXT record, if the string data contains spaces, add surrounding \" if you don't want your string to get split on spaces.g. "first255characters\" \"morecharacters").
	// +kubebuilder:validation:Optional
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)

	// The time-to-live of this record set (seconds).
	// +kubebuilder:validation:Optional
	ttl?: null | float64 @go(TTL,*float64)

	// The DNS record set type.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#RoutingPolicyObservation: {
	// Specifies whether to enable fencing for geo queries.
	enableGeoFencing?: null | bool @go(EnableGeoFencing,*bool)

	// The configuration for Geolocation based routing policy.
	// Structure is document below.
	geo?: [...#GeoObservation] @go(Geo,[]GeoObservation)

	// The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy.
	// Structure is document below.
	primaryBackup?: [...#PrimaryBackupObservation] @go(PrimaryBackup,[]PrimaryBackupObservation)

	// The configuration for Weighted Round Robin based routing policy.
	// Structure is document below.
	wrr?: [...#WrrObservation] @go(Wrr,[]WrrObservation)
}

#RoutingPolicyParameters: {
	// Specifies whether to enable fencing for geo queries.
	// +kubebuilder:validation:Optional
	enableGeoFencing?: null | bool @go(EnableGeoFencing,*bool)

	// The configuration for Geolocation based routing policy.
	// Structure is document below.
	// +kubebuilder:validation:Optional
	geo?: [...#GeoParameters] @go(Geo,[]GeoParameters)

	// The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy.
	// Structure is document below.
	// +kubebuilder:validation:Optional
	primaryBackup?: [...#PrimaryBackupParameters] @go(PrimaryBackup,[]PrimaryBackupParameters)

	// The configuration for Weighted Round Robin based routing policy.
	// Structure is document below.
	// +kubebuilder:validation:Optional
	wrr?: [...#WrrParameters] @go(Wrr,[]WrrParameters)
}

#WrrHealthCheckedTargetsInternalLoadBalancersObservation: {
	// The frontend IP address of the load balancer.
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	region?: null | string @go(Region,*string)
}

#WrrHealthCheckedTargetsInternalLoadBalancersParameters: {
	// The frontend IP address of the load balancer.
	// +kubebuilder:validation:Required
	ipAddress?: null | string @go(IPAddress,*string)

	// The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
	// +kubebuilder:validation:Required
	ipProtocol?: null | string @go(IPProtocol,*string)

	// The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb"]
	// +kubebuilder:validation:Required
	loadBalancerType?: null | string @go(LoadBalancerType,*string)

	// The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
	// +kubebuilder:validation:Required
	networkUrl?: null | string @go(NetworkURL,*string)

	// The configured port of the load balancer.
	// +kubebuilder:validation:Required
	port?: null | string @go(Port,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Required
	project?: null | string @go(Project,*string)

	// The region of the load balancer. Only needed for regional load balancers.
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)
}

#WrrHealthCheckedTargetsObservation: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	internalLoadBalancers?: [...#WrrHealthCheckedTargetsInternalLoadBalancersObservation] @go(InternalLoadBalancers,[]WrrHealthCheckedTargetsInternalLoadBalancersObservation)
}

#WrrHealthCheckedTargetsParameters: {
	// The list of internal load balancers to health check.
	// Structure is document below.
	// +kubebuilder:validation:Required
	internalLoadBalancers: [...#WrrHealthCheckedTargetsInternalLoadBalancersParameters] @go(InternalLoadBalancers,[]WrrHealthCheckedTargetsInternalLoadBalancersParameters)
}

#WrrObservation: {
	// The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
	// Structure is document below.
	healthCheckedTargets?: [...#WrrHealthCheckedTargetsObservation] @go(HealthCheckedTargets,[]WrrHealthCheckedTargetsObservation)

	// Same as rrdatas above.
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)

	// The ratio of traffic routed to the target.
	weight?: null | float64 @go(Weight,*float64)
}

#WrrParameters: {
	// The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
	// Structure is document below.
	// +kubebuilder:validation:Optional
	healthCheckedTargets?: [...#WrrHealthCheckedTargetsParameters] @go(HealthCheckedTargets,[]WrrHealthCheckedTargetsParameters)

	// Same as rrdatas above.
	// +kubebuilder:validation:Optional
	rrdatas?: [...null | string] @go(Rrdatas,[]*string)

	// The ratio of traffic routed to the target.
	// +kubebuilder:validation:Required
	weight?: null | float64 @go(Weight,*float64)
}

// RecordSetSpec defines the desired state of RecordSet
#RecordSetSpec: {
	forProvider: #RecordSetParameters @go(ForProvider)
}

// RecordSetStatus defines the observed state of RecordSet.
#RecordSetStatus: {
	atProvider?: #RecordSetObservation @go(AtProvider)
}

// RecordSet is the Schema for the RecordSets API. Manages a set of DNS records within Google Cloud DNS.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#RecordSet: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.type)",message="type is a required parameter"
	spec:    #RecordSetSpec   @go(Spec)
	status?: #RecordSetStatus @go(Status)
}

// RecordSetList contains a list of RecordSets
#RecordSetList: {
	items: [...#RecordSet] @go(Items,[]RecordSet)
}
