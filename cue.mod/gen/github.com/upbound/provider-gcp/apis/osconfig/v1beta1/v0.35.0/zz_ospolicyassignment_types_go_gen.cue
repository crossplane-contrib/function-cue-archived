// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/osconfig/v1beta1

package v1beta1

#AptInitParameters: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#AptObservation: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#AptParameters: {
	// Required. Package name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#DebInitParameters: {
	// Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm
	pullDeps?: null | bool @go(PullDeps,*bool)

	// Required. An rpm package.
	source?: [...#SourceInitParameters] @go(Source,[]SourceInitParameters)
}

#DebObservation: {
	// Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm
	pullDeps?: null | bool @go(PullDeps,*bool)

	// Required. An rpm package.
	source?: [...#SourceObservation] @go(Source,[]SourceObservation)
}

#DebParameters: {
	// Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm
	// +kubebuilder:validation:Optional
	pullDeps?: null | bool @go(PullDeps,*bool)

	// Required. An rpm package.
	// +kubebuilder:validation:Optional
	source?: [...#SourceParameters] @go(Source,[]SourceParameters)
}

#DisruptionBudgetInitParameters: {
	// Specifies a fixed value.
	fixed?: null | float64 @go(Fixed,*float64)

	// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
	percent?: null | float64 @go(Percent,*float64)
}

#DisruptionBudgetObservation: {
	// Specifies a fixed value.
	fixed?: null | float64 @go(Fixed,*float64)

	// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
	percent?: null | float64 @go(Percent,*float64)
}

#DisruptionBudgetParameters: {
	// Specifies a fixed value.
	// +kubebuilder:validation:Optional
	fixed?: null | float64 @go(Fixed,*float64)

	// Specifies the relative value defined as a percentage, which will be multiplied by a reference value.
	// +kubebuilder:validation:Optional
	percent?: null | float64 @go(Percent,*float64)
}

#EnforceInitParameters: {
	// Optional arguments to pass to the source during execution.
	args?: [...null | string] @go(Args,[]*string)

	// A remote or local file.
	file?: [...#FileInitParameters] @go(File,[]FileInitParameters)

	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	interpreter?: null | string @go(Interpreter,*string)

	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	outputFilePath?: null | string @go(OutputFilePath,*string)

	// An inline script. The size of the script is limited to 1024 characters.
	script?: null | string @go(Script,*string)
}

#EnforceObservation: {
	// Optional arguments to pass to the source during execution.
	args?: [...null | string] @go(Args,[]*string)

	// A remote or local file.
	file?: [...#FileObservation] @go(File,[]FileObservation)

	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	interpreter?: null | string @go(Interpreter,*string)

	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	outputFilePath?: null | string @go(OutputFilePath,*string)

	// An inline script. The size of the script is limited to 1024 characters.
	script?: null | string @go(Script,*string)
}

#EnforceParameters: {
	// Optional arguments to pass to the source during execution.
	// +kubebuilder:validation:Optional
	args?: [...null | string] @go(Args,[]*string)

	// A remote or local file.
	// +kubebuilder:validation:Optional
	file?: [...#FileParameters] @go(File,[]FileParameters)

	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	// +kubebuilder:validation:Optional
	interpreter?: null | string @go(Interpreter,*string)

	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	// +kubebuilder:validation:Optional
	outputFilePath?: null | string @go(OutputFilePath,*string)

	// An inline script. The size of the script is limited to 1024 characters.
	// +kubebuilder:validation:Optional
	script?: null | string @go(Script,*string)
}

#ExclusionLabelsInitParameters: {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)
}

#ExclusionLabelsObservation: {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)
}

#ExclusionLabelsParameters: {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)
}

#ExecInitParameters: {
	// What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
	enforce?: [...#EnforceInitParameters] @go(Enforce,[]EnforceInitParameters)

	// Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
	validate?: [...#ValidateInitParameters] @go(Validate,[]ValidateInitParameters)
}

#ExecObservation: {
	// What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
	enforce?: [...#EnforceObservation] @go(Enforce,[]EnforceObservation)

	// Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
	validate?: [...#ValidateObservation] @go(Validate,[]ValidateObservation)
}

#ExecParameters: {
	// What to run to bring this resource into the desired state. An exit code of 100 indicates "success", any other exit code indicates a failure running enforce.
	// +kubebuilder:validation:Optional
	enforce?: [...#EnforceParameters] @go(Enforce,[]EnforceParameters)

	// Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates "in desired state", and exit code of 101 indicates "not in desired state". Any other exit code indicates a failure running validate.
	// +kubebuilder:validation:Optional
	validate?: [...#ValidateParameters] @go(Validate,[]ValidateParameters)
}

#FileFileGcsInitParameters: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#FileFileGcsObservation: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#FileFileGcsParameters: {
	// Required. Bucket of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	object?: null | string @go(Object,*string)
}

#FileFileInitParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#FileFileGcsInitParameters] @go(Gcs,[]FileFileGcsInitParameters)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#FileFileRemoteInitParameters] @go(Remote,[]FileFileRemoteInitParameters)
}

#FileFileObservation: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#FileFileGcsObservation] @go(Gcs,[]FileFileGcsObservation)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#FileFileRemoteObservation] @go(Remote,[]FileFileRemoteObservation)
}

#FileFileParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	// +kubebuilder:validation:Optional
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	// +kubebuilder:validation:Optional
	gcs?: [...#FileFileGcsParameters] @go(Gcs,[]FileFileGcsParameters)

	// A local path within the VM to use.
	// +kubebuilder:validation:Optional
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	// +kubebuilder:validation:Optional
	remote?: [...#FileFileRemoteParameters] @go(Remote,[]FileFileRemoteParameters)
}

#FileFileRemoteInitParameters: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#FileFileRemoteObservation: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#FileFileRemoteParameters: {
	// SHA256 checksum of the remote file.
	// +kubebuilder:validation:Optional
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#FileGcsInitParameters: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#FileGcsObservation: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#FileGcsParameters: {
	// Required. Bucket of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	object?: null | string @go(Object,*string)
}

#FileInitParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#GcsInitParameters] @go(Gcs,[]GcsInitParameters)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#RemoteInitParameters] @go(Remote,[]RemoteInitParameters)
}

#FileObservation: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#GcsObservation] @go(Gcs,[]GcsObservation)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#RemoteObservation] @go(Remote,[]RemoteObservation)
}

#FileParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	// +kubebuilder:validation:Optional
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	// +kubebuilder:validation:Optional
	gcs?: [...#GcsParameters] @go(Gcs,[]GcsParameters)

	// A local path within the VM to use.
	// +kubebuilder:validation:Optional
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	// +kubebuilder:validation:Optional
	remote?: [...#RemoteParameters] @go(Remote,[]RemoteParameters)
}

#FileRemoteInitParameters: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#FileRemoteObservation: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#FileRemoteParameters: {
	// SHA256 checksum of the remote file.
	// +kubebuilder:validation:Optional
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#GcsInitParameters: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#GcsObservation: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#GcsParameters: {
	// Required. Bucket of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	object?: null | string @go(Object,*string)
}

#GooInitParameters: {
	// Required. Package name.
	name?: null | string @go(Name,*string)

	// Required. The url of the repository.
	url?: null | string @go(URL,*string)
}

#GooObservation: {
	// Required. Package name.
	name?: null | string @go(Name,*string)

	// Required. The url of the repository.
	url?: null | string @go(URL,*string)
}

#GooParameters: {
	// Required. Package name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Required. The url of the repository.
	// +kubebuilder:validation:Optional
	url?: null | string @go(URL,*string)
}

#GoogetInitParameters: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#GoogetObservation: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#GoogetParameters: {
	// Required. Package name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#InclusionLabelsInitParameters: {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)
}

#InclusionLabelsObservation: {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)
}

#InclusionLabelsParameters: {
	// Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)
}

#InstanceFilterInitParameters: {
	// Target all VMs in the project. If true, no other criteria is permitted.
	all?: null | bool @go(All,*bool)

	// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
	exclusionLabels?: [...#ExclusionLabelsInitParameters] @go(ExclusionLabels,[]ExclusionLabelsInitParameters)

	// List of label sets used for VM inclusion. If the list has more than one LabelSet, the VM is included if any of the label sets are applicable for the VM.
	inclusionLabels?: [...#InclusionLabelsInitParameters] @go(InclusionLabels,[]InclusionLabelsInitParameters)

	// List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
	inventories?: [...#InventoriesInitParameters] @go(Inventories,[]InventoriesInitParameters)
}

#InstanceFilterObservation: {
	// Target all VMs in the project. If true, no other criteria is permitted.
	all?: null | bool @go(All,*bool)

	// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
	exclusionLabels?: [...#ExclusionLabelsObservation] @go(ExclusionLabels,[]ExclusionLabelsObservation)

	// List of label sets used for VM inclusion. If the list has more than one LabelSet, the VM is included if any of the label sets are applicable for the VM.
	inclusionLabels?: [...#InclusionLabelsObservation] @go(InclusionLabels,[]InclusionLabelsObservation)

	// List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
	inventories?: [...#InventoriesObservation] @go(Inventories,[]InventoriesObservation)
}

#InstanceFilterParameters: {
	// Target all VMs in the project. If true, no other criteria is permitted.
	// +kubebuilder:validation:Optional
	all?: null | bool @go(All,*bool)

	// List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.
	// +kubebuilder:validation:Optional
	exclusionLabels?: [...#ExclusionLabelsParameters] @go(ExclusionLabels,[]ExclusionLabelsParameters)

	// List of label sets used for VM inclusion. If the list has more than one LabelSet, the VM is included if any of the label sets are applicable for the VM.
	// +kubebuilder:validation:Optional
	inclusionLabels?: [...#InclusionLabelsParameters] @go(InclusionLabels,[]InclusionLabelsParameters)

	// List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.
	// +kubebuilder:validation:Optional
	inventories?: [...#InventoriesParameters] @go(Inventories,[]InventoriesParameters)
}

#InventoriesInitParameters: {
	// Required. The OS short name
	osShortName?: null | string @go(OsShortName,*string)

	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.
	osVersion?: null | string @go(OsVersion,*string)
}

#InventoriesObservation: {
	// Required. The OS short name
	osShortName?: null | string @go(OsShortName,*string)

	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.
	osVersion?: null | string @go(OsVersion,*string)
}

#InventoriesParameters: {
	// Required. The OS short name
	// +kubebuilder:validation:Optional
	osShortName?: null | string @go(OsShortName,*string)

	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.
	// +kubebuilder:validation:Optional
	osVersion?: null | string @go(OsVersion,*string)
}

#InventoryFiltersInitParameters: {
	// Required. The OS short name
	osShortName?: null | string @go(OsShortName,*string)

	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.
	osVersion?: null | string @go(OsVersion,*string)
}

#InventoryFiltersObservation: {
	// Required. The OS short name
	osShortName?: null | string @go(OsShortName,*string)

	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.
	osVersion?: null | string @go(OsVersion,*string)
}

#InventoryFiltersParameters: {
	// Required. The OS short name
	// +kubebuilder:validation:Optional
	osShortName?: null | string @go(OsShortName,*string)

	// The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.
	// +kubebuilder:validation:Optional
	osVersion?: null | string @go(OsVersion,*string)
}

#MsiInitParameters: {
	// Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of ACTION=INSTALL REBOOT=ReallySuppress.
	properties?: [...null | string] @go(Properties,[]*string)

	// Required. An rpm package.
	source?: [...#MsiSourceInitParameters] @go(Source,[]MsiSourceInitParameters)
}

#MsiObservation: {
	// Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of ACTION=INSTALL REBOOT=ReallySuppress.
	properties?: [...null | string] @go(Properties,[]*string)

	// Required. An rpm package.
	source?: [...#MsiSourceObservation] @go(Source,[]MsiSourceObservation)
}

#MsiParameters: {
	// Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of ACTION=INSTALL REBOOT=ReallySuppress.
	// +kubebuilder:validation:Optional
	properties?: [...null | string] @go(Properties,[]*string)

	// Required. An rpm package.
	// +kubebuilder:validation:Optional
	source?: [...#MsiSourceParameters] @go(Source,[]MsiSourceParameters)
}

#MsiSourceGcsInitParameters: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#MsiSourceGcsObservation: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#MsiSourceGcsParameters: {
	// Required. Bucket of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	object?: null | string @go(Object,*string)
}

#MsiSourceInitParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#MsiSourceGcsInitParameters] @go(Gcs,[]MsiSourceGcsInitParameters)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#MsiSourceRemoteInitParameters] @go(Remote,[]MsiSourceRemoteInitParameters)
}

#MsiSourceObservation: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#MsiSourceGcsObservation] @go(Gcs,[]MsiSourceGcsObservation)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#MsiSourceRemoteObservation] @go(Remote,[]MsiSourceRemoteObservation)
}

#MsiSourceParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	// +kubebuilder:validation:Optional
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	// +kubebuilder:validation:Optional
	gcs?: [...#MsiSourceGcsParameters] @go(Gcs,[]MsiSourceGcsParameters)

	// A local path within the VM to use.
	// +kubebuilder:validation:Optional
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	// +kubebuilder:validation:Optional
	remote?: [...#MsiSourceRemoteParameters] @go(Remote,[]MsiSourceRemoteParameters)
}

#MsiSourceRemoteInitParameters: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#MsiSourceRemoteObservation: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#MsiSourceRemoteParameters: {
	// SHA256 checksum of the remote file.
	// +kubebuilder:validation:Optional
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#OsPoliciesInitParameters: {
	// This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to true if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
	allowNoResourceGroupMatch?: null | bool @go(AllowNoResourceGroupMatch,*bool)

	// Policy description. Length of the description is limited to 1024 characters.
	description?: null | string @go(Description,*string)

	// Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
	id?: null | string @go(ID,*string)

	// Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
	mode?: null | string @go(Mode,*string)

	// Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag allow_no_resource_group_match
	resourceGroups?: [...#ResourceGroupsInitParameters] @go(ResourceGroups,[]ResourceGroupsInitParameters)
}

#OsPoliciesObservation: {
	// This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to true if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
	allowNoResourceGroupMatch?: null | bool @go(AllowNoResourceGroupMatch,*bool)

	// Policy description. Length of the description is limited to 1024 characters.
	description?: null | string @go(Description,*string)

	// Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
	id?: null | string @go(ID,*string)

	// Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
	mode?: null | string @go(Mode,*string)

	// Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag allow_no_resource_group_match
	resourceGroups?: [...#ResourceGroupsObservation] @go(ResourceGroups,[]ResourceGroupsObservation)
}

#OsPoliciesParameters: {
	// This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to true if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
	// +kubebuilder:validation:Optional
	allowNoResourceGroupMatch?: null | bool @go(AllowNoResourceGroupMatch,*bool)

	// Policy description. Length of the description is limited to 1024 characters.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag allow_no_resource_group_match
	// +kubebuilder:validation:Optional
	resourceGroups?: [...#ResourceGroupsParameters] @go(ResourceGroups,[]ResourceGroupsParameters)
}

#OsPolicyAssignmentInitParameters: {
	// Policy description. Length of the description is limited to 1024 characters.
	description?: null | string @go(Description,*string)

	// Required. Filter to select VMs.
	instanceFilter?: [...#InstanceFilterInitParameters] @go(InstanceFilter,[]InstanceFilterInitParameters)

	// Required. List of OS policies to be applied to the VMs.
	osPolicies?: [...#OsPoliciesInitParameters] @go(OsPolicies,[]OsPoliciesInitParameters)

	// The project for the resource
	project?: null | string @go(Project,*string)

	// Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.
	rollout?: [...#RolloutInitParameters] @go(Rollout,[]RolloutInitParameters)

	// Set to true to skip awaiting rollout during resource creation and update.
	skipAwaitRollout?: null | bool @go(SkipAwaitRollout,*bool)
}

#OsPolicyAssignmentObservation: {
	// Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of true for this field.
	baseline?: null | bool @go(Baseline,*bool)

	// Output only. Indicates that this revision deletes the OS policy assignment.
	deleted?: null | bool @go(Deleted,*bool)

	// Policy description. Length of the description is limited to 1024 characters.
	description?: null | string @go(Description,*string)

	// The etag for this OS policy assignment. If this is provided on update, it must match the server's etag.
	etag?: null | string @go(Etag,*string)

	// an identifier for the resource with format projects/{{project}}/locations/{{location}}/osPolicyAssignments/{{name}}
	id?: null | string @go(ID,*string)

	// Required. Filter to select VMs.
	instanceFilter?: [...#InstanceFilterObservation] @go(InstanceFilter,[]InstanceFilterObservation)

	// The location for the resource
	location?: null | string @go(Location,*string)

	// Required. List of OS policies to be applied to the VMs.
	osPolicies?: [...#OsPoliciesObservation] @go(OsPolicies,[]OsPoliciesObservation)

	// The project for the resource
	project?: null | string @go(Project,*string)

	// Output only. Indicates that reconciliation is in progress for the revision. This value is true when the rollout_state is one of: * IN_PROGRESS * CANCELLING
	reconciling?: null | bool @go(Reconciling,*bool)

	// Output only. The timestamp that the revision was created.
	revisionCreateTime?: null | string @go(RevisionCreateTime,*string)

	// Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment
	revisionId?: null | string @go(RevisionID,*string)

	// Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.
	rollout?: [...#RolloutObservation] @go(Rollout,[]RolloutObservation)

	// Output only. OS policy assignment rollout state Possible values: ROLLOUT_STATE_UNSPECIFIED, IN_PROGRESS, CANCELLING, CANCELLED, SUCCEEDED
	rolloutState?: null | string @go(RolloutState,*string)

	// Set to true to skip awaiting rollout during resource creation and update.
	skipAwaitRollout?: null | bool @go(SkipAwaitRollout,*bool)

	// Output only. Server generated unique id for the OS policy assignment resource.
	uid?: null | string @go(UID,*string)
}

#OsPolicyAssignmentParameters: {
	// Policy description. Length of the description is limited to 1024 characters.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Required. Filter to select VMs.
	// +kubebuilder:validation:Optional
	instanceFilter?: [...#InstanceFilterParameters] @go(InstanceFilter,[]InstanceFilterParameters)

	// The location for the resource
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// Required. List of OS policies to be applied to the VMs.
	// +kubebuilder:validation:Optional
	osPolicies?: [...#OsPoliciesParameters] @go(OsPolicies,[]OsPoliciesParameters)

	// The project for the resource
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.
	// +kubebuilder:validation:Optional
	rollout?: [...#RolloutParameters] @go(Rollout,[]RolloutParameters)

	// Set to true to skip awaiting rollout during resource creation and update.
	// +kubebuilder:validation:Optional
	skipAwaitRollout?: null | bool @go(SkipAwaitRollout,*bool)
}

#PkgInitParameters: {
	// An Apt Repository.
	apt?: [...#AptInitParameters] @go(Apt,[]AptInitParameters)

	// A deb package file.
	deb?: [...#DebInitParameters] @go(Deb,[]DebInitParameters)

	// Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
	desiredState?: null | string @go(DesiredState,*string)

	// A package managed by GooGet.
	googet?: [...#GoogetInitParameters] @go(Googet,[]GoogetInitParameters)

	// An MSI package.
	msi?: [...#MsiInitParameters] @go(Msi,[]MsiInitParameters)

	// An rpm package file.
	rpm?: [...#RpmInitParameters] @go(Rpm,[]RpmInitParameters)

	// A Yum Repository.
	yum?: [...#YumInitParameters] @go(Yum,[]YumInitParameters)

	// A Zypper Repository.
	zypper?: [...#ZypperInitParameters] @go(Zypper,[]ZypperInitParameters)
}

#PkgObservation: {
	// An Apt Repository.
	apt?: [...#AptObservation] @go(Apt,[]AptObservation)

	// A deb package file.
	deb?: [...#DebObservation] @go(Deb,[]DebObservation)

	// Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
	desiredState?: null | string @go(DesiredState,*string)

	// A package managed by GooGet.
	googet?: [...#GoogetObservation] @go(Googet,[]GoogetObservation)

	// An MSI package.
	msi?: [...#MsiObservation] @go(Msi,[]MsiObservation)

	// An rpm package file.
	rpm?: [...#RpmObservation] @go(Rpm,[]RpmObservation)

	// A Yum Repository.
	yum?: [...#YumObservation] @go(Yum,[]YumObservation)

	// A Zypper Repository.
	zypper?: [...#ZypperObservation] @go(Zypper,[]ZypperObservation)
}

#PkgParameters: {
	// An Apt Repository.
	// +kubebuilder:validation:Optional
	apt?: [...#AptParameters] @go(Apt,[]AptParameters)

	// A deb package file.
	// +kubebuilder:validation:Optional
	deb?: [...#DebParameters] @go(Deb,[]DebParameters)

	// Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED
	// +kubebuilder:validation:Optional
	desiredState?: null | string @go(DesiredState,*string)

	// A package managed by GooGet.
	// +kubebuilder:validation:Optional
	googet?: [...#GoogetParameters] @go(Googet,[]GoogetParameters)

	// An MSI package.
	// +kubebuilder:validation:Optional
	msi?: [...#MsiParameters] @go(Msi,[]MsiParameters)

	// An rpm package file.
	// +kubebuilder:validation:Optional
	rpm?: [...#RpmParameters] @go(Rpm,[]RpmParameters)

	// A Yum Repository.
	// +kubebuilder:validation:Optional
	yum?: [...#YumParameters] @go(Yum,[]YumParameters)

	// A Zypper Repository.
	// +kubebuilder:validation:Optional
	zypper?: [...#ZypperParameters] @go(Zypper,[]ZypperParameters)
}

#RemoteInitParameters: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#RemoteObservation: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#RemoteParameters: {
	// SHA256 checksum of the remote file.
	// +kubebuilder:validation:Optional
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#RepositoryAptInitParameters: {
	// Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
	archiveType?: null | string @go(ArchiveType,*string)

	// Required. List of components for this repository. Must contain at least one item.
	components?: [...null | string] @go(Components,[]*string)

	// Required. Distribution of this repository.
	distribution?: null | string @go(Distribution,*string)

	// URI of the key file for this repository. The agent maintains a keyring at /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg.
	gpgKey?: null | string @go(GpgKey,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#RepositoryAptObservation: {
	// Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
	archiveType?: null | string @go(ArchiveType,*string)

	// Required. List of components for this repository. Must contain at least one item.
	components?: [...null | string] @go(Components,[]*string)

	// Required. Distribution of this repository.
	distribution?: null | string @go(Distribution,*string)

	// URI of the key file for this repository. The agent maintains a keyring at /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg.
	gpgKey?: null | string @go(GpgKey,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#RepositoryAptParameters: {
	// Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC
	// +kubebuilder:validation:Optional
	archiveType?: null | string @go(ArchiveType,*string)

	// Required. List of components for this repository. Must contain at least one item.
	// +kubebuilder:validation:Optional
	components?: [...null | string] @go(Components,[]*string)

	// Required. Distribution of this repository.
	// +kubebuilder:validation:Optional
	distribution?: null | string @go(Distribution,*string)

	// URI of the key file for this repository. The agent maintains a keyring at /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg.
	// +kubebuilder:validation:Optional
	gpgKey?: null | string @go(GpgKey,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#RepositoryInitParameters: {
	// An Apt Repository.
	apt?: [...#RepositoryAptInitParameters] @go(Apt,[]RepositoryAptInitParameters)

	// A Goo Repository.
	goo?: [...#GooInitParameters] @go(Goo,[]GooInitParameters)

	// A Yum Repository.
	yum?: [...#RepositoryYumInitParameters] @go(Yum,[]RepositoryYumInitParameters)

	// A Zypper Repository.
	zypper?: [...#RepositoryZypperInitParameters] @go(Zypper,[]RepositoryZypperInitParameters)
}

#RepositoryObservation: {
	// An Apt Repository.
	apt?: [...#RepositoryAptObservation] @go(Apt,[]RepositoryAptObservation)

	// A Goo Repository.
	goo?: [...#GooObservation] @go(Goo,[]GooObservation)

	// A Yum Repository.
	yum?: [...#RepositoryYumObservation] @go(Yum,[]RepositoryYumObservation)

	// A Zypper Repository.
	zypper?: [...#RepositoryZypperObservation] @go(Zypper,[]RepositoryZypperObservation)
}

#RepositoryParameters: {
	// An Apt Repository.
	// +kubebuilder:validation:Optional
	apt?: [...#RepositoryAptParameters] @go(Apt,[]RepositoryAptParameters)

	// A Goo Repository.
	// +kubebuilder:validation:Optional
	goo?: [...#GooParameters] @go(Goo,[]GooParameters)

	// A Yum Repository.
	// +kubebuilder:validation:Optional
	yum?: [...#RepositoryYumParameters] @go(Yum,[]RepositoryYumParameters)

	// A Zypper Repository.
	// +kubebuilder:validation:Optional
	zypper?: [...#RepositoryZypperParameters] @go(Zypper,[]RepositoryZypperParameters)
}

#RepositoryYumInitParameters: {
	// Required. The location of the repository directory.
	baseUrl?: null | string @go(BaseURL,*string)

	// The display name of the repository.
	displayName?: null | string @go(DisplayName,*string)

	// URIs of GPG keys.
	gpgKeys?: [...null | string] @go(GpgKeys,[]*string)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	id?: null | string @go(ID,*string)
}

#RepositoryYumObservation: {
	// Required. The location of the repository directory.
	baseUrl?: null | string @go(BaseURL,*string)

	// The display name of the repository.
	displayName?: null | string @go(DisplayName,*string)

	// URIs of GPG keys.
	gpgKeys?: [...null | string] @go(GpgKeys,[]*string)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	id?: null | string @go(ID,*string)
}

#RepositoryYumParameters: {
	// Required. The location of the repository directory.
	// +kubebuilder:validation:Optional
	baseUrl?: null | string @go(BaseURL,*string)

	// The display name of the repository.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// URIs of GPG keys.
	// +kubebuilder:validation:Optional
	gpgKeys?: [...null | string] @go(GpgKeys,[]*string)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)
}

#RepositoryZypperInitParameters: {
	// Required. The location of the repository directory.
	baseUrl?: null | string @go(BaseURL,*string)

	// The display name of the repository.
	displayName?: null | string @go(DisplayName,*string)

	// URIs of GPG keys.
	gpgKeys?: [...null | string] @go(GpgKeys,[]*string)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	id?: null | string @go(ID,*string)
}

#RepositoryZypperObservation: {
	// Required. The location of the repository directory.
	baseUrl?: null | string @go(BaseURL,*string)

	// The display name of the repository.
	displayName?: null | string @go(DisplayName,*string)

	// URIs of GPG keys.
	gpgKeys?: [...null | string] @go(GpgKeys,[]*string)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	id?: null | string @go(ID,*string)
}

#RepositoryZypperParameters: {
	// Required. The location of the repository directory.
	// +kubebuilder:validation:Optional
	baseUrl?: null | string @go(BaseURL,*string)

	// The display name of the repository.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// URIs of GPG keys.
	// +kubebuilder:validation:Optional
	gpgKeys?: [...null | string] @go(GpgKeys,[]*string)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)
}

#ResourceGroupsInitParameters: {
	// List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either RHEL or CentOS operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
	inventoryFilters?: [...#InventoryFiltersInitParameters] @go(InventoryFilters,[]InventoryFiltersInitParameters)

	// Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
	resources?: [...#ResourcesInitParameters] @go(Resources,[]ResourcesInitParameters)
}

#ResourceGroupsObservation: {
	// List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either RHEL or CentOS operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
	inventoryFilters?: [...#InventoryFiltersObservation] @go(InventoryFilters,[]InventoryFiltersObservation)

	// Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
	resources?: [...#ResourcesObservation] @go(Resources,[]ResourcesObservation)
}

#ResourceGroupsParameters: {
	// List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either RHEL or CentOS operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.
	// +kubebuilder:validation:Optional
	inventoryFilters?: [...#InventoryFiltersParameters] @go(InventoryFilters,[]InventoryFiltersParameters)

	// Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.
	// +kubebuilder:validation:Optional
	resources?: [...#ResourcesParameters] @go(Resources,[]ResourcesParameters)
}

#ResourcesFileInitParameters: {
	// A a file with this content. The size of the content is limited to 1024 characters.
	content?: null | string @go(Content,*string)

	// A remote or local file.
	file?: [...#FileFileInitParameters] @go(File,[]FileFileInitParameters)

	// Required. The absolute path of the file within the VM.
	path?: null | string @go(Path,*string)

	// Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
	state?: null | string @go(State,*string)
}

#ResourcesFileObservation: {
	// A a file with this content. The size of the content is limited to 1024 characters.
	content?: null | string @go(Content,*string)

	// A remote or local file.
	file?: [...#FileFileObservation] @go(File,[]FileFileObservation)

	// Required. The absolute path of the file within the VM.
	path?: null | string @go(Path,*string)

	// Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
	permissions?: null | string @go(Permissions,*string)

	// Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
	state?: null | string @go(State,*string)
}

#ResourcesFileParameters: {
	// A a file with this content. The size of the content is limited to 1024 characters.
	// +kubebuilder:validation:Optional
	content?: null | string @go(Content,*string)

	// A remote or local file.
	// +kubebuilder:validation:Optional
	file?: [...#FileFileParameters] @go(File,[]FileFileParameters)

	// Required. The absolute path of the file within the VM.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE
	// +kubebuilder:validation:Optional
	state?: null | string @go(State,*string)
}

#ResourcesInitParameters: {
	// Exec resource
	exec?: [...#ExecInitParameters] @go(Exec,[]ExecInitParameters)

	// A remote or local file.
	file?: [...#ResourcesFileInitParameters] @go(File,[]ResourcesFileInitParameters)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	id?: null | string @go(ID,*string)

	// Package resource
	pkg?: [...#PkgInitParameters] @go(Pkg,[]PkgInitParameters)

	// Package repository resource
	repository?: [...#RepositoryInitParameters] @go(Repository,[]RepositoryInitParameters)
}

#ResourcesObservation: {
	// Exec resource
	exec?: [...#ExecObservation] @go(Exec,[]ExecObservation)

	// A remote or local file.
	file?: [...#ResourcesFileObservation] @go(File,[]ResourcesFileObservation)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	id?: null | string @go(ID,*string)

	// Package resource
	pkg?: [...#PkgObservation] @go(Pkg,[]PkgObservation)

	// Package repository resource
	repository?: [...#RepositoryObservation] @go(Repository,[]RepositoryObservation)
}

#ResourcesParameters: {
	// Exec resource
	// +kubebuilder:validation:Optional
	exec?: [...#ExecParameters] @go(Exec,[]ExecParameters)

	// A remote or local file.
	// +kubebuilder:validation:Optional
	file?: [...#ResourcesFileParameters] @go(File,[]ResourcesFileParameters)

	// Required. A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Package resource
	// +kubebuilder:validation:Optional
	pkg?: [...#PkgParameters] @go(Pkg,[]PkgParameters)

	// Package repository resource
	// +kubebuilder:validation:Optional
	repository?: [...#RepositoryParameters] @go(Repository,[]RepositoryParameters)
}

#RolloutInitParameters: {
	// Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
	disruptionBudget?: [...#DisruptionBudgetInitParameters] @go(DisruptionBudget,[]DisruptionBudgetInitParameters)

	// Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the disruption_budget at least until this duration of time has passed after configuration changes are applied.
	minWaitDuration?: null | string @go(MinWaitDuration,*string)
}

#RolloutObservation: {
	// Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
	disruptionBudget?: [...#DisruptionBudgetObservation] @go(DisruptionBudget,[]DisruptionBudgetObservation)

	// Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the disruption_budget at least until this duration of time has passed after configuration changes are applied.
	minWaitDuration?: null | string @go(MinWaitDuration,*string)
}

#RolloutParameters: {
	// Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.
	// +kubebuilder:validation:Optional
	disruptionBudget?: [...#DisruptionBudgetParameters] @go(DisruptionBudget,[]DisruptionBudgetParameters)

	// Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the disruption_budget at least until this duration of time has passed after configuration changes are applied.
	// +kubebuilder:validation:Optional
	minWaitDuration?: null | string @go(MinWaitDuration,*string)
}

#RpmInitParameters: {
	// Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm
	pullDeps?: null | bool @go(PullDeps,*bool)

	// Required. An rpm package.
	source?: [...#RpmSourceInitParameters] @go(Source,[]RpmSourceInitParameters)
}

#RpmObservation: {
	// Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm
	pullDeps?: null | bool @go(PullDeps,*bool)

	// Required. An rpm package.
	source?: [...#RpmSourceObservation] @go(Source,[]RpmSourceObservation)
}

#RpmParameters: {
	// Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm
	// +kubebuilder:validation:Optional
	pullDeps?: null | bool @go(PullDeps,*bool)

	// Required. An rpm package.
	// +kubebuilder:validation:Optional
	source?: [...#RpmSourceParameters] @go(Source,[]RpmSourceParameters)
}

#RpmSourceGcsInitParameters: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#RpmSourceGcsObservation: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#RpmSourceGcsParameters: {
	// Required. Bucket of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	object?: null | string @go(Object,*string)
}

#RpmSourceInitParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#RpmSourceGcsInitParameters] @go(Gcs,[]RpmSourceGcsInitParameters)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#RpmSourceRemoteInitParameters] @go(Remote,[]RpmSourceRemoteInitParameters)
}

#RpmSourceObservation: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#RpmSourceGcsObservation] @go(Gcs,[]RpmSourceGcsObservation)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#RpmSourceRemoteObservation] @go(Remote,[]RpmSourceRemoteObservation)
}

#RpmSourceParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	// +kubebuilder:validation:Optional
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	// +kubebuilder:validation:Optional
	gcs?: [...#RpmSourceGcsParameters] @go(Gcs,[]RpmSourceGcsParameters)

	// A local path within the VM to use.
	// +kubebuilder:validation:Optional
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	// +kubebuilder:validation:Optional
	remote?: [...#RpmSourceRemoteParameters] @go(Remote,[]RpmSourceRemoteParameters)
}

#RpmSourceRemoteInitParameters: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#RpmSourceRemoteObservation: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#RpmSourceRemoteParameters: {
	// SHA256 checksum of the remote file.
	// +kubebuilder:validation:Optional
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#SourceGcsInitParameters: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#SourceGcsObservation: {
	// Required. Bucket of the Cloud Storage object.
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	object?: null | string @go(Object,*string)
}

#SourceGcsParameters: {
	// Required. Bucket of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Generation number of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	generation?: null | float64 @go(Generation,*float64)

	// Required. Name of the Cloud Storage object.
	// +kubebuilder:validation:Optional
	object?: null | string @go(Object,*string)
}

#SourceInitParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#SourceGcsInitParameters] @go(Gcs,[]SourceGcsInitParameters)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#SourceRemoteInitParameters] @go(Remote,[]SourceRemoteInitParameters)
}

#SourceObservation: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#SourceGcsObservation] @go(Gcs,[]SourceGcsObservation)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#SourceRemoteObservation] @go(Remote,[]SourceRemoteObservation)
}

#SourceParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	// +kubebuilder:validation:Optional
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	// +kubebuilder:validation:Optional
	gcs?: [...#SourceGcsParameters] @go(Gcs,[]SourceGcsParameters)

	// A local path within the VM to use.
	// +kubebuilder:validation:Optional
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	// +kubebuilder:validation:Optional
	remote?: [...#SourceRemoteParameters] @go(Remote,[]SourceRemoteParameters)
}

#SourceRemoteInitParameters: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#SourceRemoteObservation: {
	// SHA256 checksum of the remote file.
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	uri?: null | string @go(URI,*string)
}

#SourceRemoteParameters: {
	// SHA256 checksum of the remote file.
	// +kubebuilder:validation:Optional
	sha256Checksum?: null | string @go(Sha256Checksum,*string)

	// Required. URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#ValidateFileInitParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#FileGcsInitParameters] @go(Gcs,[]FileGcsInitParameters)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#FileRemoteInitParameters] @go(Remote,[]FileRemoteInitParameters)
}

#ValidateFileObservation: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	gcs?: [...#FileGcsObservation] @go(Gcs,[]FileGcsObservation)

	// A local path within the VM to use.
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	remote?: [...#FileRemoteObservation] @go(Remote,[]FileRemoteObservation)
}

#ValidateFileParameters: {
	// Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.
	// +kubebuilder:validation:Optional
	allowInsecure?: null | bool @go(AllowInsecure,*bool)

	// A Cloud Storage object.
	// +kubebuilder:validation:Optional
	gcs?: [...#FileGcsParameters] @go(Gcs,[]FileGcsParameters)

	// A local path within the VM to use.
	// +kubebuilder:validation:Optional
	localPath?: null | string @go(LocalPath,*string)

	// A generic remote file.
	// +kubebuilder:validation:Optional
	remote?: [...#FileRemoteParameters] @go(Remote,[]FileRemoteParameters)
}

#ValidateInitParameters: {
	// Optional arguments to pass to the source during execution.
	args?: [...null | string] @go(Args,[]*string)

	// A remote or local file.
	file?: [...#ValidateFileInitParameters] @go(File,[]ValidateFileInitParameters)

	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	interpreter?: null | string @go(Interpreter,*string)

	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	outputFilePath?: null | string @go(OutputFilePath,*string)

	// An inline script. The size of the script is limited to 1024 characters.
	script?: null | string @go(Script,*string)
}

#ValidateObservation: {
	// Optional arguments to pass to the source during execution.
	args?: [...null | string] @go(Args,[]*string)

	// A remote or local file.
	file?: [...#ValidateFileObservation] @go(File,[]ValidateFileObservation)

	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	interpreter?: null | string @go(Interpreter,*string)

	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	outputFilePath?: null | string @go(OutputFilePath,*string)

	// An inline script. The size of the script is limited to 1024 characters.
	script?: null | string @go(Script,*string)
}

#ValidateParameters: {
	// Optional arguments to pass to the source during execution.
	// +kubebuilder:validation:Optional
	args?: [...null | string] @go(Args,[]*string)

	// A remote or local file.
	// +kubebuilder:validation:Optional
	file?: [...#ValidateFileParameters] @go(File,[]ValidateFileParameters)

	// Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL
	// +kubebuilder:validation:Optional
	interpreter?: null | string @go(Interpreter,*string)

	// Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
	// +kubebuilder:validation:Optional
	outputFilePath?: null | string @go(OutputFilePath,*string)

	// An inline script. The size of the script is limited to 1024 characters.
	// +kubebuilder:validation:Optional
	script?: null | string @go(Script,*string)
}

#YumInitParameters: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#YumObservation: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#YumParameters: {
	// Required. Package name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#ZypperInitParameters: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#ZypperObservation: {
	// Required. Package name.
	name?: null | string @go(Name,*string)
}

#ZypperParameters: {
	// Required. Package name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

// OsPolicyAssignmentSpec defines the desired state of OsPolicyAssignment
#OsPolicyAssignmentSpec: {
	forProvider: #OsPolicyAssignmentParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #OsPolicyAssignmentInitParameters @go(InitProvider)
}

// OsPolicyAssignmentStatus defines the observed state of OsPolicyAssignment.
#OsPolicyAssignmentStatus: {
	atProvider?: #OsPolicyAssignmentObservation @go(AtProvider)
}

// OsPolicyAssignment is the Schema for the OsPolicyAssignments API. Represents an OSPolicyAssignment resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#OsPolicyAssignment: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceFilter) || has(self.initProvider.instanceFilter)",message="instanceFilter is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.osPolicies) || has(self.initProvider.osPolicies)",message="osPolicies is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rollout) || has(self.initProvider.rollout)",message="rollout is a required parameter"
	spec:    #OsPolicyAssignmentSpec   @go(Spec)
	status?: #OsPolicyAssignmentStatus @go(Status)
}

// OsPolicyAssignmentList contains a list of OsPolicyAssignments
#OsPolicyAssignmentList: {
	items: [...#OsPolicyAssignment] @go(Items,[]OsPolicyAssignment)
}
