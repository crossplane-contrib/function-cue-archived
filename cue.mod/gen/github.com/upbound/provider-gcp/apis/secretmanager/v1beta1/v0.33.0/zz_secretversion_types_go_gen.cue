// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/secretmanager/v1beta1

package v1beta1

#SecretVersionObservation: {
	// The time at which the Secret was created.
	createTime?: null | string @go(CreateTime,*string)

	// The time at which the Secret was destroyed. Only present if state is DESTROYED.
	destroyTime?: null | string @go(DestroyTime,*string)

	// The current state of the SecretVersion.
	enabled?: null | bool @go(Enabled,*bool)

	// an identifier for the resource with format {{name}}
	id?: null | string @go(ID,*string)

	// The resource name of the SecretVersion. Format:
	// projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}
	name?: null | string @go(Name,*string)

	// Secret Manager secret resource
	secret?: null | string @go(Secret,*string)

	// The version of the Secret.
	version?: null | string @go(Version,*string)
}

#SecretVersionParameters: {
	// The current state of the SecretVersion.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Secret Manager secret resource
	// +crossplane:generate:reference:type=Secret
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.ExtractResourceID()
	// +kubebuilder:validation:Optional
	secret?: null | string @go(Secret,*string)
}

// SecretVersionSpec defines the desired state of SecretVersion
#SecretVersionSpec: {
	forProvider: #SecretVersionParameters @go(ForProvider)
}

// SecretVersionStatus defines the observed state of SecretVersion.
#SecretVersionStatus: {
	atProvider?: #SecretVersionObservation @go(AtProvider)
}

// SecretVersion is the Schema for the SecretVersions API. A secret version resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#SecretVersion: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.secretDataSecretRef)",message="secretDataSecretRef is a required parameter"
	spec:    #SecretVersionSpec   @go(Spec)
	status?: #SecretVersionStatus @go(Status)
}

// SecretVersionList contains a list of SecretVersions
#SecretVersionList: {
	items: [...#SecretVersion] @go(Items,[]SecretVersion)
}
