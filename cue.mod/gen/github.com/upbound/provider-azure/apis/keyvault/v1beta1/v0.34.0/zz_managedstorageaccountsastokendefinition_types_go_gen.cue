// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/keyvault/v1beta1

package v1beta1

#ManagedStorageAccountSASTokenDefinitionObservation: {
	// The ID of the Managed Storage Account SAS Definition.
	id?: null | string @go(ID,*string)

	// The ID of the Managed Storage Account.
	managedStorageAccountId?: null | string @go(ManagedStorageAccountID,*string)

	// The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
	sasTemplateUri?: null | string @go(SASTemplateURI,*string)

	// The type of SAS token the SAS definition will create. Possible values are account and service.
	sasType?: null | string @go(SASType,*string)

	// The ID of the Secret that is created by Managed Storage Account SAS Definition.
	secretId?: null | string @go(SecretID,*string)

	// A mapping of tags which should be assigned to the SAS Definition. Changing this forces a new resource to be created.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Validity period of SAS token. Value needs to be in ISO 8601 duration format.
	validityPeriod?: null | string @go(ValidityPeriod,*string)
}

#ManagedStorageAccountSASTokenDefinitionParameters: {
	// The ID of the Managed Storage Account.
	// +crossplane:generate:reference:type=ManagedStorageAccount
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	managedStorageAccountId?: null | string @go(ManagedStorageAccountID,*string)

	// The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
	// +kubebuilder:validation:Optional
	sasTemplateUri?: null | string @go(SASTemplateURI,*string)

	// The type of SAS token the SAS definition will create. Possible values are account and service.
	// +kubebuilder:validation:Optional
	sasType?: null | string @go(SASType,*string)

	// A mapping of tags which should be assigned to the SAS Definition. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Validity period of SAS token. Value needs to be in ISO 8601 duration format.
	// +kubebuilder:validation:Optional
	validityPeriod?: null | string @go(ValidityPeriod,*string)
}

// ManagedStorageAccountSASTokenDefinitionSpec defines the desired state of ManagedStorageAccountSASTokenDefinition
#ManagedStorageAccountSASTokenDefinitionSpec: {
	forProvider: #ManagedStorageAccountSASTokenDefinitionParameters @go(ForProvider)
}

// ManagedStorageAccountSASTokenDefinitionStatus defines the observed state of ManagedStorageAccountSASTokenDefinition.
#ManagedStorageAccountSASTokenDefinitionStatus: {
	atProvider?: #ManagedStorageAccountSASTokenDefinitionObservation @go(AtProvider)
}

// ManagedStorageAccountSASTokenDefinition is the Schema for the ManagedStorageAccountSASTokenDefinitions API. Manages a Key Vault Managed Storage Account SAS Definition.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ManagedStorageAccountSASTokenDefinition: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.sasTemplateUri)",message="sasTemplateUri is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.sasType)",message="sasType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.validityPeriod)",message="validityPeriod is a required parameter"
	spec:    #ManagedStorageAccountSASTokenDefinitionSpec   @go(Spec)
	status?: #ManagedStorageAccountSASTokenDefinitionStatus @go(Status)
}

// ManagedStorageAccountSASTokenDefinitionList contains a list of ManagedStorageAccountSASTokenDefinitions
#ManagedStorageAccountSASTokenDefinitionList: {
	items: [...#ManagedStorageAccountSASTokenDefinition] @go(Items,[]ManagedStorageAccountSASTokenDefinition)
}
