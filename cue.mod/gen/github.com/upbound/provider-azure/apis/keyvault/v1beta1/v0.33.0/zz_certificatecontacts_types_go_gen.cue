// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/keyvault/v1beta1

package v1beta1

#CertificateContactsContactObservation: {
	// E-mail address of the contact.
	email?: null | string @go(Email,*string)

	// Name of the contact.
	name?: null | string @go(Name,*string)

	// Phone number of the contact.
	phone?: null | string @go(Phone,*string)
}

#CertificateContactsContactParameters: {
	// E-mail address of the contact.
	// +kubebuilder:validation:Required
	email?: null | string @go(Email,*string)

	// Name of the contact.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Phone number of the contact.
	// +kubebuilder:validation:Optional
	phone?: null | string @go(Phone,*string)
}

#CertificateContactsObservation: {
	// One or more contact blocks as defined below.
	contact?: [...#CertificateContactsContactObservation] @go(Contact,[]CertificateContactsContactObservation)

	// The ID of the Key Vault Certificate Contacts.
	id?: null | string @go(ID,*string)

	// The ID of the Key Vault. Changing this forces a new resource to be created.
	keyVaultId?: null | string @go(KeyVaultID,*string)
}

#CertificateContactsParameters: {
	// One or more contact blocks as defined below.
	// +kubebuilder:validation:Optional
	contact?: [...#CertificateContactsContactParameters] @go(Contact,[]CertificateContactsContactParameters)

	// The ID of the Key Vault. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/keyvault/v1beta1.Vault
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	keyVaultId?: null | string @go(KeyVaultID,*string)
}

// CertificateContactsSpec defines the desired state of CertificateContacts
#CertificateContactsSpec: {
	forProvider: #CertificateContactsParameters @go(ForProvider)
}

// CertificateContactsStatus defines the observed state of CertificateContacts.
#CertificateContactsStatus: {
	atProvider?: #CertificateContactsObservation @go(AtProvider)
}

// CertificateContacts is the Schema for the CertificateContactss API. Manages Key Vault Certificate Contacts.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#CertificateContacts: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.contact)",message="contact is a required parameter"
	spec:    #CertificateContactsSpec   @go(Spec)
	status?: #CertificateContactsStatus @go(Status)
}

// CertificateContactsList contains a list of CertificateContactss
#CertificateContactsList: {
	items: [...#CertificateContacts] @go(Items,[]CertificateContacts)
}
