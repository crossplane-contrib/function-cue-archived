// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/keyvault/v1beta1

package v1beta1

#SecretObservation: {
	// Specifies the content type for the Key Vault Secret.
	contentType?: null | string @go(ContentType,*string)

	// Expiration UTC datetime (Y-m-d'T'H:M:S'Z').
	expirationDate?: null | string @go(ExpirationDate,*string)

	// The Key Vault Secret ID.
	id?: null | string @go(ID,*string)

	// The ID of the Key Vault where the Secret should be created. Changing this forces a new resource to be created.
	keyVaultId?: null | string @go(KeyVaultID,*string)

	// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
	notBeforeDate?: null | string @go(NotBeforeDate,*string)

	// The (Versioned) ID for this Key Vault Secret. This property points to a specific version of a Key Vault Secret, as such using this won't auto-rotate values if used in other Azure Services.
	resourceId?: null | string @go(ResourceID,*string)

	// The Versionless ID of the Key Vault Secret. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Secret is updated.
	resourceVersionlessId?: null | string @go(ResourceVersionlessID,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The current version of the Key Vault Secret.
	version?: null | string @go(Version,*string)

	// The Base ID of the Key Vault Secret.
	versionlessId?: null | string @go(VersionlessID,*string)
}

#SecretParameters: {
	// Specifies the content type for the Key Vault Secret.
	// +kubebuilder:validation:Optional
	contentType?: null | string @go(ContentType,*string)

	// Expiration UTC datetime (Y-m-d'T'H:M:S'Z').
	// +kubebuilder:validation:Optional
	expirationDate?: null | string @go(ExpirationDate,*string)

	// The ID of the Key Vault where the Secret should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Vault
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	keyVaultId?: null | string @go(KeyVaultID,*string)

	// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
	// +kubebuilder:validation:Optional
	notBeforeDate?: null | string @go(NotBeforeDate,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// SecretSpec defines the desired state of Secret
#SecretSpec: {
	forProvider: #SecretParameters @go(ForProvider)
}

// SecretStatus defines the observed state of Secret.
#SecretStatus: {
	atProvider?: #SecretObservation @go(AtProvider)
}

// Secret is the Schema for the Secrets API. Manages a Key Vault Secret.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Secret: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.valueSecretRef)",message="valueSecretRef is a required parameter"
	spec:    #SecretSpec   @go(Spec)
	status?: #SecretStatus @go(Status)
}

// SecretList contains a list of Secrets
#SecretList: {
	items: [...#Secret] @go(Items,[]Secret)
}
