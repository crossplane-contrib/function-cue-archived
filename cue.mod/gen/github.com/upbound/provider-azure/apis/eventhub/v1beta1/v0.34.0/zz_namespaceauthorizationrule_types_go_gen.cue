// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/eventhub/v1beta1

package v1beta1

#NamespaceAuthorizationRuleObservation: {
	// The EventHub Namespace Authorization Rule ID.
	id?: null | string @go(ID,*string)

	// Grants listen access to this this Authorization Rule. Defaults to false.
	listen?: null | bool @go(Listen,*bool)

	// Grants manage access to this this Authorization Rule. When this property is true - both listen and send must be too. Defaults to false.
	manage?: null | bool @go(Manage,*bool)

	// Specifies the name of the EventHub Namespace. Changing this forces a new resource to be created.
	namespaceName?: null | string @go(NamespaceName,*string)

	// The name of the resource group in which the EventHub Namespace exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Grants send access to this this Authorization Rule. Defaults to false.
	send?: null | bool @go(Send,*bool)
}

#NamespaceAuthorizationRuleParameters: {
	// Grants listen access to this this Authorization Rule. Defaults to false.
	// +kubebuilder:validation:Optional
	listen?: null | bool @go(Listen,*bool)

	// Grants manage access to this this Authorization Rule. When this property is true - both listen and send must be too. Defaults to false.
	// +kubebuilder:validation:Optional
	manage?: null | bool @go(Manage,*bool)

	// Specifies the name of the EventHub Namespace. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/eventhub/v1beta1.EventHubNamespace
	// +kubebuilder:validation:Optional
	namespaceName?: null | string @go(NamespaceName,*string)

	// The name of the resource group in which the EventHub Namespace exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Grants send access to this this Authorization Rule. Defaults to false.
	// +kubebuilder:validation:Optional
	send?: null | bool @go(Send,*bool)
}

// NamespaceAuthorizationRuleSpec defines the desired state of NamespaceAuthorizationRule
#NamespaceAuthorizationRuleSpec: {
	forProvider: #NamespaceAuthorizationRuleParameters @go(ForProvider)
}

// NamespaceAuthorizationRuleStatus defines the observed state of NamespaceAuthorizationRule.
#NamespaceAuthorizationRuleStatus: {
	atProvider?: #NamespaceAuthorizationRuleObservation @go(AtProvider)
}

// NamespaceAuthorizationRule is the Schema for the NamespaceAuthorizationRules API. Manages an Authorization Rule for an Event Hub Namespace.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#NamespaceAuthorizationRule: {
	spec:    #NamespaceAuthorizationRuleSpec   @go(Spec)
	status?: #NamespaceAuthorizationRuleStatus @go(Status)
}

// NamespaceAuthorizationRuleList contains a list of NamespaceAuthorizationRules
#NamespaceAuthorizationRuleList: {
	items: [...#NamespaceAuthorizationRule] @go(Items,[]NamespaceAuthorizationRule)
}
