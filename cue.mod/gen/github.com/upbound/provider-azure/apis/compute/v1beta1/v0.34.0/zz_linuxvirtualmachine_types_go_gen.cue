// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/compute/v1beta1

package v1beta1

#AdditionalCapabilitiesObservation: {
	// Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine? Defaults to false.
	ultraSsdEnabled?: null | bool @go(UltraSsdEnabled,*bool)
}

#AdditionalCapabilitiesParameters: {
	// Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine? Defaults to false.
	// +kubebuilder:validation:Optional
	ultraSsdEnabled?: null | bool @go(UltraSsdEnabled,*bool)
}

#AdminSSHKeyObservation: {
	// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in ssh-rsa format. Changing this forces a new resource to be created.
	publicKey?: null | string @go(PublicKey,*string)

	// The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
	username?: null | string @go(Username,*string)
}

#AdminSSHKeyParameters: {
	// The Public Key which should be used for authentication, which needs to be at least 2048-bit and in ssh-rsa format. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	publicKey?: null | string @go(PublicKey,*string)

	// The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	username?: null | string @go(Username,*string)
}

#BootDiagnosticsObservation: {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	storageAccountUri?: null | string @go(StorageAccountURI,*string)
}

#BootDiagnosticsParameters: {
	// The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
	// +kubebuilder:validation:Optional
	storageAccountUri?: null | string @go(StorageAccountURI,*string)
}

#CertificateObservation: {
	// The Secret URL of a Key Vault Certificate.
	url?: null | string @go(URL,*string)
}

#CertificateParameters: {
	// The Secret URL of a Key Vault Certificate.
	// +kubebuilder:validation:Required
	url?: null | string @go(URL,*string)
}

#DiffDiskSettingsObservation: {
	// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.
	option?: null | string @go(Option,*string)

	// Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.
	placement?: null | string @go(Placement,*string)
}

#DiffDiskSettingsParameters: {
	// Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	option?: null | string @go(Option,*string)

	// Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	placement?: null | string @go(Placement,*string)
}

#LinuxVirtualMachineGalleryApplicationObservation: {
	// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.
	configurationBlobUri?: null | string @go(ConfigurationBlobURI,*string)

	// Specifies the order in which the packages have to be installed. Possible values are between 0 and 2,147,483,647.
	order?: null | float64 @go(Order,*float64)

	// Specifies a passthrough value for more generic context. This field can be any valid string value.
	tag?: null | string @go(Tag,*string)

	// Specifies the Gallery Application Version resource ID.
	versionId?: null | string @go(VersionID,*string)
}

#LinuxVirtualMachineGalleryApplicationParameters: {
	// Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.
	// +kubebuilder:validation:Optional
	configurationBlobUri?: null | string @go(ConfigurationBlobURI,*string)

	// Specifies the order in which the packages have to be installed. Possible values are between 0 and 2,147,483,647.
	// +kubebuilder:validation:Optional
	order?: null | float64 @go(Order,*float64)

	// Specifies a passthrough value for more generic context. This field can be any valid string value.
	// +kubebuilder:validation:Optional
	tag?: null | string @go(Tag,*string)

	// Specifies the Gallery Application Version resource ID.
	// +kubebuilder:validation:Required
	versionId?: null | string @go(VersionID,*string)
}

#LinuxVirtualMachineIdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID associated with this Managed Service Identity.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID associated with this Managed Service Identity.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	type?: null | string @go(Type,*string)
}

#LinuxVirtualMachineIdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#LinuxVirtualMachineObservation: {
	// A additional_capabilities block as defined below.
	additionalCapabilities?: [...#AdditionalCapabilitiesObservation] @go(AdditionalCapabilities,[]AdditionalCapabilitiesObservation)

	// One or more admin_ssh_key blocks as defined below. Changing this forces a new resource to be created.
	adminSshKey?: [...#AdminSSHKeyObservation] @go(AdminSSHKey,[]AdminSSHKeyObservation)

	// The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
	adminUsername?: null | string @go(AdminUsername,*string)

	// Should Extension Operations be allowed on this Virtual Machine? Defaults to true.
	allowExtensionOperations?: null | bool @go(AllowExtensionOperations,*bool)

	// Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
	availabilitySetId?: null | string @go(AvailabilitySetID,*string)

	// A boot_diagnostics block as defined below.
	bootDiagnostics?: [...#BootDiagnosticsObservation] @go(BootDiagnostics,[]BootDiagnosticsObservation)

	// Specifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.
	capacityReservationGroupId?: null | string @go(CapacityReservationGroupID,*string)

	// Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name, then you must specify computer_name. Changing this forces a new resource to be created.
	computerName?: null | string @go(ComputerName,*string)

	// The ID of a Dedicated Host Group that this Linux Virtual Machine should be run within. Conflicts with dedicated_host_id.
	dedicatedHostGroupId?: null | string @go(DedicatedHostGroupID,*string)

	// The ID of a Dedicated Host where this machine should be run on. Conflicts with dedicated_host_group_id.
	dedicatedHostId?: null | string @go(DedicatedHostID,*string)

	// Should Password Authentication be disabled on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.
	disablePasswordAuthentication?: null | bool @go(DisablePasswordAuthentication,*bool)

	// Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine should exist. Changing this forces a new Linux Virtual Machine to be created.
	edgeZone?: null | string @go(EdgeZone,*string)

	// Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
	encryptionAtHostEnabled?: null | bool @go(EncryptionAtHostEnabled,*bool)

	// Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
	evictionPolicy?: null | string @go(EvictionPolicy,*string)

	// Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to 90 minutes (PT1H30M).
	extensionsTimeBudget?: null | string @go(ExtensionsTimeBudget,*string)

	// One or more gallery_application blocks as defined below.
	galleryApplication?: [...#LinuxVirtualMachineGalleryApplicationObservation] @go(GalleryApplication,[]LinuxVirtualMachineGalleryApplicationObservation)

	// The ID of the Linux Virtual Machine.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#LinuxVirtualMachineIdentityObservation] @go(Identity,[]LinuxVirtualMachineIdentityObservation)

	// Specifies the BYOL Type for this Virtual Machine. Possible values are RHEL_BYOS and SLES_BYOS.
	licenseType?: null | string @go(LicenseType,*string)

	// The Azure location where the Linux Virtual Machine should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the eviction_policy. Defaults to -1, which means that the Virtual Machine should not be evicted for price reasons.
	maxBidPrice?: null | float64 @go(MaxBidPrice,*float64)

	// . A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
	networkInterfaceIds?: [...null | string] @go(NetworkInterfaceIds,[]*string)

	// A os_disk block as defined below.
	osDisk?: [...#LinuxVirtualMachineOsDiskObservation] @go(OsDisk,[]LinuxVirtualMachineOsDiskObservation)

	// Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are AutomaticByPlatform or ImageDefault. Defaults to ImageDefault.
	patchAssessmentMode?: null | string @go(PatchAssessmentMode,*string)

	// Specifies the mode of in-guest patching to this Linux Virtual Machine. Possible values are AutomaticByPlatform and ImageDefault. Defaults to ImageDefault. For more information on patch modes please see the product documentation.
	patchMode?: null | string @go(PatchMode,*string)

	// A plan block as defined below. Changing this forces a new resource to be created.
	plan?: [...#PlanObservation] @go(Plan,[]PlanObservation)

	// Specifies the Platform Fault Domain in which this Linux Virtual Machine should be created. Defaults to -1, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Linux Virtual Machine to be created.
	platformFaultDomain?: null | float64 @go(PlatformFaultDomain,*float64)

	// Specifies the priority of this Virtual Machine. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.
	priority?: null | string @go(Priority,*string)

	// The Primary Private IP Address assigned to this Virtual Machine.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// A list of Private IP Addresses assigned to this Virtual Machine.
	privateIpAddresses?: [...null | string] @go(PrivateIPAddresses,[]*string)

	// Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.
	provisionVmAgent?: null | bool @go(ProvisionVMAgent,*bool)

	// The ID of the Proximity Placement Group which the Virtual Machine should be assigned to.
	proximityPlacementGroupId?: null | string @go(ProximityPlacementGroupID,*string)

	// The Primary Public IP Address assigned to this Virtual Machine.
	publicIpAddress?: null | string @go(PublicIPAddress,*string)

	// A list of the Public IP Addresses assigned to this Virtual Machine.
	publicIpAddresses?: [...null | string] @go(PublicIPAddresses,[]*string)

	// The name of the Resource Group in which the Linux Virtual Machine should be exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more secret blocks as defined below.
	secret?: [...#SecretObservation] @go(Secret,[]SecretObservation)

	// Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
	secureBootEnabled?: null | bool @go(SecureBootEnabled,*bool)

	// The SKU which should be used for this Virtual Machine, such as Standard_F2.
	size?: null | string @go(Size,*string)

	// The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include Image IDs, Shared Image IDs, Shared Image Version IDs, Community Gallery Image IDs, Community Gallery Image Version IDs, Shared Gallery Image IDs and Shared Gallery Image Version IDs.
	sourceImageId?: null | string @go(SourceImageID,*string)

	// A source_image_reference block as defined below. Changing this forces a new resource to be created.
	sourceImageReference?: [...#SourceImageReferenceObservation] @go(SourceImageReference,[]SourceImageReferenceObservation)

	// A mapping of tags which should be assigned to this Virtual Machine.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A termination_notification block as defined below.
	terminationNotification?: [...#TerminationNotificationObservation] @go(TerminationNotification,[]TerminationNotificationObservation)

	// The Base64-Encoded User Data which should be used for this Virtual Machine.
	userData?: null | string @go(UserData,*string)

	// A 128-bit identifier which uniquely identifies this Virtual Machine.
	virtualMachineId?: null | string @go(VirtualMachineID,*string)

	// Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within. Changing this forces a new resource to be created.
	virtualMachineScaleSetId?: null | string @go(VirtualMachineScaleSetID,*string)

	// Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
	vtpmEnabled?: null | bool @go(VtpmEnabled,*bool)

	// Specifies the Availability Zones in which this Linux Virtual Machine should be located. Changing this forces a new Linux Virtual Machine to be created.
	zone?: null | string @go(Zone,*string)
}

#LinuxVirtualMachineOsDiskObservation: {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.
	caching?: null | string @go(Caching,*string)

	// A diff_disk_settings block as defined above. Changing this forces a new resource to be created.
	diffDiskSettings?: [...#DiffDiskSettingsObservation] @go(DiffDiskSettings,[]DiffDiskSettingsObservation)

	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id.
	diskEncryptionSetId?: null | string @go(DiskEncryptionSetID,*string)

	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
	diskSizeGb?: null | float64 @go(DiskSizeGb,*float64)

	// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
	secureVmDiskEncryptionSetId?: null | string @go(SecureVMDiskEncryptionSetID,*string)

	// Encryption Type when the Virtual Machine is a Confidential VM. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.
	securityEncryptionType?: null | string @go(SecurityEncryptionType,*string)

	// The Type of Storage Account which should back this the Internal OS Disk. Possible values are Standard_LRS, StandardSSD_LRS, Premium_LRS, StandardSSD_ZRS and Premium_ZRS. Changing this forces a new resource to be created.
	storageAccountType?: null | string @go(StorageAccountType,*string)

	// Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
	writeAcceleratorEnabled?: null | bool @go(WriteAcceleratorEnabled,*bool)
}

#LinuxVirtualMachineOsDiskParameters: {
	// The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.
	// +kubebuilder:validation:Required
	caching?: null | string @go(Caching,*string)

	// A diff_disk_settings block as defined above. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	diffDiskSettings?: [...#DiffDiskSettingsParameters] @go(DiffDiskSettings,[]DiffDiskSettingsParameters)

	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id.
	// +kubebuilder:validation:Optional
	diskEncryptionSetId?: null | string @go(DiskEncryptionSetID,*string)

	// The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.
	// +kubebuilder:validation:Optional
	diskSizeGb?: null | float64 @go(DiskSizeGb,*float64)

	// The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	secureVmDiskEncryptionSetId?: null | string @go(SecureVMDiskEncryptionSetID,*string)

	// Encryption Type when the Virtual Machine is a Confidential VM. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	securityEncryptionType?: null | string @go(SecurityEncryptionType,*string)

	// The Type of Storage Account which should back this the Internal OS Disk. Possible values are Standard_LRS, StandardSSD_LRS, Premium_LRS, StandardSSD_ZRS and Premium_ZRS. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	storageAccountType?: null | string @go(StorageAccountType,*string)

	// Should Write Accelerator be Enabled for this OS Disk? Defaults to false.
	// +kubebuilder:validation:Optional
	writeAcceleratorEnabled?: null | bool @go(WriteAcceleratorEnabled,*bool)
}

#LinuxVirtualMachineParameters: {
	// A additional_capabilities block as defined below.
	// +kubebuilder:validation:Optional
	additionalCapabilities?: [...#AdditionalCapabilitiesParameters] @go(AdditionalCapabilities,[]AdditionalCapabilitiesParameters)

	// One or more admin_ssh_key blocks as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	adminSshKey?: [...#AdminSSHKeyParameters] @go(AdminSSHKey,[]AdminSSHKeyParameters)

	// The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	adminUsername?: null | string @go(AdminUsername,*string)

	// Should Extension Operations be allowed on this Virtual Machine? Defaults to true.
	// +kubebuilder:validation:Optional
	allowExtensionOperations?: null | bool @go(AllowExtensionOperations,*bool)

	// Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	availabilitySetId?: null | string @go(AvailabilitySetID,*string)

	// A boot_diagnostics block as defined below.
	// +kubebuilder:validation:Optional
	bootDiagnostics?: [...#BootDiagnosticsParameters] @go(BootDiagnostics,[]BootDiagnosticsParameters)

	// Specifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.
	// +kubebuilder:validation:Optional
	capacityReservationGroupId?: null | string @go(CapacityReservationGroupID,*string)

	// Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name, then you must specify computer_name. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	computerName?: null | string @go(ComputerName,*string)

	// The ID of a Dedicated Host Group that this Linux Virtual Machine should be run within. Conflicts with dedicated_host_id.
	// +kubebuilder:validation:Optional
	dedicatedHostGroupId?: null | string @go(DedicatedHostGroupID,*string)

	// The ID of a Dedicated Host where this machine should be run on. Conflicts with dedicated_host_group_id.
	// +kubebuilder:validation:Optional
	dedicatedHostId?: null | string @go(DedicatedHostID,*string)

	// Should Password Authentication be disabled on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	disablePasswordAuthentication?: null | bool @go(DisablePasswordAuthentication,*bool)

	// Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine should exist. Changing this forces a new Linux Virtual Machine to be created.
	// +kubebuilder:validation:Optional
	edgeZone?: null | string @go(EdgeZone,*string)

	// Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
	// +kubebuilder:validation:Optional
	encryptionAtHostEnabled?: null | bool @go(EncryptionAtHostEnabled,*bool)

	// Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	evictionPolicy?: null | string @go(EvictionPolicy,*string)

	// Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to 90 minutes (PT1H30M).
	// +kubebuilder:validation:Optional
	extensionsTimeBudget?: null | string @go(ExtensionsTimeBudget,*string)

	// One or more gallery_application blocks as defined below.
	// +kubebuilder:validation:Optional
	galleryApplication?: [...#LinuxVirtualMachineGalleryApplicationParameters] @go(GalleryApplication,[]LinuxVirtualMachineGalleryApplicationParameters)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#LinuxVirtualMachineIdentityParameters] @go(Identity,[]LinuxVirtualMachineIdentityParameters)

	// Specifies the BYOL Type for this Virtual Machine. Possible values are RHEL_BYOS and SLES_BYOS.
	// +kubebuilder:validation:Optional
	licenseType?: null | string @go(LicenseType,*string)

	// The Azure location where the Linux Virtual Machine should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the eviction_policy. Defaults to -1, which means that the Virtual Machine should not be evicted for price reasons.
	// +kubebuilder:validation:Optional
	maxBidPrice?: null | float64 @go(MaxBidPrice,*float64)

	// . A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.NetworkInterface
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	networkInterfaceIds?: [...null | string] @go(NetworkInterfaceIds,[]*string)

	// A os_disk block as defined below.
	// +kubebuilder:validation:Optional
	osDisk?: [...#LinuxVirtualMachineOsDiskParameters] @go(OsDisk,[]LinuxVirtualMachineOsDiskParameters)

	// Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are AutomaticByPlatform or ImageDefault. Defaults to ImageDefault.
	// +kubebuilder:validation:Optional
	patchAssessmentMode?: null | string @go(PatchAssessmentMode,*string)

	// Specifies the mode of in-guest patching to this Linux Virtual Machine. Possible values are AutomaticByPlatform and ImageDefault. Defaults to ImageDefault. For more information on patch modes please see the product documentation.
	// +kubebuilder:validation:Optional
	patchMode?: null | string @go(PatchMode,*string)

	// A plan block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	plan?: [...#PlanParameters] @go(Plan,[]PlanParameters)

	// Specifies the Platform Fault Domain in which this Linux Virtual Machine should be created. Defaults to -1, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Linux Virtual Machine to be created.
	// +kubebuilder:validation:Optional
	platformFaultDomain?: null | float64 @go(PlatformFaultDomain,*float64)

	// Specifies the priority of this Virtual Machine. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	priority?: null | string @go(Priority,*string)

	// Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	provisionVmAgent?: null | bool @go(ProvisionVMAgent,*bool)

	// The ID of the Proximity Placement Group which the Virtual Machine should be assigned to.
	// +kubebuilder:validation:Optional
	proximityPlacementGroupId?: null | string @go(ProximityPlacementGroupID,*string)

	// The name of the Resource Group in which the Linux Virtual Machine should be exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more secret blocks as defined below.
	// +kubebuilder:validation:Optional
	secret?: [...#SecretParameters] @go(Secret,[]SecretParameters)

	// Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	secureBootEnabled?: null | bool @go(SecureBootEnabled,*bool)

	// The SKU which should be used for this Virtual Machine, such as Standard_F2.
	// +kubebuilder:validation:Optional
	size?: null | string @go(Size,*string)

	// The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include Image IDs, Shared Image IDs, Shared Image Version IDs, Community Gallery Image IDs, Community Gallery Image Version IDs, Shared Gallery Image IDs and Shared Gallery Image Version IDs.
	// +kubebuilder:validation:Optional
	sourceImageId?: null | string @go(SourceImageID,*string)

	// A source_image_reference block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sourceImageReference?: [...#SourceImageReferenceParameters] @go(SourceImageReference,[]SourceImageReferenceParameters)

	// A mapping of tags which should be assigned to this Virtual Machine.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A termination_notification block as defined below.
	// +kubebuilder:validation:Optional
	terminationNotification?: [...#TerminationNotificationParameters] @go(TerminationNotification,[]TerminationNotificationParameters)

	// The Base64-Encoded User Data which should be used for this Virtual Machine.
	// +kubebuilder:validation:Optional
	userData?: null | string @go(UserData,*string)

	// Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	virtualMachineScaleSetId?: null | string @go(VirtualMachineScaleSetID,*string)

	// Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	vtpmEnabled?: null | bool @go(VtpmEnabled,*bool)

	// Specifies the Availability Zones in which this Linux Virtual Machine should be located. Changing this forces a new Linux Virtual Machine to be created.
	// +kubebuilder:validation:Optional
	zone?: null | string @go(Zone,*string)
}

#PlanObservation: {
	// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	product?: null | string @go(Product,*string)

	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	publisher?: null | string @go(Publisher,*string)
}

#PlanParameters: {
	// Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	product?: null | string @go(Product,*string)

	// Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	publisher?: null | string @go(Publisher,*string)
}

#SecretObservation: {
	// One or more certificate blocks as defined above.
	certificate?: [...#CertificateObservation] @go(Certificate,[]CertificateObservation)

	// The ID of the Key Vault from which all Secrets should be sourced.
	keyVaultId?: null | string @go(KeyVaultID,*string)
}

#SecretParameters: {
	// One or more certificate blocks as defined above.
	// +kubebuilder:validation:Required
	certificate: [...#CertificateParameters] @go(Certificate,[]CertificateParameters)

	// The ID of the Key Vault from which all Secrets should be sourced.
	// +kubebuilder:validation:Required
	keyVaultId?: null | string @go(KeyVaultID,*string)
}

#SourceImageReferenceObservation: {
	// Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
	offer?: null | string @go(Offer,*string)

	// Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
	publisher?: null | string @go(Publisher,*string)

	// Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
	version?: null | string @go(Version,*string)
}

#SourceImageReferenceParameters: {
	// Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	offer?: null | string @go(Offer,*string)

	// Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	publisher?: null | string @go(Publisher,*string)

	// Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	sku?: null | string @go(Sku,*string)

	// Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	version?: null | string @go(Version,*string)
}

#TerminationNotificationObservation: {
	// Should the termination notification be enabled on this Virtual Machine?
	enabled?: null | bool @go(Enabled,*bool)

	// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
	timeout?: null | string @go(Timeout,*string)
}

#TerminationNotificationParameters: {
	// Should the termination notification be enabled on this Virtual Machine?
	// +kubebuilder:validation:Required
	enabled?: null | bool @go(Enabled,*bool)

	// Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.
	// +kubebuilder:validation:Optional
	timeout?: null | string @go(Timeout,*string)
}

// LinuxVirtualMachineSpec defines the desired state of LinuxVirtualMachine
#LinuxVirtualMachineSpec: {
	forProvider: #LinuxVirtualMachineParameters @go(ForProvider)
}

// LinuxVirtualMachineStatus defines the observed state of LinuxVirtualMachine.
#LinuxVirtualMachineStatus: {
	atProvider?: #LinuxVirtualMachineObservation @go(AtProvider)
}

// LinuxVirtualMachine is the Schema for the LinuxVirtualMachines API. Manages a Linux Virtual Machine.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LinuxVirtualMachine: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.adminUsername)",message="adminUsername is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.osDisk)",message="osDisk is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.size)",message="size is a required parameter"
	spec:    #LinuxVirtualMachineSpec   @go(Spec)
	status?: #LinuxVirtualMachineStatus @go(Status)
}

// LinuxVirtualMachineList contains a list of LinuxVirtualMachines
#LinuxVirtualMachineList: {
	items: [...#LinuxVirtualMachine] @go(Items,[]LinuxVirtualMachine)
}
