// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/compute/v1beta1

package v1beta1

#ManagedDiskSASTokenObservation: {
	// The level of access required on the disk. Supported are Read, Write. Changing this forces a new resource to be created.
	accessLevel?: null | string @go(AccessLevel,*string)

	// The duration for which the export should be allowed. Should be between 30 & 4294967295 seconds. Changing this forces a new resource to be created.
	durationInSeconds?: null | float64 @go(DurationInSeconds,*float64)

	// The ID of the Disk Export resource.
	id?: null | string @go(ID,*string)

	// The ID of an existing Managed Disk which should be exported. Changing this forces a new resource to be created.
	managedDiskId?: null | string @go(ManagedDiskID,*string)
}

#ManagedDiskSASTokenParameters: {
	// The level of access required on the disk. Supported are Read, Write. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	accessLevel?: null | string @go(AccessLevel,*string)

	// The duration for which the export should be allowed. Should be between 30 & 4294967295 seconds. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	durationInSeconds?: null | float64 @go(DurationInSeconds,*float64)

	// The ID of an existing Managed Disk which should be exported. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.ManagedDisk
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	managedDiskId?: null | string @go(ManagedDiskID,*string)
}

// ManagedDiskSASTokenSpec defines the desired state of ManagedDiskSASToken
#ManagedDiskSASTokenSpec: {
	forProvider: #ManagedDiskSASTokenParameters @go(ForProvider)
}

// ManagedDiskSASTokenStatus defines the observed state of ManagedDiskSASToken.
#ManagedDiskSASTokenStatus: {
	atProvider?: #ManagedDiskSASTokenObservation @go(AtProvider)
}

// ManagedDiskSASToken is the Schema for the ManagedDiskSASTokens API. Manages a Disk SAS Token.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ManagedDiskSASToken: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.accessLevel)",message="accessLevel is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.durationInSeconds)",message="durationInSeconds is a required parameter"
	spec:    #ManagedDiskSASTokenSpec   @go(Spec)
	status?: #ManagedDiskSASTokenStatus @go(Status)
}

// ManagedDiskSASTokenList contains a list of ManagedDiskSASTokens
#ManagedDiskSASTokenList: {
	items: [...#ManagedDiskSASToken] @go(Items,[]ManagedDiskSASToken)
}
