// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/compute/v1beta1

package v1beta1

#SSHPublicKeyObservation: {
	// The ID of the SSH Public Key.
	id?: null | string @go(ID,*string)

	// The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	location?: null | string @go(Location,*string)

	// SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
	publicKey?: null | string @go(PublicKey,*string)

	// The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the SSH Public Key.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SSHPublicKeyParameters: {
	// The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
	// +kubebuilder:validation:Optional
	publicKey?: null | string @go(PublicKey,*string)

	// The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the SSH Public Key.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// SSHPublicKeySpec defines the desired state of SSHPublicKey
#SSHPublicKeySpec: {
	forProvider: #SSHPublicKeyParameters @go(ForProvider)
}

// SSHPublicKeyStatus defines the observed state of SSHPublicKey.
#SSHPublicKeyStatus: {
	atProvider?: #SSHPublicKeyObservation @go(AtProvider)
}

// SSHPublicKey is the Schema for the SSHPublicKeys API. Manages a SSH Public Key.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SSHPublicKey: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.publicKey)",message="publicKey is a required parameter"
	spec:    #SSHPublicKeySpec   @go(Spec)
	status?: #SSHPublicKeyStatus @go(Status)
}

// SSHPublicKeyList contains a list of SSHPublicKeys
#SSHPublicKeyList: {
	items: [...#SSHPublicKey] @go(Items,[]SSHPublicKey)
}
