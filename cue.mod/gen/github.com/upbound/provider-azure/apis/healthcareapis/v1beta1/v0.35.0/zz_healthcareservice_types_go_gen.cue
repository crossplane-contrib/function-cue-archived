// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/healthcareapis/v1beta1

package v1beta1

#AuthenticationConfigurationInitParameters: {
	// The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
	audience?: null | string @go(Audience,*string)

	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	authority?: null | string @go(Authority,*string)

	// (Boolean) Enables the 'SMART on FHIR' option for mobile and web implementations.
	smartProxyEnabled?: null | bool @go(SmartProxyEnabled,*bool)
}

#AuthenticationConfigurationObservation: {
	// The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
	audience?: null | string @go(Audience,*string)

	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	authority?: null | string @go(Authority,*string)

	// (Boolean) Enables the 'SMART on FHIR' option for mobile and web implementations.
	smartProxyEnabled?: null | bool @go(SmartProxyEnabled,*bool)
}

#AuthenticationConfigurationParameters: {
	// The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
	// +kubebuilder:validation:Optional
	audience?: null | string @go(Audience,*string)

	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	// +kubebuilder:validation:Optional
	authority?: null | string @go(Authority,*string)

	// (Boolean) Enables the 'SMART on FHIR' option for mobile and web implementations.
	// +kubebuilder:validation:Optional
	smartProxyEnabled?: null | bool @go(SmartProxyEnabled,*bool)
}

#CorsConfigurationInitParameters: {
	// (Boolean) If credentials are allowed via CORS.
	allowCredentials?: null | bool @go(AllowCredentials,*bool)

	// A set of headers to be allowed via CORS.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// The methods to be allowed via CORS. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PATCH and PUT.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A set of origins to be allowed via CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// The max age to be allowed via CORS.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CorsConfigurationObservation: {
	// (Boolean) If credentials are allowed via CORS.
	allowCredentials?: null | bool @go(AllowCredentials,*bool)

	// A set of headers to be allowed via CORS.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// The methods to be allowed via CORS. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PATCH and PUT.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A set of origins to be allowed via CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// The max age to be allowed via CORS.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CorsConfigurationParameters: {
	// (Boolean) If credentials are allowed via CORS.
	// +kubebuilder:validation:Optional
	allowCredentials?: null | bool @go(AllowCredentials,*bool)

	// A set of headers to be allowed via CORS.
	// +kubebuilder:validation:Optional
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// The methods to be allowed via CORS. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PATCH and PUT.
	// +kubebuilder:validation:Optional
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A set of origins to be allowed via CORS.
	// +kubebuilder:validation:Optional
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// The max age to be allowed via CORS.
	// +kubebuilder:validation:Optional
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#HealthcareServiceInitParameters: {
	// A set of Azure object IDs that are allowed to access the Service.
	accessPolicyObjectIds?: [...null | string] @go(AccessPolicyObjectIds,[]*string)

	// An authentication_configuration block as defined below.
	authenticationConfiguration?: [...#AuthenticationConfigurationInitParameters] @go(AuthenticationConfiguration,[]AuthenticationConfigurationInitParameters)

	// A cors_configuration block as defined below.
	corsConfiguration?: [...#CorsConfigurationInitParameters] @go(CorsConfiguration,[]CorsConfigurationInitParameters)

	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	cosmosdbKeyVaultKeyVersionlessId?: null | string @go(CosmosDBKeyVaultKeyVersionlessID,*string)

	// The provisioned throughput for the backing database. Range of 400-100000. Defaults to 1000.
	cosmosdbThroughput?: null | float64 @go(CosmosDBThroughput,*float64)

	// The type of the service. Values at time of publication are: fhir, fhir-Stu3 and fhir-R4. Default value is fhir.
	kind?: null | string @go(Kind,*string)

	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Whether public network access is enabled or disabled for this service instance. Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#HealthcareServiceObservation: {
	// A set of Azure object IDs that are allowed to access the Service.
	accessPolicyObjectIds?: [...null | string] @go(AccessPolicyObjectIds,[]*string)

	// An authentication_configuration block as defined below.
	authenticationConfiguration?: [...#AuthenticationConfigurationObservation] @go(AuthenticationConfiguration,[]AuthenticationConfigurationObservation)

	// A cors_configuration block as defined below.
	corsConfiguration?: [...#CorsConfigurationObservation] @go(CorsConfiguration,[]CorsConfigurationObservation)

	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	cosmosdbKeyVaultKeyVersionlessId?: null | string @go(CosmosDBKeyVaultKeyVersionlessID,*string)

	// The provisioned throughput for the backing database. Range of 400-100000. Defaults to 1000.
	cosmosdbThroughput?: null | float64 @go(CosmosDBThroughput,*float64)

	// The ID of the Healthcare Service.
	id?: null | string @go(ID,*string)

	// The type of the service. Values at time of publication are: fhir, fhir-Stu3 and fhir-R4. Default value is fhir.
	kind?: null | string @go(Kind,*string)

	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Whether public network access is enabled or disabled for this service instance. Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#HealthcareServiceParameters: {
	// A set of Azure object IDs that are allowed to access the Service.
	// +kubebuilder:validation:Optional
	accessPolicyObjectIds?: [...null | string] @go(AccessPolicyObjectIds,[]*string)

	// An authentication_configuration block as defined below.
	// +kubebuilder:validation:Optional
	authenticationConfiguration?: [...#AuthenticationConfigurationParameters] @go(AuthenticationConfiguration,[]AuthenticationConfigurationParameters)

	// A cors_configuration block as defined below.
	// +kubebuilder:validation:Optional
	corsConfiguration?: [...#CorsConfigurationParameters] @go(CorsConfiguration,[]CorsConfigurationParameters)

	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	cosmosdbKeyVaultKeyVersionlessId?: null | string @go(CosmosDBKeyVaultKeyVersionlessID,*string)

	// The provisioned throughput for the backing database. Range of 400-100000. Defaults to 1000.
	// +kubebuilder:validation:Optional
	cosmosdbThroughput?: null | float64 @go(CosmosDBThroughput,*float64)

	// The type of the service. Values at time of publication are: fhir, fhir-Stu3 and fhir-R4. Default value is fhir.
	// +kubebuilder:validation:Optional
	kind?: null | string @go(Kind,*string)

	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Whether public network access is enabled or disabled for this service instance. Defaults to true.
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// HealthcareServiceSpec defines the desired state of HealthcareService
#HealthcareServiceSpec: {
	forProvider: #HealthcareServiceParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #HealthcareServiceInitParameters @go(InitProvider)
}

// HealthcareServiceStatus defines the observed state of HealthcareService.
#HealthcareServiceStatus: {
	atProvider?: #HealthcareServiceObservation @go(AtProvider)
}

// HealthcareService is the Schema for the HealthcareServices API. Manages a Healthcare Service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#HealthcareService: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	spec:    #HealthcareServiceSpec   @go(Spec)
	status?: #HealthcareServiceStatus @go(Status)
}

// HealthcareServiceList contains a list of HealthcareServices
#HealthcareServiceList: {
	items: [...#HealthcareService] @go(Items,[]HealthcareService)
}
