// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/healthcareapis/v1beta1

package v1beta1

#CorsInitParameters: {
	// A set of headers to be allowed via CORS.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// The methods to be allowed via CORS. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PATCH and PUT.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A set of origins to be allowed via CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// If credentials are allowed via CORS.
	credentialsAllowed?: null | bool @go(CredentialsAllowed,*bool)

	// The max age to be allowed via CORS.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CorsObservation: {
	// A set of headers to be allowed via CORS.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// The methods to be allowed via CORS. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PATCH and PUT.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A set of origins to be allowed via CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// If credentials are allowed via CORS.
	credentialsAllowed?: null | bool @go(CredentialsAllowed,*bool)

	// The max age to be allowed via CORS.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CorsParameters: {
	// A set of headers to be allowed via CORS.
	// +kubebuilder:validation:Optional
	allowedHeaders: [...null | string] @go(AllowedHeaders,[]*string)

	// The methods to be allowed via CORS. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PATCH and PUT.
	// +kubebuilder:validation:Optional
	allowedMethods: [...null | string] @go(AllowedMethods,[]*string)

	// A set of origins to be allowed via CORS.
	// +kubebuilder:validation:Optional
	allowedOrigins: [...null | string] @go(AllowedOrigins,[]*string)

	// If credentials are allowed via CORS.
	// +kubebuilder:validation:Optional
	credentialsAllowed?: null | bool @go(CredentialsAllowed,*bool)

	// The max age to be allowed via CORS.
	// +kubebuilder:validation:Optional
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#HealthcareFHIRServiceAuthenticationInitParameters: {
	// The intended audience to receive authentication tokens for the service. The default value is https://<name>.fhir.azurehealthcareapis.com.
	audience?: null | string @go(Audience,*string)

	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	authority?: null | string @go(Authority,*string)

	// Whether smart proxy is enabled.
	smartProxyEnabled?: null | bool @go(SmartProxyEnabled,*bool)
}

#HealthcareFHIRServiceAuthenticationObservation: {
	// The intended audience to receive authentication tokens for the service. The default value is https://<name>.fhir.azurehealthcareapis.com.
	audience?: null | string @go(Audience,*string)

	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	authority?: null | string @go(Authority,*string)

	// Whether smart proxy is enabled.
	smartProxyEnabled?: null | bool @go(SmartProxyEnabled,*bool)
}

#HealthcareFHIRServiceAuthenticationParameters: {
	// The intended audience to receive authentication tokens for the service. The default value is https://<name>.fhir.azurehealthcareapis.com.
	// +kubebuilder:validation:Optional
	audience?: null | string @go(Audience,*string)

	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	// +kubebuilder:validation:Optional
	authority?: null | string @go(Authority,*string)

	// Whether smart proxy is enabled.
	// +kubebuilder:validation:Optional
	smartProxyEnabled?: null | bool @go(SmartProxyEnabled,*bool)
}

#HealthcareFHIRServiceIdentityInitParameters: {
	// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when type is set to UserAssigned.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The type of managed identity to assign. Possible values are UserAssigned and SystemAssigned
	type?: null | string @go(Type,*string)
}

#HealthcareFHIRServiceIdentityObservation: {
	// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when type is set to UserAssigned.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The ID of the Healthcare FHIR Service.
	principalId?: null | string @go(PrincipalID,*string)

	// The ID of the Healthcare FHIR Service.
	tenantId?: null | string @go(TenantID,*string)

	// The type of managed identity to assign. Possible values are UserAssigned and SystemAssigned
	type?: null | string @go(Type,*string)
}

#HealthcareFHIRServiceIdentityParameters: {
	// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when type is set to UserAssigned.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The type of managed identity to assign. Possible values are UserAssigned and SystemAssigned
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#HealthcareFHIRServiceInitParameters: {
	// A list of the access policies of the service instance.
	accessPolicyObjectIds?: [...null | string] @go(AccessPolicyObjectIds,[]*string)

	// An authentication block as defined below.
	authentication?: [...#HealthcareFHIRServiceAuthenticationInitParameters] @go(Authentication,[]HealthcareFHIRServiceAuthenticationInitParameters)

	// Specifies the name of the storage account which the operation configuration information is exported to.
	configurationExportStorageAccountName?: null | string @go(ConfigurationExportStorageAccountName,*string)

	// A list of azure container registry settings used for convert data operation of the service instance.
	containerRegistryLoginServerUrl?: [...null | string] @go(ContainerRegistryLoginServerURL,[]*string)

	// A cors block as defined below.
	cors?: [...#CorsInitParameters] @go(Cors,[]CorsInitParameters)

	// An identity block as defined below.
	identity?: [...#HealthcareFHIRServiceIdentityInitParameters] @go(Identity,[]HealthcareFHIRServiceIdentityInitParameters)

	// Specifies the kind of the Healthcare FHIR Service. Possible values are: fhir-Stu3 and fhir-R4. Defaults to fhir-R4. Changing this forces a new Healthcare FHIR Service to be created.
	kind?: null | string @go(Kind,*string)

	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	location?: null | string @go(Location,*string)

	// A list of objects describing OCI artifacts for export as defined below.
	ociArtifact?: [...#OciArtifactInitParameters] @go(OciArtifact,[]OciArtifactInitParameters)

	// A mapping of tags to assign to the Healthcare FHIR Service.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#HealthcareFHIRServiceObservation: {
	// A list of the access policies of the service instance.
	accessPolicyObjectIds?: [...null | string] @go(AccessPolicyObjectIds,[]*string)

	// An authentication block as defined below.
	authentication?: [...#HealthcareFHIRServiceAuthenticationObservation] @go(Authentication,[]HealthcareFHIRServiceAuthenticationObservation)

	// Specifies the name of the storage account which the operation configuration information is exported to.
	configurationExportStorageAccountName?: null | string @go(ConfigurationExportStorageAccountName,*string)

	// A list of azure container registry settings used for convert data operation of the service instance.
	containerRegistryLoginServerUrl?: [...null | string] @go(ContainerRegistryLoginServerURL,[]*string)

	// A cors block as defined below.
	cors?: [...#CorsObservation] @go(Cors,[]CorsObservation)

	// The ID of the Healthcare FHIR Service.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#HealthcareFHIRServiceIdentityObservation] @go(Identity,[]HealthcareFHIRServiceIdentityObservation)

	// Specifies the kind of the Healthcare FHIR Service. Possible values are: fhir-Stu3 and fhir-R4. Defaults to fhir-R4. Changing this forces a new Healthcare FHIR Service to be created.
	kind?: null | string @go(Kind,*string)

	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	location?: null | string @go(Location,*string)

	// A list of objects describing OCI artifacts for export as defined below.
	ociArtifact?: [...#OciArtifactObservation] @go(OciArtifact,[]OciArtifactObservation)

	// Whether public networks access is enabled.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the Healthcare FHIR Service.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
	workspaceId?: null | string @go(WorkspaceID,*string)
}

#HealthcareFHIRServiceParameters: {
	// A list of the access policies of the service instance.
	// +kubebuilder:validation:Optional
	accessPolicyObjectIds?: [...null | string] @go(AccessPolicyObjectIds,[]*string)

	// An authentication block as defined below.
	// +kubebuilder:validation:Optional
	authentication?: [...#HealthcareFHIRServiceAuthenticationParameters] @go(Authentication,[]HealthcareFHIRServiceAuthenticationParameters)

	// Specifies the name of the storage account which the operation configuration information is exported to.
	// +kubebuilder:validation:Optional
	configurationExportStorageAccountName?: null | string @go(ConfigurationExportStorageAccountName,*string)

	// A list of azure container registry settings used for convert data operation of the service instance.
	// +kubebuilder:validation:Optional
	containerRegistryLoginServerUrl?: [...null | string] @go(ContainerRegistryLoginServerURL,[]*string)

	// A cors block as defined below.
	// +kubebuilder:validation:Optional
	cors?: [...#CorsParameters] @go(Cors,[]CorsParameters)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#HealthcareFHIRServiceIdentityParameters] @go(Identity,[]HealthcareFHIRServiceIdentityParameters)

	// Specifies the kind of the Healthcare FHIR Service. Possible values are: fhir-Stu3 and fhir-R4. Defaults to fhir-R4. Changing this forces a new Healthcare FHIR Service to be created.
	// +kubebuilder:validation:Optional
	kind?: null | string @go(Kind,*string)

	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// A list of objects describing OCI artifacts for export as defined below.
	// +kubebuilder:validation:Optional
	ociArtifact?: [...#OciArtifactParameters] @go(OciArtifact,[]OciArtifactParameters)

	// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the Healthcare FHIR Service.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/healthcareapis/v1beta1.HealthcareWorkspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	workspaceId?: null | string @go(WorkspaceID,*string)
}

#OciArtifactInitParameters: {
	// A digest of an image within Azure container registry used for export operations of the service instance to narrow the artifacts down.
	digest?: null | string @go(Digest,*string)

	// An image within Azure container registry used for export operations of the service instance.
	imageName?: null | string @go(ImageName,*string)

	// An Azure container registry used for export operations of the service instance.
	loginServer?: null | string @go(LoginServer,*string)
}

#OciArtifactObservation: {
	// A digest of an image within Azure container registry used for export operations of the service instance to narrow the artifacts down.
	digest?: null | string @go(Digest,*string)

	// An image within Azure container registry used for export operations of the service instance.
	imageName?: null | string @go(ImageName,*string)

	// An Azure container registry used for export operations of the service instance.
	loginServer?: null | string @go(LoginServer,*string)
}

#OciArtifactParameters: {
	// A digest of an image within Azure container registry used for export operations of the service instance to narrow the artifacts down.
	// +kubebuilder:validation:Optional
	digest?: null | string @go(Digest,*string)

	// An image within Azure container registry used for export operations of the service instance.
	// +kubebuilder:validation:Optional
	imageName?: null | string @go(ImageName,*string)

	// An Azure container registry used for export operations of the service instance.
	// +kubebuilder:validation:Optional
	loginServer?: null | string @go(LoginServer,*string)
}

// HealthcareFHIRServiceSpec defines the desired state of HealthcareFHIRService
#HealthcareFHIRServiceSpec: {
	forProvider: #HealthcareFHIRServiceParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #HealthcareFHIRServiceInitParameters @go(InitProvider)
}

// HealthcareFHIRServiceStatus defines the observed state of HealthcareFHIRService.
#HealthcareFHIRServiceStatus: {
	atProvider?: #HealthcareFHIRServiceObservation @go(AtProvider)
}

// HealthcareFHIRService is the Schema for the HealthcareFHIRServices API. Manages a Healthcare FHIR (Fast Healthcare Interoperability Resources) Service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#HealthcareFHIRService: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authentication) || (has(self.initProvider) && has(self.initProvider.authentication))",message="spec.forProvider.authentication is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #HealthcareFHIRServiceSpec   @go(Spec)
	status?: #HealthcareFHIRServiceStatus @go(Status)
}

// HealthcareFHIRServiceList contains a list of HealthcareFHIRServices
#HealthcareFHIRServiceList: {
	items: [...#HealthcareFHIRService] @go(Items,[]HealthcareFHIRService)
}
