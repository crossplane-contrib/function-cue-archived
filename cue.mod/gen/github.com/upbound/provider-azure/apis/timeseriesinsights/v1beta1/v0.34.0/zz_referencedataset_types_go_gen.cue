// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/timeseriesinsights/v1beta1

package v1beta1

#KeyPropertyObservation: {
	// The name of the key property. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The data type of the key property. Valid values include Bool, DateTime, Double, String. Changing this forces a new resource to be created.
	type?: null | string @go(Type,*string)
}

#KeyPropertyParameters: {
	// The name of the key property. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The data type of the key property. Valid values include Bool, DateTime, Double, String. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#ReferenceDataSetObservation: {
	// The comparison behavior that will be used to compare keys. Valid values include Ordinal and OrdinalIgnoreCase. Defaults to Ordinal. Changing this forces a new resource to be created.
	dataStringComparisonBehavior?: null | string @go(DataStringComparisonBehavior,*string)

	// The ID of the IoT Time Series Insights Reference Data Set.
	id?: null | string @go(ID,*string)

	// A key_property block as defined below. Changing this forces a new resource to be created.
	keyProperty?: [...#KeyPropertyObservation] @go(KeyProperty,[]KeyPropertyObservation)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The resource ID of the Azure IoT Time Series Insights Environment in which to create the Azure IoT Time Series Insights Reference Data Set. Changing this forces a new resource to be created.
	timeSeriesInsightsEnvironmentId?: null | string @go(TimeSeriesInsightsEnvironmentID,*string)
}

#ReferenceDataSetParameters: {
	// The comparison behavior that will be used to compare keys. Valid values include Ordinal and OrdinalIgnoreCase. Defaults to Ordinal. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	dataStringComparisonBehavior?: null | string @go(DataStringComparisonBehavior,*string)

	// A key_property block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	keyProperty?: [...#KeyPropertyParameters] @go(KeyProperty,[]KeyPropertyParameters)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The resource ID of the Azure IoT Time Series Insights Environment in which to create the Azure IoT Time Series Insights Reference Data Set. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/timeseriesinsights/v1beta1.StandardEnvironment
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	timeSeriesInsightsEnvironmentId?: null | string @go(TimeSeriesInsightsEnvironmentID,*string)
}

// ReferenceDataSetSpec defines the desired state of ReferenceDataSet
#ReferenceDataSetSpec: {
	forProvider: #ReferenceDataSetParameters @go(ForProvider)
}

// ReferenceDataSetStatus defines the observed state of ReferenceDataSet.
#ReferenceDataSetStatus: {
	atProvider?: #ReferenceDataSetObservation @go(AtProvider)
}

// ReferenceDataSet is the Schema for the ReferenceDataSets API. Manages an Azure IoT Time Series Insights Reference Data Set.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ReferenceDataSet: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.keyProperty)",message="keyProperty is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	spec:    #ReferenceDataSetSpec   @go(Spec)
	status?: #ReferenceDataSetStatus @go(Status)
}

// ReferenceDataSetList contains a list of ReferenceDataSets
#ReferenceDataSetList: {
	items: [...#ReferenceDataSet] @go(Items,[]ReferenceDataSet)
}
