// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/storage/v1beta1

package v1beta1

#AccountInitParameters: {
	// Defines the access tier for BlobStorage, FileStorage and StorageV2 accounts. Valid options are Hot and Cool, defaults to Hot.
	accessTier?: null | string @go(AccessTier,*string)

	// Defines the Kind of account. Valid options are BlobStorage, BlockBlobStorage, FileStorage, Storage and StorageV2. Defaults to StorageV2.
	accountKind?: null | string @go(AccountKind,*string)

	// Defines the type of replication to use for this storage account. Valid options are LRS, GRS, RAGRS, ZRS, GZRS and RAGZRS.
	accountReplicationType?: null | string @go(AccountReplicationType,*string)

	// Defines the Tier to use for this storage account. Valid options are Standard and Premium. For BlockBlobStorage and FileStorage accounts only Premium is valid. Changing this forces a new resource to be created.
	accountTier?: null | string @go(AccountTier,*string)

	// Allow or disallow nested items within this Account to opt into being public. Defaults to true.
	allowNestedItemsToBePublic?: null | bool @go(AllowNestedItemsToBePublic,*bool)

	// Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are AAD and PrivateLink.
	allowedCopyScope?: null | string @go(AllowedCopyScope,*string)

	// A azure_files_authentication block as defined below.
	azureFilesAuthentication?: [...#AzureFilesAuthenticationInitParameters] @go(AzureFilesAuthentication,[]AzureFilesAuthenticationInitParameters)

	// A blob_properties block as defined below.
	blobProperties?: [...#BlobPropertiesInitParameters] @go(BlobProperties,[]BlobPropertiesInitParameters)

	// Should cross Tenant replication be enabled? Defaults to true.
	crossTenantReplicationEnabled?: null | bool @go(CrossTenantReplicationEnabled,*bool)

	// A custom_domain block as documented below.
	customDomain?: [...#CustomDomainInitParameters] @go(CustomDomain,[]CustomDomainInitParameters)

	// A customer_managed_key block as documented below.
	customerManagedKey?: [...#CustomerManagedKeyInitParameters] @go(CustomerManagedKey,[]CustomerManagedKeyInitParameters)

	// Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is false
	defaultToOauthAuthentication?: null | bool @go(DefaultToOauthAuthentication,*bool)

	// Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
	edgeZone?: null | string @go(EdgeZone,*string)

	// Boolean flag which forces HTTPS if enabled, see here for more information. Defaults to true.
	enableHttpsTrafficOnly?: null | bool @go(EnableHTTPSTrafficOnly,*bool)

	// An identity block as defined below.
	identity?: [...#IdentityInitParameters] @go(Identity,[]IdentityInitParameters)

	// An immutability_policy block as defined below. Changing this forces a new resource to be created.
	immutabilityPolicy?: [...#ImmutabilityPolicyInitParameters] @go(ImmutabilityPolicy,[]ImmutabilityPolicyInitParameters)

	// Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to false.
	infrastructureEncryptionEnabled?: null | bool @go(InfrastructureEncryptionEnabled,*bool)

	// Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 (see here for more information). Changing this forces a new resource to be created.
	isHnsEnabled?: null | bool @go(IsHnsEnabled,*bool)

	// Is Large File Share Enabled?
	largeFileShareEnabled?: null | bool @go(LargeFileShareEnabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The minimum supported TLS version for the storage account. Possible values are TLS1_0, TLS1_1, and TLS1_2. Defaults to TLS1_2 for new storage accounts.
	minTlsVersion?: null | string @go(MinTLSVersion,*string)

	// A network_rules block as documented below.
	networkRules?: [...#NetworkRulesInitParameters] @go(NetworkRules,[]NetworkRulesInitParameters)

	// Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to false.
	nfsv3Enabled?: null | bool @go(Nfsv3Enabled,*bool)

	// Whether the public network access is enabled? Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The encryption type of the queue service. Possible values are Service and Account. Changing this forces a new resource to be created. Default value is Service.
	queueEncryptionKeyType?: null | string @go(QueueEncryptionKeyType,*string)

	// A queue_properties block as defined below.
	queueProperties?: [...#QueuePropertiesInitParameters] @go(QueueProperties,[]QueuePropertiesInitParameters)

	// A routing block as defined below.
	routing?: [...#RoutingInitParameters] @go(Routing,[]RoutingInitParameters)

	// A sas_policy block as defined below.
	sasPolicy?: [...#SASPolicyInitParameters] @go(SASPolicy,[]SASPolicyInitParameters)

	// Boolean, enable SFTP for the storage account
	sftpEnabled?: null | bool @go(SFTPEnabled,*bool)

	// A share_properties block as defined below.
	shareProperties?: [...#SharePropertiesInitParameters] @go(ShareProperties,[]SharePropertiesInitParameters)

	// Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is true.
	sharedAccessKeyEnabled?: null | bool @go(SharedAccessKeyEnabled,*bool)

	// A static_website block as defined below.
	staticWebsite?: [...#StaticWebsiteInitParameters] @go(StaticWebsite,[]StaticWebsiteInitParameters)

	// The encryption type of the table service. Possible values are Service and Account. Changing this forces a new resource to be created. Default value is Service.
	tableEncryptionKeyType?: null | string @go(TableEncryptionKeyType,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#AccountObservation: {
	// Defines the access tier for BlobStorage, FileStorage and StorageV2 accounts. Valid options are Hot and Cool, defaults to Hot.
	accessTier?: null | string @go(AccessTier,*string)

	// Defines the Kind of account. Valid options are BlobStorage, BlockBlobStorage, FileStorage, Storage and StorageV2. Defaults to StorageV2.
	accountKind?: null | string @go(AccountKind,*string)

	// Defines the type of replication to use for this storage account. Valid options are LRS, GRS, RAGRS, ZRS, GZRS and RAGZRS.
	accountReplicationType?: null | string @go(AccountReplicationType,*string)

	// Defines the Tier to use for this storage account. Valid options are Standard and Premium. For BlockBlobStorage and FileStorage accounts only Premium is valid. Changing this forces a new resource to be created.
	accountTier?: null | string @go(AccountTier,*string)

	// Allow or disallow nested items within this Account to opt into being public. Defaults to true.
	allowNestedItemsToBePublic?: null | bool @go(AllowNestedItemsToBePublic,*bool)

	// Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are AAD and PrivateLink.
	allowedCopyScope?: null | string @go(AllowedCopyScope,*string)

	// A azure_files_authentication block as defined below.
	azureFilesAuthentication?: [...#AzureFilesAuthenticationObservation] @go(AzureFilesAuthentication,[]AzureFilesAuthenticationObservation)

	// A blob_properties block as defined below.
	blobProperties?: [...#BlobPropertiesObservation] @go(BlobProperties,[]BlobPropertiesObservation)

	// Should cross Tenant replication be enabled? Defaults to true.
	crossTenantReplicationEnabled?: null | bool @go(CrossTenantReplicationEnabled,*bool)

	// A custom_domain block as documented below.
	customDomain?: [...#CustomDomainObservation] @go(CustomDomain,[]CustomDomainObservation)

	// A customer_managed_key block as documented below.
	customerManagedKey?: [...#CustomerManagedKeyObservation] @go(CustomerManagedKey,[]CustomerManagedKeyObservation)

	// Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is false
	defaultToOauthAuthentication?: null | bool @go(DefaultToOauthAuthentication,*bool)

	// Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
	edgeZone?: null | string @go(EdgeZone,*string)

	// Boolean flag which forces HTTPS if enabled, see here for more information. Defaults to true.
	enableHttpsTrafficOnly?: null | bool @go(EnableHTTPSTrafficOnly,*bool)

	// The ID of the Storage Account.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// An immutability_policy block as defined below. Changing this forces a new resource to be created.
	immutabilityPolicy?: [...#ImmutabilityPolicyObservation] @go(ImmutabilityPolicy,[]ImmutabilityPolicyObservation)

	// Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to false.
	infrastructureEncryptionEnabled?: null | bool @go(InfrastructureEncryptionEnabled,*bool)

	// Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 (see here for more information). Changing this forces a new resource to be created.
	isHnsEnabled?: null | bool @go(IsHnsEnabled,*bool)

	// Is Large File Share Enabled?
	largeFileShareEnabled?: null | bool @go(LargeFileShareEnabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The minimum supported TLS version for the storage account. Possible values are TLS1_0, TLS1_1, and TLS1_2. Defaults to TLS1_2 for new storage accounts.
	minTlsVersion?: null | string @go(MinTLSVersion,*string)

	// A network_rules block as documented below.
	networkRules?: [...#NetworkRulesObservation] @go(NetworkRules,[]NetworkRulesObservation)

	// Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to false.
	nfsv3Enabled?: null | bool @go(Nfsv3Enabled,*bool)

	// The endpoint URL for blob storage in the primary location.
	primaryBlobEndpoint?: null | string @go(PrimaryBlobEndpoint,*string)

	// The hostname with port if applicable for blob storage in the primary location.
	primaryBlobHost?: null | string @go(PrimaryBlobHost,*string)

	// The endpoint URL for DFS storage in the primary location.
	primaryDfsEndpoint?: null | string @go(PrimaryDfsEndpoint,*string)

	// The hostname with port if applicable for DFS storage in the primary location.
	primaryDfsHost?: null | string @go(PrimaryDfsHost,*string)

	// The endpoint URL for file storage in the primary location.
	primaryFileEndpoint?: null | string @go(PrimaryFileEndpoint,*string)

	// The hostname with port if applicable for file storage in the primary location.
	primaryFileHost?: null | string @go(PrimaryFileHost,*string)

	// The primary location of the storage account.
	primaryLocation?: null | string @go(PrimaryLocation,*string)

	// The endpoint URL for queue storage in the primary location.
	primaryQueueEndpoint?: null | string @go(PrimaryQueueEndpoint,*string)

	// The hostname with port if applicable for queue storage in the primary location.
	primaryQueueHost?: null | string @go(PrimaryQueueHost,*string)

	// The endpoint URL for table storage in the primary location.
	primaryTableEndpoint?: null | string @go(PrimaryTableEndpoint,*string)

	// The hostname with port if applicable for table storage in the primary location.
	primaryTableHost?: null | string @go(PrimaryTableHost,*string)

	// The endpoint URL for web storage in the primary location.
	primaryWebEndpoint?: null | string @go(PrimaryWebEndpoint,*string)

	// The hostname with port if applicable for web storage in the primary location.
	primaryWebHost?: null | string @go(PrimaryWebHost,*string)

	// Whether the public network access is enabled? Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The encryption type of the queue service. Possible values are Service and Account. Changing this forces a new resource to be created. Default value is Service.
	queueEncryptionKeyType?: null | string @go(QueueEncryptionKeyType,*string)

	// A queue_properties block as defined below.
	queueProperties?: [...#QueuePropertiesObservation] @go(QueueProperties,[]QueuePropertiesObservation)

	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A routing block as defined below.
	routing?: [...#RoutingObservation] @go(Routing,[]RoutingObservation)

	// A sas_policy block as defined below.
	sasPolicy?: [...#SASPolicyObservation] @go(SASPolicy,[]SASPolicyObservation)

	// Boolean, enable SFTP for the storage account
	sftpEnabled?: null | bool @go(SFTPEnabled,*bool)

	// The endpoint URL for blob storage in the secondary location.
	secondaryBlobEndpoint?: null | string @go(SecondaryBlobEndpoint,*string)

	// The hostname with port if applicable for blob storage in the secondary location.
	secondaryBlobHost?: null | string @go(SecondaryBlobHost,*string)

	// The endpoint URL for DFS storage in the secondary location.
	secondaryDfsEndpoint?: null | string @go(SecondaryDfsEndpoint,*string)

	// The hostname with port if applicable for DFS storage in the secondary location.
	secondaryDfsHost?: null | string @go(SecondaryDfsHost,*string)

	// The endpoint URL for file storage in the secondary location.
	secondaryFileEndpoint?: null | string @go(SecondaryFileEndpoint,*string)

	// The hostname with port if applicable for file storage in the secondary location.
	secondaryFileHost?: null | string @go(SecondaryFileHost,*string)

	// The secondary location of the storage account.
	secondaryLocation?: null | string @go(SecondaryLocation,*string)

	// The endpoint URL for queue storage in the secondary location.
	secondaryQueueEndpoint?: null | string @go(SecondaryQueueEndpoint,*string)

	// The hostname with port if applicable for queue storage in the secondary location.
	secondaryQueueHost?: null | string @go(SecondaryQueueHost,*string)

	// The endpoint URL for table storage in the secondary location.
	secondaryTableEndpoint?: null | string @go(SecondaryTableEndpoint,*string)

	// The hostname with port if applicable for table storage in the secondary location.
	secondaryTableHost?: null | string @go(SecondaryTableHost,*string)

	// The endpoint URL for web storage in the secondary location.
	secondaryWebEndpoint?: null | string @go(SecondaryWebEndpoint,*string)

	// The hostname with port if applicable for web storage in the secondary location.
	secondaryWebHost?: null | string @go(SecondaryWebHost,*string)

	// A share_properties block as defined below.
	shareProperties?: [...#SharePropertiesObservation] @go(ShareProperties,[]SharePropertiesObservation)

	// Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is true.
	sharedAccessKeyEnabled?: null | bool @go(SharedAccessKeyEnabled,*bool)

	// A static_website block as defined below.
	staticWebsite?: [...#StaticWebsiteObservation] @go(StaticWebsite,[]StaticWebsiteObservation)

	// The encryption type of the table service. Possible values are Service and Account. Changing this forces a new resource to be created. Default value is Service.
	tableEncryptionKeyType?: null | string @go(TableEncryptionKeyType,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#AccountParameters: {
	// Defines the access tier for BlobStorage, FileStorage and StorageV2 accounts. Valid options are Hot and Cool, defaults to Hot.
	// +kubebuilder:validation:Optional
	accessTier?: null | string @go(AccessTier,*string)

	// Defines the Kind of account. Valid options are BlobStorage, BlockBlobStorage, FileStorage, Storage and StorageV2. Defaults to StorageV2.
	// +kubebuilder:validation:Optional
	accountKind?: null | string @go(AccountKind,*string)

	// Defines the type of replication to use for this storage account. Valid options are LRS, GRS, RAGRS, ZRS, GZRS and RAGZRS.
	// +kubebuilder:validation:Optional
	accountReplicationType?: null | string @go(AccountReplicationType,*string)

	// Defines the Tier to use for this storage account. Valid options are Standard and Premium. For BlockBlobStorage and FileStorage accounts only Premium is valid. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	accountTier?: null | string @go(AccountTier,*string)

	// Allow or disallow nested items within this Account to opt into being public. Defaults to true.
	// +kubebuilder:validation:Optional
	allowNestedItemsToBePublic?: null | bool @go(AllowNestedItemsToBePublic,*bool)

	// Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are AAD and PrivateLink.
	// +kubebuilder:validation:Optional
	allowedCopyScope?: null | string @go(AllowedCopyScope,*string)

	// A azure_files_authentication block as defined below.
	// +kubebuilder:validation:Optional
	azureFilesAuthentication?: [...#AzureFilesAuthenticationParameters] @go(AzureFilesAuthentication,[]AzureFilesAuthenticationParameters)

	// A blob_properties block as defined below.
	// +kubebuilder:validation:Optional
	blobProperties?: [...#BlobPropertiesParameters] @go(BlobProperties,[]BlobPropertiesParameters)

	// Should cross Tenant replication be enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	crossTenantReplicationEnabled?: null | bool @go(CrossTenantReplicationEnabled,*bool)

	// A custom_domain block as documented below.
	// +kubebuilder:validation:Optional
	customDomain?: [...#CustomDomainParameters] @go(CustomDomain,[]CustomDomainParameters)

	// A customer_managed_key block as documented below.
	// +kubebuilder:validation:Optional
	customerManagedKey?: [...#CustomerManagedKeyParameters] @go(CustomerManagedKey,[]CustomerManagedKeyParameters)

	// Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is false
	// +kubebuilder:validation:Optional
	defaultToOauthAuthentication?: null | bool @go(DefaultToOauthAuthentication,*bool)

	// Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
	// +kubebuilder:validation:Optional
	edgeZone?: null | string @go(EdgeZone,*string)

	// Boolean flag which forces HTTPS if enabled, see here for more information. Defaults to true.
	// +kubebuilder:validation:Optional
	enableHttpsTrafficOnly?: null | bool @go(EnableHTTPSTrafficOnly,*bool)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// An immutability_policy block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	immutabilityPolicy?: [...#ImmutabilityPolicyParameters] @go(ImmutabilityPolicy,[]ImmutabilityPolicyParameters)

	// Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to false.
	// +kubebuilder:validation:Optional
	infrastructureEncryptionEnabled?: null | bool @go(InfrastructureEncryptionEnabled,*bool)

	// Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 (see here for more information). Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	isHnsEnabled?: null | bool @go(IsHnsEnabled,*bool)

	// Is Large File Share Enabled?
	// +kubebuilder:validation:Optional
	largeFileShareEnabled?: null | bool @go(LargeFileShareEnabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The minimum supported TLS version for the storage account. Possible values are TLS1_0, TLS1_1, and TLS1_2. Defaults to TLS1_2 for new storage accounts.
	// +kubebuilder:validation:Optional
	minTlsVersion?: null | string @go(MinTLSVersion,*string)

	// A network_rules block as documented below.
	// +kubebuilder:validation:Optional
	networkRules?: [...#NetworkRulesParameters] @go(NetworkRules,[]NetworkRulesParameters)

	// Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to false.
	// +kubebuilder:validation:Optional
	nfsv3Enabled?: null | bool @go(Nfsv3Enabled,*bool)

	// Whether the public network access is enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The encryption type of the queue service. Possible values are Service and Account. Changing this forces a new resource to be created. Default value is Service.
	// +kubebuilder:validation:Optional
	queueEncryptionKeyType?: null | string @go(QueueEncryptionKeyType,*string)

	// A queue_properties block as defined below.
	// +kubebuilder:validation:Optional
	queueProperties?: [...#QueuePropertiesParameters] @go(QueueProperties,[]QueuePropertiesParameters)

	// The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A routing block as defined below.
	// +kubebuilder:validation:Optional
	routing?: [...#RoutingParameters] @go(Routing,[]RoutingParameters)

	// A sas_policy block as defined below.
	// +kubebuilder:validation:Optional
	sasPolicy?: [...#SASPolicyParameters] @go(SASPolicy,[]SASPolicyParameters)

	// Boolean, enable SFTP for the storage account
	// +kubebuilder:validation:Optional
	sftpEnabled?: null | bool @go(SFTPEnabled,*bool)

	// A share_properties block as defined below.
	// +kubebuilder:validation:Optional
	shareProperties?: [...#SharePropertiesParameters] @go(ShareProperties,[]SharePropertiesParameters)

	// Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is true.
	// +kubebuilder:validation:Optional
	sharedAccessKeyEnabled?: null | bool @go(SharedAccessKeyEnabled,*bool)

	// A static_website block as defined below.
	// +kubebuilder:validation:Optional
	staticWebsite?: [...#StaticWebsiteParameters] @go(StaticWebsite,[]StaticWebsiteParameters)

	// The encryption type of the table service. Possible values are Service and Account. Changing this forces a new resource to be created. Default value is Service.
	// +kubebuilder:validation:Optional
	tableEncryptionKeyType?: null | string @go(TableEncryptionKeyType,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ActiveDirectoryInitParameters: {
	// Specifies the domain GUID.
	domainGuid?: null | string @go(DomainGUID,*string)

	// Specifies the primary domain that the AD DNS server is authoritative for.
	domainName?: null | string @go(DomainName,*string)

	// Specifies the security identifier (SID).
	domainSid?: null | string @go(DomainSid,*string)

	// Specifies the Active Directory forest.
	forestName?: null | string @go(ForestName,*string)

	// Specifies the NetBIOS domain name.
	netbiosDomainName?: null | string @go(NetbiosDomainName,*string)

	// Specifies the security identifier (SID) for Azure Storage.
	storageSid?: null | string @go(StorageSid,*string)
}

#ActiveDirectoryObservation: {
	// Specifies the domain GUID.
	domainGuid?: null | string @go(DomainGUID,*string)

	// Specifies the primary domain that the AD DNS server is authoritative for.
	domainName?: null | string @go(DomainName,*string)

	// Specifies the security identifier (SID).
	domainSid?: null | string @go(DomainSid,*string)

	// Specifies the Active Directory forest.
	forestName?: null | string @go(ForestName,*string)

	// Specifies the NetBIOS domain name.
	netbiosDomainName?: null | string @go(NetbiosDomainName,*string)

	// Specifies the security identifier (SID) for Azure Storage.
	storageSid?: null | string @go(StorageSid,*string)
}

#ActiveDirectoryParameters: {
	// Specifies the domain GUID.
	// +kubebuilder:validation:Optional
	domainGuid?: null | string @go(DomainGUID,*string)

	// Specifies the primary domain that the AD DNS server is authoritative for.
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// Specifies the security identifier (SID).
	// +kubebuilder:validation:Optional
	domainSid?: null | string @go(DomainSid,*string)

	// Specifies the Active Directory forest.
	// +kubebuilder:validation:Optional
	forestName?: null | string @go(ForestName,*string)

	// Specifies the NetBIOS domain name.
	// +kubebuilder:validation:Optional
	netbiosDomainName?: null | string @go(NetbiosDomainName,*string)

	// Specifies the security identifier (SID) for Azure Storage.
	// +kubebuilder:validation:Optional
	storageSid?: null | string @go(StorageSid,*string)
}

#AzureFilesAuthenticationInitParameters: {
	// A active_directory block as defined below. Required when directory_type is AD.
	activeDirectory?: [...#ActiveDirectoryInitParameters] @go(ActiveDirectory,[]ActiveDirectoryInitParameters)

	// Specifies the directory service used. Possible values are AADDS, AD and AADKERB.
	directoryType?: null | string @go(DirectoryType,*string)
}

#AzureFilesAuthenticationObservation: {
	// A active_directory block as defined below. Required when directory_type is AD.
	activeDirectory?: [...#ActiveDirectoryObservation] @go(ActiveDirectory,[]ActiveDirectoryObservation)

	// Specifies the directory service used. Possible values are AADDS, AD and AADKERB.
	directoryType?: null | string @go(DirectoryType,*string)
}

#AzureFilesAuthenticationParameters: {
	// A active_directory block as defined below. Required when directory_type is AD.
	// +kubebuilder:validation:Optional
	activeDirectory?: [...#ActiveDirectoryParameters] @go(ActiveDirectory,[]ActiveDirectoryParameters)

	// Specifies the directory service used. Possible values are AADDS, AD and AADKERB.
	// +kubebuilder:validation:Optional
	directoryType?: null | string @go(DirectoryType,*string)
}

#BlobPropertiesInitParameters: {
	// Is the blob service properties for change feed events enabled? Default to false.
	changeFeedEnabled?: null | bool @go(ChangeFeedEnabled,*bool)

	// The duration of change feed events retention in days. The possible values are between 1 and 146000 days (400 years). Setting this to null (or omit this in the configuration file) indicates an infinite retention of the change feed.
	changeFeedRetentionInDays?: null | float64 @go(ChangeFeedRetentionInDays,*float64)

	// A container_delete_retention_policy block as defined below.
	containerDeleteRetentionPolicy?: [...#ContainerDeleteRetentionPolicyInitParameters] @go(ContainerDeleteRetentionPolicy,[]ContainerDeleteRetentionPolicyInitParameters)

	// A cors_rule block as defined below.
	corsRule?: [...#CorsRuleInitParameters] @go(CorsRule,[]CorsRuleInitParameters)

	// The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn't specify an API Version.
	defaultServiceVersion?: null | string @go(DefaultServiceVersion,*string)

	// A delete_retention_policy block as defined below.
	deleteRetentionPolicy?: [...#DeleteRetentionPolicyInitParameters] @go(DeleteRetentionPolicy,[]DeleteRetentionPolicyInitParameters)

	// Is the last access time based tracking enabled? Default to false.
	lastAccessTimeEnabled?: null | bool @go(LastAccessTimeEnabled,*bool)

	// A restore_policy block as defined below. This must be used together with delete_retention_policy set, versioning_enabled and change_feed_enabled set to true.
	restorePolicy?: [...#RestorePolicyInitParameters] @go(RestorePolicy,[]RestorePolicyInitParameters)

	// Is versioning enabled? Default to false.
	versioningEnabled?: null | bool @go(VersioningEnabled,*bool)
}

#BlobPropertiesObservation: {
	// Is the blob service properties for change feed events enabled? Default to false.
	changeFeedEnabled?: null | bool @go(ChangeFeedEnabled,*bool)

	// The duration of change feed events retention in days. The possible values are between 1 and 146000 days (400 years). Setting this to null (or omit this in the configuration file) indicates an infinite retention of the change feed.
	changeFeedRetentionInDays?: null | float64 @go(ChangeFeedRetentionInDays,*float64)

	// A container_delete_retention_policy block as defined below.
	containerDeleteRetentionPolicy?: [...#ContainerDeleteRetentionPolicyObservation] @go(ContainerDeleteRetentionPolicy,[]ContainerDeleteRetentionPolicyObservation)

	// A cors_rule block as defined below.
	corsRule?: [...#CorsRuleObservation] @go(CorsRule,[]CorsRuleObservation)

	// The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn't specify an API Version.
	defaultServiceVersion?: null | string @go(DefaultServiceVersion,*string)

	// A delete_retention_policy block as defined below.
	deleteRetentionPolicy?: [...#DeleteRetentionPolicyObservation] @go(DeleteRetentionPolicy,[]DeleteRetentionPolicyObservation)

	// Is the last access time based tracking enabled? Default to false.
	lastAccessTimeEnabled?: null | bool @go(LastAccessTimeEnabled,*bool)

	// A restore_policy block as defined below. This must be used together with delete_retention_policy set, versioning_enabled and change_feed_enabled set to true.
	restorePolicy?: [...#RestorePolicyObservation] @go(RestorePolicy,[]RestorePolicyObservation)

	// Is versioning enabled? Default to false.
	versioningEnabled?: null | bool @go(VersioningEnabled,*bool)
}

#BlobPropertiesParameters: {
	// Is the blob service properties for change feed events enabled? Default to false.
	// +kubebuilder:validation:Optional
	changeFeedEnabled?: null | bool @go(ChangeFeedEnabled,*bool)

	// The duration of change feed events retention in days. The possible values are between 1 and 146000 days (400 years). Setting this to null (or omit this in the configuration file) indicates an infinite retention of the change feed.
	// +kubebuilder:validation:Optional
	changeFeedRetentionInDays?: null | float64 @go(ChangeFeedRetentionInDays,*float64)

	// A container_delete_retention_policy block as defined below.
	// +kubebuilder:validation:Optional
	containerDeleteRetentionPolicy?: [...#ContainerDeleteRetentionPolicyParameters] @go(ContainerDeleteRetentionPolicy,[]ContainerDeleteRetentionPolicyParameters)

	// A cors_rule block as defined below.
	// +kubebuilder:validation:Optional
	corsRule?: [...#CorsRuleParameters] @go(CorsRule,[]CorsRuleParameters)

	// The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn't specify an API Version.
	// +kubebuilder:validation:Optional
	defaultServiceVersion?: null | string @go(DefaultServiceVersion,*string)

	// A delete_retention_policy block as defined below.
	// +kubebuilder:validation:Optional
	deleteRetentionPolicy?: [...#DeleteRetentionPolicyParameters] @go(DeleteRetentionPolicy,[]DeleteRetentionPolicyParameters)

	// Is the last access time based tracking enabled? Default to false.
	// +kubebuilder:validation:Optional
	lastAccessTimeEnabled?: null | bool @go(LastAccessTimeEnabled,*bool)

	// A restore_policy block as defined below. This must be used together with delete_retention_policy set, versioning_enabled and change_feed_enabled set to true.
	// +kubebuilder:validation:Optional
	restorePolicy?: [...#RestorePolicyParameters] @go(RestorePolicy,[]RestorePolicyParameters)

	// Is versioning enabled? Default to false.
	// +kubebuilder:validation:Optional
	versioningEnabled?: null | bool @go(VersioningEnabled,*bool)
}

#ContainerDeleteRetentionPolicyInitParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#ContainerDeleteRetentionPolicyObservation: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#ContainerDeleteRetentionPolicyParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	// +kubebuilder:validation:Optional
	days?: null | float64 @go(Days,*float64)
}

#CorsRuleInitParameters: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CorsRuleObservation: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CorsRuleParameters: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	// +kubebuilder:validation:Optional
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	// +kubebuilder:validation:Optional
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	// +kubebuilder:validation:Optional
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	// +kubebuilder:validation:Optional
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	// +kubebuilder:validation:Optional
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CustomDomainInitParameters: {
	// The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
	name?: null | string @go(Name,*string)

	// Should the Custom Domain Name be validated by using indirect CNAME validation?
	useSubdomain?: null | bool @go(UseSubdomain,*bool)
}

#CustomDomainObservation: {
	// The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
	name?: null | string @go(Name,*string)

	// Should the Custom Domain Name be validated by using indirect CNAME validation?
	useSubdomain?: null | bool @go(UseSubdomain,*bool)
}

#CustomDomainParameters: {
	// The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Should the Custom Domain Name be validated by using indirect CNAME validation?
	// +kubebuilder:validation:Optional
	useSubdomain?: null | bool @go(UseSubdomain,*bool)
}

#CustomerManagedKeyInitParameters: {
	// The ID of the Key Vault Key, supplying a version-less key ID will enable auto-rotation of this key.
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// The ID of a user assigned identity.
	userAssignedIdentityId?: null | string @go(UserAssignedIdentityID,*string)
}

#CustomerManagedKeyObservation: {
	// The ID of the Key Vault Key, supplying a version-less key ID will enable auto-rotation of this key.
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// The ID of a user assigned identity.
	userAssignedIdentityId?: null | string @go(UserAssignedIdentityID,*string)
}

#CustomerManagedKeyParameters: {
	// The ID of the Key Vault Key, supplying a version-less key ID will enable auto-rotation of this key.
	// +kubebuilder:validation:Optional
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// The ID of a user assigned identity.
	// +kubebuilder:validation:Optional
	userAssignedIdentityId?: null | string @go(UserAssignedIdentityID,*string)
}

#DeleteRetentionPolicyInitParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#DeleteRetentionPolicyObservation: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#DeleteRetentionPolicyParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	// +kubebuilder:validation:Optional
	days?: null | float64 @go(Days,*float64)
}

#HourMetricsInitParameters: {
	// Indicates whether minute metrics are enabled for the Queue service.
	enabled?: null | bool @go(Enabled,*bool)

	// Indicates whether metrics should generate summary statistics for called API operations.
	includeApis?: null | bool @go(IncludeApis,*bool)

	// Specifies the number of days that logs will be retained.
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	version?: null | string @go(Version,*string)
}

#HourMetricsObservation: {
	// Indicates whether minute metrics are enabled for the Queue service.
	enabled?: null | bool @go(Enabled,*bool)

	// Indicates whether metrics should generate summary statistics for called API operations.
	includeApis?: null | bool @go(IncludeApis,*bool)

	// Specifies the number of days that logs will be retained.
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	version?: null | string @go(Version,*string)
}

#HourMetricsParameters: {
	// Indicates whether minute metrics are enabled for the Queue service.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Indicates whether metrics should generate summary statistics for called API operations.
	// +kubebuilder:validation:Optional
	includeApis?: null | bool @go(IncludeApis,*bool)

	// Specifies the number of days that logs will be retained.
	// +kubebuilder:validation:Optional
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#IdentityInitParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Storage Account.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Storage Account. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	type?: null | string @go(Type,*string)
}

#IdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Storage Account.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID for the Service Principal associated with the Identity of this Storage Account.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that should be configured on this Storage Account. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	type?: null | string @go(Type,*string)
}

#IdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Storage Account.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Storage Account. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#ImmutabilityPolicyInitParameters: {
	// When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
	allowProtectedAppendWrites?: null | bool @go(AllowProtectedAppendWrites,*bool)

	// The immutability period for the blobs in the container since the policy creation, in days.
	periodSinceCreationInDays?: null | float64 @go(PeriodSinceCreationInDays,*float64)

	// Defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.
	state?: null | string @go(State,*string)
}

#ImmutabilityPolicyObservation: {
	// When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
	allowProtectedAppendWrites?: null | bool @go(AllowProtectedAppendWrites,*bool)

	// The immutability period for the blobs in the container since the policy creation, in days.
	periodSinceCreationInDays?: null | float64 @go(PeriodSinceCreationInDays,*float64)

	// Defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.
	state?: null | string @go(State,*string)
}

#ImmutabilityPolicyParameters: {
	// When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
	// +kubebuilder:validation:Optional
	allowProtectedAppendWrites?: null | bool @go(AllowProtectedAppendWrites,*bool)

	// The immutability period for the blobs in the container since the policy creation, in days.
	// +kubebuilder:validation:Optional
	periodSinceCreationInDays?: null | float64 @go(PeriodSinceCreationInDays,*float64)

	// Defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.
	// +kubebuilder:validation:Optional
	state?: null | string @go(State,*string)
}

#LoggingInitParameters: {
	// (Defaults to 60 minutes) Used when deleting the Storage Account.
	delete?: null | bool @go(Delete,*bool)

	// (Defaults to 5 minutes) Used when retrieving the Storage Account.
	read?: null | bool @go(Read,*bool)

	// Specifies the number of days that logs will be retained.
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	version?: null | string @go(Version,*string)

	// Indicates whether all write requests should be logged.
	write?: null | bool @go(Write,*bool)
}

#LoggingObservation: {
	// (Defaults to 60 minutes) Used when deleting the Storage Account.
	delete?: null | bool @go(Delete,*bool)

	// (Defaults to 5 minutes) Used when retrieving the Storage Account.
	read?: null | bool @go(Read,*bool)

	// Specifies the number of days that logs will be retained.
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	version?: null | string @go(Version,*string)

	// Indicates whether all write requests should be logged.
	write?: null | bool @go(Write,*bool)
}

#LoggingParameters: {
	// (Defaults to 60 minutes) Used when deleting the Storage Account.
	// +kubebuilder:validation:Optional
	delete?: null | bool @go(Delete,*bool)

	// (Defaults to 5 minutes) Used when retrieving the Storage Account.
	// +kubebuilder:validation:Optional
	read?: null | bool @go(Read,*bool)

	// Specifies the number of days that logs will be retained.
	// +kubebuilder:validation:Optional
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)

	// Indicates whether all write requests should be logged.
	// +kubebuilder:validation:Optional
	write?: null | bool @go(Write,*bool)
}

#MinuteMetricsInitParameters: {
	// Indicates whether minute metrics are enabled for the Queue service.
	enabled?: null | bool @go(Enabled,*bool)

	// Indicates whether metrics should generate summary statistics for called API operations.
	includeApis?: null | bool @go(IncludeApis,*bool)

	// Specifies the number of days that logs will be retained.
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	version?: null | string @go(Version,*string)
}

#MinuteMetricsObservation: {
	// Indicates whether minute metrics are enabled for the Queue service.
	enabled?: null | bool @go(Enabled,*bool)

	// Indicates whether metrics should generate summary statistics for called API operations.
	includeApis?: null | bool @go(IncludeApis,*bool)

	// Specifies the number of days that logs will be retained.
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	version?: null | string @go(Version,*string)
}

#MinuteMetricsParameters: {
	// Indicates whether minute metrics are enabled for the Queue service.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Indicates whether metrics should generate summary statistics for called API operations.
	// +kubebuilder:validation:Optional
	includeApis?: null | bool @go(IncludeApis,*bool)

	// Specifies the number of days that logs will be retained.
	// +kubebuilder:validation:Optional
	retentionPolicyDays?: null | float64 @go(RetentionPolicyDays,*float64)

	// The version of storage analytics to configure.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#NetworkRulesInitParameters: {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of Logging, Metrics, AzureServices, or None.
	bypass?: [...null | string] @go(Bypass,[]*string)

	// Specifies the default action of allow or deny when no other rules match. Valid options are Deny or Allow.
	defaultAction?: null | string @go(DefaultAction,*string)

	// List of public IP or IP ranges in CIDR Format. Only IPv4 addresses are allowed. /31 CIDRs, /32 CIDRs, and Private IP address ranges (as defined in RFC 1918),  are not allowed.
	ipRules?: [...null | string] @go(IPRules,[]*string)

	// One or More private_link_access block as defined below.
	privateLinkAccess?: [...#PrivateLinkAccessInitParameters] @go(PrivateLinkAccess,[]PrivateLinkAccessInitParameters)

	// A list of resource ids for subnets.
	virtualNetworkSubnetIds?: [...null | string] @go(VirtualNetworkSubnetIds,[]*string)
}

#NetworkRulesObservation: {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of Logging, Metrics, AzureServices, or None.
	bypass?: [...null | string] @go(Bypass,[]*string)

	// Specifies the default action of allow or deny when no other rules match. Valid options are Deny or Allow.
	defaultAction?: null | string @go(DefaultAction,*string)

	// List of public IP or IP ranges in CIDR Format. Only IPv4 addresses are allowed. /31 CIDRs, /32 CIDRs, and Private IP address ranges (as defined in RFC 1918),  are not allowed.
	ipRules?: [...null | string] @go(IPRules,[]*string)

	// One or More private_link_access block as defined below.
	privateLinkAccess?: [...#PrivateLinkAccessObservation] @go(PrivateLinkAccess,[]PrivateLinkAccessObservation)

	// A list of resource ids for subnets.
	virtualNetworkSubnetIds?: [...null | string] @go(VirtualNetworkSubnetIds,[]*string)
}

#NetworkRulesParameters: {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of Logging, Metrics, AzureServices, or None.
	// +kubebuilder:validation:Optional
	bypass?: [...null | string] @go(Bypass,[]*string)

	// Specifies the default action of allow or deny when no other rules match. Valid options are Deny or Allow.
	// +kubebuilder:validation:Optional
	defaultAction?: null | string @go(DefaultAction,*string)

	// List of public IP or IP ranges in CIDR Format. Only IPv4 addresses are allowed. /31 CIDRs, /32 CIDRs, and Private IP address ranges (as defined in RFC 1918),  are not allowed.
	// +kubebuilder:validation:Optional
	ipRules?: [...null | string] @go(IPRules,[]*string)

	// One or More private_link_access block as defined below.
	// +kubebuilder:validation:Optional
	privateLinkAccess?: [...#PrivateLinkAccessParameters] @go(PrivateLinkAccess,[]PrivateLinkAccessParameters)

	// A list of resource ids for subnets.
	// +kubebuilder:validation:Optional
	virtualNetworkSubnetIds?: [...null | string] @go(VirtualNetworkSubnetIds,[]*string)
}

#PrivateLinkAccessInitParameters: {
	// The resource id of the resource access rule to be granted access.
	endpointResourceId?: null | string @go(EndpointResourceID,*string)

	// The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id.
	endpointTenantId?: null | string @go(EndpointTenantID,*string)
}

#PrivateLinkAccessObservation: {
	// The resource id of the resource access rule to be granted access.
	endpointResourceId?: null | string @go(EndpointResourceID,*string)

	// The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id.
	endpointTenantId?: null | string @go(EndpointTenantID,*string)
}

#PrivateLinkAccessParameters: {
	// The resource id of the resource access rule to be granted access.
	// +kubebuilder:validation:Optional
	endpointResourceId?: null | string @go(EndpointResourceID,*string)

	// The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id.
	// +kubebuilder:validation:Optional
	endpointTenantId?: null | string @go(EndpointTenantID,*string)
}

#QueuePropertiesCorsRuleInitParameters: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#QueuePropertiesCorsRuleObservation: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#QueuePropertiesCorsRuleParameters: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	// +kubebuilder:validation:Optional
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	// +kubebuilder:validation:Optional
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	// +kubebuilder:validation:Optional
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	// +kubebuilder:validation:Optional
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	// +kubebuilder:validation:Optional
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#QueuePropertiesInitParameters: {
	// A cors_rule block as defined above.
	corsRule?: [...#QueuePropertiesCorsRuleInitParameters] @go(CorsRule,[]QueuePropertiesCorsRuleInitParameters)

	// A hour_metrics block as defined below.
	hourMetrics?: [...#HourMetricsInitParameters] @go(HourMetrics,[]HourMetricsInitParameters)

	// A logging block as defined below.
	logging?: [...#LoggingInitParameters] @go(Logging,[]LoggingInitParameters)

	// A minute_metrics block as defined below.
	minuteMetrics?: [...#MinuteMetricsInitParameters] @go(MinuteMetrics,[]MinuteMetricsInitParameters)
}

#QueuePropertiesObservation: {
	// A cors_rule block as defined above.
	corsRule?: [...#QueuePropertiesCorsRuleObservation] @go(CorsRule,[]QueuePropertiesCorsRuleObservation)

	// A hour_metrics block as defined below.
	hourMetrics?: [...#HourMetricsObservation] @go(HourMetrics,[]HourMetricsObservation)

	// A logging block as defined below.
	logging?: [...#LoggingObservation] @go(Logging,[]LoggingObservation)

	// A minute_metrics block as defined below.
	minuteMetrics?: [...#MinuteMetricsObservation] @go(MinuteMetrics,[]MinuteMetricsObservation)
}

#QueuePropertiesParameters: {
	// A cors_rule block as defined above.
	// +kubebuilder:validation:Optional
	corsRule?: [...#QueuePropertiesCorsRuleParameters] @go(CorsRule,[]QueuePropertiesCorsRuleParameters)

	// A hour_metrics block as defined below.
	// +kubebuilder:validation:Optional
	hourMetrics?: [...#HourMetricsParameters] @go(HourMetrics,[]HourMetricsParameters)

	// A logging block as defined below.
	// +kubebuilder:validation:Optional
	logging?: [...#LoggingParameters] @go(Logging,[]LoggingParameters)

	// A minute_metrics block as defined below.
	// +kubebuilder:validation:Optional
	minuteMetrics?: [...#MinuteMetricsParameters] @go(MinuteMetrics,[]MinuteMetricsParameters)
}

#RestorePolicyInitParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#RestorePolicyObservation: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#RestorePolicyParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	// +kubebuilder:validation:Optional
	days?: null | float64 @go(Days,*float64)
}

#RetentionPolicyInitParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#RetentionPolicyObservation: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	days?: null | float64 @go(Days,*float64)
}

#RetentionPolicyParameters: {
	// Specifies the number of days that the azurerm_storage_share should be retained, between 1 and 365 days. Defaults to 7.
	// +kubebuilder:validation:Optional
	days?: null | float64 @go(Days,*float64)
}

#RoutingInitParameters: {
	// Specifies the kind of network routing opted by the user. Possible values are InternetRouting and MicrosoftRouting. Defaults to MicrosoftRouting.
	choice?: null | string @go(Choice,*string)

	// Should internet routing storage endpoints be published? Defaults to false.
	publishInternetEndpoints?: null | bool @go(PublishInternetEndpoints,*bool)

	// Should Microsoft routing storage endpoints be published? Defaults to false.
	publishMicrosoftEndpoints?: null | bool @go(PublishMicrosoftEndpoints,*bool)
}

#RoutingObservation: {
	// Specifies the kind of network routing opted by the user. Possible values are InternetRouting and MicrosoftRouting. Defaults to MicrosoftRouting.
	choice?: null | string @go(Choice,*string)

	// Should internet routing storage endpoints be published? Defaults to false.
	publishInternetEndpoints?: null | bool @go(PublishInternetEndpoints,*bool)

	// Should Microsoft routing storage endpoints be published? Defaults to false.
	publishMicrosoftEndpoints?: null | bool @go(PublishMicrosoftEndpoints,*bool)
}

#RoutingParameters: {
	// Specifies the kind of network routing opted by the user. Possible values are InternetRouting and MicrosoftRouting. Defaults to MicrosoftRouting.
	// +kubebuilder:validation:Optional
	choice?: null | string @go(Choice,*string)

	// Should internet routing storage endpoints be published? Defaults to false.
	// +kubebuilder:validation:Optional
	publishInternetEndpoints?: null | bool @go(PublishInternetEndpoints,*bool)

	// Should Microsoft routing storage endpoints be published? Defaults to false.
	// +kubebuilder:validation:Optional
	publishMicrosoftEndpoints?: null | bool @go(PublishMicrosoftEndpoints,*bool)
}

#SASPolicyInitParameters: {
	// The SAS expiration action. The only possible value is Log at this moment. Defaults to Log.
	expirationAction?: null | string @go(ExpirationAction,*string)

	// The SAS expiration period in format of DD.HH:MM:SS.
	expirationPeriod?: null | string @go(ExpirationPeriod,*string)
}

#SASPolicyObservation: {
	// The SAS expiration action. The only possible value is Log at this moment. Defaults to Log.
	expirationAction?: null | string @go(ExpirationAction,*string)

	// The SAS expiration period in format of DD.HH:MM:SS.
	expirationPeriod?: null | string @go(ExpirationPeriod,*string)
}

#SASPolicyParameters: {
	// The SAS expiration action. The only possible value is Log at this moment. Defaults to Log.
	// +kubebuilder:validation:Optional
	expirationAction?: null | string @go(ExpirationAction,*string)

	// The SAS expiration period in format of DD.HH:MM:SS.
	// +kubebuilder:validation:Optional
	expirationPeriod?: null | string @go(ExpirationPeriod,*string)
}

#SMBInitParameters: {
	// A set of SMB authentication methods. Possible values are NTLMv2, and Kerberos.
	authenticationTypes?: [...null | string] @go(AuthenticationTypes,[]*string)

	// A set of SMB channel encryption. Possible values are AES-128-CCM, AES-128-GCM, and AES-256-GCM.
	channelEncryptionType?: [...null | string] @go(ChannelEncryptionType,[]*string)

	// A set of Kerberos ticket encryption. Possible values are RC4-HMAC, and AES-256.
	kerberosTicketEncryptionType?: [...null | string] @go(KerberosTicketEncryptionType,[]*string)

	// Indicates whether multichannel is enabled. Defaults to false. This is only supported on Premium storage accounts.
	multichannelEnabled?: null | bool @go(MultichannelEnabled,*bool)

	// A set of SMB protocol versions. Possible values are SMB2.1, SMB3.0, and SMB3.1.1.
	versions?: [...null | string] @go(Versions,[]*string)
}

#SMBObservation: {
	// A set of SMB authentication methods. Possible values are NTLMv2, and Kerberos.
	authenticationTypes?: [...null | string] @go(AuthenticationTypes,[]*string)

	// A set of SMB channel encryption. Possible values are AES-128-CCM, AES-128-GCM, and AES-256-GCM.
	channelEncryptionType?: [...null | string] @go(ChannelEncryptionType,[]*string)

	// A set of Kerberos ticket encryption. Possible values are RC4-HMAC, and AES-256.
	kerberosTicketEncryptionType?: [...null | string] @go(KerberosTicketEncryptionType,[]*string)

	// Indicates whether multichannel is enabled. Defaults to false. This is only supported on Premium storage accounts.
	multichannelEnabled?: null | bool @go(MultichannelEnabled,*bool)

	// A set of SMB protocol versions. Possible values are SMB2.1, SMB3.0, and SMB3.1.1.
	versions?: [...null | string] @go(Versions,[]*string)
}

#SMBParameters: {
	// A set of SMB authentication methods. Possible values are NTLMv2, and Kerberos.
	// +kubebuilder:validation:Optional
	authenticationTypes?: [...null | string] @go(AuthenticationTypes,[]*string)

	// A set of SMB channel encryption. Possible values are AES-128-CCM, AES-128-GCM, and AES-256-GCM.
	// +kubebuilder:validation:Optional
	channelEncryptionType?: [...null | string] @go(ChannelEncryptionType,[]*string)

	// A set of Kerberos ticket encryption. Possible values are RC4-HMAC, and AES-256.
	// +kubebuilder:validation:Optional
	kerberosTicketEncryptionType?: [...null | string] @go(KerberosTicketEncryptionType,[]*string)

	// Indicates whether multichannel is enabled. Defaults to false. This is only supported on Premium storage accounts.
	// +kubebuilder:validation:Optional
	multichannelEnabled?: null | bool @go(MultichannelEnabled,*bool)

	// A set of SMB protocol versions. Possible values are SMB2.1, SMB3.0, and SMB3.1.1.
	// +kubebuilder:validation:Optional
	versions?: [...null | string] @go(Versions,[]*string)
}

#SharePropertiesCorsRuleInitParameters: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#SharePropertiesCorsRuleObservation: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#SharePropertiesCorsRuleParameters: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	// +kubebuilder:validation:Optional
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP methods that are allowed to be executed by the origin. Valid options are
	// DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	// +kubebuilder:validation:Optional
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	// +kubebuilder:validation:Optional
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	// +kubebuilder:validation:Optional
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	// +kubebuilder:validation:Optional
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#SharePropertiesInitParameters: {
	// A cors_rule block as defined below.
	corsRule?: [...#SharePropertiesCorsRuleInitParameters] @go(CorsRule,[]SharePropertiesCorsRuleInitParameters)

	// A retention_policy block as defined below.
	retentionPolicy?: [...#RetentionPolicyInitParameters] @go(RetentionPolicy,[]RetentionPolicyInitParameters)

	// A smb block as defined below.
	smb?: [...#SMBInitParameters] @go(SMB,[]SMBInitParameters)
}

#SharePropertiesObservation: {
	// A cors_rule block as defined below.
	corsRule?: [...#SharePropertiesCorsRuleObservation] @go(CorsRule,[]SharePropertiesCorsRuleObservation)

	// A retention_policy block as defined below.
	retentionPolicy?: [...#RetentionPolicyObservation] @go(RetentionPolicy,[]RetentionPolicyObservation)

	// A smb block as defined below.
	smb?: [...#SMBObservation] @go(SMB,[]SMBObservation)
}

#SharePropertiesParameters: {
	// A cors_rule block as defined below.
	// +kubebuilder:validation:Optional
	corsRule?: [...#SharePropertiesCorsRuleParameters] @go(CorsRule,[]SharePropertiesCorsRuleParameters)

	// A retention_policy block as defined below.
	// +kubebuilder:validation:Optional
	retentionPolicy?: [...#RetentionPolicyParameters] @go(RetentionPolicy,[]RetentionPolicyParameters)

	// A smb block as defined below.
	// +kubebuilder:validation:Optional
	smb?: [...#SMBParameters] @go(SMB,[]SMBParameters)
}

#StaticWebsiteInitParameters: {
	// The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
	error404Document?: null | string @go(Error404Document,*string)

	// The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
	indexDocument?: null | string @go(IndexDocument,*string)
}

#StaticWebsiteObservation: {
	// The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
	error404Document?: null | string @go(Error404Document,*string)

	// The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
	indexDocument?: null | string @go(IndexDocument,*string)
}

#StaticWebsiteParameters: {
	// The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
	// +kubebuilder:validation:Optional
	error404Document?: null | string @go(Error404Document,*string)

	// The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
	// +kubebuilder:validation:Optional
	indexDocument?: null | string @go(IndexDocument,*string)
}

// AccountSpec defines the desired state of Account
#AccountSpec: {
	forProvider: #AccountParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AccountInitParameters @go(InitProvider)
}

// AccountStatus defines the observed state of Account.
#AccountStatus: {
	atProvider?: #AccountObservation @go(AtProvider)
}

// Account is the Schema for the Accounts API. Manages a Azure Storage Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Account: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountReplicationType) || has(self.initProvider.accountReplicationType)",message="accountReplicationType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountTier) || has(self.initProvider.accountTier)",message="accountTier is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	spec:    #AccountSpec   @go(Spec)
	status?: #AccountStatus @go(Status)
}

// AccountList contains a list of Accounts
#AccountList: {
	items: [...#Account] @go(Items,[]Account)
}
