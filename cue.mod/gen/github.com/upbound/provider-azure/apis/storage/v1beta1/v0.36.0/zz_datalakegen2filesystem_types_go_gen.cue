// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/storage/v1beta1

package v1beta1

#AceInitParameters: {
	// Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for user or group entries.
	id?: null | string @go(ID,*string)

	// Specifies the permissions for the entry in rwx form. For example, rwx gives full permissions but r-- only gives read permissions.
	permissions?: null | string @go(Permissions,*string)

	// Specifies whether the ACE represents an access entry or a default entry. Default value is access.
	scope?: null | string @go(Scope,*string)

	// Specifies the type of entry. Can be user, group, mask or other.
	type?: null | string @go(Type,*string)
}

#AceObservation: {
	// Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for user or group entries.
	id?: null | string @go(ID,*string)

	// Specifies the permissions for the entry in rwx form. For example, rwx gives full permissions but r-- only gives read permissions.
	permissions?: null | string @go(Permissions,*string)

	// Specifies whether the ACE represents an access entry or a default entry. Default value is access.
	scope?: null | string @go(Scope,*string)

	// Specifies the type of entry. Can be user, group, mask or other.
	type?: null | string @go(Type,*string)
}

#AceParameters: {
	// Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for user or group entries.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Specifies the permissions for the entry in rwx form. For example, rwx gives full permissions but r-- only gives read permissions.
	// +kubebuilder:validation:Optional
	permissions?: null | string @go(Permissions,*string)

	// Specifies whether the ACE represents an access entry or a default entry. Default value is access.
	// +kubebuilder:validation:Optional
	scope?: null | string @go(Scope,*string)

	// Specifies the type of entry. Can be user, group, mask or other.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#DataLakeGen2FileSystemInitParameters: {
	// One or more ace blocks as defined below to specify the entries for the ACL for the path.
	ace?: [...#AceInitParameters] @go(Ace,[]AceInitParameters)

	// Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. /). Possible values also include $superuser.
	group?: null | string @go(Group,*string)

	// Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. /). Possible values also include $superuser.
	owner?: null | string @go(Owner,*string)

	// A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.
	properties?: {[string]: null | string} @go(Properties,map[string]*string)
}

#DataLakeGen2FileSystemObservation: {
	// One or more ace blocks as defined below to specify the entries for the ACL for the path.
	ace?: [...#AceObservation] @go(Ace,[]AceObservation)

	// Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. /). Possible values also include $superuser.
	group?: null | string @go(Group,*string)

	// The ID of the Data Lake Gen2 File System.
	id?: null | string @go(ID,*string)

	// Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. /). Possible values also include $superuser.
	owner?: null | string @go(Owner,*string)

	// A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// Specifies the ID of the Storage Account in which the Data Lake Gen2 File System should exist. Changing this forces a new resource to be created.
	storageAccountId?: null | string @go(StorageAccountID,*string)
}

#DataLakeGen2FileSystemParameters: {
	// One or more ace blocks as defined below to specify the entries for the ACL for the path.
	// +kubebuilder:validation:Optional
	ace?: [...#AceParameters] @go(Ace,[]AceParameters)

	// Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. /). Possible values also include $superuser.
	// +kubebuilder:validation:Optional
	group?: null | string @go(Group,*string)

	// Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. /). Possible values also include $superuser.
	// +kubebuilder:validation:Optional
	owner?: null | string @go(Owner,*string)

	// A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.
	// +kubebuilder:validation:Optional
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// Specifies the ID of the Storage Account in which the Data Lake Gen2 File System should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Account
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	storageAccountId?: null | string @go(StorageAccountID,*string)
}

// DataLakeGen2FileSystemSpec defines the desired state of DataLakeGen2FileSystem
#DataLakeGen2FileSystemSpec: {
	forProvider: #DataLakeGen2FileSystemParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #DataLakeGen2FileSystemInitParameters @go(InitProvider)
}

// DataLakeGen2FileSystemStatus defines the observed state of DataLakeGen2FileSystem.
#DataLakeGen2FileSystemStatus: {
	atProvider?: #DataLakeGen2FileSystemObservation @go(AtProvider)
}

// DataLakeGen2FileSystem is the Schema for the DataLakeGen2FileSystems API. Manages a Data Lake Gen2 File System within an Azure Storage Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#DataLakeGen2FileSystem: {
	spec:    #DataLakeGen2FileSystemSpec   @go(Spec)
	status?: #DataLakeGen2FileSystemStatus @go(Status)
}

// DataLakeGen2FileSystemList contains a list of DataLakeGen2FileSystems
#DataLakeGen2FileSystemList: {
	items: [...#DataLakeGen2FileSystem] @go(Items,[]DataLakeGen2FileSystem)
}
