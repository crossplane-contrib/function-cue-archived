// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/storage/v1beta1

package v1beta1

#AccountLocalUserObservation: {
	// The home directory of the Storage Account Local User.
	homeDirectory?: null | string @go(HomeDirectory,*string)

	// The ID of the Storage Account Local User.
	id?: null | string @go(ID,*string)

	// One or more permission_scope blocks as defined below.
	permissionScope?: [...#PermissionScopeObservation] @go(PermissionScope,[]PermissionScopeObservation)

	// One or more ssh_authorized_key blocks as defined below.
	sshAuthorizedKey?: [...#SSHAuthorizedKeyObservation] @go(SSHAuthorizedKey,[]SSHAuthorizedKeyObservation)

	// Specifies whether SSH Key Authentication is enabled. Defaults to false.
	sshKeyEnabled?: null | bool @go(SSHKeyEnabled,*bool)

	// Specifies whether SSH Password Authentication is enabled. Defaults to false.
	sshPasswordEnabled?: null | bool @go(SSHPasswordEnabled,*bool)

	// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
	storageAccountId?: null | string @go(StorageAccountID,*string)
}

#AccountLocalUserParameters: {
	// The home directory of the Storage Account Local User.
	// +kubebuilder:validation:Optional
	homeDirectory?: null | string @go(HomeDirectory,*string)

	// One or more permission_scope blocks as defined below.
	// +kubebuilder:validation:Optional
	permissionScope?: [...#PermissionScopeParameters] @go(PermissionScope,[]PermissionScopeParameters)

	// One or more ssh_authorized_key blocks as defined below.
	// +kubebuilder:validation:Optional
	sshAuthorizedKey?: [...#SSHAuthorizedKeyParameters] @go(SSHAuthorizedKey,[]SSHAuthorizedKeyParameters)

	// Specifies whether SSH Key Authentication is enabled. Defaults to false.
	// +kubebuilder:validation:Optional
	sshKeyEnabled?: null | bool @go(SSHKeyEnabled,*bool)

	// Specifies whether SSH Password Authentication is enabled. Defaults to false.
	// +kubebuilder:validation:Optional
	sshPasswordEnabled?: null | bool @go(SSHPasswordEnabled,*bool)

	// The ID of the Storage Account that this Storage Account Local User resides in. Changing this forces a new Storage Account Local User to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	storageAccountId?: null | string @go(StorageAccountID,*string)
}

#PermissionScopeObservation: {
	// A permissions block as defined below.
	permissions?: [...#PermissionsObservation] @go(Permissions,[]PermissionsObservation)

	// The container name (when service is set to blob) or the file share name (when service is set to file), used by the Storage Account Local User.
	resourceName?: null | string @go(ResourceName,*string)

	// The storage service used by this Storage Account Local User. Possible values are blob and file.
	service?: null | string @go(Service,*string)
}

#PermissionScopeParameters: {
	// A permissions block as defined below.
	// +kubebuilder:validation:Required
	permissions: [...#PermissionsParameters] @go(Permissions,[]PermissionsParameters)

	// The container name (when service is set to blob) or the file share name (when service is set to file), used by the Storage Account Local User.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Container
	// +kubebuilder:validation:Optional
	resourceName?: null | string @go(ResourceName,*string)

	// The storage service used by this Storage Account Local User. Possible values are blob and file.
	// +kubebuilder:validation:Required
	service?: null | string @go(Service,*string)
}

#PermissionsObservation: {
	// (Defaults to 30 minutes) Used when creating the Storage Account Local User.
	create?: null | bool @go(Create,*bool)

	// (Defaults to 30 minutes) Used when deleting the Storage Account Local User.
	delete?: null | bool @go(Delete,*bool)

	// Specifies if the Local User has the list permission for this scope. Defaults to false.
	list?: null | bool @go(List,*bool)

	// (Defaults to 5 minutes) Used when retrieving the Storage Account Local User.
	read?: null | bool @go(Read,*bool)

	// Specifies if the Local User has the write permission for this scope. Defaults to false.
	write?: null | bool @go(Write,*bool)
}

#PermissionsParameters: {
	// (Defaults to 30 minutes) Used when creating the Storage Account Local User.
	// +kubebuilder:validation:Optional
	create?: null | bool @go(Create,*bool)

	// (Defaults to 30 minutes) Used when deleting the Storage Account Local User.
	// +kubebuilder:validation:Optional
	delete?: null | bool @go(Delete,*bool)

	// Specifies if the Local User has the list permission for this scope. Defaults to false.
	// +kubebuilder:validation:Optional
	list?: null | bool @go(List,*bool)

	// (Defaults to 5 minutes) Used when retrieving the Storage Account Local User.
	// +kubebuilder:validation:Optional
	read?: null | bool @go(Read,*bool)

	// Specifies if the Local User has the write permission for this scope. Defaults to false.
	// +kubebuilder:validation:Optional
	write?: null | bool @go(Write,*bool)
}

#SSHAuthorizedKeyObservation: {
	// The description of this SSH authorized key.
	description?: null | string @go(Description,*string)

	// The public key value of this SSH authorized key.
	key?: null | string @go(Key,*string)
}

#SSHAuthorizedKeyParameters: {
	// The description of this SSH authorized key.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The public key value of this SSH authorized key.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)
}

// AccountLocalUserSpec defines the desired state of AccountLocalUser
#AccountLocalUserSpec: {
	forProvider: #AccountLocalUserParameters @go(ForProvider)
}

// AccountLocalUserStatus defines the observed state of AccountLocalUser.
#AccountLocalUserStatus: {
	atProvider?: #AccountLocalUserObservation @go(AtProvider)
}

// AccountLocalUser is the Schema for the AccountLocalUsers API. Manages a Storage Account Local User.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#AccountLocalUser: {
	spec:    #AccountLocalUserSpec   @go(Spec)
	status?: #AccountLocalUserStatus @go(Status)
}

// AccountLocalUserList contains a list of AccountLocalUsers
#AccountLocalUserList: {
	items: [...#AccountLocalUser] @go(Items,[]AccountLocalUser)
}
