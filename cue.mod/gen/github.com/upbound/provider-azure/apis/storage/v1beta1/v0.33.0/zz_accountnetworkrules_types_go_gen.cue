// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/storage/v1beta1

package v1beta1

#AccountNetworkRulesObservation: {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of Logging, Metrics, AzureServices, or None.
	bypass?: [...null | string] @go(Bypass,[]*string)

	// Specifies the default action of allow or deny when no other rules match. Valid options are Deny or Allow.
	defaultAction?: null | string @go(DefaultAction,*string)

	// The ID of the Storage Account.
	id?: null | string @go(ID,*string)

	// List of public IP or IP ranges in CIDR Format. Only IPv4 addresses are allowed. Private IP address ranges (as defined in RFC 1918) are not allowed.
	ipRules?: [...null | string] @go(IPRules,[]*string)

	// One or More private_link_access block as defined below.
	privateLinkAccess?: [...#AccountNetworkRulesPrivateLinkAccessObservation] @go(PrivateLinkAccess,[]AccountNetworkRulesPrivateLinkAccessObservation)

	// Specifies the ID of the storage account. Changing this forces a new resource to be created.
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// A list of virtual network subnet ids to secure the storage account.
	virtualNetworkSubnetIds?: [...null | string] @go(VirtualNetworkSubnetIds,[]*string)
}

#AccountNetworkRulesParameters: {
	// Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of Logging, Metrics, AzureServices, or None.
	// +kubebuilder:validation:Optional
	bypass?: [...null | string] @go(Bypass,[]*string)

	// Specifies the default action of allow or deny when no other rules match. Valid options are Deny or Allow.
	// +kubebuilder:validation:Optional
	defaultAction?: null | string @go(DefaultAction,*string)

	// List of public IP or IP ranges in CIDR Format. Only IPv4 addresses are allowed. Private IP address ranges (as defined in RFC 1918) are not allowed.
	// +kubebuilder:validation:Optional
	ipRules?: [...null | string] @go(IPRules,[]*string)

	// One or More private_link_access block as defined below.
	// +kubebuilder:validation:Optional
	privateLinkAccess?: [...#AccountNetworkRulesPrivateLinkAccessParameters] @go(PrivateLinkAccess,[]AccountNetworkRulesPrivateLinkAccessParameters)

	// Specifies the ID of the storage account. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// A list of virtual network subnet ids to secure the storage account.
	// +kubebuilder:validation:Optional
	virtualNetworkSubnetIds?: [...null | string] @go(VirtualNetworkSubnetIds,[]*string)
}

#AccountNetworkRulesPrivateLinkAccessObservation: {
	// The resource id of the resource access rule to be granted access.
	endpointResourceId?: null | string @go(EndpointResourceID,*string)

	// The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id.
	endpointTenantId?: null | string @go(EndpointTenantID,*string)
}

#AccountNetworkRulesPrivateLinkAccessParameters: {
	// The resource id of the resource access rule to be granted access.
	// +kubebuilder:validation:Required
	endpointResourceId?: null | string @go(EndpointResourceID,*string)

	// The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id.
	// +kubebuilder:validation:Optional
	endpointTenantId?: null | string @go(EndpointTenantID,*string)
}

// AccountNetworkRulesSpec defines the desired state of AccountNetworkRules
#AccountNetworkRulesSpec: {
	forProvider: #AccountNetworkRulesParameters @go(ForProvider)
}

// AccountNetworkRulesStatus defines the observed state of AccountNetworkRules.
#AccountNetworkRulesStatus: {
	atProvider?: #AccountNetworkRulesObservation @go(AtProvider)
}

// AccountNetworkRules is the Schema for the AccountNetworkRuless API. Manages network rules inside of a Azure Storage Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#AccountNetworkRules: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.defaultAction)",message="defaultAction is a required parameter"
	spec:    #AccountNetworkRulesSpec   @go(Spec)
	status?: #AccountNetworkRulesStatus @go(Status)
}

// AccountNetworkRulesList contains a list of AccountNetworkRuless
#AccountNetworkRulesList: {
	items: [...#AccountNetworkRules] @go(Items,[]AccountNetworkRules)
}
