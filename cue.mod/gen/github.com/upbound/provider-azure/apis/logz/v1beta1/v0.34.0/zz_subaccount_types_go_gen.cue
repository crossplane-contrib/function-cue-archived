// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/logz/v1beta1

package v1beta1

#SubAccountObservation: {
	// Whether the resource monitoring is enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the logz Sub Account.
	id?: null | string @go(ID,*string)

	// The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
	logzMonitorId?: null | string @go(LogzMonitorID,*string)

	// A mapping of tags which should be assigned to the logz Sub Account.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A user block as defined below. Changing this forces a new resource to be created.
	user?: [...#SubAccountUserObservation] @go(User,[]SubAccountUserObservation)
}

#SubAccountParameters: {
	// Whether the resource monitoring is enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/logz/v1beta1.Monitor
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	logzMonitorId?: null | string @go(LogzMonitorID,*string)

	// A mapping of tags which should be assigned to the logz Sub Account.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A user block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	user?: [...#SubAccountUserParameters] @go(User,[]SubAccountUserParameters)
}

#SubAccountUserObservation: {
	// Email of the user used by Logz for contacting them if needed. A valid email address consists of an email prefix and an email domain. The prefix and domain may contain only letters, numbers, underscores, periods and dashes. Changing this forces a new logz Sub Account to be created.
	email?: null | string @go(Email,*string)

	// First Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	firstName?: null | string @go(FirstName,*string)

	// Last Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	lastName?: null | string @go(LastName,*string)

	// Phone number of the user used by Logz for contacting them if needed. Possible values must be between 1 and 40 characters in length. Changing this forces a new logz Sub Account to be created.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#SubAccountUserParameters: {
	// Email of the user used by Logz for contacting them if needed. A valid email address consists of an email prefix and an email domain. The prefix and domain may contain only letters, numbers, underscores, periods and dashes. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Required
	email?: null | string @go(Email,*string)

	// First Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Required
	firstName?: null | string @go(FirstName,*string)

	// Last Name of the user. Possible values must be between 1 and 50 characters in length. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Required
	lastName?: null | string @go(LastName,*string)

	// Phone number of the user used by Logz for contacting them if needed. Possible values must be between 1 and 40 characters in length. Changing this forces a new logz Sub Account to be created.
	// +kubebuilder:validation:Required
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

// SubAccountSpec defines the desired state of SubAccount
#SubAccountSpec: {
	forProvider: #SubAccountParameters @go(ForProvider)
}

// SubAccountStatus defines the observed state of SubAccount.
#SubAccountStatus: {
	atProvider?: #SubAccountObservation @go(AtProvider)
}

// SubAccount is the Schema for the SubAccounts API. Manages a logz Sub Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SubAccount: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.user)",message="user is a required parameter"
	spec:    #SubAccountSpec   @go(Spec)
	status?: #SubAccountStatus @go(Status)
}

// SubAccountList contains a list of SubAccounts
#SubAccountList: {
	items: [...#SubAccount] @go(Items,[]SubAccount)
}
