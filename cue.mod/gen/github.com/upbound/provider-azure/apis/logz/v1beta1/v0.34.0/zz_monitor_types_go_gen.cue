// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/logz/v1beta1

package v1beta1

#MonitorObservation: {
	// Name of the Logz organization. Changing this forces a new logz Monitor to be created.
	companyName?: null | string @go(CompanyName,*string)

	// Whether the resource monitoring is enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the Enterprise App. Changing this forces a new logz Monitor to be created.
	enterpriseAppId?: null | string @go(EnterpriseAppID,*string)

	// The ID of the logz Monitor.
	id?: null | string @go(ID,*string)

	// The Azure Region where the logz Monitor should exist. Changing this forces a new logz Monitor to be created.
	location?: null | string @go(Location,*string)

	// The ID associated with the logz organization of this logz Monitor.
	logzOrganizationId?: null | string @go(LogzOrganizationID,*string)

	// A plan block as defined below. Changing this forces a new resource to be created.
	plan?: [...#PlanObservation] @go(Plan,[]PlanObservation)

	// The name of the Resource Group where the logz Monitor should exist. Changing this forces a new logz Monitor to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The single sign on url associated with the logz organization of this logz Monitor.
	singleSignOnUrl?: null | string @go(SingleSignOnURL,*string)

	// A mapping of tags which should be assigned to the logz Monitor.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A user block as defined below. Changing this forces a new resource to be created.
	user?: [...#UserObservation] @go(User,[]UserObservation)
}

#MonitorParameters: {
	// Name of the Logz organization. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Optional
	companyName?: null | string @go(CompanyName,*string)

	// Whether the resource monitoring is enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the Enterprise App. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Optional
	enterpriseAppId?: null | string @go(EnterpriseAppID,*string)

	// The Azure Region where the logz Monitor should exist. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// A plan block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	plan?: [...#PlanParameters] @go(Plan,[]PlanParameters)

	// The name of the Resource Group where the logz Monitor should exist. Changing this forces a new logz Monitor to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the logz Monitor.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A user block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	user?: [...#UserParameters] @go(User,[]UserParameters)
}

#PlanObservation: {
	// Different billing cycles. Possible values are MONTHLY or WEEKLY. Changing this forces a new logz Monitor to be created.
	billingCycle?: null | string @go(BillingCycle,*string)

	// Date when plan was applied. Changing this forces a new logz Monitor to be created.
	effectiveDate?: null | string @go(EffectiveDate,*string)

	// Plan id as published by Logz. The only possible value is 100gb14days. Defaults to 100gb14days. Changing this forces a new logz Monitor to be created.
	planId?: null | string @go(PlanID,*string)

	// Different usage types. Possible values are PAYG or COMMITTED. Changing this forces a new logz Monitor to be created.
	usageType?: null | string @go(UsageType,*string)
}

#PlanParameters: {
	// Different billing cycles. Possible values are MONTHLY or WEEKLY. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Required
	billingCycle?: null | string @go(BillingCycle,*string)

	// Date when plan was applied. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Required
	effectiveDate?: null | string @go(EffectiveDate,*string)

	// Plan id as published by Logz. The only possible value is 100gb14days. Defaults to 100gb14days. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Optional
	planId?: null | string @go(PlanID,*string)

	// Different usage types. Possible values are PAYG or COMMITTED. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Required
	usageType?: null | string @go(UsageType,*string)
}

#UserObservation: {
	// Email of the user used by Logz for contacting them if needed. Changing this forces a new logz Monitor to be created.
	email?: null | string @go(Email,*string)

	// First Name of the user. Changing this forces a new logz Monitor to be created.
	firstName?: null | string @go(FirstName,*string)

	// Last Name of the user. Changing this forces a new logz Monitor to be created.
	lastName?: null | string @go(LastName,*string)

	// Phone number of the user used by Logz for contacting them if needed. Changing this forces a new logz Monitor to be created.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#UserParameters: {
	// Email of the user used by Logz for contacting them if needed. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Required
	email?: null | string @go(Email,*string)

	// First Name of the user. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Required
	firstName?: null | string @go(FirstName,*string)

	// Last Name of the user. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Required
	lastName?: null | string @go(LastName,*string)

	// Phone number of the user used by Logz for contacting them if needed. Changing this forces a new logz Monitor to be created.
	// +kubebuilder:validation:Required
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

// MonitorSpec defines the desired state of Monitor
#MonitorSpec: {
	forProvider: #MonitorParameters @go(ForProvider)
}

// MonitorStatus defines the observed state of Monitor.
#MonitorStatus: {
	atProvider?: #MonitorObservation @go(AtProvider)
}

// Monitor is the Schema for the Monitors API. Manages a logz Monitor.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Monitor: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.plan)",message="plan is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.user)",message="user is a required parameter"
	spec:    #MonitorSpec   @go(Spec)
	status?: #MonitorStatus @go(Status)
}

// MonitorList contains a list of Monitors
#MonitorList: {
	items: [...#Monitor] @go(Items,[]Monitor)
}
