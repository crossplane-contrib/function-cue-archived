// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cosmosdb/v1beta1

package v1beta1

#SQLDedicatedGatewayInitParameters: {
	// The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between 1 and 5.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are Cosmos.D4s, Cosmos.D8s and Cosmos.D16s.
	instanceSize?: null | string @go(InstanceSize,*string)
}

#SQLDedicatedGatewayObservation: {
	// The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
	cosmosdbAccountId?: null | string @go(CosmosDBAccountID,*string)

	// The ID of the CosmosDB SQL Dedicated Gateway.
	id?: null | string @go(ID,*string)

	// The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between 1 and 5.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are Cosmos.D4s, Cosmos.D8s and Cosmos.D16s.
	instanceSize?: null | string @go(InstanceSize,*string)
}

#SQLDedicatedGatewayParameters: {
	// The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cosmosdb/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	cosmosdbAccountId?: null | string @go(CosmosDBAccountID,*string)

	// The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between 1 and 5.
	// +kubebuilder:validation:Optional
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are Cosmos.D4s, Cosmos.D8s and Cosmos.D16s.
	// +kubebuilder:validation:Optional
	instanceSize?: null | string @go(InstanceSize,*string)
}

// SQLDedicatedGatewaySpec defines the desired state of SQLDedicatedGateway
#SQLDedicatedGatewaySpec: {
	forProvider: #SQLDedicatedGatewayParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SQLDedicatedGatewayInitParameters @go(InitProvider)
}

// SQLDedicatedGatewayStatus defines the observed state of SQLDedicatedGateway.
#SQLDedicatedGatewayStatus: {
	atProvider?: #SQLDedicatedGatewayObservation @go(AtProvider)
}

// SQLDedicatedGateway is the Schema for the SQLDedicatedGateways API. Manages a SQL Dedicated Gateway within a Cosmos DB Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SQLDedicatedGateway: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceCount) || (has(self.initProvider) && has(self.initProvider.instanceCount))",message="spec.forProvider.instanceCount is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceSize) || (has(self.initProvider) && has(self.initProvider.instanceSize))",message="spec.forProvider.instanceSize is a required parameter"
	spec:    #SQLDedicatedGatewaySpec   @go(Spec)
	status?: #SQLDedicatedGatewayStatus @go(Status)
}

// SQLDedicatedGatewayList contains a list of SQLDedicatedGateways
#SQLDedicatedGatewayList: {
	items: [...#SQLDedicatedGateway] @go(Items,[]SQLDedicatedGateway)
}
