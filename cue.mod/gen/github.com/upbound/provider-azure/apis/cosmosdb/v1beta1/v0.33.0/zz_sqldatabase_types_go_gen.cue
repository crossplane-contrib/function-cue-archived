// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cosmosdb/v1beta1

package v1beta1

#SQLDatabaseAutoscaleSettingsObservation: {
	// The maximum throughput of the SQL database (RU/s). Must be between 1,000 and 1,000,000. Must be set in increments of 1,000. Conflicts with throughput.
	maxThroughput?: null | float64 @go(MaxThroughput,*float64)
}

#SQLDatabaseAutoscaleSettingsParameters: {
	// The maximum throughput of the SQL database (RU/s). Must be between 1,000 and 1,000,000. Must be set in increments of 1,000. Conflicts with throughput.
	// +kubebuilder:validation:Optional
	maxThroughput?: null | float64 @go(MaxThroughput,*float64)
}

#SQLDatabaseObservation: {
	// The name of the Cosmos DB SQL Database to create the table within. Changing this forces a new resource to be created.
	accountName?: null | string @go(AccountName,*string)

	// An autoscale_settings block as defined below.
	autoscaleSettings?: [...#SQLDatabaseAutoscaleSettingsObservation] @go(AutoscaleSettings,[]SQLDatabaseAutoscaleSettingsObservation)

	// The ID of the CosmosDB SQL Database.
	id?: null | string @go(ID,*string)

	// The name of the resource group in which the Cosmos DB SQL Database is created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The throughput of SQL database (RU/s). Must be set in increments of 100. The minimum value is 400. Do not set when azurerm_cosmosdb_account is configured with EnableServerless capability.
	throughput?: null | float64 @go(Throughput,*float64)
}

#SQLDatabaseParameters: {
	// The name of the Cosmos DB SQL Database to create the table within. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Account
	// +kubebuilder:validation:Optional
	accountName?: null | string @go(AccountName,*string)

	// An autoscale_settings block as defined below.
	// +kubebuilder:validation:Optional
	autoscaleSettings?: [...#SQLDatabaseAutoscaleSettingsParameters] @go(AutoscaleSettings,[]SQLDatabaseAutoscaleSettingsParameters)

	// The name of the resource group in which the Cosmos DB SQL Database is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The throughput of SQL database (RU/s). Must be set in increments of 100. The minimum value is 400. Do not set when azurerm_cosmosdb_account is configured with EnableServerless capability.
	// +kubebuilder:validation:Optional
	throughput?: null | float64 @go(Throughput,*float64)
}

// SQLDatabaseSpec defines the desired state of SQLDatabase
#SQLDatabaseSpec: {
	forProvider: #SQLDatabaseParameters @go(ForProvider)
}

// SQLDatabaseStatus defines the observed state of SQLDatabase.
#SQLDatabaseStatus: {
	atProvider?: #SQLDatabaseObservation @go(AtProvider)
}

// SQLDatabase is the Schema for the SQLDatabases API. Manages a SQL Database within a Cosmos DB Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SQLDatabase: {
	spec:    #SQLDatabaseSpec   @go(Spec)
	status?: #SQLDatabaseStatus @go(Status)
}

// SQLDatabaseList contains a list of SQLDatabases
#SQLDatabaseList: {
	items: [...#SQLDatabase] @go(Items,[]SQLDatabase)
}
