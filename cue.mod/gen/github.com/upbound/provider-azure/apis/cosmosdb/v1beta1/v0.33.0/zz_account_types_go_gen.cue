// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cosmosdb/v1beta1

package v1beta1

#AccountObservation: {
	// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to true.
	accessKeyMetadataWritesEnabled?: null | bool @go(AccessKeyMetadataWritesEnabled,*bool)

	// An analytical_storage block as defined below.
	analyticalStorage?: [...#AnalyticalStorageObservation] @go(AnalyticalStorage,[]AnalyticalStorageObservation)

	// Enable Analytical Storage option for this Cosmos DB account. Defaults to false. Enabling and then disabling analytical storage forces a new resource to be created.
	analyticalStorageEnabled?: null | bool @go(AnalyticalStorageEnabled,*bool)

	// A backup block as defined below.
	backup?: [...#BackupObservation] @go(Backup,[]BackupObservation)

	// The capabilities which should be enabled for this Cosmos DB account. Value is a capabilities block as defined below.
	capabilities?: [...#CapabilitiesObservation] @go(Capabilities,[]CapabilitiesObservation)

	// A capacity block as defined below.
	capacity?: [...#CapacityObservation] @go(Capacity,[]CapacityObservation)

	// Specifies a consistency_policy resource, used to define the consistency policy for this CosmosDB account.
	consistencyPolicy?: [...#ConsistencyPolicyObservation] @go(ConsistencyPolicy,[]ConsistencyPolicyObservation)

	// A cors_rule block as defined below.
	corsRule?: [...#CorsRuleObservation] @go(CorsRule,[]CorsRuleObservation)

	// The creation mode for the CosmosDB Account. Possible values are Default and Restore. Changing this forces a new resource to be created.
	createMode?: null | string @go(CreateMode,*string)

	// The default identity for accessing Key Vault. Possible values are FirstPartyIdentity, SystemAssignedIdentity or UserAssignedIdentity.
	defaultIdentityType?: null | string @go(DefaultIdentityType,*string)

	// Enable automatic failover for this Cosmos DB account.
	enableAutomaticFailover?: null | bool @go(EnableAutomaticFailover,*bool)

	// Enable the Free Tier pricing option for this Cosmos DB account. Defaults to false. Changing this forces a new resource to be created.
	enableFreeTier?: null | bool @go(EnableFreeTier,*bool)

	// Enable multiple write locations for this Cosmos DB account.
	enableMultipleWriteLocations?: null | bool @go(EnableMultipleWriteLocations,*bool)

	// The endpoint used to connect to the CosmosDB account.
	endpoint?: null | string @go(Endpoint,*string)

	// Specifies a geo_location resource, used to define where data should be replicated with the failover_priority 0 specifying the primary location. Value is a geo_location block as defined below.
	geoLocation?: [...#GeoLocationObservation] @go(GeoLocation,[]GeoLocationObservation)

	// The CosmosDB Account ID.
	id?: null | string @go(ID,*string)

	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
	ipRangeFilter?: null | string @go(IPRangeFilter,*string)

	// An identity block as defined below.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// Enables virtual network filtering for this Cosmos DB account.
	isVirtualNetworkFilterEnabled?: null | bool @go(IsVirtualNetworkFilterEnabled,*bool)

	// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// Specifies the Kind of CosmosDB to create - possible values are GlobalDocumentDB, MongoDB and Parse. Defaults to GlobalDocumentDB. Changing this forces a new resource to be created.
	kind?: null | string @go(Kind,*string)

	// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to false. Can be set only when using the SQL API.
	localAuthenticationDisabled?: null | bool @go(LocalAuthenticationDisabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The Server Version of a MongoDB account. Possible values are 4.2, 4.0, 3.6, and 3.2.
	mongoServerVersion?: null | string @go(MongoServerVersion,*string)

	// If Azure services can bypass ACLs. Defaults to false.
	networkAclBypassForAzureServices?: null | bool @go(NetworkACLBypassForAzureServices,*bool)

	// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
	networkAclBypassIds?: [...null | string] @go(NetworkACLBypassIds,[]*string)

	// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to Standard.
	offerType?: null | string @go(OfferType,*string)

	// Whether or not public network access is allowed for this CosmosDB account. Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// A list of read endpoints available for this CosmosDB account.
	readEndpoints?: [...null | string] @go(ReadEndpoints,[]*string)

	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A restore block as defined below.
	restore?: [...#RestoreObservation] @go(Restore,[]RestoreObservation)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies a virtual_network_rules resource, used to define which subnets are allowed to access this CosmosDB account.
	virtualNetworkRule?: [...#VirtualNetworkRuleObservation] @go(VirtualNetworkRule,[]VirtualNetworkRuleObservation)

	// A list of write endpoints available for this CosmosDB account.
	writeEndpoints?: [...null | string] @go(WriteEndpoints,[]*string)
}

#AccountParameters: {
	// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	accessKeyMetadataWritesEnabled?: null | bool @go(AccessKeyMetadataWritesEnabled,*bool)

	// An analytical_storage block as defined below.
	// +kubebuilder:validation:Optional
	analyticalStorage?: [...#AnalyticalStorageParameters] @go(AnalyticalStorage,[]AnalyticalStorageParameters)

	// Enable Analytical Storage option for this Cosmos DB account. Defaults to false. Enabling and then disabling analytical storage forces a new resource to be created.
	// +kubebuilder:validation:Optional
	analyticalStorageEnabled?: null | bool @go(AnalyticalStorageEnabled,*bool)

	// A backup block as defined below.
	// +kubebuilder:validation:Optional
	backup?: [...#BackupParameters] @go(Backup,[]BackupParameters)

	// The capabilities which should be enabled for this Cosmos DB account. Value is a capabilities block as defined below.
	// +kubebuilder:validation:Optional
	capabilities?: [...#CapabilitiesParameters] @go(Capabilities,[]CapabilitiesParameters)

	// A capacity block as defined below.
	// +kubebuilder:validation:Optional
	capacity?: [...#CapacityParameters] @go(Capacity,[]CapacityParameters)

	// Specifies a consistency_policy resource, used to define the consistency policy for this CosmosDB account.
	// +kubebuilder:validation:Optional
	consistencyPolicy?: [...#ConsistencyPolicyParameters] @go(ConsistencyPolicy,[]ConsistencyPolicyParameters)

	// A cors_rule block as defined below.
	// +kubebuilder:validation:Optional
	corsRule?: [...#CorsRuleParameters] @go(CorsRule,[]CorsRuleParameters)

	// The creation mode for the CosmosDB Account. Possible values are Default and Restore. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	createMode?: null | string @go(CreateMode,*string)

	// The default identity for accessing Key Vault. Possible values are FirstPartyIdentity, SystemAssignedIdentity or UserAssignedIdentity.
	// +kubebuilder:validation:Optional
	defaultIdentityType?: null | string @go(DefaultIdentityType,*string)

	// Enable automatic failover for this Cosmos DB account.
	// +kubebuilder:validation:Optional
	enableAutomaticFailover?: null | bool @go(EnableAutomaticFailover,*bool)

	// Enable the Free Tier pricing option for this Cosmos DB account. Defaults to false. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	enableFreeTier?: null | bool @go(EnableFreeTier,*bool)

	// Enable multiple write locations for this Cosmos DB account.
	// +kubebuilder:validation:Optional
	enableMultipleWriteLocations?: null | bool @go(EnableMultipleWriteLocations,*bool)

	// Specifies a geo_location resource, used to define where data should be replicated with the failover_priority 0 specifying the primary location. Value is a geo_location block as defined below.
	// +kubebuilder:validation:Optional
	geoLocation?: [...#GeoLocationParameters] @go(GeoLocation,[]GeoLocationParameters)

	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
	// +kubebuilder:validation:Optional
	ipRangeFilter?: null | string @go(IPRangeFilter,*string)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// Enables virtual network filtering for this Cosmos DB account.
	// +kubebuilder:validation:Optional
	isVirtualNetworkFilterEnabled?: null | bool @go(IsVirtualNetworkFilterEnabled,*bool)

	// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// Specifies the Kind of CosmosDB to create - possible values are GlobalDocumentDB, MongoDB and Parse. Defaults to GlobalDocumentDB. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	kind?: null | string @go(Kind,*string)

	// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to false. Can be set only when using the SQL API.
	// +kubebuilder:validation:Optional
	localAuthenticationDisabled?: null | bool @go(LocalAuthenticationDisabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The Server Version of a MongoDB account. Possible values are 4.2, 4.0, 3.6, and 3.2.
	// +kubebuilder:validation:Optional
	mongoServerVersion?: null | string @go(MongoServerVersion,*string)

	// If Azure services can bypass ACLs. Defaults to false.
	// +kubebuilder:validation:Optional
	networkAclBypassForAzureServices?: null | bool @go(NetworkACLBypassForAzureServices,*bool)

	// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
	// +kubebuilder:validation:Optional
	networkAclBypassIds?: [...null | string] @go(NetworkACLBypassIds,[]*string)

	// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to Standard.
	// +kubebuilder:validation:Optional
	offerType?: null | string @go(OfferType,*string)

	// Whether or not public network access is allowed for this CosmosDB account. Defaults to true.
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A restore block as defined below.
	// +kubebuilder:validation:Optional
	restore?: [...#RestoreParameters] @go(Restore,[]RestoreParameters)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies a virtual_network_rules resource, used to define which subnets are allowed to access this CosmosDB account.
	// +kubebuilder:validation:Optional
	virtualNetworkRule?: [...#VirtualNetworkRuleParameters] @go(VirtualNetworkRule,[]VirtualNetworkRuleParameters)
}

#AnalyticalStorageObservation: {
	// The schema type of the Analytical Storage for this Cosmos DB account. Possible values are FullFidelity and WellDefined.
	schemaType?: null | string @go(SchemaType,*string)
}

#AnalyticalStorageParameters: {
	// The schema type of the Analytical Storage for this Cosmos DB account. Possible values are FullFidelity and WellDefined.
	// +kubebuilder:validation:Required
	schemaType?: null | string @go(SchemaType,*string)
}

#BackupObservation: {
	// The interval in minutes between two backups. This is configurable only when type is Periodic. Possible values are between 60 and 1440.
	intervalInMinutes?: null | float64 @go(IntervalInMinutes,*float64)

	// The time in hours that each backup is retained. This is configurable only when type is Periodic. Possible values are between 8 and 720.
	retentionInHours?: null | float64 @go(RetentionInHours,*float64)

	// The storage redundancy is used to indicate the type of backup residency. This is configurable only when type is Periodic. Possible values are Geo, Local and Zone.
	storageRedundancy?: null | string @go(StorageRedundancy,*string)

	// The type of the backup. Possible values are Continuous and Periodic. Migration of Periodic to Continuous is one-way, changing Continuous to Periodic forces a new resource to be created.
	type?: null | string @go(Type,*string)
}

#BackupParameters: {
	// The interval in minutes between two backups. This is configurable only when type is Periodic. Possible values are between 60 and 1440.
	// +kubebuilder:validation:Optional
	intervalInMinutes?: null | float64 @go(IntervalInMinutes,*float64)

	// The time in hours that each backup is retained. This is configurable only when type is Periodic. Possible values are between 8 and 720.
	// +kubebuilder:validation:Optional
	retentionInHours?: null | float64 @go(RetentionInHours,*float64)

	// The storage redundancy is used to indicate the type of backup residency. This is configurable only when type is Periodic. Possible values are Geo, Local and Zone.
	// +kubebuilder:validation:Optional
	storageRedundancy?: null | string @go(StorageRedundancy,*string)

	// The type of the backup. Possible values are Continuous and Periodic. Migration of Periodic to Continuous is one-way, changing Continuous to Periodic forces a new resource to be created.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#CapabilitiesObservation: {
	// The capability to enable - Possible values are AllowSelfServeUpgradeToMongo36, DisableRateLimitingResponses, EnableAggregationPipeline, EnableCassandra, EnableGremlin, EnableMongo, EnableMongo16MBDocumentSupport, EnableMongoRetryableWrites, EnableMongoRoleBasedAccessControl, EnableServerless, EnableTable, EnableUniqueCompoundNestedDocs, MongoDBv3.4 and mongoEnableDocLevelTTL.
	name?: null | string @go(Name,*string)
}

#CapabilitiesParameters: {
	// The capability to enable - Possible values are AllowSelfServeUpgradeToMongo36, DisableRateLimitingResponses, EnableAggregationPipeline, EnableCassandra, EnableGremlin, EnableMongo, EnableMongo16MBDocumentSupport, EnableMongoRetryableWrites, EnableMongoRoleBasedAccessControl, EnableServerless, EnableTable, EnableUniqueCompoundNestedDocs, MongoDBv3.4 and mongoEnableDocLevelTTL.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)
}

#CapacityObservation: {
	// The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least -1. -1 means no limit.
	totalThroughputLimit?: null | float64 @go(TotalThroughputLimit,*float64)
}

#CapacityParameters: {
	// The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least -1. -1 means no limit.
	// +kubebuilder:validation:Required
	totalThroughputLimit?: null | float64 @go(TotalThroughputLimit,*float64)
}

#ConsistencyPolicyObservation: {
	// The Consistency Level to use for this CosmosDB Account - can be either BoundedStaleness, Eventual, Session, Strong or ConsistentPrefix.
	consistencyLevel?: null | string @go(ConsistencyLevel,*string)

	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.
	maxIntervalInSeconds?: null | float64 @go(MaxIntervalInSeconds,*float64)

	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is 10 – 2147483647. Defaults to 100. Required when consistency_level is set to BoundedStaleness.
	maxStalenessPrefix?: null | float64 @go(MaxStalenessPrefix,*float64)
}

#ConsistencyPolicyParameters: {
	// The Consistency Level to use for this CosmosDB Account - can be either BoundedStaleness, Eventual, Session, Strong or ConsistentPrefix.
	// +kubebuilder:validation:Required
	consistencyLevel?: null | string @go(ConsistencyLevel,*string)

	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.
	// +kubebuilder:validation:Optional
	maxIntervalInSeconds?: null | float64 @go(MaxIntervalInSeconds,*float64)

	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is 10 – 2147483647. Defaults to 100. Required when consistency_level is set to BoundedStaleness.
	// +kubebuilder:validation:Optional
	maxStalenessPrefix?: null | float64 @go(MaxStalenessPrefix,*float64)
}

#CorsRuleObservation: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP headers that are allowed to be executed by the origin. Valid options are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#CorsRuleParameters: {
	// A list of headers that are allowed to be a part of the cross-origin request.
	// +kubebuilder:validation:Required
	allowedHeaders: [...null | string] @go(AllowedHeaders,[]*string)

	// A list of HTTP headers that are allowed to be executed by the origin. Valid options are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.
	// +kubebuilder:validation:Required
	allowedMethods: [...null | string] @go(AllowedMethods,[]*string)

	// A list of origin domains that will be allowed by CORS.
	// +kubebuilder:validation:Required
	allowedOrigins: [...null | string] @go(AllowedOrigins,[]*string)

	// A list of response headers that are exposed to CORS clients.
	// +kubebuilder:validation:Required
	exposedHeaders: [...null | string] @go(ExposedHeaders,[]*string)

	// The number of seconds the client should cache a preflight response.
	// +kubebuilder:validation:Required
	maxAgeInSeconds?: null | float64 @go(MaxAgeInSeconds,*float64)
}

#DatabaseObservation: {
	// A list of the collection names for the restore request. Changing this forces a new resource to be created.
	collectionNames?: [...null | string] @go(CollectionNames,[]*string)

	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)
}

#DatabaseParameters: {
	// A list of the collection names for the restore request. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	collectionNames?: [...null | string] @go(CollectionNames,[]*string)

	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)
}

#GeoLocationObservation: {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority 0.
	failoverPriority?: null | float64 @go(FailoverPriority,*float64)

	// The ID of the virtual network subnet.
	id?: null | string @go(ID,*string)

	// The name of the Azure region to host replicated data.
	location?: null | string @go(Location,*string)

	// Should zone redundancy be enabled for this region? Defaults to false.
	zoneRedundant?: null | bool @go(ZoneRedundant,*bool)
}

#GeoLocationParameters: {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority 0.
	// +kubebuilder:validation:Required
	failoverPriority?: null | float64 @go(FailoverPriority,*float64)

	// The name of the Azure region to host replicated data.
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// Should zone redundancy be enabled for this region? Defaults to false.
	// +kubebuilder:validation:Optional
	zoneRedundant?: null | bool @go(ZoneRedundant,*bool)
}

#IdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID associated with this Managed Service Identity.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID associated with this Managed Service Identity.
	tenantId?: null | string @go(TenantID,*string)

	// The Type of Managed Identity assigned to this Cosmos account. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#IdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Type of Managed Identity assigned to this Cosmos account. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#RestoreObservation: {
	// A database block as defined below. Changing this forces a new resource to be created.
	database?: [...#DatabaseObservation] @go(Database,[]DatabaseObservation)

	// The creation time of the database or the collection (Datetime Format RFC 3339). Changing this forces a new resource to be created.
	restoreTimestampInUtc?: null | string @go(RestoreTimestampInUtc,*string)

	// The resource ID of the restorable database account from which the restore has to be initiated. The example is /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}. Changing this forces a new resource to be created.
	sourceCosmosdbAccountId?: null | string @go(SourceCosmosDBAccountID,*string)
}

#RestoreParameters: {
	// A database block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	database?: [...#DatabaseParameters] @go(Database,[]DatabaseParameters)

	// The creation time of the database or the collection (Datetime Format RFC 3339). Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	restoreTimestampInUtc?: null | string @go(RestoreTimestampInUtc,*string)

	// The resource ID of the restorable database account from which the restore has to be initiated. The example is /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Account
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	sourceCosmosdbAccountId?: null | string @go(SourceCosmosDBAccountID,*string)
}

#VirtualNetworkRuleObservation: {
	// The ID of the virtual network subnet.
	id?: null | string @go(ID,*string)

	// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to false.
	ignoreMissingVnetServiceEndpoint?: null | bool @go(IgnoreMissingVnetServiceEndpoint,*bool)
}

#VirtualNetworkRuleParameters: {
	// The ID of the virtual network subnet.
	// +kubebuilder:validation:Required
	id?: null | string @go(ID,*string)

	// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to false.
	// +kubebuilder:validation:Optional
	ignoreMissingVnetServiceEndpoint?: null | bool @go(IgnoreMissingVnetServiceEndpoint,*bool)
}

// AccountSpec defines the desired state of Account
#AccountSpec: {
	forProvider: #AccountParameters @go(ForProvider)
}

// AccountStatus defines the observed state of Account.
#AccountStatus: {
	atProvider?: #AccountObservation @go(AtProvider)
}

// Account is the Schema for the Accounts API. Manages a CosmosDB (formally DocumentDB) Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Account: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.consistencyPolicy)",message="consistencyPolicy is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.geoLocation)",message="geoLocation is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.offerType)",message="offerType is a required parameter"
	spec:    #AccountSpec   @go(Spec)
	status?: #AccountStatus @go(Status)
}

// AccountList contains a list of Accounts
#AccountList: {
	items: [...#Account] @go(Items,[]Account)
}
