// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/logic/v1beta1

package v1beta1

#AppTriggerHTTPRequestInitParameters: {
	// Specifies the HTTP Method which the request be using. Possible values include DELETE, GET, PATCH, POST or PUT.
	method?: null | string @go(Method,*string)

	// Specifies the Relative Path used for this Request.
	relativePath?: null | string @go(RelativePath,*string)

	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	schema?: null | string @go(Schema,*string)
}

#AppTriggerHTTPRequestObservation: {
	// The URL for the workflow trigger
	callbackUrl?: null | string @go(CallbackURL,*string)

	// The ID of the HTTP Request Trigger within the Logic App Workflow.
	id?: null | string @go(ID,*string)

	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	logicAppId?: null | string @go(LogicAppID,*string)

	// Specifies the HTTP Method which the request be using. Possible values include DELETE, GET, PATCH, POST or PUT.
	method?: null | string @go(Method,*string)

	// Specifies the Relative Path used for this Request.
	relativePath?: null | string @go(RelativePath,*string)

	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	schema?: null | string @go(Schema,*string)
}

#AppTriggerHTTPRequestParameters: {
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/logic/v1beta1.AppWorkflow
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	logicAppId?: null | string @go(LogicAppID,*string)

	// Specifies the HTTP Method which the request be using. Possible values include DELETE, GET, PATCH, POST or PUT.
	// +kubebuilder:validation:Optional
	method?: null | string @go(Method,*string)

	// Specifies the Relative Path used for this Request.
	// +kubebuilder:validation:Optional
	relativePath?: null | string @go(RelativePath,*string)

	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	// +kubebuilder:validation:Optional
	schema?: null | string @go(Schema,*string)
}

// AppTriggerHTTPRequestSpec defines the desired state of AppTriggerHTTPRequest
#AppTriggerHTTPRequestSpec: {
	forProvider: #AppTriggerHTTPRequestParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AppTriggerHTTPRequestInitParameters @go(InitProvider)
}

// AppTriggerHTTPRequestStatus defines the observed state of AppTriggerHTTPRequest.
#AppTriggerHTTPRequestStatus: {
	atProvider?: #AppTriggerHTTPRequestObservation @go(AtProvider)
}

// AppTriggerHTTPRequest is the Schema for the AppTriggerHTTPRequests API. Manages a HTTP Request Trigger within a Logic App Workflow
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#AppTriggerHTTPRequest: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.schema) || (has(self.initProvider) && has(self.initProvider.schema))",message="spec.forProvider.schema is a required parameter"
	spec:    #AppTriggerHTTPRequestSpec   @go(Spec)
	status?: #AppTriggerHTTPRequestStatus @go(Status)
}

// AppTriggerHTTPRequestList contains a list of AppTriggerHTTPRequests
#AppTriggerHTTPRequestList: {
	items: [...#AppTriggerHTTPRequest] @go(Items,[]AppTriggerHTTPRequest)
}
