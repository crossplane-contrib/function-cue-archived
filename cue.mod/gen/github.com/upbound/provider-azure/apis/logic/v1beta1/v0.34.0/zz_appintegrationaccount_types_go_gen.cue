// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/logic/v1beta1

package v1beta1

#AppIntegrationAccountObservation: {
	// The ID of the Logic App Integration Account.
	id?: null | string @go(ID,*string)

	// The resource ID of the Integration Service Environment. Changing this forces a new Logic App Integration Account to be created.
	integrationServiceEnvironmentId?: null | string @go(IntegrationServiceEnvironmentID,*string)

	// The Azure Region where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
	location?: null | string @go(Location,*string)

	// The name which should be used for this Logic App Integration Account. Changing this forces a new Logic App Integration Account to be created.
	name?: null | string @go(Name,*string)

	// The name of the Resource Group where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU name of the Logic App Integration Account. Possible Values are Basic, Free and Standard.
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags which should be assigned to the Logic App Integration Account.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#AppIntegrationAccountParameters: {
	// The resource ID of the Integration Service Environment. Changing this forces a new Logic App Integration Account to be created.
	// +kubebuilder:validation:Optional
	integrationServiceEnvironmentId?: null | string @go(IntegrationServiceEnvironmentID,*string)

	// The Azure Region where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name which should be used for this Logic App Integration Account. Changing this forces a new Logic App Integration Account to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The name of the Resource Group where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU name of the Logic App Integration Account. Possible Values are Basic, Free and Standard.
	// +kubebuilder:validation:Optional
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags which should be assigned to the Logic App Integration Account.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// AppIntegrationAccountSpec defines the desired state of AppIntegrationAccount
#AppIntegrationAccountSpec: {
	forProvider: #AppIntegrationAccountParameters @go(ForProvider)
}

// AppIntegrationAccountStatus defines the observed state of AppIntegrationAccount.
#AppIntegrationAccountStatus: {
	atProvider?: #AppIntegrationAccountObservation @go(AtProvider)
}

// AppIntegrationAccount is the Schema for the AppIntegrationAccounts API. Manages a Logic App Integration Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#AppIntegrationAccount: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.skuName)",message="skuName is a required parameter"
	spec:    #AppIntegrationAccountSpec   @go(Spec)
	status?: #AppIntegrationAccountStatus @go(Status)
}

// AppIntegrationAccountList contains a list of AppIntegrationAccounts
#AppIntegrationAccountList: {
	items: [...#AppIntegrationAccount] @go(Items,[]AppIntegrationAccount)
}
