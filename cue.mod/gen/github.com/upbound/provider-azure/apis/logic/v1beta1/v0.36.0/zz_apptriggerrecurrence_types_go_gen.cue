// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/logic/v1beta1

package v1beta1

#AppTriggerRecurrenceInitParameters: {
	// Specifies the Frequency at which this Trigger should be run. Possible values include Month, Week, Day, Hour, Minute and Second.
	frequency?: null | string @go(Frequency,*string)

	// Specifies interval used for the Frequency, for example a value of 4 for interval and hour for frequency would run the Trigger every 4 hours.
	interval?: null | float64 @go(Interval,*float64)

	// A schedule block as specified below.
	schedule?: [...#AppTriggerRecurrenceScheduleInitParameters] @go(Schedule,[]AppTriggerRecurrenceScheduleInitParameters)

	// Specifies the start date and time for this trigger in RFC3339 format: 2000-01-02T03:04:05Z.
	startTime?: null | string @go(StartTime,*string)

	// Specifies the time zone for this trigger. Supported time zone options are listed here
	timeZone?: null | string @go(TimeZone,*string)
}

#AppTriggerRecurrenceObservation: {
	// Specifies the Frequency at which this Trigger should be run. Possible values include Month, Week, Day, Hour, Minute and Second.
	frequency?: null | string @go(Frequency,*string)

	// The ID of the Recurrence Trigger within the Logic App Workflow.
	id?: null | string @go(ID,*string)

	// Specifies interval used for the Frequency, for example a value of 4 for interval and hour for frequency would run the Trigger every 4 hours.
	interval?: null | float64 @go(Interval,*float64)

	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	logicAppId?: null | string @go(LogicAppID,*string)

	// A schedule block as specified below.
	schedule?: [...#AppTriggerRecurrenceScheduleObservation] @go(Schedule,[]AppTriggerRecurrenceScheduleObservation)

	// Specifies the start date and time for this trigger in RFC3339 format: 2000-01-02T03:04:05Z.
	startTime?: null | string @go(StartTime,*string)

	// Specifies the time zone for this trigger. Supported time zone options are listed here
	timeZone?: null | string @go(TimeZone,*string)
}

#AppTriggerRecurrenceParameters: {
	// Specifies the Frequency at which this Trigger should be run. Possible values include Month, Week, Day, Hour, Minute and Second.
	// +kubebuilder:validation:Optional
	frequency?: null | string @go(Frequency,*string)

	// Specifies interval used for the Frequency, for example a value of 4 for interval and hour for frequency would run the Trigger every 4 hours.
	// +kubebuilder:validation:Optional
	interval?: null | float64 @go(Interval,*float64)

	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/logic/v1beta1.AppWorkflow
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	logicAppId?: null | string @go(LogicAppID,*string)

	// A schedule block as specified below.
	// +kubebuilder:validation:Optional
	schedule?: [...#AppTriggerRecurrenceScheduleParameters] @go(Schedule,[]AppTriggerRecurrenceScheduleParameters)

	// Specifies the start date and time for this trigger in RFC3339 format: 2000-01-02T03:04:05Z.
	// +kubebuilder:validation:Optional
	startTime?: null | string @go(StartTime,*string)

	// Specifies the time zone for this trigger. Supported time zone options are listed here
	// +kubebuilder:validation:Optional
	timeZone?: null | string @go(TimeZone,*string)
}

#AppTriggerRecurrenceScheduleInitParameters: {
	// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
	atTheseHours?: [...null | float64] @go(AtTheseHours,[]*float64)

	// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
	atTheseMinutes?: [...null | float64] @go(AtTheseMinutes,[]*float64)

	// Specifies a list of days when the trigger should run. Valid values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, and Sunday.
	onTheseDays?: [...null | string] @go(OnTheseDays,[]*string)
}

#AppTriggerRecurrenceScheduleObservation: {
	// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
	atTheseHours?: [...null | float64] @go(AtTheseHours,[]*float64)

	// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
	atTheseMinutes?: [...null | float64] @go(AtTheseMinutes,[]*float64)

	// Specifies a list of days when the trigger should run. Valid values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, and Sunday.
	onTheseDays?: [...null | string] @go(OnTheseDays,[]*string)
}

#AppTriggerRecurrenceScheduleParameters: {
	// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
	// +kubebuilder:validation:Optional
	atTheseHours?: [...null | float64] @go(AtTheseHours,[]*float64)

	// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
	// +kubebuilder:validation:Optional
	atTheseMinutes?: [...null | float64] @go(AtTheseMinutes,[]*float64)

	// Specifies a list of days when the trigger should run. Valid values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, and Sunday.
	// +kubebuilder:validation:Optional
	onTheseDays?: [...null | string] @go(OnTheseDays,[]*string)
}

// AppTriggerRecurrenceSpec defines the desired state of AppTriggerRecurrence
#AppTriggerRecurrenceSpec: {
	forProvider: #AppTriggerRecurrenceParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AppTriggerRecurrenceInitParameters @go(InitProvider)
}

// AppTriggerRecurrenceStatus defines the observed state of AppTriggerRecurrence.
#AppTriggerRecurrenceStatus: {
	atProvider?: #AppTriggerRecurrenceObservation @go(AtProvider)
}

// AppTriggerRecurrence is the Schema for the AppTriggerRecurrences API. Manages a Recurrence Trigger within a Logic App Workflow
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#AppTriggerRecurrence: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.frequency) || has(self.initProvider.frequency)",message="frequency is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.interval) || has(self.initProvider.interval)",message="interval is a required parameter"
	spec:    #AppTriggerRecurrenceSpec   @go(Spec)
	status?: #AppTriggerRecurrenceStatus @go(Status)
}

// AppTriggerRecurrenceList contains a list of AppTriggerRecurrences
#AppTriggerRecurrenceList: {
	items: [...#AppTriggerRecurrence] @go(Items,[]AppTriggerRecurrence)
}
