// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/logic/v1beta1

package v1beta1

#AppIntegrationAccountBatchConfigurationInitParameters: {
	// The batch group name of the Logic App Integration Batch Configuration. Changing this forces a new resource to be created.
	batchGroupName?: null | string @go(BatchGroupName,*string)

	// A JSON mapping of any Metadata for this Logic App Integration Account Batch Configuration.
	metadata?: {[string]: null | string} @go(Metadata,map[string]*string)

	// The name which should be used for this Logic App Integration Account Batch Configuration. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// A release_criteria block as documented below, which is used to select the criteria to meet before processing each batch.
	releaseCriteria?: [...#ReleaseCriteriaInitParameters] @go(ReleaseCriteria,[]ReleaseCriteriaInitParameters)
}

#AppIntegrationAccountBatchConfigurationObservation: {
	// The batch group name of the Logic App Integration Batch Configuration. Changing this forces a new resource to be created.
	batchGroupName?: null | string @go(BatchGroupName,*string)

	// The ID of the Logic App Integration Account Batch Configuration.
	id?: null | string @go(ID,*string)

	// The name of the Logic App Integration Account. Changing this forces a new resource to be created.
	integrationAccountName?: null | string @go(IntegrationAccountName,*string)

	// A JSON mapping of any Metadata for this Logic App Integration Account Batch Configuration.
	metadata?: {[string]: null | string} @go(Metadata,map[string]*string)

	// The name which should be used for this Logic App Integration Account Batch Configuration. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// A release_criteria block as documented below, which is used to select the criteria to meet before processing each batch.
	releaseCriteria?: [...#ReleaseCriteriaObservation] @go(ReleaseCriteria,[]ReleaseCriteriaObservation)

	// The name of the Resource Group where the Logic App Integration Account Batch Configuration should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#AppIntegrationAccountBatchConfigurationParameters: {
	// The batch group name of the Logic App Integration Batch Configuration. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	batchGroupName?: null | string @go(BatchGroupName,*string)

	// The name of the Logic App Integration Account. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/logic/v1beta1.AppIntegrationAccount
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	integrationAccountName?: null | string @go(IntegrationAccountName,*string)

	// A JSON mapping of any Metadata for this Logic App Integration Account Batch Configuration.
	// +kubebuilder:validation:Optional
	metadata?: {[string]: null | string} @go(Metadata,map[string]*string)

	// The name which should be used for this Logic App Integration Account Batch Configuration. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A release_criteria block as documented below, which is used to select the criteria to meet before processing each batch.
	// +kubebuilder:validation:Optional
	releaseCriteria?: [...#ReleaseCriteriaParameters] @go(ReleaseCriteria,[]ReleaseCriteriaParameters)

	// The name of the Resource Group where the Logic App Integration Account Batch Configuration should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#MonthlyInitParameters: {
	// The occurrence of the week within the month.
	week?: null | float64 @go(Week,*float64)

	// The day of the occurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	weekday?: null | string @go(Weekday,*string)
}

#MonthlyObservation: {
	// The occurrence of the week within the month.
	week?: null | float64 @go(Week,*float64)

	// The day of the occurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	weekday?: null | string @go(Weekday,*string)
}

#MonthlyParameters: {
	// The occurrence of the week within the month.
	// +kubebuilder:validation:Optional
	week?: null | float64 @go(Week,*float64)

	// The day of the occurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	// +kubebuilder:validation:Optional
	weekday?: null | string @go(Weekday,*string)
}

#RecurrenceInitParameters: {
	// The end time of the schedule, formatted as an RFC3339 string.
	endTime?: null | string @go(EndTime,*string)

	// The frequency of the schedule. Possible values are Day, Hour, Minute, Month, NotSpecified, Second, Week and Year.
	frequency?: null | string @go(Frequency,*string)

	// The number of frequencys between runs.
	interval?: null | float64 @go(Interval,*float64)

	// A schedule block as documented below.
	schedule?: [...#ScheduleInitParameters] @go(Schedule,[]ScheduleInitParameters)

	// The start time of the schedule, formatted as an RFC3339 string.
	startTime?: null | string @go(StartTime,*string)

	// The timezone of the start/end time.
	timeZone?: null | string @go(TimeZone,*string)
}

#RecurrenceObservation: {
	// The end time of the schedule, formatted as an RFC3339 string.
	endTime?: null | string @go(EndTime,*string)

	// The frequency of the schedule. Possible values are Day, Hour, Minute, Month, NotSpecified, Second, Week and Year.
	frequency?: null | string @go(Frequency,*string)

	// The number of frequencys between runs.
	interval?: null | float64 @go(Interval,*float64)

	// A schedule block as documented below.
	schedule?: [...#ScheduleObservation] @go(Schedule,[]ScheduleObservation)

	// The start time of the schedule, formatted as an RFC3339 string.
	startTime?: null | string @go(StartTime,*string)

	// The timezone of the start/end time.
	timeZone?: null | string @go(TimeZone,*string)
}

#RecurrenceParameters: {
	// The end time of the schedule, formatted as an RFC3339 string.
	// +kubebuilder:validation:Optional
	endTime?: null | string @go(EndTime,*string)

	// The frequency of the schedule. Possible values are Day, Hour, Minute, Month, NotSpecified, Second, Week and Year.
	// +kubebuilder:validation:Optional
	frequency?: null | string @go(Frequency,*string)

	// The number of frequencys between runs.
	// +kubebuilder:validation:Optional
	interval?: null | float64 @go(Interval,*float64)

	// A schedule block as documented below.
	// +kubebuilder:validation:Optional
	schedule?: [...#ScheduleParameters] @go(Schedule,[]ScheduleParameters)

	// The start time of the schedule, formatted as an RFC3339 string.
	// +kubebuilder:validation:Optional
	startTime?: null | string @go(StartTime,*string)

	// The timezone of the start/end time.
	// +kubebuilder:validation:Optional
	timeZone?: null | string @go(TimeZone,*string)
}

#ReleaseCriteriaInitParameters: {
	// The batch size in bytes for the Logic App Integration Batch Configuration.
	batchSize?: null | float64 @go(BatchSize,*float64)

	// The message count for the Logic App Integration Batch Configuration.
	messageCount?: null | float64 @go(MessageCount,*float64)

	// A recurrence block as documented below.
	recurrence?: [...#RecurrenceInitParameters] @go(Recurrence,[]RecurrenceInitParameters)
}

#ReleaseCriteriaObservation: {
	// The batch size in bytes for the Logic App Integration Batch Configuration.
	batchSize?: null | float64 @go(BatchSize,*float64)

	// The message count for the Logic App Integration Batch Configuration.
	messageCount?: null | float64 @go(MessageCount,*float64)

	// A recurrence block as documented below.
	recurrence?: [...#RecurrenceObservation] @go(Recurrence,[]RecurrenceObservation)
}

#ReleaseCriteriaParameters: {
	// The batch size in bytes for the Logic App Integration Batch Configuration.
	// +kubebuilder:validation:Optional
	batchSize?: null | float64 @go(BatchSize,*float64)

	// The message count for the Logic App Integration Batch Configuration.
	// +kubebuilder:validation:Optional
	messageCount?: null | float64 @go(MessageCount,*float64)

	// A recurrence block as documented below.
	// +kubebuilder:validation:Optional
	recurrence?: [...#RecurrenceParameters] @go(Recurrence,[]RecurrenceParameters)
}

#ScheduleInitParameters: {
	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
	hours?: [...null | float64] @go(Hours,[]*float64)

	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	minutes?: [...null | float64] @go(Minutes,[]*float64)

	// A list of days of the month that the job should execute on.
	monthDays?: [...null | float64] @go(MonthDays,[]*float64)

	// A monthly block as documented below.
	monthly?: [...#MonthlyInitParameters] @go(Monthly,[]MonthlyInitParameters)

	// A list of days of the week that the job should execute on. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	weekDays?: [...null | string] @go(WeekDays,[]*string)
}

#ScheduleObservation: {
	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
	hours?: [...null | float64] @go(Hours,[]*float64)

	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	minutes?: [...null | float64] @go(Minutes,[]*float64)

	// A list of days of the month that the job should execute on.
	monthDays?: [...null | float64] @go(MonthDays,[]*float64)

	// A monthly block as documented below.
	monthly?: [...#MonthlyObservation] @go(Monthly,[]MonthlyObservation)

	// A list of days of the week that the job should execute on. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	weekDays?: [...null | string] @go(WeekDays,[]*string)
}

#ScheduleParameters: {
	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
	// +kubebuilder:validation:Optional
	hours?: [...null | float64] @go(Hours,[]*float64)

	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	// +kubebuilder:validation:Optional
	minutes?: [...null | float64] @go(Minutes,[]*float64)

	// A list of days of the month that the job should execute on.
	// +kubebuilder:validation:Optional
	monthDays?: [...null | float64] @go(MonthDays,[]*float64)

	// A monthly block as documented below.
	// +kubebuilder:validation:Optional
	monthly?: [...#MonthlyParameters] @go(Monthly,[]MonthlyParameters)

	// A list of days of the week that the job should execute on. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	// +kubebuilder:validation:Optional
	weekDays?: [...null | string] @go(WeekDays,[]*string)
}

// AppIntegrationAccountBatchConfigurationSpec defines the desired state of AppIntegrationAccountBatchConfiguration
#AppIntegrationAccountBatchConfigurationSpec: {
	forProvider: #AppIntegrationAccountBatchConfigurationParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AppIntegrationAccountBatchConfigurationInitParameters @go(InitProvider)
}

// AppIntegrationAccountBatchConfigurationStatus defines the observed state of AppIntegrationAccountBatchConfiguration.
#AppIntegrationAccountBatchConfigurationStatus: {
	atProvider?: #AppIntegrationAccountBatchConfigurationObservation @go(AtProvider)
}

// AppIntegrationAccountBatchConfiguration is the Schema for the AppIntegrationAccountBatchConfigurations API. Manages a Logic App Integration Account Batch Configuration.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#AppIntegrationAccountBatchConfiguration: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.batchGroupName) || (has(self.initProvider) && has(self.initProvider.batchGroupName))",message="spec.forProvider.batchGroupName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.releaseCriteria) || (has(self.initProvider) && has(self.initProvider.releaseCriteria))",message="spec.forProvider.releaseCriteria is a required parameter"
	spec:    #AppIntegrationAccountBatchConfigurationSpec   @go(Spec)
	status?: #AppIntegrationAccountBatchConfigurationStatus @go(Status)
}

// AppIntegrationAccountBatchConfigurationList contains a list of AppIntegrationAccountBatchConfigurations
#AppIntegrationAccountBatchConfigurationList: {
	items: [...#AppIntegrationAccountBatchConfiguration] @go(Items,[]AppIntegrationAccountBatchConfiguration)
}
