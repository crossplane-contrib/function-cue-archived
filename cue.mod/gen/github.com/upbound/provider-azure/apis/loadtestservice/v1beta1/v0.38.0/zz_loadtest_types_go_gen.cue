// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/loadtestservice/v1beta1

package v1beta1

#IdentityInitParameters: {
	type?: null | string @go(Type,*string)
}

#IdentityObservation: {
	// The ID of the Load Test.
	principalId?: null | string @go(PrincipalID,*string)

	// The ID of the Load Test.
	tenantId?: null | string @go(TenantID,*string)
	type?:     null | string @go(Type,*string)
}

#IdentityParameters: {
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#LoadTestInitParameters: {
	// Description of the resource. Changing this forces a new Load Test to be created.
	description?: null | string @go(Description,*string)

	// Specifies the Managed Identity which should be assigned to this Load Test.
	identity?: [...#IdentityInitParameters] @go(Identity,[]IdentityInitParameters)

	// The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
	location?: null | string @go(Location,*string)

	// A mapping of tags which should be assigned to the Load Test.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#LoadTestObservation: {
	// Resource data plane URI.
	dataPlaneUri?: null | string @go(DataPlaneURI,*string)

	// Description of the resource. Changing this forces a new Load Test to be created.
	description?: null | string @go(Description,*string)

	// The ID of the Load Test.
	id?: null | string @go(ID,*string)

	// Specifies the Managed Identity which should be assigned to this Load Test.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
	location?: null | string @go(Location,*string)

	// Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Load Test.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#LoadTestParameters: {
	// Description of the resource. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies the Managed Identity which should be assigned to this Load Test.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Load Test.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// LoadTestSpec defines the desired state of LoadTest
#LoadTestSpec: {
	forProvider: #LoadTestParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #LoadTestInitParameters @go(InitProvider)
}

// LoadTestStatus defines the observed state of LoadTest.
#LoadTestStatus: {
	atProvider?: #LoadTestObservation @go(AtProvider)
}

// LoadTest is the Schema for the LoadTests API. Manages a Load Test.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LoadTest: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #LoadTestSpec   @go(Spec)
	status?: #LoadTestStatus @go(Status)
}

// LoadTestList contains a list of LoadTests
#LoadTestList: {
	items: [...#LoadTest] @go(Items,[]LoadTest)
}
