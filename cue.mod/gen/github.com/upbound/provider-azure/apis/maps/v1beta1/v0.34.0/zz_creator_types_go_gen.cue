// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/maps/v1beta1

package v1beta1

#CreatorObservation: {
	// The ID of the Azure Maps Creator.
	id?: null | string @go(ID,*string)

	// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
	mapsAccountId?: null | string @go(MapsAccountID,*string)

	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	storageUnits?: null | float64 @go(StorageUnits,*float64)

	// A mapping of tags which should be assigned to the Azure Maps Creator.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#CreatorParameters: {
	// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/maps/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	mapsAccountId?: null | string @go(MapsAccountID,*string)

	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	// +kubebuilder:validation:Optional
	storageUnits?: null | float64 @go(StorageUnits,*float64)

	// A mapping of tags which should be assigned to the Azure Maps Creator.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// CreatorSpec defines the desired state of Creator
#CreatorSpec: {
	forProvider: #CreatorParameters @go(ForProvider)
}

// CreatorStatus defines the observed state of Creator.
#CreatorStatus: {
	atProvider?: #CreatorObservation @go(AtProvider)
}

// Creator is the Schema for the Creators API. Manages an Azure Maps Creator.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Creator: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.storageUnits)",message="storageUnits is a required parameter"
	spec:    #CreatorSpec   @go(Spec)
	status?: #CreatorStatus @go(Status)
}

// CreatorList contains a list of Creators
#CreatorList: {
	items: [...#Creator] @go(Items,[]Creator)
}
