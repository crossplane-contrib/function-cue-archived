// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/containerservice/v1beta1

package v1beta1

#KubernetesClusterNodePoolInitParameters: {
	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	capacityReservationGroupId?: null | string @go(CapacityReservationGroupID,*string)

	// Specifies whether to trust a Custom CA.
	customCaTrustEnabled?: null | bool @go(CustomCATrustEnabled,*bool)

	// Whether to enable auto-scaler.
	enableAutoScaling?: null | bool @go(EnableAutoScaling,*bool)

	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	enableHostEncryption?: null | bool @go(EnableHostEncryption,*bool)

	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	enableNodePublicIp?: null | bool @go(EnableNodePublicIP,*bool)

	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
	evictionPolicy?: null | string @go(EvictionPolicy,*string)

	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	fipsEnabled?: null | bool @go(FipsEnabled,*bool)

	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	hostGroupId?: null | string @go(HostGroupID,*string)

	// A kubelet_config block as defined below. Changing this forces a new resource to be created.
	kubeletConfig?: [...#KubernetesClusterNodePoolKubeletConfigInitParameters] @go(KubeletConfig,[]KubernetesClusterNodePoolKubeletConfigInitParameters)

	// The type of disk used by kubelet. Possible values are OS and Temporary.
	kubeletDiskType?: null | string @go(KubeletDiskType,*string)

	// A linux_os_config block as defined below. Changing this forces a new resource to be created.
	linuxOsConfig?: [...#KubernetesClusterNodePoolLinuxOsConfigInitParameters] @go(LinuxOsConfig,[]KubernetesClusterNodePoolLinuxOsConfigInitParameters)

	// The maximum number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 and must be greater than or equal to min_count.
	maxCount?: null | float64 @go(MaxCount,*float64)

	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	maxPods?: null | float64 @go(MaxPods,*float64)

	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	messageOfTheDay?: null | string @go(MessageOfTheDay,*string)

	// The minimum number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 and must be less than or equal to max_count.
	minCount?: null | float64 @go(MinCount,*float64)

	// Should this Node Pool be used for System or User resources? Possible values are System and User. Defaults to User.
	mode?: null | string @go(Mode,*string)

	// The initial number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 (inclusive) for user pools and between 1 and 1000 (inclusive) for system pools and must be a value in the range min_count - max_count.
	nodeCount?: null | float64 @go(NodeCount,*float64)

	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	nodeLabels?: {[string]: null | string} @go(NodeLabels,map[string]*string)

	// A node_network_profile block as documented below.
	nodeNetworkProfile?: [...#KubernetesClusterNodePoolNodeNetworkProfileInitParameters] @go(NodeNetworkProfile,[]KubernetesClusterNodePoolNodeNetworkProfileInitParameters)

	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. enable_node_public_ip should be true. Changing this forces a new resource to be created.
	nodePublicIpPrefixId?: null | string @go(NodePublicIPPrefixID,*string)

	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g key=value:NoSchedule). Changing this forces a new resource to be created.
	nodeTaints?: [...null | string] @go(NodeTaints,[]*string)

	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
	orchestratorVersion?: null | string @go(OrchestratorVersion,*string)

	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	osDiskSizeGb?: null | float64 @go(OsDiskSizeGb,*float64)

	// The type of disk which should be used for the Operating System. Possible values are Ephemeral and Managed. Defaults to Managed. Changing this forces a new resource to be created.
	osDiskType?: null | string @go(OsDiskType,*string)

	// Specifies the OS SKU used by the agent pool. Possible values include: Ubuntu, CBLMariner, Mariner, Windows2019, Windows2022. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. Changing this forces a new resource to be created.
	osSku?: null | string @go(OsSku,*string)

	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are Linux and Windows. Defaults to Linux.
	osType?: null | string @go(OsType,*string)

	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.
	priority?: null | string @go(Priority,*string)

	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	proximityPlacementGroupId?: null | string @go(ProximityPlacementGroupID,*string)

	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are Delete and Deallocate. Defaults to Delete.
	scaleDownMode?: null | string @go(ScaleDownMode,*string)

	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	snapshotId?: null | string @go(SnapshotID,*string)

	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are -1 (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	spotMaxPrice?: null | float64 @go(SpotMaxPrice,*float64)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to false. See the documentation for more information. Changing this forces a new resource to be created.
	ultraSsdEnabled?: null | bool @go(UltraSsdEnabled,*bool)

	// A upgrade_settings block as documented below.
	upgradeSettings?: [...#KubernetesClusterNodePoolUpgradeSettingsInitParameters] @go(UpgradeSettings,[]KubernetesClusterNodePoolUpgradeSettingsInitParameters)

	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	vmSize?: null | string @go(VMSize,*string)

	// A windows_profile block as documented below. Changing this forces a new resource to be created.
	windowsProfile?: [...#KubernetesClusterNodePoolWindowsProfileInitParameters] @go(WindowsProfile,[]KubernetesClusterNodePoolWindowsProfileInitParameters)

	// Used to specify the workload runtime. Allowed values are OCIContainer, WasmWasi and KataMshvVmIsolation.
	workloadRuntime?: null | string @go(WorkloadRuntime,*string)

	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#KubernetesClusterNodePoolKubeletConfigInitParameters: {
	// Specifies the allow list of unsafe sysctls command or patterns (ending in *). Changing this forces a new resource to be created.
	allowedUnsafeSysctls?: [...null | string] @go(AllowedUnsafeSysctls,[]*string)

	// Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created.
	cpuCfsQuotaEnabled?: null | bool @go(CPUCfsQuotaEnabled,*bool)

	// Specifies the CPU CFS quota period value. Changing this forces a new resource to be created.
	cpuCfsQuotaPeriod?: null | string @go(CPUCfsQuotaPeriod,*string)

	// Specifies the CPU Manager policy to use. Possible values are none and static, Changing this forces a new resource to be created.
	cpuManagerPolicy?: null | string @go(CPUManagerPolicy,*string)

	// Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created.
	containerLogMaxLine?: null | float64 @go(ContainerLogMaxLine,*float64)

	// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created.
	containerLogMaxSizeMb?: null | float64 @go(ContainerLogMaxSizeMb,*float64)

	// Specifies the percent of disk usage above which image garbage collection is always run. Must be between 0 and 100. Changing this forces a new resource to be created.
	imageGcHighThreshold?: null | float64 @go(ImageGcHighThreshold,*float64)

	// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between 0 and 100. Changing this forces a new resource to be created.
	imageGcLowThreshold?: null | float64 @go(ImageGcLowThreshold,*float64)

	// Specifies the maximum number of processes per pod. Changing this forces a new resource to be created.
	podMaxPid?: null | float64 @go(PodMaxPid,*float64)

	// Specifies the Topology Manager policy to use. Possible values are none, best-effort, restricted or single-numa-node. Changing this forces a new resource to be created.
	topologyManagerPolicy?: null | string @go(TopologyManagerPolicy,*string)
}

#KubernetesClusterNodePoolKubeletConfigObservation: {
	// Specifies the allow list of unsafe sysctls command or patterns (ending in *). Changing this forces a new resource to be created.
	allowedUnsafeSysctls?: [...null | string] @go(AllowedUnsafeSysctls,[]*string)

	// Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created.
	cpuCfsQuotaEnabled?: null | bool @go(CPUCfsQuotaEnabled,*bool)

	// Specifies the CPU CFS quota period value. Changing this forces a new resource to be created.
	cpuCfsQuotaPeriod?: null | string @go(CPUCfsQuotaPeriod,*string)

	// Specifies the CPU Manager policy to use. Possible values are none and static, Changing this forces a new resource to be created.
	cpuManagerPolicy?: null | string @go(CPUManagerPolicy,*string)

	// Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created.
	containerLogMaxLine?: null | float64 @go(ContainerLogMaxLine,*float64)

	// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created.
	containerLogMaxSizeMb?: null | float64 @go(ContainerLogMaxSizeMb,*float64)

	// Specifies the percent of disk usage above which image garbage collection is always run. Must be between 0 and 100. Changing this forces a new resource to be created.
	imageGcHighThreshold?: null | float64 @go(ImageGcHighThreshold,*float64)

	// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between 0 and 100. Changing this forces a new resource to be created.
	imageGcLowThreshold?: null | float64 @go(ImageGcLowThreshold,*float64)

	// Specifies the maximum number of processes per pod. Changing this forces a new resource to be created.
	podMaxPid?: null | float64 @go(PodMaxPid,*float64)

	// Specifies the Topology Manager policy to use. Possible values are none, best-effort, restricted or single-numa-node. Changing this forces a new resource to be created.
	topologyManagerPolicy?: null | string @go(TopologyManagerPolicy,*string)
}

#KubernetesClusterNodePoolKubeletConfigParameters: {
	// Specifies the allow list of unsafe sysctls command or patterns (ending in *). Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	allowedUnsafeSysctls?: [...null | string] @go(AllowedUnsafeSysctls,[]*string)

	// Is CPU CFS quota enforcement for containers enabled? Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	cpuCfsQuotaEnabled?: null | bool @go(CPUCfsQuotaEnabled,*bool)

	// Specifies the CPU CFS quota period value. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	cpuCfsQuotaPeriod?: null | string @go(CPUCfsQuotaPeriod,*string)

	// Specifies the CPU Manager policy to use. Possible values are none and static, Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	cpuManagerPolicy?: null | string @go(CPUManagerPolicy,*string)

	// Specifies the maximum number of container log files that can be present for a container. must be at least 2. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	containerLogMaxLine?: null | float64 @go(ContainerLogMaxLine,*float64)

	// Specifies the maximum size (e.g. 10MB) of container log file before it is rotated. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	containerLogMaxSizeMb?: null | float64 @go(ContainerLogMaxSizeMb,*float64)

	// Specifies the percent of disk usage above which image garbage collection is always run. Must be between 0 and 100. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	imageGcHighThreshold?: null | float64 @go(ImageGcHighThreshold,*float64)

	// Specifies the percent of disk usage lower than which image garbage collection is never run. Must be between 0 and 100. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	imageGcLowThreshold?: null | float64 @go(ImageGcLowThreshold,*float64)

	// Specifies the maximum number of processes per pod. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	podMaxPid?: null | float64 @go(PodMaxPid,*float64)

	// Specifies the Topology Manager policy to use. Possible values are none, best-effort, restricted or single-numa-node. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	topologyManagerPolicy?: null | string @go(TopologyManagerPolicy,*string)
}

#KubernetesClusterNodePoolLinuxOsConfigInitParameters: {
	// Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created.
	swapFileSizeMb?: null | float64 @go(SwapFileSizeMb,*float64)

	// A sysctl_config block as defined below. Changing this forces a new resource to be created.
	sysctlConfig?: [...#LinuxOsConfigSysctlConfigInitParameters] @go(SysctlConfig,[]LinuxOsConfigSysctlConfigInitParameters)

	// specifies the defrag configuration for Transparent Huge Page. Possible values are always, defer, defer+madvise, madvise and never. Changing this forces a new resource to be created.
	transparentHugePageDefrag?: null | string @go(TransparentHugePageDefrag,*string)

	// Specifies the Transparent Huge Page enabled configuration. Possible values are always, madvise and never. Changing this forces a new resource to be created.
	transparentHugePageEnabled?: null | string @go(TransparentHugePageEnabled,*string)
}

#KubernetesClusterNodePoolLinuxOsConfigObservation: {
	// Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created.
	swapFileSizeMb?: null | float64 @go(SwapFileSizeMb,*float64)

	// A sysctl_config block as defined below. Changing this forces a new resource to be created.
	sysctlConfig?: [...#LinuxOsConfigSysctlConfigObservation] @go(SysctlConfig,[]LinuxOsConfigSysctlConfigObservation)

	// specifies the defrag configuration for Transparent Huge Page. Possible values are always, defer, defer+madvise, madvise and never. Changing this forces a new resource to be created.
	transparentHugePageDefrag?: null | string @go(TransparentHugePageDefrag,*string)

	// Specifies the Transparent Huge Page enabled configuration. Possible values are always, madvise and never. Changing this forces a new resource to be created.
	transparentHugePageEnabled?: null | string @go(TransparentHugePageEnabled,*string)
}

#KubernetesClusterNodePoolLinuxOsConfigParameters: {
	// Specifies the size of swap file on each node in MB. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	swapFileSizeMb?: null | float64 @go(SwapFileSizeMb,*float64)

	// A sysctl_config block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sysctlConfig?: [...#LinuxOsConfigSysctlConfigParameters] @go(SysctlConfig,[]LinuxOsConfigSysctlConfigParameters)

	// specifies the defrag configuration for Transparent Huge Page. Possible values are always, defer, defer+madvise, madvise and never. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	transparentHugePageDefrag?: null | string @go(TransparentHugePageDefrag,*string)

	// Specifies the Transparent Huge Page enabled configuration. Possible values are always, madvise and never. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	transparentHugePageEnabled?: null | string @go(TransparentHugePageEnabled,*string)
}

#KubernetesClusterNodePoolNodeNetworkProfileInitParameters: {
	// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
	nodePublicIpTags?: {[string]: null | string} @go(NodePublicIPTags,map[string]*string)
}

#KubernetesClusterNodePoolNodeNetworkProfileObservation: {
	// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
	nodePublicIpTags?: {[string]: null | string} @go(NodePublicIPTags,map[string]*string)
}

#KubernetesClusterNodePoolNodeNetworkProfileParameters: {
	// Specifies a mapping of tags to the instance-level public IPs. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	nodePublicIpTags?: {[string]: null | string} @go(NodePublicIPTags,map[string]*string)
}

#KubernetesClusterNodePoolObservation: {
	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	capacityReservationGroupId?: null | string @go(CapacityReservationGroupID,*string)

	// Specifies whether to trust a Custom CA.
	customCaTrustEnabled?: null | bool @go(CustomCATrustEnabled,*bool)

	// Whether to enable auto-scaler.
	enableAutoScaling?: null | bool @go(EnableAutoScaling,*bool)

	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	enableHostEncryption?: null | bool @go(EnableHostEncryption,*bool)

	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	enableNodePublicIp?: null | bool @go(EnableNodePublicIP,*bool)

	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
	evictionPolicy?: null | string @go(EvictionPolicy,*string)

	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	fipsEnabled?: null | bool @go(FipsEnabled,*bool)

	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	hostGroupId?: null | string @go(HostGroupID,*string)

	// The ID of the Kubernetes Cluster Node Pool.
	id?: null | string @go(ID,*string)

	// A kubelet_config block as defined below. Changing this forces a new resource to be created.
	kubeletConfig?: [...#KubernetesClusterNodePoolKubeletConfigObservation] @go(KubeletConfig,[]KubernetesClusterNodePoolKubeletConfigObservation)

	// The type of disk used by kubelet. Possible values are OS and Temporary.
	kubeletDiskType?: null | string @go(KubeletDiskType,*string)

	// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
	kubernetesClusterId?: null | string @go(KubernetesClusterID,*string)

	// A linux_os_config block as defined below. Changing this forces a new resource to be created.
	linuxOsConfig?: [...#KubernetesClusterNodePoolLinuxOsConfigObservation] @go(LinuxOsConfig,[]KubernetesClusterNodePoolLinuxOsConfigObservation)

	// The maximum number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 and must be greater than or equal to min_count.
	maxCount?: null | float64 @go(MaxCount,*float64)

	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	maxPods?: null | float64 @go(MaxPods,*float64)

	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	messageOfTheDay?: null | string @go(MessageOfTheDay,*string)

	// The minimum number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 and must be less than or equal to max_count.
	minCount?: null | float64 @go(MinCount,*float64)

	// Should this Node Pool be used for System or User resources? Possible values are System and User. Defaults to User.
	mode?: null | string @go(Mode,*string)

	// The initial number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 (inclusive) for user pools and between 1 and 1000 (inclusive) for system pools and must be a value in the range min_count - max_count.
	nodeCount?: null | float64 @go(NodeCount,*float64)

	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	nodeLabels?: {[string]: null | string} @go(NodeLabels,map[string]*string)

	// A node_network_profile block as documented below.
	nodeNetworkProfile?: [...#KubernetesClusterNodePoolNodeNetworkProfileObservation] @go(NodeNetworkProfile,[]KubernetesClusterNodePoolNodeNetworkProfileObservation)

	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. enable_node_public_ip should be true. Changing this forces a new resource to be created.
	nodePublicIpPrefixId?: null | string @go(NodePublicIPPrefixID,*string)

	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g key=value:NoSchedule). Changing this forces a new resource to be created.
	nodeTaints?: [...null | string] @go(NodeTaints,[]*string)

	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
	orchestratorVersion?: null | string @go(OrchestratorVersion,*string)

	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	osDiskSizeGb?: null | float64 @go(OsDiskSizeGb,*float64)

	// The type of disk which should be used for the Operating System. Possible values are Ephemeral and Managed. Defaults to Managed. Changing this forces a new resource to be created.
	osDiskType?: null | string @go(OsDiskType,*string)

	// Specifies the OS SKU used by the agent pool. Possible values include: Ubuntu, CBLMariner, Mariner, Windows2019, Windows2022. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. Changing this forces a new resource to be created.
	osSku?: null | string @go(OsSku,*string)

	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are Linux and Windows. Defaults to Linux.
	osType?: null | string @go(OsType,*string)

	// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
	podSubnetId?: null | string @go(PodSubnetID,*string)

	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.
	priority?: null | string @go(Priority,*string)

	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	proximityPlacementGroupId?: null | string @go(ProximityPlacementGroupID,*string)

	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are Delete and Deallocate. Defaults to Delete.
	scaleDownMode?: null | string @go(ScaleDownMode,*string)

	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	snapshotId?: null | string @go(SnapshotID,*string)

	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are -1 (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	spotMaxPrice?: null | float64 @go(SpotMaxPrice,*float64)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to false. See the documentation for more information. Changing this forces a new resource to be created.
	ultraSsdEnabled?: null | bool @go(UltraSsdEnabled,*bool)

	// A upgrade_settings block as documented below.
	upgradeSettings?: [...#KubernetesClusterNodePoolUpgradeSettingsObservation] @go(UpgradeSettings,[]KubernetesClusterNodePoolUpgradeSettingsObservation)

	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	vmSize?: null | string @go(VMSize,*string)

	// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
	vnetSubnetId?: null | string @go(VnetSubnetID,*string)

	// A windows_profile block as documented below. Changing this forces a new resource to be created.
	windowsProfile?: [...#KubernetesClusterNodePoolWindowsProfileObservation] @go(WindowsProfile,[]KubernetesClusterNodePoolWindowsProfileObservation)

	// Used to specify the workload runtime. Allowed values are OCIContainer, WasmWasi and KataMshvVmIsolation.
	workloadRuntime?: null | string @go(WorkloadRuntime,*string)

	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#KubernetesClusterNodePoolParameters: {
	// Specifies the ID of the Capacity Reservation Group where this Node Pool should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	capacityReservationGroupId?: null | string @go(CapacityReservationGroupID,*string)

	// Specifies whether to trust a Custom CA.
	// +kubebuilder:validation:Optional
	customCaTrustEnabled?: null | bool @go(CustomCATrustEnabled,*bool)

	// Whether to enable auto-scaler.
	// +kubebuilder:validation:Optional
	enableAutoScaling?: null | bool @go(EnableAutoScaling,*bool)

	// Should the nodes in this Node Pool have host encryption enabled? Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	enableHostEncryption?: null | bool @go(EnableHostEncryption,*bool)

	// Should each node have a Public IP Address? Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	enableNodePublicIp?: null | bool @go(EnableNodePublicIP,*bool)

	// The Eviction Policy which should be used for Virtual Machines within the Virtual Machine Scale Set powering this Node Pool. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	evictionPolicy?: null | string @go(EvictionPolicy,*string)

	// Should the nodes in this Node Pool have Federal Information Processing Standard enabled? Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	fipsEnabled?: null | bool @go(FipsEnabled,*bool)

	// The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	hostGroupId?: null | string @go(HostGroupID,*string)

	// A kubelet_config block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	kubeletConfig?: [...#KubernetesClusterNodePoolKubeletConfigParameters] @go(KubeletConfig,[]KubernetesClusterNodePoolKubeletConfigParameters)

	// The type of disk used by kubelet. Possible values are OS and Temporary.
	// +kubebuilder:validation:Optional
	kubeletDiskType?: null | string @go(KubeletDiskType,*string)

	// The ID of the Kubernetes Cluster where this Node Pool should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=KubernetesCluster
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	kubernetesClusterId?: null | string @go(KubernetesClusterID,*string)

	// A linux_os_config block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	linuxOsConfig?: [...#KubernetesClusterNodePoolLinuxOsConfigParameters] @go(LinuxOsConfig,[]KubernetesClusterNodePoolLinuxOsConfigParameters)

	// The maximum number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 and must be greater than or equal to min_count.
	// +kubebuilder:validation:Optional
	maxCount?: null | float64 @go(MaxCount,*float64)

	// The maximum number of pods that can run on each agent. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	maxPods?: null | float64 @go(MaxPods,*float64)

	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It cannot be specified for Windows nodes and must be a static string (i.e. will be printed raw and not executed as a script). Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	messageOfTheDay?: null | string @go(MessageOfTheDay,*string)

	// The minimum number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 and must be less than or equal to max_count.
	// +kubebuilder:validation:Optional
	minCount?: null | float64 @go(MinCount,*float64)

	// Should this Node Pool be used for System or User resources? Possible values are System and User. Defaults to User.
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// The initial number of nodes which should exist within this Node Pool. Valid values are between 0 and 1000 (inclusive) for user pools and between 1 and 1000 (inclusive) for system pools and must be a value in the range min_count - max_count.
	// +kubebuilder:validation:Optional
	nodeCount?: null | float64 @go(NodeCount,*float64)

	// A map of Kubernetes labels which should be applied to nodes in this Node Pool.
	// +kubebuilder:validation:Optional
	nodeLabels?: {[string]: null | string} @go(NodeLabels,map[string]*string)

	// A node_network_profile block as documented below.
	// +kubebuilder:validation:Optional
	nodeNetworkProfile?: [...#KubernetesClusterNodePoolNodeNetworkProfileParameters] @go(NodeNetworkProfile,[]KubernetesClusterNodePoolNodeNetworkProfileParameters)

	// Resource ID for the Public IP Addresses Prefix for the nodes in this Node Pool. enable_node_public_ip should be true. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	nodePublicIpPrefixId?: null | string @go(NodePublicIPPrefixID,*string)

	// A list of Kubernetes taints which should be applied to nodes in the agent pool (e.g key=value:NoSchedule). Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	nodeTaints?: [...null | string] @go(NodeTaints,[]*string)

	// Version of Kubernetes used for the Agents. If not specified, the latest recommended version will be used at provisioning time (but won't auto-upgrade). AKS does not require an exact patch version to be specified, minor version aliases such as 1.22 are also supported. - The minor version's latest GA patch is automatically chosen in that case. More details can be found in the documentation.
	// +kubebuilder:validation:Optional
	orchestratorVersion?: null | string @go(OrchestratorVersion,*string)

	// The Agent Operating System disk size in GB. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	osDiskSizeGb?: null | float64 @go(OsDiskSizeGb,*float64)

	// The type of disk which should be used for the Operating System. Possible values are Ephemeral and Managed. Defaults to Managed. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	osDiskType?: null | string @go(OsDiskType,*string)

	// Specifies the OS SKU used by the agent pool. Possible values include: Ubuntu, CBLMariner, Mariner, Windows2019, Windows2022. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	osSku?: null | string @go(OsSku,*string)

	// The Operating System which should be used for this Node Pool. Changing this forces a new resource to be created. Possible values are Linux and Windows. Defaults to Linux.
	// +kubebuilder:validation:Optional
	osType?: null | string @go(OsType,*string)

	// The ID of the Subnet where the pods in the Node Pool should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	podSubnetId?: null | string @go(PodSubnetID,*string)

	// The Priority for Virtual Machines within the Virtual Machine Scale Set that powers this Node Pool. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	priority?: null | string @go(Priority,*string)

	// The ID of the Proximity Placement Group where the Virtual Machine Scale Set that powers this Node Pool will be placed. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	proximityPlacementGroupId?: null | string @go(ProximityPlacementGroupID,*string)

	// Specifies how the node pool should deal with scaled-down nodes. Allowed values are Delete and Deallocate. Defaults to Delete.
	// +kubebuilder:validation:Optional
	scaleDownMode?: null | string @go(ScaleDownMode,*string)

	// The ID of the Snapshot which should be used to create this Node Pool. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	snapshotId?: null | string @go(SnapshotID,*string)

	// The maximum price you're willing to pay in USD per Virtual Machine. Valid values are -1 (the current on-demand price for a Virtual Machine) or a positive value with up to five decimal places. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	spotMaxPrice?: null | float64 @go(SpotMaxPrice,*float64)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Used to specify whether the UltraSSD is enabled in the Node Pool. Defaults to false. See the documentation for more information. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ultraSsdEnabled?: null | bool @go(UltraSsdEnabled,*bool)

	// A upgrade_settings block as documented below.
	// +kubebuilder:validation:Optional
	upgradeSettings?: [...#KubernetesClusterNodePoolUpgradeSettingsParameters] @go(UpgradeSettings,[]KubernetesClusterNodePoolUpgradeSettingsParameters)

	// The SKU which should be used for the Virtual Machines used in this Node Pool. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	vmSize?: null | string @go(VMSize,*string)

	// The ID of the Subnet where this Node Pool should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vnetSubnetId?: null | string @go(VnetSubnetID,*string)

	// A windows_profile block as documented below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	windowsProfile?: [...#KubernetesClusterNodePoolWindowsProfileParameters] @go(WindowsProfile,[]KubernetesClusterNodePoolWindowsProfileParameters)

	// Used to specify the workload runtime. Allowed values are OCIContainer, WasmWasi and KataMshvVmIsolation.
	// +kubebuilder:validation:Optional
	workloadRuntime?: null | string @go(WorkloadRuntime,*string)

	// Specifies a list of Availability Zones in which this Kubernetes Cluster Node Pool should be located. Changing this forces a new Kubernetes Cluster Node Pool to be created.
	// +kubebuilder:validation:Optional
	zones?: [...null | string] @go(Zones,[]*string)
}

#KubernetesClusterNodePoolUpgradeSettingsInitParameters: {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	maxSurge?: null | string @go(MaxSurge,*string)
}

#KubernetesClusterNodePoolUpgradeSettingsObservation: {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	maxSurge?: null | string @go(MaxSurge,*string)
}

#KubernetesClusterNodePoolUpgradeSettingsParameters: {
	// The maximum number or percentage of nodes which will be added to the Node Pool size during an upgrade.
	// +kubebuilder:validation:Optional
	maxSurge?: null | string @go(MaxSurge,*string)
}

#KubernetesClusterNodePoolWindowsProfileInitParameters: {
	// Should the Windows nodes in this Node Pool have outbound NAT enabled? Defaults to true. Changing this forces a new resource to be created.
	outboundNatEnabled?: null | bool @go(OutboundNATEnabled,*bool)
}

#KubernetesClusterNodePoolWindowsProfileObservation: {
	// Should the Windows nodes in this Node Pool have outbound NAT enabled? Defaults to true. Changing this forces a new resource to be created.
	outboundNatEnabled?: null | bool @go(OutboundNATEnabled,*bool)
}

#KubernetesClusterNodePoolWindowsProfileParameters: {
	// Should the Windows nodes in this Node Pool have outbound NAT enabled? Defaults to true. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	outboundNatEnabled?: null | bool @go(OutboundNATEnabled,*bool)
}

#LinuxOsConfigSysctlConfigInitParameters: {
	// The sysctl setting fs.aio-max-nr. Must be between 65536 and 6553500. Changing this forces a new resource to be created.
	fsAioMaxNr?: null | float64 @go(FsAioMaxNr,*float64)

	// The sysctl setting fs.file-max. Must be between 8192 and 12000500. Changing this forces a new resource to be created.
	fsFileMax?: null | float64 @go(FsFileMax,*float64)

	// The sysctl setting fs.inotify.max_user_watches. Must be between 781250 and 2097152. Changing this forces a new resource to be created.
	fsInotifyMaxUserWatches?: null | float64 @go(FsInotifyMaxUserWatches,*float64)

	// The sysctl setting fs.nr_open. Must be between 8192 and 20000500. Changing this forces a new resource to be created.
	fsNrOpen?: null | float64 @go(FsNrOpen,*float64)

	// The sysctl setting kernel.threads-max. Must be between 20 and 513785. Changing this forces a new resource to be created.
	kernelThreadsMax?: null | float64 @go(KernelThreadsMax,*float64)

	// The sysctl setting net.core.netdev_max_backlog. Must be between 1000 and 3240000. Changing this forces a new resource to be created.
	netCoreNetdevMaxBacklog?: null | float64 @go(NetCoreNetdevMaxBacklog,*float64)

	// The sysctl setting net.core.optmem_max. Must be between 20480 and 4194304. Changing this forces a new resource to be created.
	netCoreOptmemMax?: null | float64 @go(NetCoreOptmemMax,*float64)

	// The sysctl setting net.core.rmem_default. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreRmemDefault?: null | float64 @go(NetCoreRmemDefault,*float64)

	// The sysctl setting net.core.rmem_max. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreRmemMax?: null | float64 @go(NetCoreRmemMax,*float64)

	// The sysctl setting net.core.somaxconn. Must be between 4096 and 3240000. Changing this forces a new resource to be created.
	netCoreSomaxconn?: null | float64 @go(NetCoreSomaxconn,*float64)

	// The sysctl setting net.core.wmem_default. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreWmemDefault?: null | float64 @go(NetCoreWmemDefault,*float64)

	// The sysctl setting net.core.wmem_max. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreWmemMax?: null | float64 @go(NetCoreWmemMax,*float64)

	// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between 1024 and 60999. Changing this forces a new resource to be created.
	netIpv4IpLocalPortRangeMax?: null | float64 @go(NetIPv4IPLocalPortRangeMax,*float64)

	// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between 1024 and 60999. Changing this forces a new resource to be created.
	netIpv4IpLocalPortRangeMin?: null | float64 @go(NetIPv4IPLocalPortRangeMin,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between 128 and 80000. Changing this forces a new resource to be created.
	netIpv4NeighDefaultGcThresh1?: null | float64 @go(NetIPv4NeighDefaultGcThresh1,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between 512 and 90000. Changing this forces a new resource to be created.
	netIpv4NeighDefaultGcThresh2?: null | float64 @go(NetIPv4NeighDefaultGcThresh2,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between 1024 and 100000. Changing this forces a new resource to be created.
	netIpv4NeighDefaultGcThresh3?: null | float64 @go(NetIPv4NeighDefaultGcThresh3,*float64)

	// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between 5 and 120. Changing this forces a new resource to be created.
	netIpv4TcpFinTimeout?: null | float64 @go(NetIPv4TCPFinTimeout,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between 10 and 75. Changing this forces a new resource to be created.
	netIpv4TcpKeepaliveIntvl?: null | float64 @go(NetIPv4TCPKeepaliveIntvl,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between 1 and 15. Changing this forces a new resource to be created.
	netIpv4TcpKeepaliveProbes?: null | float64 @go(NetIPv4TCPKeepaliveProbes,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between 30 and 432000. Changing this forces a new resource to be created.
	netIpv4TcpKeepaliveTime?: null | float64 @go(NetIPv4TCPKeepaliveTime,*float64)

	// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between 128 and 3240000. Changing this forces a new resource to be created.
	netIpv4TcpMaxSynBacklog?: null | float64 @go(NetIPv4TCPMaxSynBacklog,*float64)

	// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between 8000 and 1440000. Changing this forces a new resource to be created.
	netIpv4TcpMaxTwBuckets?: null | float64 @go(NetIPv4TCPMaxTwBuckets,*float64)

	// Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created.
	netIpv4TcpTwReuse?: null | bool @go(NetIPv4TCPTwReuse,*bool)

	// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between 65536 and 147456. Changing this forces a new resource to be created.
	netNetfilterNfConntrackBuckets?: null | float64 @go(NetNetfilterNfConntrackBuckets,*float64)

	// The sysctl setting net.netfilter.nf_conntrack_max. Must be between 131072 and 1048576. Changing this forces a new resource to be created.
	netNetfilterNfConntrackMax?: null | float64 @go(NetNetfilterNfConntrackMax,*float64)

	// The sysctl setting vm.max_map_count. Must be between 65530 and 262144. Changing this forces a new resource to be created.
	vmMaxMapCount?: null | float64 @go(VMMaxMapCount,*float64)

	// The sysctl setting vm.swappiness. Must be between 0 and 100. Changing this forces a new resource to be created.
	vmSwappiness?: null | float64 @go(VMSwappiness,*float64)

	// The sysctl setting vm.vfs_cache_pressure. Must be between 0 and 100. Changing this forces a new resource to be created.
	vmVfsCachePressure?: null | float64 @go(VMVfsCachePressure,*float64)
}

#LinuxOsConfigSysctlConfigObservation: {
	// The sysctl setting fs.aio-max-nr. Must be between 65536 and 6553500. Changing this forces a new resource to be created.
	fsAioMaxNr?: null | float64 @go(FsAioMaxNr,*float64)

	// The sysctl setting fs.file-max. Must be between 8192 and 12000500. Changing this forces a new resource to be created.
	fsFileMax?: null | float64 @go(FsFileMax,*float64)

	// The sysctl setting fs.inotify.max_user_watches. Must be between 781250 and 2097152. Changing this forces a new resource to be created.
	fsInotifyMaxUserWatches?: null | float64 @go(FsInotifyMaxUserWatches,*float64)

	// The sysctl setting fs.nr_open. Must be between 8192 and 20000500. Changing this forces a new resource to be created.
	fsNrOpen?: null | float64 @go(FsNrOpen,*float64)

	// The sysctl setting kernel.threads-max. Must be between 20 and 513785. Changing this forces a new resource to be created.
	kernelThreadsMax?: null | float64 @go(KernelThreadsMax,*float64)

	// The sysctl setting net.core.netdev_max_backlog. Must be between 1000 and 3240000. Changing this forces a new resource to be created.
	netCoreNetdevMaxBacklog?: null | float64 @go(NetCoreNetdevMaxBacklog,*float64)

	// The sysctl setting net.core.optmem_max. Must be between 20480 and 4194304. Changing this forces a new resource to be created.
	netCoreOptmemMax?: null | float64 @go(NetCoreOptmemMax,*float64)

	// The sysctl setting net.core.rmem_default. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreRmemDefault?: null | float64 @go(NetCoreRmemDefault,*float64)

	// The sysctl setting net.core.rmem_max. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreRmemMax?: null | float64 @go(NetCoreRmemMax,*float64)

	// The sysctl setting net.core.somaxconn. Must be between 4096 and 3240000. Changing this forces a new resource to be created.
	netCoreSomaxconn?: null | float64 @go(NetCoreSomaxconn,*float64)

	// The sysctl setting net.core.wmem_default. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreWmemDefault?: null | float64 @go(NetCoreWmemDefault,*float64)

	// The sysctl setting net.core.wmem_max. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	netCoreWmemMax?: null | float64 @go(NetCoreWmemMax,*float64)

	// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between 1024 and 60999. Changing this forces a new resource to be created.
	netIpv4IpLocalPortRangeMax?: null | float64 @go(NetIPv4IPLocalPortRangeMax,*float64)

	// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between 1024 and 60999. Changing this forces a new resource to be created.
	netIpv4IpLocalPortRangeMin?: null | float64 @go(NetIPv4IPLocalPortRangeMin,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between 128 and 80000. Changing this forces a new resource to be created.
	netIpv4NeighDefaultGcThresh1?: null | float64 @go(NetIPv4NeighDefaultGcThresh1,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between 512 and 90000. Changing this forces a new resource to be created.
	netIpv4NeighDefaultGcThresh2?: null | float64 @go(NetIPv4NeighDefaultGcThresh2,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between 1024 and 100000. Changing this forces a new resource to be created.
	netIpv4NeighDefaultGcThresh3?: null | float64 @go(NetIPv4NeighDefaultGcThresh3,*float64)

	// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between 5 and 120. Changing this forces a new resource to be created.
	netIpv4TcpFinTimeout?: null | float64 @go(NetIPv4TCPFinTimeout,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between 10 and 75. Changing this forces a new resource to be created.
	netIpv4TcpKeepaliveIntvl?: null | float64 @go(NetIPv4TCPKeepaliveIntvl,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between 1 and 15. Changing this forces a new resource to be created.
	netIpv4TcpKeepaliveProbes?: null | float64 @go(NetIPv4TCPKeepaliveProbes,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between 30 and 432000. Changing this forces a new resource to be created.
	netIpv4TcpKeepaliveTime?: null | float64 @go(NetIPv4TCPKeepaliveTime,*float64)

	// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between 128 and 3240000. Changing this forces a new resource to be created.
	netIpv4TcpMaxSynBacklog?: null | float64 @go(NetIPv4TCPMaxSynBacklog,*float64)

	// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between 8000 and 1440000. Changing this forces a new resource to be created.
	netIpv4TcpMaxTwBuckets?: null | float64 @go(NetIPv4TCPMaxTwBuckets,*float64)

	// Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created.
	netIpv4TcpTwReuse?: null | bool @go(NetIPv4TCPTwReuse,*bool)

	// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between 65536 and 147456. Changing this forces a new resource to be created.
	netNetfilterNfConntrackBuckets?: null | float64 @go(NetNetfilterNfConntrackBuckets,*float64)

	// The sysctl setting net.netfilter.nf_conntrack_max. Must be between 131072 and 1048576. Changing this forces a new resource to be created.
	netNetfilterNfConntrackMax?: null | float64 @go(NetNetfilterNfConntrackMax,*float64)

	// The sysctl setting vm.max_map_count. Must be between 65530 and 262144. Changing this forces a new resource to be created.
	vmMaxMapCount?: null | float64 @go(VMMaxMapCount,*float64)

	// The sysctl setting vm.swappiness. Must be between 0 and 100. Changing this forces a new resource to be created.
	vmSwappiness?: null | float64 @go(VMSwappiness,*float64)

	// The sysctl setting vm.vfs_cache_pressure. Must be between 0 and 100. Changing this forces a new resource to be created.
	vmVfsCachePressure?: null | float64 @go(VMVfsCachePressure,*float64)
}

#LinuxOsConfigSysctlConfigParameters: {
	// The sysctl setting fs.aio-max-nr. Must be between 65536 and 6553500. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	fsAioMaxNr?: null | float64 @go(FsAioMaxNr,*float64)

	// The sysctl setting fs.file-max. Must be between 8192 and 12000500. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	fsFileMax?: null | float64 @go(FsFileMax,*float64)

	// The sysctl setting fs.inotify.max_user_watches. Must be between 781250 and 2097152. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	fsInotifyMaxUserWatches?: null | float64 @go(FsInotifyMaxUserWatches,*float64)

	// The sysctl setting fs.nr_open. Must be between 8192 and 20000500. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	fsNrOpen?: null | float64 @go(FsNrOpen,*float64)

	// The sysctl setting kernel.threads-max. Must be between 20 and 513785. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	kernelThreadsMax?: null | float64 @go(KernelThreadsMax,*float64)

	// The sysctl setting net.core.netdev_max_backlog. Must be between 1000 and 3240000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netCoreNetdevMaxBacklog?: null | float64 @go(NetCoreNetdevMaxBacklog,*float64)

	// The sysctl setting net.core.optmem_max. Must be between 20480 and 4194304. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netCoreOptmemMax?: null | float64 @go(NetCoreOptmemMax,*float64)

	// The sysctl setting net.core.rmem_default. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netCoreRmemDefault?: null | float64 @go(NetCoreRmemDefault,*float64)

	// The sysctl setting net.core.rmem_max. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netCoreRmemMax?: null | float64 @go(NetCoreRmemMax,*float64)

	// The sysctl setting net.core.somaxconn. Must be between 4096 and 3240000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netCoreSomaxconn?: null | float64 @go(NetCoreSomaxconn,*float64)

	// The sysctl setting net.core.wmem_default. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netCoreWmemDefault?: null | float64 @go(NetCoreWmemDefault,*float64)

	// The sysctl setting net.core.wmem_max. Must be between 212992 and 134217728. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netCoreWmemMax?: null | float64 @go(NetCoreWmemMax,*float64)

	// The sysctl setting net.ipv4.ip_local_port_range max value. Must be between 1024 and 60999. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4IpLocalPortRangeMax?: null | float64 @go(NetIPv4IPLocalPortRangeMax,*float64)

	// The sysctl setting net.ipv4.ip_local_port_range min value. Must be between 1024 and 60999. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4IpLocalPortRangeMin?: null | float64 @go(NetIPv4IPLocalPortRangeMin,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh1. Must be between 128 and 80000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4NeighDefaultGcThresh1?: null | float64 @go(NetIPv4NeighDefaultGcThresh1,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh2. Must be between 512 and 90000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4NeighDefaultGcThresh2?: null | float64 @go(NetIPv4NeighDefaultGcThresh2,*float64)

	// The sysctl setting net.ipv4.neigh.default.gc_thresh3. Must be between 1024 and 100000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4NeighDefaultGcThresh3?: null | float64 @go(NetIPv4NeighDefaultGcThresh3,*float64)

	// The sysctl setting net.ipv4.tcp_fin_timeout. Must be between 5 and 120. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4TcpFinTimeout?: null | float64 @go(NetIPv4TCPFinTimeout,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_intvl. Must be between 10 and 75. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4TcpKeepaliveIntvl?: null | float64 @go(NetIPv4TCPKeepaliveIntvl,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_probes. Must be between 1 and 15. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4TcpKeepaliveProbes?: null | float64 @go(NetIPv4TCPKeepaliveProbes,*float64)

	// The sysctl setting net.ipv4.tcp_keepalive_time. Must be between 30 and 432000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4TcpKeepaliveTime?: null | float64 @go(NetIPv4TCPKeepaliveTime,*float64)

	// The sysctl setting net.ipv4.tcp_max_syn_backlog. Must be between 128 and 3240000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4TcpMaxSynBacklog?: null | float64 @go(NetIPv4TCPMaxSynBacklog,*float64)

	// The sysctl setting net.ipv4.tcp_max_tw_buckets. Must be between 8000 and 1440000. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4TcpMaxTwBuckets?: null | float64 @go(NetIPv4TCPMaxTwBuckets,*float64)

	// Is sysctl setting net.ipv4.tcp_tw_reuse enabled? Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netIpv4TcpTwReuse?: null | bool @go(NetIPv4TCPTwReuse,*bool)

	// The sysctl setting net.netfilter.nf_conntrack_buckets. Must be between 65536 and 147456. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netNetfilterNfConntrackBuckets?: null | float64 @go(NetNetfilterNfConntrackBuckets,*float64)

	// The sysctl setting net.netfilter.nf_conntrack_max. Must be between 131072 and 1048576. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	netNetfilterNfConntrackMax?: null | float64 @go(NetNetfilterNfConntrackMax,*float64)

	// The sysctl setting vm.max_map_count. Must be between 65530 and 262144. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	vmMaxMapCount?: null | float64 @go(VMMaxMapCount,*float64)

	// The sysctl setting vm.swappiness. Must be between 0 and 100. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	vmSwappiness?: null | float64 @go(VMSwappiness,*float64)

	// The sysctl setting vm.vfs_cache_pressure. Must be between 0 and 100. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	vmVfsCachePressure?: null | float64 @go(VMVfsCachePressure,*float64)
}

// KubernetesClusterNodePoolSpec defines the desired state of KubernetesClusterNodePool
#KubernetesClusterNodePoolSpec: {
	forProvider: #KubernetesClusterNodePoolParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #KubernetesClusterNodePoolInitParameters @go(InitProvider)
}

// KubernetesClusterNodePoolStatus defines the observed state of KubernetesClusterNodePool.
#KubernetesClusterNodePoolStatus: {
	atProvider?: #KubernetesClusterNodePoolObservation @go(AtProvider)
}

// KubernetesClusterNodePool is the Schema for the KubernetesClusterNodePools API. Manages a Node Pool within a Kubernetes Cluster
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#KubernetesClusterNodePool: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vmSize) || (has(self.initProvider) && has(self.initProvider.vmSize))",message="spec.forProvider.vmSize is a required parameter"
	spec:    #KubernetesClusterNodePoolSpec   @go(Spec)
	status?: #KubernetesClusterNodePoolStatus @go(Status)
}

// KubernetesClusterNodePoolList contains a list of KubernetesClusterNodePools
#KubernetesClusterNodePoolList: {
	items: [...#KubernetesClusterNodePool] @go(Items,[]KubernetesClusterNodePool)
}
