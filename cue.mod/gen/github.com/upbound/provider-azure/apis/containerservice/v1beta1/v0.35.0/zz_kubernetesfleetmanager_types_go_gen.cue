// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/containerservice/v1beta1

package v1beta1

#HubProfileInitParameters: {
	dnsPrefix?: null | string @go(DNSPrefix,*string)
}

#HubProfileObservation: {
	dnsPrefix?:         null | string @go(DNSPrefix,*string)
	fqdn?:              null | string @go(Fqdn,*string)
	kubernetesVersion?: null | string @go(KubernetesVersion,*string)
}

#HubProfileParameters: {
	// +kubebuilder:validation:Optional
	dnsPrefix?: null | string @go(DNSPrefix,*string)
}

#KubernetesFleetManagerInitParameters: {
	// A hub_profile block as defined below. The FleetHubProfile configures the Fleet's hub. Changing this forces a new Kubernetes Fleet Manager to be created.
	hubProfile?: [...#HubProfileInitParameters] @go(HubProfile,[]HubProfileInitParameters)

	// The Azure Region where the Kubernetes Fleet Manager should exist. Changing this forces a new Kubernetes Fleet Manager to be created.
	location?: null | string @go(Location,*string)

	// A mapping of tags which should be assigned to the Kubernetes Fleet Manager.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#KubernetesFleetManagerObservation: {
	// A hub_profile block as defined below. The FleetHubProfile configures the Fleet's hub. Changing this forces a new Kubernetes Fleet Manager to be created.
	hubProfile?: [...#HubProfileObservation] @go(HubProfile,[]HubProfileObservation)

	// The ID of the Kubernetes Fleet Manager.
	id?: null | string @go(ID,*string)

	// The Azure Region where the Kubernetes Fleet Manager should exist. Changing this forces a new Kubernetes Fleet Manager to be created.
	location?: null | string @go(Location,*string)

	// Specifies the name of the Resource Group within which this Kubernetes Fleet Manager should exist. Changing this forces a new Kubernetes Fleet Manager to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Kubernetes Fleet Manager.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#KubernetesFleetManagerParameters: {
	// A hub_profile block as defined below. The FleetHubProfile configures the Fleet's hub. Changing this forces a new Kubernetes Fleet Manager to be created.
	// +kubebuilder:validation:Optional
	hubProfile?: [...#HubProfileParameters] @go(HubProfile,[]HubProfileParameters)

	// The Azure Region where the Kubernetes Fleet Manager should exist. Changing this forces a new Kubernetes Fleet Manager to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the name of the Resource Group within which this Kubernetes Fleet Manager should exist. Changing this forces a new Kubernetes Fleet Manager to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Kubernetes Fleet Manager.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// KubernetesFleetManagerSpec defines the desired state of KubernetesFleetManager
#KubernetesFleetManagerSpec: {
	forProvider: #KubernetesFleetManagerParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #KubernetesFleetManagerInitParameters @go(InitProvider)
}

// KubernetesFleetManagerStatus defines the observed state of KubernetesFleetManager.
#KubernetesFleetManagerStatus: {
	atProvider?: #KubernetesFleetManagerObservation @go(AtProvider)
}

// KubernetesFleetManager is the Schema for the KubernetesFleetManagers API. Manages a Kubernetes Fleet Manager.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#KubernetesFleetManager: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	spec:    #KubernetesFleetManagerSpec   @go(Spec)
	status?: #KubernetesFleetManagerStatus @go(Status)
}

// KubernetesFleetManagerList contains a list of KubernetesFleetManagers
#KubernetesFleetManagerList: {
	items: [...#KubernetesFleetManager] @go(Items,[]KubernetesFleetManager)
}
