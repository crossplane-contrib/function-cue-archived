// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/media/v1beta1

package v1beta1

#AccessControlInitParameters: {
	// One or more akamai_signature_header_authentication_key blocks as defined below.
	akamaiSignatureHeaderAuthenticationKey?: [...#AkamaiSignatureHeaderAuthenticationKeyInitParameters] @go(AkamaiSignatureHeaderAuthenticationKey,[]AkamaiSignatureHeaderAuthenticationKeyInitParameters)

	// A ip_allow block as defined below.
	ipAllow?: [...#IPAllowInitParameters] @go(IPAllow,[]IPAllowInitParameters)
}

#AccessControlObservation: {
	// One or more akamai_signature_header_authentication_key blocks as defined below.
	akamaiSignatureHeaderAuthenticationKey?: [...#AkamaiSignatureHeaderAuthenticationKeyObservation] @go(AkamaiSignatureHeaderAuthenticationKey,[]AkamaiSignatureHeaderAuthenticationKeyObservation)

	// A ip_allow block as defined below.
	ipAllow?: [...#IPAllowObservation] @go(IPAllow,[]IPAllowObservation)
}

#AccessControlParameters: {
	// One or more akamai_signature_header_authentication_key blocks as defined below.
	// +kubebuilder:validation:Optional
	akamaiSignatureHeaderAuthenticationKey?: [...#AkamaiSignatureHeaderAuthenticationKeyParameters] @go(AkamaiSignatureHeaderAuthenticationKey,[]AkamaiSignatureHeaderAuthenticationKeyParameters)

	// A ip_allow block as defined below.
	// +kubebuilder:validation:Optional
	ipAllow?: [...#IPAllowParameters] @go(IPAllow,[]IPAllowParameters)
}

#AkamaiSignatureHeaderAuthenticationKeyInitParameters: {
	// Authentication key.
	base64Key?: null | string @go(Base64Key,*string)

	// The expiration time of the authentication key.
	expiration?: null | string @go(Expiration,*string)

	// Identifier of the key.
	identifier?: null | string @go(Identifier,*string)
}

#AkamaiSignatureHeaderAuthenticationKeyObservation: {
	// Authentication key.
	base64Key?: null | string @go(Base64Key,*string)

	// The expiration time of the authentication key.
	expiration?: null | string @go(Expiration,*string)

	// Identifier of the key.
	identifier?: null | string @go(Identifier,*string)
}

#AkamaiSignatureHeaderAuthenticationKeyParameters: {
	// Authentication key.
	// +kubebuilder:validation:Optional
	base64Key?: null | string @go(Base64Key,*string)

	// The expiration time of the authentication key.
	// +kubebuilder:validation:Optional
	expiration?: null | string @go(Expiration,*string)

	// Identifier of the key.
	// +kubebuilder:validation:Optional
	identifier?: null | string @go(Identifier,*string)
}

#IPAllowInitParameters: {
	// The IP address to allow.
	address?: null | string @go(Address,*string)

	// The sku name of Streaming Endpoint.
	name?: null | string @go(Name,*string)

	// The subnet mask prefix length (see CIDR notation).
	subnetPrefixLength?: null | float64 @go(SubnetPrefixLength,*float64)
}

#IPAllowObservation: {
	// The IP address to allow.
	address?: null | string @go(Address,*string)

	// The sku name of Streaming Endpoint.
	name?: null | string @go(Name,*string)

	// The subnet mask prefix length (see CIDR notation).
	subnetPrefixLength?: null | float64 @go(SubnetPrefixLength,*float64)
}

#IPAllowParameters: {
	// The IP address to allow.
	// +kubebuilder:validation:Optional
	address?: null | string @go(Address,*string)

	// The sku name of Streaming Endpoint.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The subnet mask prefix length (see CIDR notation).
	// +kubebuilder:validation:Optional
	subnetPrefixLength?: null | float64 @go(SubnetPrefixLength,*float64)
}

#SkuInitParameters: {
}

#SkuObservation: {
	// The sku capacity of Streaming Endpoint.
	capacity?: null | float64 @go(Capacity,*float64)

	// The sku name of Streaming Endpoint.
	name?: null | string @go(Name,*string)
}

#SkuParameters: {
}

#StreamingEndpointCrossSiteAccessPolicyInitParameters: {
	// The content of clientaccesspolicy.xml used by Silverlight.
	clientAccessPolicy?: null | string @go(ClientAccessPolicy,*string)

	// The content of crossdomain.xml used by Silverlight.
	crossDomainPolicy?: null | string @go(CrossDomainPolicy,*string)
}

#StreamingEndpointCrossSiteAccessPolicyObservation: {
	// The content of clientaccesspolicy.xml used by Silverlight.
	clientAccessPolicy?: null | string @go(ClientAccessPolicy,*string)

	// The content of crossdomain.xml used by Silverlight.
	crossDomainPolicy?: null | string @go(CrossDomainPolicy,*string)
}

#StreamingEndpointCrossSiteAccessPolicyParameters: {
	// The content of clientaccesspolicy.xml used by Silverlight.
	// +kubebuilder:validation:Optional
	clientAccessPolicy?: null | string @go(ClientAccessPolicy,*string)

	// The content of crossdomain.xml used by Silverlight.
	// +kubebuilder:validation:Optional
	crossDomainPolicy?: null | string @go(CrossDomainPolicy,*string)
}

#StreamingEndpointInitParameters: {
	// A access_control block as defined below.
	accessControl?: [...#AccessControlInitParameters] @go(AccessControl,[]AccessControlInitParameters)

	// The flag indicates if the resource should be automatically started on creation.
	autoStartEnabled?: null | bool @go(AutoStartEnabled,*bool)

	// The CDN enabled flag.
	cdnEnabled?: null | bool @go(CdnEnabled,*bool)

	// The CDN profile name.
	cdnProfile?: null | string @go(CdnProfile,*string)

	// The CDN provider name. Supported value are StandardVerizon,PremiumVerizon and StandardAkamai
	cdnProvider?: null | string @go(CdnProvider,*string)

	// A cross_site_access_policy block as defined below.
	crossSiteAccessPolicy?: [...#StreamingEndpointCrossSiteAccessPolicyInitParameters] @go(CrossSiteAccessPolicy,[]StreamingEndpointCrossSiteAccessPolicyInitParameters)

	// The custom host names of the streaming endpoint.
	customHostNames?: [...null | string] @go(CustomHostNames,[]*string)

	// The streaming endpoint description.
	description?: null | string @go(Description,*string)

	// The Azure Region where the Streaming Endpoint should exist. Changing this forces a new Streaming Endpoint to be created.
	location?: null | string @go(Location,*string)

	// Max cache age in seconds.
	maxCacheAgeSeconds?: null | float64 @go(MaxCacheAgeSeconds,*float64)

	// The number of scale units. To create a Standard Streaming Endpoint set 0. For Premium Streaming Endpoint valid values are between 1 and 10.
	scaleUnits?: null | float64 @go(ScaleUnits,*float64)

	// A mapping of tags which should be assigned to the Streaming Endpoint.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#StreamingEndpointObservation: {
	// A access_control block as defined below.
	accessControl?: [...#AccessControlObservation] @go(AccessControl,[]AccessControlObservation)

	// The flag indicates if the resource should be automatically started on creation.
	autoStartEnabled?: null | bool @go(AutoStartEnabled,*bool)

	// The CDN enabled flag.
	cdnEnabled?: null | bool @go(CdnEnabled,*bool)

	// The CDN profile name.
	cdnProfile?: null | string @go(CdnProfile,*string)

	// The CDN provider name. Supported value are StandardVerizon,PremiumVerizon and StandardAkamai
	cdnProvider?: null | string @go(CdnProvider,*string)

	// A cross_site_access_policy block as defined below.
	crossSiteAccessPolicy?: [...#StreamingEndpointCrossSiteAccessPolicyObservation] @go(CrossSiteAccessPolicy,[]StreamingEndpointCrossSiteAccessPolicyObservation)

	// The custom host names of the streaming endpoint.
	customHostNames?: [...null | string] @go(CustomHostNames,[]*string)

	// The streaming endpoint description.
	description?: null | string @go(Description,*string)

	// The host name of the Streaming Endpoint.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Streaming Endpoint.
	id?: null | string @go(ID,*string)

	// The Azure Region where the Streaming Endpoint should exist. Changing this forces a new Streaming Endpoint to be created.
	location?: null | string @go(Location,*string)

	// Max cache age in seconds.
	maxCacheAgeSeconds?: null | float64 @go(MaxCacheAgeSeconds,*float64)

	// The Media Services account name. Changing this forces a new Streaming Endpoint to be created.
	mediaServicesAccountName?: null | string @go(MediaServicesAccountName,*string)

	// The name of the Resource Group where the Streaming Endpoint should exist. Changing this forces a new Streaming Endpoint to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The number of scale units. To create a Standard Streaming Endpoint set 0. For Premium Streaming Endpoint valid values are between 1 and 10.
	scaleUnits?: null | float64 @go(ScaleUnits,*float64)

	// A sku block defined as below.
	sku?: [...#SkuObservation] @go(Sku,[]SkuObservation)

	// A mapping of tags which should be assigned to the Streaming Endpoint.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#StreamingEndpointParameters: {
	// A access_control block as defined below.
	// +kubebuilder:validation:Optional
	accessControl?: [...#AccessControlParameters] @go(AccessControl,[]AccessControlParameters)

	// The flag indicates if the resource should be automatically started on creation.
	// +kubebuilder:validation:Optional
	autoStartEnabled?: null | bool @go(AutoStartEnabled,*bool)

	// The CDN enabled flag.
	// +kubebuilder:validation:Optional
	cdnEnabled?: null | bool @go(CdnEnabled,*bool)

	// The CDN profile name.
	// +kubebuilder:validation:Optional
	cdnProfile?: null | string @go(CdnProfile,*string)

	// The CDN provider name. Supported value are StandardVerizon,PremiumVerizon and StandardAkamai
	// +kubebuilder:validation:Optional
	cdnProvider?: null | string @go(CdnProvider,*string)

	// A cross_site_access_policy block as defined below.
	// +kubebuilder:validation:Optional
	crossSiteAccessPolicy?: [...#StreamingEndpointCrossSiteAccessPolicyParameters] @go(CrossSiteAccessPolicy,[]StreamingEndpointCrossSiteAccessPolicyParameters)

	// The custom host names of the streaming endpoint.
	// +kubebuilder:validation:Optional
	customHostNames?: [...null | string] @go(CustomHostNames,[]*string)

	// The streaming endpoint description.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The Azure Region where the Streaming Endpoint should exist. Changing this forces a new Streaming Endpoint to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Max cache age in seconds.
	// +kubebuilder:validation:Optional
	maxCacheAgeSeconds?: null | float64 @go(MaxCacheAgeSeconds,*float64)

	// The Media Services account name. Changing this forces a new Streaming Endpoint to be created.
	// +crossplane:generate:reference:type=ServicesAccount
	// +kubebuilder:validation:Optional
	mediaServicesAccountName?: null | string @go(MediaServicesAccountName,*string)

	// The name of the Resource Group where the Streaming Endpoint should exist. Changing this forces a new Streaming Endpoint to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The number of scale units. To create a Standard Streaming Endpoint set 0. For Premium Streaming Endpoint valid values are between 1 and 10.
	// +kubebuilder:validation:Optional
	scaleUnits?: null | float64 @go(ScaleUnits,*float64)

	// A mapping of tags which should be assigned to the Streaming Endpoint.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// StreamingEndpointSpec defines the desired state of StreamingEndpoint
#StreamingEndpointSpec: {
	forProvider: #StreamingEndpointParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #StreamingEndpointInitParameters @go(InitProvider)
}

// StreamingEndpointStatus defines the observed state of StreamingEndpoint.
#StreamingEndpointStatus: {
	atProvider?: #StreamingEndpointObservation @go(AtProvider)
}

// StreamingEndpoint is the Schema for the StreamingEndpoints API. Manages a Streaming Endpoint.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#StreamingEndpoint: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scaleUnits) || has(self.initProvider.scaleUnits)",message="scaleUnits is a required parameter"
	spec:    #StreamingEndpointSpec   @go(Spec)
	status?: #StreamingEndpointStatus @go(Status)
}

// StreamingEndpointList contains a list of StreamingEndpoints
#StreamingEndpointList: {
	items: [...#StreamingEndpoint] @go(Items,[]StreamingEndpoint)
}
