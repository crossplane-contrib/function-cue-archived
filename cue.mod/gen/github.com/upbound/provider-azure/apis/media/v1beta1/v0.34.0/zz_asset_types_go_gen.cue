// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/media/v1beta1

package v1beta1

#AssetObservation: {
	// The alternate ID of the Asset.
	alternateId?: null | string @go(AlternateID,*string)

	// The name of the asset blob container. Changing this forces a new Media Asset to be created.
	container?: null | string @go(Container,*string)

	// The Asset description.
	description?: null | string @go(Description,*string)

	// The ID of the Media Asset.
	id?: null | string @go(ID,*string)

	// Specifies the name of the Media Services Account. Changing this forces a new Media Asset to be created.
	mediaServicesAccountName?: null | string @go(MediaServicesAccountName,*string)

	// The name of the Resource Group where the Media Asset should exist. Changing this forces a new Media Asset to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The name of the storage account where to store the media asset. Changing this forces a new Media Asset to be created.
	storageAccountName?: null | string @go(StorageAccountName,*string)
}

#AssetParameters: {
	// The alternate ID of the Asset.
	// +kubebuilder:validation:Optional
	alternateId?: null | string @go(AlternateID,*string)

	// The name of the asset blob container. Changing this forces a new Media Asset to be created.
	// +kubebuilder:validation:Optional
	container?: null | string @go(Container,*string)

	// The Asset description.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies the name of the Media Services Account. Changing this forces a new Media Asset to be created.
	// +crossplane:generate:reference:type=ServicesAccount
	// +kubebuilder:validation:Optional
	mediaServicesAccountName?: null | string @go(MediaServicesAccountName,*string)

	// The name of the Resource Group where the Media Asset should exist. Changing this forces a new Media Asset to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The name of the storage account where to store the media asset. Changing this forces a new Media Asset to be created.
	// +kubebuilder:validation:Optional
	storageAccountName?: null | string @go(StorageAccountName,*string)
}

// AssetSpec defines the desired state of Asset
#AssetSpec: {
	forProvider: #AssetParameters @go(ForProvider)
}

// AssetStatus defines the observed state of Asset.
#AssetStatus: {
	atProvider?: #AssetObservation @go(AtProvider)
}

// Asset is the Schema for the Assets API. Manages a Media Asset.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Asset: {
	spec:    #AssetSpec   @go(Spec)
	status?: #AssetStatus @go(Status)
}

// AssetList contains a list of Assets
#AssetList: {
	items: [...#Asset] @go(Items,[]Asset)
}
