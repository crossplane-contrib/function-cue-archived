// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/kusto/v1beta1

package v1beta1

#IOTHubDataConnectionInitParameters: {
	// Specifies the data format of the IoTHub messages. Allowed values: APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT and W3CLOGFILE. Changing this forces a new resource to be created.
	dataFormat?: null | string @go(DataFormat,*string)

	// Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: Single, Multi. Changing this forces a new resource to be created.
	databaseRoutingType?: null | string @go(DatabaseRoutingType,*string)

	// Specifies the System Properties that each IoT Hub message should contain. Changing this forces a new resource to be created. Possible values are message-id, sequence-number, to, absolute-expiry-time, iothub-enqueuedtime, correlation-id, user-id, iothub-ack, iothub-connection-device-id, iothub-connection-auth-generation-id and iothub-connection-auth-method.
	eventSystemProperties?: [...null | string] @go(EventSystemProperties,[]*string)

	// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created. Changing this forces a new resource to be created.
	mappingRuleName?: null | string @go(MappingRuleName,*string)

	// The name of the Kusto IotHub Data Connection to create. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Specifies the target table name used for the message ingestion. Table must exist before resource is created. Changing this forces a new resource to be created.
	tableName?: null | string @go(TableName,*string)
}

#IOTHubDataConnectionObservation: {
	// Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
	clusterName?: null | string @go(ClusterName,*string)

	// Specifies the IotHub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.
	consumerGroup?: null | string @go(ConsumerGroup,*string)

	// Specifies the data format of the IoTHub messages. Allowed values: APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT and W3CLOGFILE. Changing this forces a new resource to be created.
	dataFormat?: null | string @go(DataFormat,*string)

	// Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
	databaseName?: null | string @go(DatabaseName,*string)

	// Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: Single, Multi. Changing this forces a new resource to be created.
	databaseRoutingType?: null | string @go(DatabaseRoutingType,*string)

	// Specifies the System Properties that each IoT Hub message should contain. Changing this forces a new resource to be created. Possible values are message-id, sequence-number, to, absolute-expiry-time, iothub-enqueuedtime, correlation-id, user-id, iothub-ack, iothub-connection-device-id, iothub-connection-auth-generation-id and iothub-connection-auth-method.
	eventSystemProperties?: [...null | string] @go(EventSystemProperties,[]*string)

	// The ID of the Kusto IotHub Data Connection.
	id?: null | string @go(ID,*string)

	// Specifies the resource id of the IotHub this data connection will use for ingestion. Changing this forces a new resource to be created.
	iothubId?: null | string @go(IOTHubID,*string)

	// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created. Changing this forces a new resource to be created.
	mappingRuleName?: null | string @go(MappingRuleName,*string)

	// The name of the Kusto IotHub Data Connection to create. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the IotHub Shared Access Policy this data connection will use for ingestion, which must have read permission. Changing this forces a new resource to be created.
	sharedAccessPolicyName?: null | string @go(SharedAccessPolicyName,*string)

	// Specifies the target table name used for the message ingestion. Table must exist before resource is created. Changing this forces a new resource to be created.
	tableName?: null | string @go(TableName,*string)
}

#IOTHubDataConnectionParameters: {
	// Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/kusto/v1beta1.Cluster
	// +kubebuilder:validation:Optional
	clusterName?: null | string @go(ClusterName,*string)

	// Specifies the IotHub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devices/v1beta1.IOTHubConsumerGroup
	// +kubebuilder:validation:Optional
	consumerGroup?: null | string @go(ConsumerGroup,*string)

	// Specifies the data format of the IoTHub messages. Allowed values: APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT and W3CLOGFILE. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	dataFormat?: null | string @go(DataFormat,*string)

	// Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/kusto/v1beta1.Database
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: Single, Multi. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	databaseRoutingType?: null | string @go(DatabaseRoutingType,*string)

	// Specifies the System Properties that each IoT Hub message should contain. Changing this forces a new resource to be created. Possible values are message-id, sequence-number, to, absolute-expiry-time, iothub-enqueuedtime, correlation-id, user-id, iothub-ack, iothub-connection-device-id, iothub-connection-auth-generation-id and iothub-connection-auth-method.
	// +kubebuilder:validation:Optional
	eventSystemProperties?: [...null | string] @go(EventSystemProperties,[]*string)

	// Specifies the resource id of the IotHub this data connection will use for ingestion. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devices/v1beta1.IOTHub
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	iothubId?: null | string @go(IOTHubID,*string)

	// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	mappingRuleName?: null | string @go(MappingRuleName,*string)

	// The name of the Kusto IotHub Data Connection to create. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the IotHub Shared Access Policy this data connection will use for ingestion, which must have read permission. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devices/v1beta1.IOTHubSharedAccessPolicy
	// +kubebuilder:validation:Optional
	sharedAccessPolicyName?: null | string @go(SharedAccessPolicyName,*string)

	// Specifies the target table name used for the message ingestion. Table must exist before resource is created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	tableName?: null | string @go(TableName,*string)
}

// IOTHubDataConnectionSpec defines the desired state of IOTHubDataConnection
#IOTHubDataConnectionSpec: {
	forProvider: #IOTHubDataConnectionParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #IOTHubDataConnectionInitParameters @go(InitProvider)
}

// IOTHubDataConnectionStatus defines the observed state of IOTHubDataConnection.
#IOTHubDataConnectionStatus: {
	atProvider?: #IOTHubDataConnectionObservation @go(AtProvider)
}

// IOTHubDataConnection is the Schema for the IOTHubDataConnections API. Manages Kusto / Data Explorer IotHub Data Connection
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IOTHubDataConnection: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #IOTHubDataConnectionSpec   @go(Spec)
	status?: #IOTHubDataConnectionStatus @go(Status)
}

// IOTHubDataConnectionList contains a list of IOTHubDataConnections
#IOTHubDataConnectionList: {
	items: [...#IOTHubDataConnection] @go(Items,[]IOTHubDataConnection)
}
