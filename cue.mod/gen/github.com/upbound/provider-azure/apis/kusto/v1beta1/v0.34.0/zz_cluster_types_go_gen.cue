// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/kusto/v1beta1

package v1beta1

#ClusterObservation: {
	// List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.
	allowedFqdns?: [...null | string] @go(AllowedFqdns,[]*string)

	// The list of ips in the format of CIDR allowed to connect to the cluster.
	allowedIpRanges?: [...null | string] @go(AllowedIPRanges,[]*string)

	// Specifies if the cluster could be automatically stopped (due to lack of data or no activity for many days). Defaults to true.
	autoStopEnabled?: null | bool @go(AutoStopEnabled,*bool)

	// The Kusto Cluster URI to be used for data ingestion.
	dataIngestionUri?: null | string @go(DataIngestionURI,*string)

	// Specifies if the cluster's disks are encrypted.
	diskEncryptionEnabled?: null | bool @go(DiskEncryptionEnabled,*bool)

	// Is the cluster's double encryption enabled? Changing this forces a new resource to be created.
	doubleEncryptionEnabled?: null | bool @go(DoubleEncryptionEnabled,*bool)

	// . The engine type that will be used in the backend. Possible values are V2 and V3. Defaults to V2. Changing this forces a new Kusto Cluster to be created.
	engine?: null | string @go(Engine,*string)

	// The Kusto Cluster ID.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// An list of language_extensions to enable. Valid values are: PYTHON and R.
	languageExtensions?: [...null | string] @go(LanguageExtensions,[]*string)

	// The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// An optimized_auto_scale block as defined below.
	optimizedAutoScale?: [...#OptimizedAutoScaleObservation] @go(OptimizedAutoScale,[]OptimizedAutoScaleObservation)

	// Whether to restrict outbound network access. Value is optional but if passed in, must be true or false, default is false.
	outboundNetworkAccessRestricted?: null | bool @go(OutboundNetworkAccessRestricted,*bool)

	// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).
	publicIpType?: null | string @go(PublicIPType,*string)

	// Is the public network access enabled? Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// Specifies if the purge operations are enabled.
	purgeEnabled?: null | bool @go(PurgeEnabled,*bool)

	// Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A sku block as defined below.
	sku?: [...#SkuObservation] @go(Sku,[]SkuObservation)

	// Specifies if the streaming ingest is enabled.
	streamingIngestionEnabled?: null | bool @go(StreamingIngestionEnabled,*bool)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies a list of tenant IDs that are trusted by the cluster. Default setting trusts all other tenants. Use trusted_external_tenants = ["*"] to explicitly allow all other tenants, trusted_external_tenants = ["MyTenantOnly"] for only your tenant or trusted_external_tenants = ["<tenantId1>", "<tenantIdx>"] to allow specific other tenants.
	trustedExternalTenants?: [...null | string] @go(TrustedExternalTenants,[]*string)

	// The FQDN of the Azure Kusto Cluster.
	uri?: null | string @go(URI,*string)

	// A virtual_network_configuration block as defined below. Changing this forces a new resource to be created.
	virtualNetworkConfiguration?: [...#VirtualNetworkConfigurationObservation] @go(VirtualNetworkConfiguration,[]VirtualNetworkConfigurationObservation)

	// Specifies a list of Availability Zones in which this Kusto Cluster should be located. Changing this forces a new Kusto Cluster to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#ClusterParameters: {
	// List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.
	// +kubebuilder:validation:Optional
	allowedFqdns?: [...null | string] @go(AllowedFqdns,[]*string)

	// The list of ips in the format of CIDR allowed to connect to the cluster.
	// +kubebuilder:validation:Optional
	allowedIpRanges?: [...null | string] @go(AllowedIPRanges,[]*string)

	// Specifies if the cluster could be automatically stopped (due to lack of data or no activity for many days). Defaults to true.
	// +kubebuilder:validation:Optional
	autoStopEnabled?: null | bool @go(AutoStopEnabled,*bool)

	// Specifies if the cluster's disks are encrypted.
	// +kubebuilder:validation:Optional
	diskEncryptionEnabled?: null | bool @go(DiskEncryptionEnabled,*bool)

	// Is the cluster's double encryption enabled? Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	doubleEncryptionEnabled?: null | bool @go(DoubleEncryptionEnabled,*bool)

	// . The engine type that will be used in the backend. Possible values are V2 and V3. Defaults to V2. Changing this forces a new Kusto Cluster to be created.
	// +kubebuilder:validation:Optional
	engine?: null | string @go(Engine,*string)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// An list of language_extensions to enable. Valid values are: PYTHON and R.
	// +kubebuilder:validation:Optional
	languageExtensions?: [...null | string] @go(LanguageExtensions,[]*string)

	// The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// An optimized_auto_scale block as defined below.
	// +kubebuilder:validation:Optional
	optimizedAutoScale?: [...#OptimizedAutoScaleParameters] @go(OptimizedAutoScale,[]OptimizedAutoScaleParameters)

	// Whether to restrict outbound network access. Value is optional but if passed in, must be true or false, default is false.
	// +kubebuilder:validation:Optional
	outboundNetworkAccessRestricted?: null | bool @go(OutboundNetworkAccessRestricted,*bool)

	// Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6).
	// +kubebuilder:validation:Optional
	publicIpType?: null | string @go(PublicIPType,*string)

	// Is the public network access enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// Specifies if the purge operations are enabled.
	// +kubebuilder:validation:Optional
	purgeEnabled?: null | bool @go(PurgeEnabled,*bool)

	// Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A sku block as defined below.
	// +kubebuilder:validation:Optional
	sku?: [...#SkuParameters] @go(Sku,[]SkuParameters)

	// Specifies if the streaming ingest is enabled.
	// +kubebuilder:validation:Optional
	streamingIngestionEnabled?: null | bool @go(StreamingIngestionEnabled,*bool)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies a list of tenant IDs that are trusted by the cluster. Default setting trusts all other tenants. Use trusted_external_tenants = ["*"] to explicitly allow all other tenants, trusted_external_tenants = ["MyTenantOnly"] for only your tenant or trusted_external_tenants = ["<tenantId1>", "<tenantIdx>"] to allow specific other tenants.
	// +kubebuilder:validation:Optional
	trustedExternalTenants?: [...null | string] @go(TrustedExternalTenants,[]*string)

	// A virtual_network_configuration block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	virtualNetworkConfiguration?: [...#VirtualNetworkConfigurationParameters] @go(VirtualNetworkConfiguration,[]VirtualNetworkConfigurationParameters)

	// Specifies a list of Availability Zones in which this Kusto Cluster should be located. Changing this forces a new Kusto Cluster to be created.
	// +kubebuilder:validation:Optional
	zones?: [...null | string] @go(Zones,[]*string)
}

#IdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kusto Cluster.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID associated with this System Assigned Managed Service Identity.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID associated with this System Assigned Managed Service Identity.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#IdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kusto Cluster.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#OptimizedAutoScaleObservation: {
	// The maximum number of allowed instances. Must between 0 and 1000.
	maximumInstances?: null | float64 @go(MaximumInstances,*float64)

	// The minimum number of allowed instances. Must between 0 and 1000.
	minimumInstances?: null | float64 @go(MinimumInstances,*float64)
}

#OptimizedAutoScaleParameters: {
	// The maximum number of allowed instances. Must between 0 and 1000.
	// +kubebuilder:validation:Required
	maximumInstances?: null | float64 @go(MaximumInstances,*float64)

	// The minimum number of allowed instances. Must between 0 and 1000.
	// +kubebuilder:validation:Required
	minimumInstances?: null | float64 @go(MinimumInstances,*float64)
}

#SkuObservation: {
	// Specifies the node count for the cluster. Boundaries depend on the SKU name.
	capacity?: null | float64 @go(Capacity,*float64)

	// The name of the SKU. Valid values are: Dev(No SLA)_Standard_D11_v2, Dev(No SLA)_Standard_E2a_v4, Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2, Standard_D16d_v5, Standard_D32d_v4, Standard_D32d_v5, Standard_DS13_v2+1TB_PS, Standard_DS13_v2+2TB_PS, Standard_DS14_v2+3TB_PS, Standard_DS14_v2+4TB_PS, Standard_E16a_v4, Standard_E16ads_v5, Standard_E16as_v4+3TB_PS, Standard_E16as_v4+4TB_PS, Standard_E16as_v5+3TB_PS, Standard_E16as_v5+4TB_PS, Standard_E16s_v4+3TB_PS, Standard_E16s_v4+4TB_PS, Standard_E16s_v5+3TB_PS, Standard_E16s_v5+4TB_PS, Standard_E2a_v4, Standard_E2ads_v5,Standard_E4a_v4, Standard_E4ads_v5, Standard_E64i_v3, Standard_E80ids_v4, Standard_E8a_v4, Standard_E8ads_v5, Standard_E8as_v4+1TB_PS, Standard_E8as_v4+2TB_PS, Standard_E8as_v5+1TB_PS, Standard_E8as_v5+2TB_PS, Standard_E8s_v4+1TB_PS, Standard_E8s_v4+2TB_PS, Standard_E8s_v5+1TB_PS, Standard_E8s_v5+2TB_PS, Standard_L16s, Standard_L16s_v2, Standard_L4s, Standard_L8s, Standard_L8s_v2, "Standard_L8s_v3", Standard_L16s_v3, Standard_L8as_v3, Standard_L16as_v3, Standard_EC8as_v5+1TB_PS, Standard_EC8as_v5+2TB_PS, Standard_EC16as_v5+3TB_PS, Standard_EC16as_v5+4TB_PS, Standard_EC8ads_v5, Standard_EC16ads_v5, Standard_E2d_v4, Standard_E4d_v4, Standard_E8d_v4, Standard_E16d_v4, Standard_E2d_v5, Standard_E4d_v5, Standard_E8d_v5 and Standard_E16d_v5.
	name?: null | string @go(Name,*string)
}

#SkuParameters: {
	// Specifies the node count for the cluster. Boundaries depend on the SKU name.
	// +kubebuilder:validation:Optional
	capacity?: null | float64 @go(Capacity,*float64)

	// The name of the SKU. Valid values are: Dev(No SLA)_Standard_D11_v2, Dev(No SLA)_Standard_E2a_v4, Standard_D11_v2, Standard_D12_v2, Standard_D13_v2, Standard_D14_v2, Standard_D16d_v5, Standard_D32d_v4, Standard_D32d_v5, Standard_DS13_v2+1TB_PS, Standard_DS13_v2+2TB_PS, Standard_DS14_v2+3TB_PS, Standard_DS14_v2+4TB_PS, Standard_E16a_v4, Standard_E16ads_v5, Standard_E16as_v4+3TB_PS, Standard_E16as_v4+4TB_PS, Standard_E16as_v5+3TB_PS, Standard_E16as_v5+4TB_PS, Standard_E16s_v4+3TB_PS, Standard_E16s_v4+4TB_PS, Standard_E16s_v5+3TB_PS, Standard_E16s_v5+4TB_PS, Standard_E2a_v4, Standard_E2ads_v5,Standard_E4a_v4, Standard_E4ads_v5, Standard_E64i_v3, Standard_E80ids_v4, Standard_E8a_v4, Standard_E8ads_v5, Standard_E8as_v4+1TB_PS, Standard_E8as_v4+2TB_PS, Standard_E8as_v5+1TB_PS, Standard_E8as_v5+2TB_PS, Standard_E8s_v4+1TB_PS, Standard_E8s_v4+2TB_PS, Standard_E8s_v5+1TB_PS, Standard_E8s_v5+2TB_PS, Standard_L16s, Standard_L16s_v2, Standard_L4s, Standard_L8s, Standard_L8s_v2, "Standard_L8s_v3", Standard_L16s_v3, Standard_L8as_v3, Standard_L16as_v3, Standard_EC8as_v5+1TB_PS, Standard_EC8as_v5+2TB_PS, Standard_EC16as_v5+3TB_PS, Standard_EC16as_v5+4TB_PS, Standard_EC8ads_v5, Standard_EC16ads_v5, Standard_E2d_v4, Standard_E4d_v4, Standard_E8d_v4, Standard_E16d_v4, Standard_E2d_v5, Standard_E4d_v5, Standard_E8d_v5 and Standard_E16d_v5.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)
}

#VirtualNetworkConfigurationObservation: {
	// Data management's service public IP address resource id.
	dataManagementPublicIpId?: null | string @go(DataManagementPublicIPID,*string)

	// Engine service's public IP address resource id.
	enginePublicIpId?: null | string @go(EnginePublicIPID,*string)

	// The subnet resource id.
	subnetId?: null | string @go(SubnetID,*string)
}

#VirtualNetworkConfigurationParameters: {
	// Data management's service public IP address resource id.
	// +kubebuilder:validation:Required
	dataManagementPublicIpId?: null | string @go(DataManagementPublicIPID,*string)

	// Engine service's public IP address resource id.
	// +kubebuilder:validation:Required
	enginePublicIpId?: null | string @go(EnginePublicIPID,*string)

	// The subnet resource id.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

// ClusterSpec defines the desired state of Cluster
#ClusterSpec: {
	forProvider: #ClusterParameters @go(ForProvider)
}

// ClusterStatus defines the observed state of Cluster.
#ClusterStatus: {
	atProvider?: #ClusterObservation @go(AtProvider)
}

// Cluster is the Schema for the Clusters API. Manages Kusto (also known as Azure Data Explorer) Cluster
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Cluster: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.sku)",message="sku is a required parameter"
	spec:    #ClusterSpec   @go(Spec)
	status?: #ClusterStatus @go(Status)
}

// ClusterList contains a list of Clusters
#ClusterList: {
	items: [...#Cluster] @go(Items,[]Cluster)
}
