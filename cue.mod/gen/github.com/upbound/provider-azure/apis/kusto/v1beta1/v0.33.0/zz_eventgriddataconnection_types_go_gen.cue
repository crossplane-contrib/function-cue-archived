// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/kusto/v1beta1

package v1beta1

#EventGridDataConnectionObservation: {
	// Specifies the blob storage event type that needs to be processed. Possible Values are Microsoft.Storage.BlobCreated and Microsoft.Storage.BlobRenamed. Defaults to Microsoft.Storage.BlobCreated.
	blobStorageEventType?: null | string @go(BlobStorageEventType,*string)

	// Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
	clusterName?: null | string @go(ClusterName,*string)

	// Specifies the data format of the EventHub messages. Allowed values: APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT and W3CLOGFILE.
	dataFormat?: null | string @go(DataFormat,*string)

	// Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
	databaseName?: null | string @go(DatabaseName,*string)

	// Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: Single, Multi. Changing this forces a new resource to be created.
	databaseRoutingType?: null | string @go(DatabaseRoutingType,*string)

	// The resource ID of the event grid that is subscribed to the storage account events.
	eventgridResourceId?: null | string @go(EventGridResourceID,*string)

	// Specifies the Event Hub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.
	eventhubConsumerGroupName?: null | string @go(EventHubConsumerGroupName,*string)

	// Specifies the resource id of the Event Hub this data connection will use for ingestion. Changing this forces a new resource to be created.
	eventhubId?: null | string @go(EventHubID,*string)

	// The ID of the Kusto Event Grid Data Connection.
	id?: null | string @go(ID,*string)

	// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Empty for non-managed identity based data connection. For system assigned identity, provide cluster resource Id. For user assigned identity (UAI) provide the UAI resource Id.
	managedIdentityResourceId?: null | string @go(ManagedIdentityResourceID,*string)

	// Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.
	mappingRuleName?: null | string @go(MappingRuleName,*string)

	// Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// is the first record of every file ignored? Defaults to false.
	skipFirstRecord?: null | bool @go(SkipFirstRecord,*bool)

	// Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// Specifies the target table name used for the message ingestion. Table must exist before resource is created.
	tableName?: null | string @go(TableName,*string)
}

#EventGridDataConnectionParameters: {
	// Specifies the blob storage event type that needs to be processed. Possible Values are Microsoft.Storage.BlobCreated and Microsoft.Storage.BlobRenamed. Defaults to Microsoft.Storage.BlobCreated.
	// +kubebuilder:validation:Optional
	blobStorageEventType?: null | string @go(BlobStorageEventType,*string)

	// Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/kusto/v1beta1.Cluster
	// +kubebuilder:validation:Optional
	clusterName?: null | string @go(ClusterName,*string)

	// Specifies the data format of the EventHub messages. Allowed values: APACHEAVRO, AVRO, CSV, JSON, MULTIJSON, ORC, PARQUET, PSV, RAW, SCSV, SINGLEJSON, SOHSV, TSV, TSVE, TXT and W3CLOGFILE.
	// +kubebuilder:validation:Optional
	dataFormat?: null | string @go(DataFormat,*string)

	// Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/kusto/v1beta1.Database
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: Single, Multi. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	databaseRoutingType?: null | string @go(DatabaseRoutingType,*string)

	// The resource ID of the event grid that is subscribed to the storage account events.
	// +kubebuilder:validation:Optional
	eventgridResourceId?: null | string @go(EventGridResourceID,*string)

	// Specifies the Event Hub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/eventhub/v1beta1.ConsumerGroup
	// +kubebuilder:validation:Optional
	eventhubConsumerGroupName?: null | string @go(EventHubConsumerGroupName,*string)

	// Specifies the resource id of the Event Hub this data connection will use for ingestion. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/eventhub/v1beta1.EventHub
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	eventhubId?: null | string @go(EventHubID,*string)

	// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Empty for non-managed identity based data connection. For system assigned identity, provide cluster resource Id. For user assigned identity (UAI) provide the UAI resource Id.
	// +kubebuilder:validation:Optional
	managedIdentityResourceId?: null | string @go(ManagedIdentityResourceID,*string)

	// Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.
	// +kubebuilder:validation:Optional
	mappingRuleName?: null | string @go(MappingRuleName,*string)

	// Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// is the first record of every file ignored? Defaults to false.
	// +kubebuilder:validation:Optional
	skipFirstRecord?: null | bool @go(SkipFirstRecord,*bool)

	// Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// Specifies the target table name used for the message ingestion. Table must exist before resource is created.
	// +kubebuilder:validation:Optional
	tableName?: null | string @go(TableName,*string)
}

// EventGridDataConnectionSpec defines the desired state of EventGridDataConnection
#EventGridDataConnectionSpec: {
	forProvider: #EventGridDataConnectionParameters @go(ForProvider)
}

// EventGridDataConnectionStatus defines the observed state of EventGridDataConnection.
#EventGridDataConnectionStatus: {
	atProvider?: #EventGridDataConnectionObservation @go(AtProvider)
}

// EventGridDataConnection is the Schema for the EventGridDataConnections API. Manages Kusto / Data Explorer Event Grid Data Connection
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#EventGridDataConnection: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	spec:    #EventGridDataConnectionSpec   @go(Spec)
	status?: #EventGridDataConnectionStatus @go(Status)
}

// EventGridDataConnectionList contains a list of EventGridDataConnections
#EventGridDataConnectionList: {
	items: [...#EventGridDataConnection] @go(Items,[]EventGridDataConnection)
}
