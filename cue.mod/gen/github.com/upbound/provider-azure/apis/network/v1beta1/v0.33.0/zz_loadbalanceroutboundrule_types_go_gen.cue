// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#LoadBalancerOutboundRuleFrontendIPConfigurationObservation: {
	// The ID of the Load Balancer Outbound Rule.
	id?: null | string @go(ID,*string)

	// The name of the Frontend IP Configuration.
	name?: null | string @go(Name,*string)
}

#LoadBalancerOutboundRuleFrontendIPConfigurationParameters: {
	// The name of the Frontend IP Configuration.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)
}

#LoadBalancerOutboundRuleObservation: {
	// The number of outbound ports to be used for NAT. Defaults to 1024.
	allocatedOutboundPorts?: null | float64 @go(AllocatedOutboundPorts,*float64)

	// The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	backendAddressPoolId?: null | string @go(BackendAddressPoolID,*string)

	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	enableTcpReset?: null | bool @go(EnableTCPReset,*bool)

	// One or more frontend_ip_configuration blocks as defined below.
	frontendIpConfiguration?: [...#LoadBalancerOutboundRuleFrontendIPConfigurationObservation] @go(FrontendIPConfiguration,[]LoadBalancerOutboundRuleFrontendIPConfigurationObservation)

	// The ID of the Load Balancer Outbound Rule.
	id?: null | string @go(ID,*string)

	// The timeout for the TCP idle connection Defaults to 4.
	idleTimeoutInMinutes?: null | float64 @go(IdleTimeoutInMinutes,*float64)

	// The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
	loadbalancerId?: null | string @go(LoadbalancerID,*string)

	// The transport protocol for the external endpoint. Possible values are Udp, Tcp or All.
	protocol?: null | string @go(Protocol,*string)
}

#LoadBalancerOutboundRuleParameters: {
	// The number of outbound ports to be used for NAT. Defaults to 1024.
	// +kubebuilder:validation:Optional
	allocatedOutboundPorts?: null | float64 @go(AllocatedOutboundPorts,*float64)

	// The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	// +crossplane:generate:reference:type=LoadBalancerBackendAddressPool
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	backendAddressPoolId?: null | string @go(BackendAddressPoolID,*string)

	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	// +kubebuilder:validation:Optional
	enableTcpReset?: null | bool @go(EnableTCPReset,*bool)

	// One or more frontend_ip_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	frontendIpConfiguration?: [...#LoadBalancerOutboundRuleFrontendIPConfigurationParameters] @go(FrontendIPConfiguration,[]LoadBalancerOutboundRuleFrontendIPConfigurationParameters)

	// The timeout for the TCP idle connection Defaults to 4.
	// +kubebuilder:validation:Optional
	idleTimeoutInMinutes?: null | float64 @go(IdleTimeoutInMinutes,*float64)

	// The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=LoadBalancer
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	loadbalancerId?: null | string @go(LoadbalancerID,*string)

	// The transport protocol for the external endpoint. Possible values are Udp, Tcp or All.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)
}

// LoadBalancerOutboundRuleSpec defines the desired state of LoadBalancerOutboundRule
#LoadBalancerOutboundRuleSpec: {
	forProvider: #LoadBalancerOutboundRuleParameters @go(ForProvider)
}

// LoadBalancerOutboundRuleStatus defines the observed state of LoadBalancerOutboundRule.
#LoadBalancerOutboundRuleStatus: {
	atProvider?: #LoadBalancerOutboundRuleObservation @go(AtProvider)
}

// LoadBalancerOutboundRule is the Schema for the LoadBalancerOutboundRules API. Manages a Load Balancer Outbound Rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LoadBalancerOutboundRule: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.protocol)",message="protocol is a required parameter"
	spec:    #LoadBalancerOutboundRuleSpec   @go(Spec)
	status?: #LoadBalancerOutboundRuleStatus @go(Status)
}

// LoadBalancerOutboundRuleList contains a list of LoadBalancerOutboundRules
#LoadBalancerOutboundRuleList: {
	items: [...#LoadBalancerOutboundRule] @go(Items,[]LoadBalancerOutboundRule)
}
