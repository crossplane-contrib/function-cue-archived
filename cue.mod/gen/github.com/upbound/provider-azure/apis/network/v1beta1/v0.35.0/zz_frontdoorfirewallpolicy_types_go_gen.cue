// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#CustomRuleInitParameters: {
	// The action to perform when the rule is matched. Possible values are Allow, Block, Log, or Redirect.
	action?: null | string @go(Action,*string)

	// Is the rule is enabled or disabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// One or more match_condition block defined below. Can support up to 10 match_condition blocks.
	matchCondition?: [...#MatchConditionInitParameters] @go(MatchCondition,[]MatchConditionInitParameters)

	// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
	name?: null | string @go(Name,*string)

	// The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to 1.
	priority?: null | float64 @go(Priority,*float64)

	// The rate limit duration in minutes. Defaults to 1.
	rateLimitDurationInMinutes?: null | float64 @go(RateLimitDurationInMinutes,*float64)

	// The rate limit threshold. Defaults to 10.
	rateLimitThreshold?: null | float64 @go(RateLimitThreshold,*float64)

	// The type of rule. Possible values are MatchRule or RateLimitRule.
	type?: null | string @go(Type,*string)
}

#CustomRuleObservation: {
	// The action to perform when the rule is matched. Possible values are Allow, Block, Log, or Redirect.
	action?: null | string @go(Action,*string)

	// Is the rule is enabled or disabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// One or more match_condition block defined below. Can support up to 10 match_condition blocks.
	matchCondition?: [...#MatchConditionObservation] @go(MatchCondition,[]MatchConditionObservation)

	// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
	name?: null | string @go(Name,*string)

	// The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to 1.
	priority?: null | float64 @go(Priority,*float64)

	// The rate limit duration in minutes. Defaults to 1.
	rateLimitDurationInMinutes?: null | float64 @go(RateLimitDurationInMinutes,*float64)

	// The rate limit threshold. Defaults to 10.
	rateLimitThreshold?: null | float64 @go(RateLimitThreshold,*float64)

	// The type of rule. Possible values are MatchRule or RateLimitRule.
	type?: null | string @go(Type,*string)
}

#CustomRuleParameters: {
	// The action to perform when the rule is matched. Possible values are Allow, Block, Log, or Redirect.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// Is the rule is enabled or disabled? Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// One or more match_condition block defined below. Can support up to 10 match_condition blocks.
	// +kubebuilder:validation:Optional
	matchCondition?: [...#MatchConditionParameters] @go(MatchCondition,[]MatchConditionParameters)

	// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to 1.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// The rate limit duration in minutes. Defaults to 1.
	// +kubebuilder:validation:Optional
	rateLimitDurationInMinutes?: null | float64 @go(RateLimitDurationInMinutes,*float64)

	// The rate limit threshold. Defaults to 10.
	// +kubebuilder:validation:Optional
	rateLimitThreshold?: null | float64 @go(RateLimitThreshold,*float64)

	// The type of rule. Possible values are MatchRule or RateLimitRule.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#FrontdoorFirewallPolicyInitParameters: {
	// If a custom_rule block's action type is block, this is the response body. The body must be specified in base64 encoding.
	customBlockResponseBody?: null | string @go(CustomBlockResponseBody,*string)

	// If a custom_rule block's action type is block, this is the response status code. Possible values are 200, 403, 405, 406, or 429.
	customBlockResponseStatusCode?: null | float64 @go(CustomBlockResponseStatusCode,*float64)

	// One or more custom_rule blocks as defined below.
	customRule?: [...#CustomRuleInitParameters] @go(CustomRule,[]CustomRuleInitParameters)

	// Is the policy a enabled state or disabled state. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// One or more managed_rule blocks as defined below.
	managedRule?: [...#ManagedRuleInitParameters] @go(ManagedRule,[]ManagedRuleInitParameters)

	// The firewall policy mode. Possible values are Detection, Prevention and defaults to Prevention.
	mode?: null | string @go(Mode,*string)

	// If action type is redirect, this field represents redirect URL for the client.
	redirectUrl?: null | string @go(RedirectURL,*string)

	// A mapping of tags to assign to the Web Application Firewall Policy.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#FrontdoorFirewallPolicyObservation: {
	// If a custom_rule block's action type is block, this is the response body. The body must be specified in base64 encoding.
	customBlockResponseBody?: null | string @go(CustomBlockResponseBody,*string)

	// If a custom_rule block's action type is block, this is the response status code. Possible values are 200, 403, 405, 406, or 429.
	customBlockResponseStatusCode?: null | float64 @go(CustomBlockResponseStatusCode,*float64)

	// One or more custom_rule blocks as defined below.
	customRule?: [...#CustomRuleObservation] @go(CustomRule,[]CustomRuleObservation)

	// Is the policy a enabled state or disabled state. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The Frontend Endpoints associated with this Front Door Web Application Firewall policy.
	frontendEndpointIds?: [...null | string] @go(FrontendEndpointIds,[]*string)

	// The ID of the Front Door Firewall Policy.
	id?: null | string @go(ID,*string)

	// The Azure Region where this Front Door Firewall Policy exists.
	location?: null | string @go(Location,*string)

	// One or more managed_rule blocks as defined below.
	managedRule?: [...#ManagedRuleObservation] @go(ManagedRule,[]ManagedRuleObservation)

	// The firewall policy mode. Possible values are Detection, Prevention and defaults to Prevention.
	mode?: null | string @go(Mode,*string)

	// If action type is redirect, this field represents redirect URL for the client.
	redirectUrl?: null | string @go(RedirectURL,*string)

	// The name of the resource group. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the Web Application Firewall Policy.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#FrontdoorFirewallPolicyParameters: {
	// If a custom_rule block's action type is block, this is the response body. The body must be specified in base64 encoding.
	// +kubebuilder:validation:Optional
	customBlockResponseBody?: null | string @go(CustomBlockResponseBody,*string)

	// If a custom_rule block's action type is block, this is the response status code. Possible values are 200, 403, 405, 406, or 429.
	// +kubebuilder:validation:Optional
	customBlockResponseStatusCode?: null | float64 @go(CustomBlockResponseStatusCode,*float64)

	// One or more custom_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	customRule?: [...#CustomRuleParameters] @go(CustomRule,[]CustomRuleParameters)

	// Is the policy a enabled state or disabled state. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// One or more managed_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	managedRule?: [...#ManagedRuleParameters] @go(ManagedRule,[]ManagedRuleParameters)

	// The firewall policy mode. Possible values are Detection, Prevention and defaults to Prevention.
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// If action type is redirect, this field represents redirect URL for the client.
	// +kubebuilder:validation:Optional
	redirectUrl?: null | string @go(RedirectURL,*string)

	// The name of the resource group. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the Web Application Firewall Policy.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ManagedRuleExclusionInitParameters: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)
}

#ManagedRuleExclusionObservation: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)
}

#ManagedRuleExclusionParameters: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	// +kubebuilder:validation:Optional
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)
}

#ManagedRuleInitParameters: {
	// One or more exclusion blocks as defined below.
	exclusion?: [...#ManagedRuleExclusionInitParameters] @go(Exclusion,[]ManagedRuleExclusionInitParameters)

	// One or more override blocks as defined below.
	override?: [...#OverrideInitParameters] @go(Override,[]OverrideInitParameters)

	// The name of the managed rule to use with this resource.
	type?: null | string @go(Type,*string)

	// The version on the managed rule to use with this resource.
	version?: null | string @go(Version,*string)
}

#ManagedRuleObservation: {
	// One or more exclusion blocks as defined below.
	exclusion?: [...#ManagedRuleExclusionObservation] @go(Exclusion,[]ManagedRuleExclusionObservation)

	// One or more override blocks as defined below.
	override?: [...#OverrideObservation] @go(Override,[]OverrideObservation)

	// The name of the managed rule to use with this resource.
	type?: null | string @go(Type,*string)

	// The version on the managed rule to use with this resource.
	version?: null | string @go(Version,*string)
}

#ManagedRuleParameters: {
	// One or more exclusion blocks as defined below.
	// +kubebuilder:validation:Optional
	exclusion?: [...#ManagedRuleExclusionParameters] @go(Exclusion,[]ManagedRuleExclusionParameters)

	// One or more override blocks as defined below.
	// +kubebuilder:validation:Optional
	override?: [...#OverrideParameters] @go(Override,[]OverrideParameters)

	// The name of the managed rule to use with this resource.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// The version on the managed rule to use with this resource.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#MatchConditionInitParameters: {
	// Up to 600 possible values to match. Limit is in total across all match_condition blocks and match_values arguments. String value itself can be up to 256 characters long.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Should the result of the condition be negated.
	negationCondition?: null | bool @go(NegationCondition,*bool)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)

	// Up to 5 transforms to apply. Possible values are Lowercase, RemoveNulls, Trim, Uppercase, URLDecode orURLEncode.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#MatchConditionObservation: {
	// Up to 600 possible values to match. Limit is in total across all match_condition blocks and match_values arguments. String value itself can be up to 256 characters long.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Should the result of the condition be negated.
	negationCondition?: null | bool @go(NegationCondition,*bool)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)

	// Up to 5 transforms to apply. Possible values are Lowercase, RemoveNulls, Trim, Uppercase, URLDecode orURLEncode.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#MatchConditionParameters: {
	// Up to 600 possible values to match. Limit is in total across all match_condition blocks and match_values arguments. String value itself can be up to 256 characters long.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	// +kubebuilder:validation:Optional
	matchVariable?: null | string @go(MatchVariable,*string)

	// Should the result of the condition be negated.
	// +kubebuilder:validation:Optional
	negationCondition?: null | bool @go(NegationCondition,*bool)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)

	// Up to 5 transforms to apply. Possible values are Lowercase, RemoveNulls, Trim, Uppercase, URLDecode orURLEncode.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#OverrideExclusionInitParameters: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)
}

#OverrideExclusionObservation: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)
}

#OverrideExclusionParameters: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	// +kubebuilder:validation:Optional
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)
}

#OverrideInitParameters: {
	// One or more exclusion blocks as defined below.
	exclusion?: [...#OverrideExclusionInitParameters] @go(Exclusion,[]OverrideExclusionInitParameters)

	// One or more rule blocks as defined below. If none are specified, all of the rules in the group will be disabled.
	rule?: [...#OverrideRuleInitParameters] @go(Rule,[]OverrideRuleInitParameters)

	// The managed rule group to override.
	ruleGroupName?: null | string @go(RuleGroupName,*string)
}

#OverrideObservation: {
	// One or more exclusion blocks as defined below.
	exclusion?: [...#OverrideExclusionObservation] @go(Exclusion,[]OverrideExclusionObservation)

	// One or more rule blocks as defined below. If none are specified, all of the rules in the group will be disabled.
	rule?: [...#OverrideRuleObservation] @go(Rule,[]OverrideRuleObservation)

	// The managed rule group to override.
	ruleGroupName?: null | string @go(RuleGroupName,*string)
}

#OverrideParameters: {
	// One or more exclusion blocks as defined below.
	// +kubebuilder:validation:Optional
	exclusion?: [...#OverrideExclusionParameters] @go(Exclusion,[]OverrideExclusionParameters)

	// One or more rule blocks as defined below. If none are specified, all of the rules in the group will be disabled.
	// +kubebuilder:validation:Optional
	rule?: [...#OverrideRuleParameters] @go(Rule,[]OverrideRuleParameters)

	// The managed rule group to override.
	// +kubebuilder:validation:Optional
	ruleGroupName?: null | string @go(RuleGroupName,*string)
}

#OverrideRuleInitParameters: {
	// The action to be applied when the rule matches. Possible values are Allow, Block, Log, or Redirect.
	action?: null | string @go(Action,*string)

	// Is the managed rule override enabled or disabled. Defaults to false
	enabled?: null | bool @go(Enabled,*bool)

	// One or more exclusion blocks as defined below.
	exclusion?: [...#RuleExclusionInitParameters] @go(Exclusion,[]RuleExclusionInitParameters)

	// Identifier for the managed rule.
	ruleId?: null | string @go(RuleID,*string)
}

#OverrideRuleObservation: {
	// The action to be applied when the rule matches. Possible values are Allow, Block, Log, or Redirect.
	action?: null | string @go(Action,*string)

	// Is the managed rule override enabled or disabled. Defaults to false
	enabled?: null | bool @go(Enabled,*bool)

	// One or more exclusion blocks as defined below.
	exclusion?: [...#RuleExclusionObservation] @go(Exclusion,[]RuleExclusionObservation)

	// Identifier for the managed rule.
	ruleId?: null | string @go(RuleID,*string)
}

#OverrideRuleParameters: {
	// The action to be applied when the rule matches. Possible values are Allow, Block, Log, or Redirect.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// Is the managed rule override enabled or disabled. Defaults to false
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// One or more exclusion blocks as defined below.
	// +kubebuilder:validation:Optional
	exclusion?: [...#RuleExclusionParameters] @go(Exclusion,[]RuleExclusionParameters)

	// Identifier for the managed rule.
	// +kubebuilder:validation:Optional
	ruleId?: null | string @go(RuleID,*string)
}

#RuleExclusionInitParameters: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)
}

#RuleExclusionObservation: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	selector?: null | string @go(Selector,*string)
}

#RuleExclusionParameters: {
	// The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.
	// +kubebuilder:validation:Optional
	matchVariable?: null | string @go(MatchVariable,*string)

	// Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)
}

// FrontdoorFirewallPolicySpec defines the desired state of FrontdoorFirewallPolicy
#FrontdoorFirewallPolicySpec: {
	forProvider: #FrontdoorFirewallPolicyParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FrontdoorFirewallPolicyInitParameters @go(InitProvider)
}

// FrontdoorFirewallPolicyStatus defines the observed state of FrontdoorFirewallPolicy.
#FrontdoorFirewallPolicyStatus: {
	atProvider?: #FrontdoorFirewallPolicyObservation @go(AtProvider)
}

// FrontdoorFirewallPolicy is the Schema for the FrontdoorFirewallPolicys API. Manages an Azure Front Door (classic) Web Application Firewall Policy instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FrontdoorFirewallPolicy: {
	spec:    #FrontdoorFirewallPolicySpec   @go(Spec)
	status?: #FrontdoorFirewallPolicyStatus @go(Status)
}

// FrontdoorFirewallPolicyList contains a list of FrontdoorFirewallPolicys
#FrontdoorFirewallPolicyList: {
	items: [...#FrontdoorFirewallPolicy] @go(Items,[]FrontdoorFirewallPolicy)
}
