// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#PublicIPInitParameters: {
	// Defines the allocation method for this IP address. Possible values are Static or Dynamic.
	allocationMethod?: null | string @go(AllocationMethod,*string)

	// The DDoS protection mode of the public IP. Possible values are Disabled, Enabled, and VirtualNetworkInherited. Defaults to VirtualNetworkInherited.
	ddosProtectionMode?: null | string @go(DDOSProtectionMode,*string)

	// The ID of DDoS protection plan associated with the public IP.
	ddosProtectionPlanId?: null | string @go(DDOSProtectionPlanID,*string)

	// Label for the Domain Name. Will be used to make up the FQDN. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	domainNameLabel?: null | string @go(DomainNameLabel,*string)

	// Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
	edgeZone?: null | string @go(EdgeZone,*string)

	// A mapping of IP tags to assign to the public IP. Changing this forces a new resource to be created.
	ipTags?: {[string]: null | string} @go(IPTags,map[string]*string)

	// The IP Version to use, IPv6 or IPv4. Changing this forces a new resource to be created.
	ipVersion?: null | string @go(IPVersion,*string)

	// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
	idleTimeoutInMinutes?: null | float64 @go(IdleTimeoutInMinutes,*float64)

	// Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// If specified then public IP address allocated will be provided from the public IP prefix resource. Changing this forces a new resource to be created.
	publicIpPrefixId?: null | string @go(PublicIPPrefixID,*string)

	// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	reverseFqdn?: null | string @go(ReverseFqdn,*string)

	// The SKU of the Public IP. Accepted values are Basic and Standard. Defaults to Basic. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// The SKU Tier that should be used for the Public IP. Possible values are Regional and Global. Defaults to Regional. Changing this forces a new resource to be created.
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A collection containing the availability zone to allocate the Public IP in. Changing this forces a new resource to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#PublicIPObservation: {
	// Defines the allocation method for this IP address. Possible values are Static or Dynamic.
	allocationMethod?: null | string @go(AllocationMethod,*string)

	// The DDoS protection mode of the public IP. Possible values are Disabled, Enabled, and VirtualNetworkInherited. Defaults to VirtualNetworkInherited.
	ddosProtectionMode?: null | string @go(DDOSProtectionMode,*string)

	// The ID of DDoS protection plan associated with the public IP.
	ddosProtectionPlanId?: null | string @go(DDOSProtectionPlanID,*string)

	// Label for the Domain Name. Will be used to make up the FQDN. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	domainNameLabel?: null | string @go(DomainNameLabel,*string)

	// Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
	edgeZone?: null | string @go(EdgeZone,*string)

	// Fully qualified domain name of the A DNS record associated with the public IP. domain_name_label must be specified to get the fqdn. This is the concatenation of the domain_name_label and the regionalized DNS zone
	fqdn?: null | string @go(Fqdn,*string)

	// The ID of this Public IP.
	id?: null | string @go(ID,*string)

	// The IP address value that was allocated.
	ipAddress?: null | string @go(IPAddress,*string)

	// A mapping of IP tags to assign to the public IP. Changing this forces a new resource to be created.
	ipTags?: {[string]: null | string} @go(IPTags,map[string]*string)

	// The IP Version to use, IPv6 or IPv4. Changing this forces a new resource to be created.
	ipVersion?: null | string @go(IPVersion,*string)

	// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
	idleTimeoutInMinutes?: null | float64 @go(IdleTimeoutInMinutes,*float64)

	// Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// If specified then public IP address allocated will be provided from the public IP prefix resource. Changing this forces a new resource to be created.
	publicIpPrefixId?: null | string @go(PublicIPPrefixID,*string)

	// The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	reverseFqdn?: null | string @go(ReverseFqdn,*string)

	// The SKU of the Public IP. Accepted values are Basic and Standard. Defaults to Basic. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// The SKU Tier that should be used for the Public IP. Possible values are Regional and Global. Defaults to Regional. Changing this forces a new resource to be created.
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A collection containing the availability zone to allocate the Public IP in. Changing this forces a new resource to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#PublicIPParameters: {
	// Defines the allocation method for this IP address. Possible values are Static or Dynamic.
	// +kubebuilder:validation:Optional
	allocationMethod?: null | string @go(AllocationMethod,*string)

	// The DDoS protection mode of the public IP. Possible values are Disabled, Enabled, and VirtualNetworkInherited. Defaults to VirtualNetworkInherited.
	// +kubebuilder:validation:Optional
	ddosProtectionMode?: null | string @go(DDOSProtectionMode,*string)

	// The ID of DDoS protection plan associated with the public IP.
	// +kubebuilder:validation:Optional
	ddosProtectionPlanId?: null | string @go(DDOSProtectionPlanID,*string)

	// Label for the Domain Name. Will be used to make up the FQDN. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	// +kubebuilder:validation:Optional
	domainNameLabel?: null | string @go(DomainNameLabel,*string)

	// Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
	// +kubebuilder:validation:Optional
	edgeZone?: null | string @go(EdgeZone,*string)

	// A mapping of IP tags to assign to the public IP. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ipTags?: {[string]: null | string} @go(IPTags,map[string]*string)

	// The IP Version to use, IPv6 or IPv4. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ipVersion?: null | string @go(IPVersion,*string)

	// Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
	// +kubebuilder:validation:Optional
	idleTimeoutInMinutes?: null | float64 @go(IdleTimeoutInMinutes,*float64)

	// Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// If specified then public IP address allocated will be provided from the public IP prefix resource. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	publicIpPrefixId?: null | string @go(PublicIPPrefixID,*string)

	// The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	// +kubebuilder:validation:Optional
	reverseFqdn?: null | string @go(ReverseFqdn,*string)

	// The SKU of the Public IP. Accepted values are Basic and Standard. Defaults to Basic. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sku?: null | string @go(Sku,*string)

	// The SKU Tier that should be used for the Public IP. Possible values are Regional and Global. Defaults to Regional. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A collection containing the availability zone to allocate the Public IP in. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	zones?: [...null | string] @go(Zones,[]*string)
}

// PublicIPSpec defines the desired state of PublicIP
#PublicIPSpec: {
	forProvider: #PublicIPParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PublicIPInitParameters @go(InitProvider)
}

// PublicIPStatus defines the observed state of PublicIP.
#PublicIPStatus: {
	atProvider?: #PublicIPObservation @go(AtProvider)
}

// PublicIP is the Schema for the PublicIPs API. Manages a Public IP Address.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#PublicIP: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.allocationMethod) || has(self.initProvider.allocationMethod)",message="allocationMethod is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	spec:    #PublicIPSpec   @go(Spec)
	status?: #PublicIPStatus @go(Status)
}

// PublicIPList contains a list of PublicIPs
#PublicIPList: {
	items: [...#PublicIP] @go(Items,[]PublicIP)
}
