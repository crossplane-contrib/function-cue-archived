// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#VirtualHubRouteTableInitParameters: {
	// List of labels associated with this route table.
	labels?: [...null | string] @go(Labels,[]*string)

	// A route block as defined below.
	route?: [...#VirtualHubRouteTableRouteInitParameters] @go(Route,[]VirtualHubRouteTableRouteInitParameters)
}

#VirtualHubRouteTableObservation: {
	// The ID of the Virtual Hub Route Table.
	id?: null | string @go(ID,*string)

	// List of labels associated with this route table.
	labels?: [...null | string] @go(Labels,[]*string)

	// A route block as defined below.
	route?: [...#VirtualHubRouteTableRouteObservation] @go(Route,[]VirtualHubRouteTableRouteObservation)

	// The ID of the Virtual Hub within which this route table should be created. Changing this forces a new resource to be created.
	virtualHubId?: null | string @go(VirtualHubID,*string)
}

#VirtualHubRouteTableParameters: {
	// List of labels associated with this route table.
	// +kubebuilder:validation:Optional
	labels?: [...null | string] @go(Labels,[]*string)

	// A route block as defined below.
	// +kubebuilder:validation:Optional
	route?: [...#VirtualHubRouteTableRouteParameters] @go(Route,[]VirtualHubRouteTableRouteParameters)

	// The ID of the Virtual Hub within which this route table should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.VirtualHub
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualHubId?: null | string @go(VirtualHubID,*string)
}

#VirtualHubRouteTableRouteInitParameters: {
	// A list of destination addresses for this route.
	destinations?: [...null | string] @go(Destinations,[]*string)

	// The type of destinations. Possible values are CIDR, ResourceId and Service.
	destinationsType?: null | string @go(DestinationsType,*string)

	// The name which should be used for this route.
	name?: null | string @go(Name,*string)

	// The type of next hop. Currently the only possible value is ResourceId. Defaults to ResourceId.
	nextHopType?: null | string @go(NextHopType,*string)
}

#VirtualHubRouteTableRouteObservation: {
	// A list of destination addresses for this route.
	destinations?: [...null | string] @go(Destinations,[]*string)

	// The type of destinations. Possible values are CIDR, ResourceId and Service.
	destinationsType?: null | string @go(DestinationsType,*string)

	// The name which should be used for this route.
	name?: null | string @go(Name,*string)

	// The next hop's resource ID.
	nextHop?: null | string @go(NextHop,*string)

	// The type of next hop. Currently the only possible value is ResourceId. Defaults to ResourceId.
	nextHopType?: null | string @go(NextHopType,*string)
}

#VirtualHubRouteTableRouteParameters: {
	// A list of destination addresses for this route.
	// +kubebuilder:validation:Optional
	destinations?: [...null | string] @go(Destinations,[]*string)

	// The type of destinations. Possible values are CIDR, ResourceId and Service.
	// +kubebuilder:validation:Optional
	destinationsType?: null | string @go(DestinationsType,*string)

	// The name which should be used for this route.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The next hop's resource ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.VirtualHubConnection
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	nextHop?: null | string @go(NextHop,*string)

	// The type of next hop. Currently the only possible value is ResourceId. Defaults to ResourceId.
	// +kubebuilder:validation:Optional
	nextHopType?: null | string @go(NextHopType,*string)
}

// VirtualHubRouteTableSpec defines the desired state of VirtualHubRouteTable
#VirtualHubRouteTableSpec: {
	forProvider: #VirtualHubRouteTableParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #VirtualHubRouteTableInitParameters @go(InitProvider)
}

// VirtualHubRouteTableStatus defines the observed state of VirtualHubRouteTable.
#VirtualHubRouteTableStatus: {
	atProvider?: #VirtualHubRouteTableObservation @go(AtProvider)
}

// VirtualHubRouteTable is the Schema for the VirtualHubRouteTables API. Manages a Virtual Hub Route Table.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#VirtualHubRouteTable: {
	spec:    #VirtualHubRouteTableSpec   @go(Spec)
	status?: #VirtualHubRouteTableStatus @go(Status)
}

// VirtualHubRouteTableList contains a list of VirtualHubRouteTables
#VirtualHubRouteTableList: {
	items: [...#VirtualHubRouteTable] @go(Items,[]VirtualHubRouteTable)
}
