// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#PolicyObservation: {
	// The name of the VPN Server Configuration Policy member.
	name?: null | string @go(Name,*string)

	// The attribute type of the VPN Server Configuration Policy member. Possible values are AADGroupId, CertificateGroupId and RadiusAzureGroupId.
	type?: null | string @go(Type,*string)

	// The value of the attribute that is used for the VPN Server Configuration Policy member.
	value?: null | string @go(Value,*string)
}

#PolicyParameters: {
	// The name of the VPN Server Configuration Policy member.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The attribute type of the VPN Server Configuration Policy member. Possible values are AADGroupId, CertificateGroupId and RadiusAzureGroupId.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)

	// The value of the attribute that is used for the VPN Server Configuration Policy member.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#VPNServerConfigurationPolicyGroupObservation: {
	// The ID of the VPN Server Configuration Policy Group.
	id?: null | string @go(ID,*string)

	// Is this a default VPN Server Configuration Policy Group? Defaults to false. Changing this forces a new resource to be created.
	isDefault?: null | bool @go(IsDefault,*bool)

	// One or more policy blocks as documented below.
	policy?: [...#PolicyObservation] @go(Policy,[]PolicyObservation)

	// The priority of this VPN Server Configuration Policy Group. Defaults to 0.
	priority?: null | float64 @go(Priority,*float64)

	// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
	vpnServerConfigurationId?: null | string @go(VPNServerConfigurationID,*string)
}

#VPNServerConfigurationPolicyGroupParameters: {
	// Is this a default VPN Server Configuration Policy Group? Defaults to false. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	isDefault?: null | bool @go(IsDefault,*bool)

	// One or more policy blocks as documented below.
	// +kubebuilder:validation:Optional
	policy?: [...#PolicyParameters] @go(Policy,[]PolicyParameters)

	// The priority of this VPN Server Configuration Policy Group. Defaults to 0.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.VPNServerConfiguration
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vpnServerConfigurationId?: null | string @go(VPNServerConfigurationID,*string)
}

// VPNServerConfigurationPolicyGroupSpec defines the desired state of VPNServerConfigurationPolicyGroup
#VPNServerConfigurationPolicyGroupSpec: {
	forProvider: #VPNServerConfigurationPolicyGroupParameters @go(ForProvider)
}

// VPNServerConfigurationPolicyGroupStatus defines the observed state of VPNServerConfigurationPolicyGroup.
#VPNServerConfigurationPolicyGroupStatus: {
	atProvider?: #VPNServerConfigurationPolicyGroupObservation @go(AtProvider)
}

// VPNServerConfigurationPolicyGroup is the Schema for the VPNServerConfigurationPolicyGroups API. Manages a VPN Server Configuration Policy Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#VPNServerConfigurationPolicyGroup: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.policy)",message="policy is a required parameter"
	spec:    #VPNServerConfigurationPolicyGroupSpec   @go(Spec)
	status?: #VPNServerConfigurationPolicyGroupStatus @go(Status)
}

// VPNServerConfigurationPolicyGroupList contains a list of VPNServerConfigurationPolicyGroups
#VPNServerConfigurationPolicyGroupList: {
	items: [...#VPNServerConfigurationPolicyGroup] @go(Items,[]VPNServerConfigurationPolicyGroup)
}
