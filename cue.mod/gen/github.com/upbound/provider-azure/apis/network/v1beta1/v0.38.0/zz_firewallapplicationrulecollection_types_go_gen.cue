// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#FirewallApplicationRuleCollectionInitParameters: {
	// Specifies the action the rule will apply to matching traffic. Possible values are Allow and Deny.
	action?: null | string @go(Action,*string)

	// Specifies the priority of the rule collection. Possible values are between 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// One or more rule blocks as defined below.
	rule?: [...#RuleInitParameters] @go(Rule,[]RuleInitParameters)
}

#FirewallApplicationRuleCollectionObservation: {
	// Specifies the action the rule will apply to matching traffic. Possible values are Allow and Deny.
	action?: null | string @go(Action,*string)

	// Specifies the name of the Firewall in which the Application Rule Collection should be created. Changing this forces a new resource to be created.
	azureFirewallName?: null | string @go(AzureFirewallName,*string)
	id?:                null | string @go(ID,*string)

	// Specifies the priority of the rule collection. Possible values are between 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more rule blocks as defined below.
	rule?: [...#RuleObservation] @go(Rule,[]RuleObservation)
}

#FirewallApplicationRuleCollectionParameters: {
	// Specifies the action the rule will apply to matching traffic. Possible values are Allow and Deny.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// Specifies the name of the Firewall in which the Application Rule Collection should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Firewall
	// +kubebuilder:validation:Optional
	azureFirewallName?: null | string @go(AzureFirewallName,*string)

	// Specifies the priority of the rule collection. Possible values are between 100 - 65000.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more rule blocks as defined below.
	// +kubebuilder:validation:Optional
	rule?: [...#RuleParameters] @go(Rule,[]RuleParameters)
}

#ProtocolInitParameters: {
	// Specify a port for the connection.
	port?: null | float64 @go(Port,*float64)

	// Specifies the type of connection. Possible values are Http, Https and Mssql.
	type?: null | string @go(Type,*string)
}

#ProtocolObservation: {
	// Specify a port for the connection.
	port?: null | float64 @go(Port,*float64)

	// Specifies the type of connection. Possible values are Http, Https and Mssql.
	type?: null | string @go(Type,*string)
}

#ProtocolParameters: {
	// Specify a port for the connection.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// Specifies the type of connection. Possible values are Http, Https and Mssql.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#RuleInitParameters: {
	// Specifies a description for the rule.
	description?: null | string @go(Description,*string)

	// A list of FQDN tags. Possible values are AppServiceEnvironment, AzureBackup, AzureKubernetesService, HDInsight, MicrosoftActiveProtectionService, WindowsDiagnostics, WindowsUpdate and WindowsVirtualDesktop.
	fqdnTags?: [...null | string] @go(FqdnTags,[]*string)

	// Specifies the name of the rule.
	name?: null | string @go(Name,*string)

	// One or more protocol blocks as defined below.
	protocol?: [...#ProtocolInitParameters] @go(Protocol,[]ProtocolInitParameters)

	// A list of source IP addresses and/or IP ranges.
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// A list of source IP Group IDs for the rule.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// A list of FQDNs.
	targetFqdns?: [...null | string] @go(TargetFqdns,[]*string)
}

#RuleObservation: {
	// Specifies a description for the rule.
	description?: null | string @go(Description,*string)

	// A list of FQDN tags. Possible values are AppServiceEnvironment, AzureBackup, AzureKubernetesService, HDInsight, MicrosoftActiveProtectionService, WindowsDiagnostics, WindowsUpdate and WindowsVirtualDesktop.
	fqdnTags?: [...null | string] @go(FqdnTags,[]*string)

	// Specifies the name of the rule.
	name?: null | string @go(Name,*string)

	// One or more protocol blocks as defined below.
	protocol?: [...#ProtocolObservation] @go(Protocol,[]ProtocolObservation)

	// A list of source IP addresses and/or IP ranges.
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// A list of source IP Group IDs for the rule.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// A list of FQDNs.
	targetFqdns?: [...null | string] @go(TargetFqdns,[]*string)
}

#RuleParameters: {
	// Specifies a description for the rule.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A list of FQDN tags. Possible values are AppServiceEnvironment, AzureBackup, AzureKubernetesService, HDInsight, MicrosoftActiveProtectionService, WindowsDiagnostics, WindowsUpdate and WindowsVirtualDesktop.
	// +kubebuilder:validation:Optional
	fqdnTags?: [...null | string] @go(FqdnTags,[]*string)

	// Specifies the name of the rule.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// One or more protocol blocks as defined below.
	// +kubebuilder:validation:Optional
	protocol?: [...#ProtocolParameters] @go(Protocol,[]ProtocolParameters)

	// A list of source IP addresses and/or IP ranges.
	// +kubebuilder:validation:Optional
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// A list of source IP Group IDs for the rule.
	// +kubebuilder:validation:Optional
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// A list of FQDNs.
	// +kubebuilder:validation:Optional
	targetFqdns?: [...null | string] @go(TargetFqdns,[]*string)
}

// FirewallApplicationRuleCollectionSpec defines the desired state of FirewallApplicationRuleCollection
#FirewallApplicationRuleCollectionSpec: {
	forProvider: #FirewallApplicationRuleCollectionParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FirewallApplicationRuleCollectionInitParameters @go(InitProvider)
}

// FirewallApplicationRuleCollectionStatus defines the observed state of FirewallApplicationRuleCollection.
#FirewallApplicationRuleCollectionStatus: {
	atProvider?: #FirewallApplicationRuleCollectionObservation @go(AtProvider)
}

// FirewallApplicationRuleCollection is the Schema for the FirewallApplicationRuleCollections API. Manages an Application Rule Collection within an Azure Firewall.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FirewallApplicationRuleCollection: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.action) || (has(self.initProvider) && has(self.initProvider.action))",message="spec.forProvider.action is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.priority) || (has(self.initProvider) && has(self.initProvider.priority))",message="spec.forProvider.priority is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rule) || (has(self.initProvider) && has(self.initProvider.rule))",message="spec.forProvider.rule is a required parameter"
	spec:    #FirewallApplicationRuleCollectionSpec   @go(Spec)
	status?: #FirewallApplicationRuleCollectionStatus @go(Status)
}

// FirewallApplicationRuleCollectionList contains a list of FirewallApplicationRuleCollections
#FirewallApplicationRuleCollectionList: {
	items: [...#FirewallApplicationRuleCollection] @go(Items,[]FirewallApplicationRuleCollection)
}
