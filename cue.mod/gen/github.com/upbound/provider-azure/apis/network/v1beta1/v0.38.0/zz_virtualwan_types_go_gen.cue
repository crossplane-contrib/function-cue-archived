// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#VirtualWANInitParameters: {
	// Boolean flag to specify whether branch to branch traffic is allowed. Defaults to true.
	allowBranchToBranchTraffic?: null | bool @go(AllowBranchToBranchTraffic,*bool)

	// Boolean flag to specify whether VPN encryption is disabled. Defaults to false.
	disableVpnEncryption?: null | bool @go(DisableVPNEncryption,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the Office365 local breakout category. Possible values include: Optimize, OptimizeAndAllow, All, None. Defaults to None.
	office365LocalBreakoutCategory?: null | string @go(Office365LocalBreakoutCategory,*string)

	// A mapping of tags to assign to the Virtual WAN.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the Virtual WAN type. Possible Values include: Basic and Standard. Defaults to Standard.
	type?: null | string @go(Type,*string)
}

#VirtualWANObservation: {
	// Boolean flag to specify whether branch to branch traffic is allowed. Defaults to true.
	allowBranchToBranchTraffic?: null | bool @go(AllowBranchToBranchTraffic,*bool)

	// Boolean flag to specify whether VPN encryption is disabled. Defaults to false.
	disableVpnEncryption?: null | bool @go(DisableVPNEncryption,*bool)

	// The ID of the Virtual WAN.
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the Office365 local breakout category. Possible values include: Optimize, OptimizeAndAllow, All, None. Defaults to None.
	office365LocalBreakoutCategory?: null | string @go(Office365LocalBreakoutCategory,*string)

	// The name of the resource group in which to create the Virtual WAN. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the Virtual WAN.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the Virtual WAN type. Possible Values include: Basic and Standard. Defaults to Standard.
	type?: null | string @go(Type,*string)
}

#VirtualWANParameters: {
	// Boolean flag to specify whether branch to branch traffic is allowed. Defaults to true.
	// +kubebuilder:validation:Optional
	allowBranchToBranchTraffic?: null | bool @go(AllowBranchToBranchTraffic,*bool)

	// Boolean flag to specify whether VPN encryption is disabled. Defaults to false.
	// +kubebuilder:validation:Optional
	disableVpnEncryption?: null | bool @go(DisableVPNEncryption,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the Office365 local breakout category. Possible values include: Optimize, OptimizeAndAllow, All, None. Defaults to None.
	// +kubebuilder:validation:Optional
	office365LocalBreakoutCategory?: null | string @go(Office365LocalBreakoutCategory,*string)

	// The name of the resource group in which to create the Virtual WAN. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the Virtual WAN.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the Virtual WAN type. Possible Values include: Basic and Standard. Defaults to Standard.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// VirtualWANSpec defines the desired state of VirtualWAN
#VirtualWANSpec: {
	forProvider: #VirtualWANParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #VirtualWANInitParameters @go(InitProvider)
}

// VirtualWANStatus defines the observed state of VirtualWAN.
#VirtualWANStatus: {
	atProvider?: #VirtualWANObservation @go(AtProvider)
}

// VirtualWAN is the Schema for the VirtualWANs API. Manages a Virtual WAN.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#VirtualWAN: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #VirtualWANSpec   @go(Spec)
	status?: #VirtualWANStatus @go(Status)
}

// VirtualWANList contains a list of VirtualWANs
#VirtualWANList: {
	items: [...#VirtualWAN] @go(Items,[]VirtualWAN)
}
