// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#FirewallNATRuleCollectionInitParameters: {
	// Specifies the action the rule will apply to matching traffic. Possible values are Dnat and Snat.
	action?: null | string @go(Action,*string)

	// Specifies the priority of the rule collection. Possible values are between 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// One or more rule blocks as defined below.
	rule?: [...#FirewallNATRuleCollectionRuleInitParameters] @go(Rule,[]FirewallNATRuleCollectionRuleInitParameters)
}

#FirewallNATRuleCollectionObservation: {
	// Specifies the action the rule will apply to matching traffic. Possible values are Dnat and Snat.
	action?: null | string @go(Action,*string)

	// Specifies the name of the Firewall in which the NAT Rule Collection should be created. Changing this forces a new resource to be created.
	azureFirewallName?: null | string @go(AzureFirewallName,*string)
	id?:                null | string @go(ID,*string)

	// Specifies the priority of the rule collection. Possible values are between 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more rule blocks as defined below.
	rule?: [...#FirewallNATRuleCollectionRuleObservation] @go(Rule,[]FirewallNATRuleCollectionRuleObservation)
}

#FirewallNATRuleCollectionParameters: {
	// Specifies the action the rule will apply to matching traffic. Possible values are Dnat and Snat.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// Specifies the name of the Firewall in which the NAT Rule Collection should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Firewall
	// +kubebuilder:validation:Optional
	azureFirewallName?: null | string @go(AzureFirewallName,*string)

	// Specifies the priority of the rule collection. Possible values are between 100 - 65000.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more rule blocks as defined below.
	// +kubebuilder:validation:Optional
	rule?: [...#FirewallNATRuleCollectionRuleParameters] @go(Rule,[]FirewallNATRuleCollectionRuleParameters)
}

#FirewallNATRuleCollectionRuleInitParameters: {
	// Specifies a description for the rule.
	description?: null | string @go(Description,*string)

	// A list of destination IP addresses and/or IP ranges.
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// A list of destination ports.
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// Specifies the name of the rule.
	name?: null | string @go(Name,*string)

	// A list of protocols. Possible values are Any, ICMP, TCP and UDP. If action is Dnat, protocols can only be TCP and UDP.
	protocols?: [...null | string] @go(Protocols,[]*string)

	// A list of source IP addresses and/or IP ranges.
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// A list of source IP Group IDs for the rule.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// The address of the service behind the Firewall.
	translatedAddress?: null | string @go(TranslatedAddress,*string)

	// The port of the service behind the Firewall.
	translatedPort?: null | string @go(TranslatedPort,*string)
}

#FirewallNATRuleCollectionRuleObservation: {
	// Specifies a description for the rule.
	description?: null | string @go(Description,*string)

	// A list of destination IP addresses and/or IP ranges.
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// A list of destination ports.
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// Specifies the name of the rule.
	name?: null | string @go(Name,*string)

	// A list of protocols. Possible values are Any, ICMP, TCP and UDP. If action is Dnat, protocols can only be TCP and UDP.
	protocols?: [...null | string] @go(Protocols,[]*string)

	// A list of source IP addresses and/or IP ranges.
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// A list of source IP Group IDs for the rule.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// The address of the service behind the Firewall.
	translatedAddress?: null | string @go(TranslatedAddress,*string)

	// The port of the service behind the Firewall.
	translatedPort?: null | string @go(TranslatedPort,*string)
}

#FirewallNATRuleCollectionRuleParameters: {
	// Specifies a description for the rule.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A list of destination IP addresses and/or IP ranges.
	// +kubebuilder:validation:Optional
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// A list of destination ports.
	// +kubebuilder:validation:Optional
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// Specifies the name of the rule.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A list of protocols. Possible values are Any, ICMP, TCP and UDP. If action is Dnat, protocols can only be TCP and UDP.
	// +kubebuilder:validation:Optional
	protocols?: [...null | string] @go(Protocols,[]*string)

	// A list of source IP addresses and/or IP ranges.
	// +kubebuilder:validation:Optional
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// A list of source IP Group IDs for the rule.
	// +kubebuilder:validation:Optional
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// The address of the service behind the Firewall.
	// +kubebuilder:validation:Optional
	translatedAddress?: null | string @go(TranslatedAddress,*string)

	// The port of the service behind the Firewall.
	// +kubebuilder:validation:Optional
	translatedPort?: null | string @go(TranslatedPort,*string)
}

// FirewallNATRuleCollectionSpec defines the desired state of FirewallNATRuleCollection
#FirewallNATRuleCollectionSpec: {
	forProvider: #FirewallNATRuleCollectionParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FirewallNATRuleCollectionInitParameters @go(InitProvider)
}

// FirewallNATRuleCollectionStatus defines the observed state of FirewallNATRuleCollection.
#FirewallNATRuleCollectionStatus: {
	atProvider?: #FirewallNATRuleCollectionObservation @go(AtProvider)
}

// FirewallNATRuleCollection is the Schema for the FirewallNATRuleCollections API. Manages a NAT Rule Collection within an Azure Firewall.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FirewallNATRuleCollection: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.action) || has(self.initProvider.action)",message="action is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.priority) || has(self.initProvider.priority)",message="priority is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rule) || has(self.initProvider.rule)",message="rule is a required parameter"
	spec:    #FirewallNATRuleCollectionSpec   @go(Spec)
	status?: #FirewallNATRuleCollectionStatus @go(Status)
}

// FirewallNATRuleCollectionList contains a list of FirewallNATRuleCollections
#FirewallNATRuleCollectionList: {
	items: [...#FirewallNATRuleCollection] @go(Items,[]FirewallNATRuleCollection)
}
