// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#Instance0BGPPeeringAddressInitParameters: {
	// A list of custom BGP peering addresses to assign to this instance.
	customIps?: [...null | string] @go(CustomIps,[]*string)
}

#Instance0BGPPeeringAddressObservation: {
	// A list of custom BGP peering addresses to assign to this instance.
	customIps?: [...null | string] @go(CustomIps,[]*string)

	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	defaultIps?: [...null | string] @go(DefaultIps,[]*string)

	// The pre-defined id of VPN Gateway IP Configuration.
	ipConfigurationId?: null | string @go(IPConfigurationID,*string)

	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	tunnelIps?: [...null | string] @go(TunnelIps,[]*string)
}

#Instance0BGPPeeringAddressParameters: {
	// A list of custom BGP peering addresses to assign to this instance.
	// +kubebuilder:validation:Optional
	customIps: [...null | string] @go(CustomIps,[]*string)
}

#Instance1BGPPeeringAddressInitParameters: {
	// A list of custom BGP peering addresses to assign to this instance.
	customIps?: [...null | string] @go(CustomIps,[]*string)
}

#Instance1BGPPeeringAddressObservation: {
	// A list of custom BGP peering addresses to assign to this instance.
	customIps?: [...null | string] @go(CustomIps,[]*string)

	// The list of default BGP peering addresses which belong to the pre-defined VPN Gateway IP configuration.
	defaultIps?: [...null | string] @go(DefaultIps,[]*string)

	// The pre-defined id of VPN Gateway IP Configuration.
	ipConfigurationId?: null | string @go(IPConfigurationID,*string)

	// The list of tunnel public IP addresses which belong to the pre-defined VPN Gateway IP configuration.
	tunnelIps?: [...null | string] @go(TunnelIps,[]*string)
}

#Instance1BGPPeeringAddressParameters: {
	// A list of custom BGP peering addresses to assign to this instance.
	// +kubebuilder:validation:Optional
	customIps: [...null | string] @go(CustomIps,[]*string)
}

#VPNGatewayBGPSettingsInitParameters: {
	// The ASN of the BGP Speaker. Changing this forces a new resource to be created.
	asn?: null | float64 @go(Asn,*float64)

	// An instance_bgp_peering_address block as defined below.
	instance0BgpPeeringAddress?: [...#Instance0BGPPeeringAddressInitParameters] @go(Instance0BGPPeeringAddress,[]Instance0BGPPeeringAddressInitParameters)

	// An instance_bgp_peering_address block as defined below.
	instance1BgpPeeringAddress?: [...#Instance1BGPPeeringAddressInitParameters] @go(Instance1BGPPeeringAddress,[]Instance1BGPPeeringAddressInitParameters)

	// The weight added to Routes learned from this BGP Speaker. Changing this forces a new resource to be created.
	peerWeight?: null | float64 @go(PeerWeight,*float64)
}

#VPNGatewayBGPSettingsObservation: {
	// The ASN of the BGP Speaker. Changing this forces a new resource to be created.
	asn?: null | float64 @go(Asn,*float64)

	// The Address which should be used for the BGP Peering.
	bgpPeeringAddress?: null | string @go(BGPPeeringAddress,*string)

	// An instance_bgp_peering_address block as defined below.
	instance0BgpPeeringAddress?: [...#Instance0BGPPeeringAddressObservation] @go(Instance0BGPPeeringAddress,[]Instance0BGPPeeringAddressObservation)

	// An instance_bgp_peering_address block as defined below.
	instance1BgpPeeringAddress?: [...#Instance1BGPPeeringAddressObservation] @go(Instance1BGPPeeringAddress,[]Instance1BGPPeeringAddressObservation)

	// The weight added to Routes learned from this BGP Speaker. Changing this forces a new resource to be created.
	peerWeight?: null | float64 @go(PeerWeight,*float64)
}

#VPNGatewayBGPSettingsParameters: {
	// The ASN of the BGP Speaker. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	asn?: null | float64 @go(Asn,*float64)

	// An instance_bgp_peering_address block as defined below.
	// +kubebuilder:validation:Optional
	instance0BgpPeeringAddress?: [...#Instance0BGPPeeringAddressParameters] @go(Instance0BGPPeeringAddress,[]Instance0BGPPeeringAddressParameters)

	// An instance_bgp_peering_address block as defined below.
	// +kubebuilder:validation:Optional
	instance1BgpPeeringAddress?: [...#Instance1BGPPeeringAddressParameters] @go(Instance1BGPPeeringAddress,[]Instance1BGPPeeringAddressParameters)

	// The weight added to Routes learned from this BGP Speaker. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	peerWeight?: null | float64 @go(PeerWeight,*float64)
}

#VPNGatewayInitParameters: {
	// Is BGP route translation for NAT on this VPN Gateway enabled? Defaults to false.
	bgpRouteTranslationForNatEnabled?: null | bool @go(BGPRouteTranslationForNATEnabled,*bool)

	// A bgp_settings block as defined below.
	bgpSettings?: [...#VPNGatewayBGPSettingsInitParameters] @go(BGPSettings,[]VPNGatewayBGPSettingsInitParameters)

	// The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Azure routing preference lets you to choose how your traffic routes between Azure and the internet. You can choose to route traffic either via the Microsoft network (default value, Microsoft Network), or via the ISP network (public internet, set to Internet). More context of the configuration can be found in the Microsoft Docs to create a VPN Gateway. Changing this forces a new resource to be created.
	routingPreference?: null | string @go(RoutingPreference,*string)

	// The Scale Unit for this VPN Gateway. Defaults to 1.
	scaleUnit?: null | float64 @go(ScaleUnit,*float64)

	// A mapping of tags to assign to the VPN Gateway.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#VPNGatewayObservation: {
	// Is BGP route translation for NAT on this VPN Gateway enabled? Defaults to false.
	bgpRouteTranslationForNatEnabled?: null | bool @go(BGPRouteTranslationForNATEnabled,*bool)

	// A bgp_settings block as defined below.
	bgpSettings?: [...#VPNGatewayBGPSettingsObservation] @go(BGPSettings,[]VPNGatewayBGPSettingsObservation)

	// The ID of the VPN Gateway.
	id?: null | string @go(ID,*string)

	// The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The Name of the Resource Group in which this VPN Gateway should be created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Azure routing preference lets you to choose how your traffic routes between Azure and the internet. You can choose to route traffic either via the Microsoft network (default value, Microsoft Network), or via the ISP network (public internet, set to Internet). More context of the configuration can be found in the Microsoft Docs to create a VPN Gateway. Changing this forces a new resource to be created.
	routingPreference?: null | string @go(RoutingPreference,*string)

	// The Scale Unit for this VPN Gateway. Defaults to 1.
	scaleUnit?: null | float64 @go(ScaleUnit,*float64)

	// A mapping of tags to assign to the VPN Gateway.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the Virtual Hub within which this VPN Gateway should be created. Changing this forces a new resource to be created.
	virtualHubId?: null | string @go(VirtualHubID,*string)
}

#VPNGatewayParameters: {
	// Is BGP route translation for NAT on this VPN Gateway enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	bgpRouteTranslationForNatEnabled?: null | bool @go(BGPRouteTranslationForNATEnabled,*bool)

	// A bgp_settings block as defined below.
	// +kubebuilder:validation:Optional
	bgpSettings?: [...#VPNGatewayBGPSettingsParameters] @go(BGPSettings,[]VPNGatewayBGPSettingsParameters)

	// The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The Name of the Resource Group in which this VPN Gateway should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Azure routing preference lets you to choose how your traffic routes between Azure and the internet. You can choose to route traffic either via the Microsoft network (default value, Microsoft Network), or via the ISP network (public internet, set to Internet). More context of the configuration can be found in the Microsoft Docs to create a VPN Gateway. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	routingPreference?: null | string @go(RoutingPreference,*string)

	// The Scale Unit for this VPN Gateway. Defaults to 1.
	// +kubebuilder:validation:Optional
	scaleUnit?: null | float64 @go(ScaleUnit,*float64)

	// A mapping of tags to assign to the VPN Gateway.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the Virtual Hub within which this VPN Gateway should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.VirtualHub
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualHubId?: null | string @go(VirtualHubID,*string)
}

// VPNGatewaySpec defines the desired state of VPNGateway
#VPNGatewaySpec: {
	forProvider: #VPNGatewayParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #VPNGatewayInitParameters @go(InitProvider)
}

// VPNGatewayStatus defines the observed state of VPNGateway.
#VPNGatewayStatus: {
	atProvider?: #VPNGatewayObservation @go(AtProvider)
}

// VPNGateway is the Schema for the VPNGateways API. Manages a VPN Gateway within a Virtual Hub.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#VPNGateway: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #VPNGatewaySpec   @go(Spec)
	status?: #VPNGatewayStatus @go(Status)
}

// VPNGatewayList contains a list of VPNGateways
#VPNGatewayList: {
	items: [...#VPNGateway] @go(Items,[]VPNGateway)
}
