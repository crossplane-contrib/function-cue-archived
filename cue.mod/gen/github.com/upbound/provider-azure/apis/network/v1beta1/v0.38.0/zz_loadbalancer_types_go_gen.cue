// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#LoadBalancerFrontendIPConfigurationInitParameters: {
	// The Frontend IP Configuration ID of a Gateway SKU Load Balancer.
	gatewayLoadBalancerFrontendIpConfigurationId?: null | string @go(GatewayLoadBalancerFrontendIPConfigurationID,*string)

	// Specifies the name of the frontend IP configuration.
	name?: null | string @go(Name,*string)

	// Private IP Address to assign to the Load Balancer. The last one and first four IPs in any range are reserved and cannot be manually assigned.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The allocation method for the Private IP Address used by this Load Balancer. Possible values as Dynamic and Static.
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The version of IP that the Private IP Address is. Possible values are IPv4 or IPv6.
	privateIpAddressVersion?: null | string @go(PrivateIPAddressVersion,*string)

	// The ID of a Public IP Prefix which should be associated with the Load Balancer. Public IP Prefix can only be used with outbound rules.
	publicIpPrefixId?: null | string @go(PublicIPPrefixID,*string)

	// Specifies a list of Availability Zones in which the IP Address for this Load Balancer should be located.
	zones?: [...null | string] @go(Zones,[]*string)
}

#LoadBalancerFrontendIPConfigurationObservation: {
	// The Frontend IP Configuration ID of a Gateway SKU Load Balancer.
	gatewayLoadBalancerFrontendIpConfigurationId?: null | string @go(GatewayLoadBalancerFrontendIPConfigurationID,*string)

	// The id of the Frontend IP Configuration.
	id?: null | string @go(ID,*string)

	// The list of IDs of inbound rules that use this frontend IP.
	inboundNatRules?: [...null | string] @go(InboundNATRules,[]*string)

	// The list of IDs of load balancing rules that use this frontend IP.
	loadBalancerRules?: [...null | string] @go(LoadBalancerRules,[]*string)

	// Specifies the name of the frontend IP configuration.
	name?: null | string @go(Name,*string)

	// The list of IDs outbound rules that use this frontend IP.
	outboundRules?: [...null | string] @go(OutboundRules,[]*string)

	// Private IP Address to assign to the Load Balancer. The last one and first four IPs in any range are reserved and cannot be manually assigned.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The allocation method for the Private IP Address used by this Load Balancer. Possible values as Dynamic and Static.
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The version of IP that the Private IP Address is. Possible values are IPv4 or IPv6.
	privateIpAddressVersion?: null | string @go(PrivateIPAddressVersion,*string)

	// The ID of a Public IP Address which should be associated with the Load Balancer.
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// The ID of a Public IP Prefix which should be associated with the Load Balancer. Public IP Prefix can only be used with outbound rules.
	publicIpPrefixId?: null | string @go(PublicIPPrefixID,*string)

	// The ID of the Subnet which should be associated with the IP Configuration.
	subnetId?: null | string @go(SubnetID,*string)

	// Specifies a list of Availability Zones in which the IP Address for this Load Balancer should be located.
	zones?: [...null | string] @go(Zones,[]*string)
}

#LoadBalancerFrontendIPConfigurationParameters: {
	// The Frontend IP Configuration ID of a Gateway SKU Load Balancer.
	// +kubebuilder:validation:Optional
	gatewayLoadBalancerFrontendIpConfigurationId?: null | string @go(GatewayLoadBalancerFrontendIPConfigurationID,*string)

	// Specifies the name of the frontend IP configuration.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Private IP Address to assign to the Load Balancer. The last one and first four IPs in any range are reserved and cannot be manually assigned.
	// +kubebuilder:validation:Optional
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The allocation method for the Private IP Address used by this Load Balancer. Possible values as Dynamic and Static.
	// +kubebuilder:validation:Optional
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The version of IP that the Private IP Address is. Possible values are IPv4 or IPv6.
	// +kubebuilder:validation:Optional
	privateIpAddressVersion?: null | string @go(PrivateIPAddressVersion,*string)

	// The ID of a Public IP Address which should be associated with the Load Balancer.
	// +crossplane:generate:reference:type=PublicIP
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// The ID of a Public IP Prefix which should be associated with the Load Balancer. Public IP Prefix can only be used with outbound rules.
	// +kubebuilder:validation:Optional
	publicIpPrefixId?: null | string @go(PublicIPPrefixID,*string)

	// The ID of the Subnet which should be associated with the IP Configuration.
	// +crossplane:generate:reference:type=Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)

	// Specifies a list of Availability Zones in which the IP Address for this Load Balancer should be located.
	// +kubebuilder:validation:Optional
	zones?: [...null | string] @go(Zones,[]*string)
}

#LoadBalancerInitParameters: {
	// Specifies the Edge Zone within the Azure Region where this Load Balancer should exist. Changing this forces a new Load Balancer to be created.
	edgeZone?: null | string @go(EdgeZone,*string)

	// One or multiple frontend_ip_configuration blocks as documented below.
	frontendIpConfiguration?: [...#LoadBalancerFrontendIPConfigurationInitParameters] @go(FrontendIPConfiguration,[]LoadBalancerFrontendIPConfigurationInitParameters)

	// Specifies the supported Azure Region where the Load Balancer should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The SKU of the Azure Load Balancer. Accepted values are Basic, Standard and Gateway. Defaults to Basic. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// sku_tier -  The SKU tier of this Load Balancer. Possible values are Global and Regional. Defaults to Regional. Changing this forces a new resource to be created.
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#LoadBalancerObservation: {
	// Specifies the Edge Zone within the Azure Region where this Load Balancer should exist. Changing this forces a new Load Balancer to be created.
	edgeZone?: null | string @go(EdgeZone,*string)

	// One or multiple frontend_ip_configuration blocks as documented below.
	frontendIpConfiguration?: [...#LoadBalancerFrontendIPConfigurationObservation] @go(FrontendIPConfiguration,[]LoadBalancerFrontendIPConfigurationObservation)

	// The Load Balancer ID.
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure Region where the Load Balancer should be created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The first private IP address assigned to the load balancer in frontend_ip_configuration blocks, if any.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The list of private IP address assigned to the load balancer in frontend_ip_configuration blocks, if any.
	privateIpAddresses?: [...null | string] @go(PrivateIPAddresses,[]*string)

	// The name of the Resource Group in which to create the Load Balancer. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU of the Azure Load Balancer. Accepted values are Basic, Standard and Gateway. Defaults to Basic. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// sku_tier -  The SKU tier of this Load Balancer. Possible values are Global and Regional. Defaults to Regional. Changing this forces a new resource to be created.
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#LoadBalancerParameters: {
	// Specifies the Edge Zone within the Azure Region where this Load Balancer should exist. Changing this forces a new Load Balancer to be created.
	// +kubebuilder:validation:Optional
	edgeZone?: null | string @go(EdgeZone,*string)

	// One or multiple frontend_ip_configuration blocks as documented below.
	// +kubebuilder:validation:Optional
	frontendIpConfiguration?: [...#LoadBalancerFrontendIPConfigurationParameters] @go(FrontendIPConfiguration,[]LoadBalancerFrontendIPConfigurationParameters)

	// Specifies the supported Azure Region where the Load Balancer should be created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the Resource Group in which to create the Load Balancer. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU of the Azure Load Balancer. Accepted values are Basic, Standard and Gateway. Defaults to Basic. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sku?: null | string @go(Sku,*string)

	// sku_tier -  The SKU tier of this Load Balancer. Possible values are Global and Regional. Defaults to Regional. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// LoadBalancerSpec defines the desired state of LoadBalancer
#LoadBalancerSpec: {
	forProvider: #LoadBalancerParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #LoadBalancerInitParameters @go(InitProvider)
}

// LoadBalancerStatus defines the observed state of LoadBalancer.
#LoadBalancerStatus: {
	atProvider?: #LoadBalancerObservation @go(AtProvider)
}

// LoadBalancer is the Schema for the LoadBalancers API. Manages a Load Balancer Resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LoadBalancer: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #LoadBalancerSpec   @go(Spec)
	status?: #LoadBalancerStatus @go(Status)
}

// LoadBalancerList contains a list of LoadBalancers
#LoadBalancerList: {
	items: [...#LoadBalancer] @go(Items,[]LoadBalancer)
}
