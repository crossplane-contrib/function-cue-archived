// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#RetentionPolicyObservation: {
	// The number of days to retain flow log records.
	days?: null | float64 @go(Days,*float64)

	// Boolean flag to enable/disable retention.
	enabled?: null | bool @go(Enabled,*bool)
}

#RetentionPolicyParameters: {
	// The number of days to retain flow log records.
	// +kubebuilder:validation:Required
	days?: null | float64 @go(Days,*float64)

	// Boolean flag to enable/disable retention.
	// +kubebuilder:validation:Required
	enabled?: null | bool @go(Enabled,*bool)
}

#TrafficAnalyticsObservation: {
	// Boolean flag to enable/disable traffic analytics.
	enabled?: null | bool @go(Enabled,*bool)

	// How frequently service should do flow analytics in minutes. Defaults to 60.
	intervalInMinutes?: null | float64 @go(IntervalInMinutes,*float64)

	// The resource GUID of the attached workspace.
	workspaceId?: null | string @go(WorkspaceID,*string)

	// The location of the attached workspace.
	workspaceRegion?: null | string @go(WorkspaceRegion,*string)

	// The resource ID of the attached workspace.
	workspaceResourceId?: null | string @go(WorkspaceResourceID,*string)
}

#TrafficAnalyticsParameters: {
	// Boolean flag to enable/disable traffic analytics.
	// +kubebuilder:validation:Required
	enabled?: null | bool @go(Enabled,*bool)

	// How frequently service should do flow analytics in minutes. Defaults to 60.
	// +kubebuilder:validation:Optional
	intervalInMinutes?: null | float64 @go(IntervalInMinutes,*float64)

	// The resource GUID of the attached workspace.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/operationalinsights/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("workspace_id",true)
	// +kubebuilder:validation:Optional
	workspaceId?: null | string @go(WorkspaceID,*string)

	// The location of the attached workspace.
	// +kubebuilder:validation:Required
	workspaceRegion?: null | string @go(WorkspaceRegion,*string)

	// The resource ID of the attached workspace.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/operationalinsights/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	workspaceResourceId?: null | string @go(WorkspaceResourceID,*string)
}

#WatcherFlowLogObservation: {
	// Should Network Flow Logging be Enabled?
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the Network Watcher.
	id?: null | string @go(ID,*string)

	// The location where the Network Watcher Flow Log resides. Changing this forces a new resource to be created. Defaults to the location of the Network Watcher.
	location?: null | string @go(Location,*string)

	// The ID of the Network Security Group for which to enable flow logs for. Changing this forces a new resource to be created.
	networkSecurityGroupId?: null | string @go(NetworkSecurityGroupID,*string)

	// The name of the Network Watcher. Changing this forces a new resource to be created.
	networkWatcherName?: null | string @go(NetworkWatcherName,*string)

	// The name of the resource group in which the Network Watcher was deployed. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A retention_policy block as documented below.
	retentionPolicy?: [...#RetentionPolicyObservation] @go(RetentionPolicy,[]RetentionPolicyObservation)

	// The ID of the Storage Account where flow logs are stored.
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// A mapping of tags which should be assigned to the Network Watcher Flow Log.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A traffic_analytics block as documented below.
	trafficAnalytics?: [...#TrafficAnalyticsObservation] @go(TrafficAnalytics,[]TrafficAnalyticsObservation)

	// The version (revision) of the flow log. Possible values are 1 and 2.
	version?: null | float64 @go(Version,*float64)
}

#WatcherFlowLogParameters: {
	// Should Network Flow Logging be Enabled?
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The location where the Network Watcher Flow Log resides. Changing this forces a new resource to be created. Defaults to the location of the Network Watcher.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID of the Network Security Group for which to enable flow logs for. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=SecurityGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	networkSecurityGroupId?: null | string @go(NetworkSecurityGroupID,*string)

	// The name of the Network Watcher. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Watcher
	// +kubebuilder:validation:Optional
	networkWatcherName?: null | string @go(NetworkWatcherName,*string)

	// The name of the resource group in which the Network Watcher was deployed. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A retention_policy block as documented below.
	// +kubebuilder:validation:Optional
	retentionPolicy?: [...#RetentionPolicyParameters] @go(RetentionPolicy,[]RetentionPolicyParameters)

	// The ID of the Storage Account where flow logs are stored.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// A mapping of tags which should be assigned to the Network Watcher Flow Log.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A traffic_analytics block as documented below.
	// +kubebuilder:validation:Optional
	trafficAnalytics?: [...#TrafficAnalyticsParameters] @go(TrafficAnalytics,[]TrafficAnalyticsParameters)

	// The version (revision) of the flow log. Possible values are 1 and 2.
	// +kubebuilder:validation:Optional
	version?: null | float64 @go(Version,*float64)
}

// WatcherFlowLogSpec defines the desired state of WatcherFlowLog
#WatcherFlowLogSpec: {
	forProvider: #WatcherFlowLogParameters @go(ForProvider)
}

// WatcherFlowLogStatus defines the observed state of WatcherFlowLog.
#WatcherFlowLogStatus: {
	atProvider?: #WatcherFlowLogObservation @go(AtProvider)
}

// WatcherFlowLog is the Schema for the WatcherFlowLogs API. Manages a Network Watcher Flow Log.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#WatcherFlowLog: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.enabled)",message="enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.retentionPolicy)",message="retentionPolicy is a required parameter"
	spec:    #WatcherFlowLogSpec   @go(Spec)
	status?: #WatcherFlowLogStatus @go(Status)
}

// WatcherFlowLogList contains a list of WatcherFlowLogs
#WatcherFlowLogList: {
	items: [...#WatcherFlowLog] @go(Items,[]WatcherFlowLog)
}
