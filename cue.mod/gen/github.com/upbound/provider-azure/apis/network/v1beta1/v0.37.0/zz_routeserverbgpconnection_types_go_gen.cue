// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#RouteServerBGPConnectionInitParameters: {
	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	peerAsn?: null | float64 @go(PeerAsn,*float64)

	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	peerIp?: null | string @go(PeerIP,*string)
}

#RouteServerBGPConnectionObservation: {
	// The ID of the Route Server Bgp Connection.
	id?: null | string @go(ID,*string)

	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	peerAsn?: null | float64 @go(PeerAsn,*float64)

	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	peerIp?: null | string @go(PeerIP,*string)

	// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
	routeServerId?: null | string @go(RouteServerID,*string)
}

#RouteServerBGPConnectionParameters: {
	// The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	peerAsn?: null | float64 @go(PeerAsn,*float64)

	// The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	peerIp?: null | string @go(PeerIP,*string)

	// The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.RouteServer
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	routeServerId?: null | string @go(RouteServerID,*string)
}

// RouteServerBGPConnectionSpec defines the desired state of RouteServerBGPConnection
#RouteServerBGPConnectionSpec: {
	forProvider: #RouteServerBGPConnectionParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #RouteServerBGPConnectionInitParameters @go(InitProvider)
}

// RouteServerBGPConnectionStatus defines the observed state of RouteServerBGPConnection.
#RouteServerBGPConnectionStatus: {
	atProvider?: #RouteServerBGPConnectionObservation @go(AtProvider)
}

// RouteServerBGPConnection is the Schema for the RouteServerBGPConnections API. Manages a BGP Connection for a Route Server.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#RouteServerBGPConnection: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.peerAsn) || (has(self.initProvider) && has(self.initProvider.peerAsn))",message="spec.forProvider.peerAsn is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.peerIp) || (has(self.initProvider) && has(self.initProvider.peerIp))",message="spec.forProvider.peerIp is a required parameter"
	spec:    #RouteServerBGPConnectionSpec   @go(Spec)
	status?: #RouteServerBGPConnectionStatus @go(Status)
}

// RouteServerBGPConnectionList contains a list of RouteServerBGPConnections
#RouteServerBGPConnectionList: {
	items: [...#RouteServerBGPConnection] @go(Items,[]RouteServerBGPConnection)
}
