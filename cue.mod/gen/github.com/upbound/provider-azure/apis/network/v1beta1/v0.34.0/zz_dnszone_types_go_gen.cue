// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#DNSZoneObservation: {
	// The DNS Zone ID.
	id?: null | string @go(ID,*string)

	// Maximum number of Records in the zone. Defaults to 1000.
	maxNumberOfRecordSets?: null | float64 @go(MaxNumberOfRecordSets,*float64)

	// A list of values that make up the NS record for the zone.
	nameServers?: [...null | string] @go(NameServers,[]*string)

	// The number of records already in the zone.
	numberOfRecordSets?: null | float64 @go(NumberOfRecordSets,*float64)

	// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// An soa_record block as defined below. Changing this forces a new resource to be created.
	soaRecord?: [...#SoaRecordObservation] @go(SoaRecord,[]SoaRecordObservation)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#DNSZoneParameters: {
	// Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// An soa_record block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	soaRecord?: [...#SoaRecordParameters] @go(SoaRecord,[]SoaRecordParameters)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SoaRecordObservation: {
	// The email contact for the SOA record.
	email?: null | string @go(Email,*string)

	// The expire time for the SOA record. Defaults to 2419200.
	expireTime?: null | float64 @go(ExpireTime,*float64)
	fqdn?:       null | string  @go(Fqdn,*string)

	// The domain name of the authoritative name server for the SOA record.
	hostName?: null | string @go(HostName,*string)

	// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to 300.
	minimumTtl?: null | float64 @go(MinimumTTL,*float64)

	// The refresh time for the SOA record. Defaults to 3600.
	refreshTime?: null | float64 @go(RefreshTime,*float64)

	// The retry time for the SOA record. Defaults to 300.
	retryTime?: null | float64 @go(RetryTime,*float64)

	// The serial number for the SOA record. Defaults to 1.
	serialNumber?: null | float64 @go(SerialNumber,*float64)

	// The Time To Live of the SOA Record in seconds. Defaults to 3600.
	ttl?: null | float64 @go(TTL,*float64)

	// A mapping of tags to assign to the Record Set.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SoaRecordParameters: {
	// The email contact for the SOA record.
	// +kubebuilder:validation:Required
	email?: null | string @go(Email,*string)

	// The expire time for the SOA record. Defaults to 2419200.
	// +kubebuilder:validation:Optional
	expireTime?: null | float64 @go(ExpireTime,*float64)

	// The domain name of the authoritative name server for the SOA record.
	// +kubebuilder:validation:Required
	hostName?: null | string @go(HostName,*string)

	// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to 300.
	// +kubebuilder:validation:Optional
	minimumTtl?: null | float64 @go(MinimumTTL,*float64)

	// The refresh time for the SOA record. Defaults to 3600.
	// +kubebuilder:validation:Optional
	refreshTime?: null | float64 @go(RefreshTime,*float64)

	// The retry time for the SOA record. Defaults to 300.
	// +kubebuilder:validation:Optional
	retryTime?: null | float64 @go(RetryTime,*float64)

	// The serial number for the SOA record. Defaults to 1.
	// +kubebuilder:validation:Optional
	serialNumber?: null | float64 @go(SerialNumber,*float64)

	// The Time To Live of the SOA Record in seconds. Defaults to 3600.
	// +kubebuilder:validation:Optional
	ttl?: null | float64 @go(TTL,*float64)

	// A mapping of tags to assign to the Record Set.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// DNSZoneSpec defines the desired state of DNSZone
#DNSZoneSpec: {
	forProvider: #DNSZoneParameters @go(ForProvider)
}

// DNSZoneStatus defines the observed state of DNSZone.
#DNSZoneStatus: {
	atProvider?: #DNSZoneObservation @go(AtProvider)
}

// DNSZone is the Schema for the DNSZones API. Manages a DNS Zone.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#DNSZone: {
	spec:    #DNSZoneSpec   @go(Spec)
	status?: #DNSZoneStatus @go(Status)
}

// DNSZoneList contains a list of DNSZones
#DNSZoneList: {
	items: [...#DNSZone] @go(Items,[]DNSZone)
}
