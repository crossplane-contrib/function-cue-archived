// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#ApplicationRuleCollectionInitParameters: {
	// The action to take for the application rules in this collection. Possible values are Allow and Deny.
	action?: null | string @go(Action,*string)

	// The name which should be used for this application rule collection.
	name?: null | string @go(Name,*string)

	// The priority of the application rule collection. The range is 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// One or more application_rule (application rule) blocks as defined below.
	rule?: [...#ApplicationRuleCollectionRuleInitParameters] @go(Rule,[]ApplicationRuleCollectionRuleInitParameters)
}

#ApplicationRuleCollectionObservation: {
	// The action to take for the application rules in this collection. Possible values are Allow and Deny.
	action?: null | string @go(Action,*string)

	// The name which should be used for this application rule collection.
	name?: null | string @go(Name,*string)

	// The priority of the application rule collection. The range is 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// One or more application_rule (application rule) blocks as defined below.
	rule?: [...#ApplicationRuleCollectionRuleObservation] @go(Rule,[]ApplicationRuleCollectionRuleObservation)
}

#ApplicationRuleCollectionParameters: {
	// The action to take for the application rules in this collection. Possible values are Allow and Deny.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name which should be used for this application rule collection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The priority of the application rule collection. The range is 100 - 65000.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// One or more application_rule (application rule) blocks as defined below.
	// +kubebuilder:validation:Optional
	rule: [...#ApplicationRuleCollectionRuleParameters] @go(Rule,[]ApplicationRuleCollectionRuleParameters)
}

#ApplicationRuleCollectionRuleInitParameters: {
	// The description which should be used for this rule.
	description?: null | string @go(Description,*string)

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// Specifies a list of destination FQDN tags.
	destinationFqdnTags?: [...null | string] @go(DestinationFqdnTags,[]*string)

	// Specifies a list of destination FQDNs.
	destinationFqdns?: [...null | string] @go(DestinationFqdns,[]*string)

	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with destination_fqdns.
	destinationUrls?: [...null | string] @go(DestinationUrls,[]*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	protocols?: [...#ProtocolsInitParameters] @go(Protocols,[]ProtocolsInitParameters)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be true when using destination_urls. Needs Premium SKU for Firewall Policy.
	terminateTls?: null | bool @go(TerminateTLS,*bool)

	// Specifies a list of web categories to which access is denied or allowed depending on the value of action above. Needs Premium SKU for Firewall Policy.
	webCategories?: [...null | string] @go(WebCategories,[]*string)
}

#ApplicationRuleCollectionRuleObservation: {
	// The description which should be used for this rule.
	description?: null | string @go(Description,*string)

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// Specifies a list of destination FQDN tags.
	destinationFqdnTags?: [...null | string] @go(DestinationFqdnTags,[]*string)

	// Specifies a list of destination FQDNs.
	destinationFqdns?: [...null | string] @go(DestinationFqdns,[]*string)

	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with destination_fqdns.
	destinationUrls?: [...null | string] @go(DestinationUrls,[]*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	protocols?: [...#ProtocolsObservation] @go(Protocols,[]ProtocolsObservation)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be true when using destination_urls. Needs Premium SKU for Firewall Policy.
	terminateTls?: null | bool @go(TerminateTLS,*bool)

	// Specifies a list of web categories to which access is denied or allowed depending on the value of action above. Needs Premium SKU for Firewall Policy.
	webCategories?: [...null | string] @go(WebCategories,[]*string)
}

#ApplicationRuleCollectionRuleParameters: {
	// The description which should be used for this rule.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	// +kubebuilder:validation:Optional
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// Specifies a list of destination FQDN tags.
	// +kubebuilder:validation:Optional
	destinationFqdnTags?: [...null | string] @go(DestinationFqdnTags,[]*string)

	// Specifies a list of destination FQDNs.
	// +kubebuilder:validation:Optional
	destinationFqdns?: [...null | string] @go(DestinationFqdns,[]*string)

	// Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with destination_fqdns.
	// +kubebuilder:validation:Optional
	destinationUrls?: [...null | string] @go(DestinationUrls,[]*string)

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	// +kubebuilder:validation:Optional
	protocols?: [...#ProtocolsParameters] @go(Protocols,[]ProtocolsParameters)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	// +kubebuilder:validation:Optional
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	// +kubebuilder:validation:Optional
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// Boolean specifying if TLS shall be terminated (true) or not (false). Must be true when using destination_urls. Needs Premium SKU for Firewall Policy.
	// +kubebuilder:validation:Optional
	terminateTls?: null | bool @go(TerminateTLS,*bool)

	// Specifies a list of web categories to which access is denied or allowed depending on the value of action above. Needs Premium SKU for Firewall Policy.
	// +kubebuilder:validation:Optional
	webCategories?: [...null | string] @go(WebCategories,[]*string)
}

#FirewallPolicyRuleCollectionGroupInitParameters: {
	// One or more application_rule_collection blocks as defined below.
	applicationRuleCollection?: [...#ApplicationRuleCollectionInitParameters] @go(ApplicationRuleCollection,[]ApplicationRuleCollectionInitParameters)

	// One or more nat_rule_collection blocks as defined below.
	natRuleCollection?: [...#NATRuleCollectionInitParameters] @go(NATRuleCollection,[]NATRuleCollectionInitParameters)

	// One or more network_rule_collection blocks as defined below.
	networkRuleCollection?: [...#NetworkRuleCollectionInitParameters] @go(NetworkRuleCollection,[]NetworkRuleCollectionInitParameters)

	// The priority of the Firewall Policy Rule Collection Group. The range is 100-65000.
	priority?: null | float64 @go(Priority,*float64)
}

#FirewallPolicyRuleCollectionGroupObservation: {
	// One or more application_rule_collection blocks as defined below.
	applicationRuleCollection?: [...#ApplicationRuleCollectionObservation] @go(ApplicationRuleCollection,[]ApplicationRuleCollectionObservation)

	// The ID of the Firewall Policy where the Firewall Policy Rule Collection Group should exist. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// The ID of the Firewall Policy Rule Collection Group.
	id?: null | string @go(ID,*string)

	// One or more nat_rule_collection blocks as defined below.
	natRuleCollection?: [...#NATRuleCollectionObservation] @go(NATRuleCollection,[]NATRuleCollectionObservation)

	// One or more network_rule_collection blocks as defined below.
	networkRuleCollection?: [...#NetworkRuleCollectionObservation] @go(NetworkRuleCollection,[]NetworkRuleCollectionObservation)

	// The priority of the Firewall Policy Rule Collection Group. The range is 100-65000.
	priority?: null | float64 @go(Priority,*float64)
}

#FirewallPolicyRuleCollectionGroupParameters: {
	// One or more application_rule_collection blocks as defined below.
	// +kubebuilder:validation:Optional
	applicationRuleCollection?: [...#ApplicationRuleCollectionParameters] @go(ApplicationRuleCollection,[]ApplicationRuleCollectionParameters)

	// The ID of the Firewall Policy where the Firewall Policy Rule Collection Group should exist. Changing this forces a new Firewall Policy Rule Collection Group to be created.
	// +crossplane:generate:reference:type=FirewallPolicy
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// One or more nat_rule_collection blocks as defined below.
	// +kubebuilder:validation:Optional
	natRuleCollection?: [...#NATRuleCollectionParameters] @go(NATRuleCollection,[]NATRuleCollectionParameters)

	// One or more network_rule_collection blocks as defined below.
	// +kubebuilder:validation:Optional
	networkRuleCollection?: [...#NetworkRuleCollectionParameters] @go(NetworkRuleCollection,[]NetworkRuleCollectionParameters)

	// The priority of the Firewall Policy Rule Collection Group. The range is 100-65000.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)
}

#NATRuleCollectionInitParameters: {
	// The action to take for the NAT rules in this collection. Currently, the only possible value is Dnat.
	action?: null | string @go(Action,*string)

	// The name which should be used for this NAT rule collection.
	name?: null | string @go(Name,*string)

	// The priority of the NAT rule collection. The range is 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// A nat_rule (NAT rule) block as defined below.
	rule?: [...#NATRuleCollectionRuleInitParameters] @go(Rule,[]NATRuleCollectionRuleInitParameters)
}

#NATRuleCollectionObservation: {
	// The action to take for the NAT rules in this collection. Currently, the only possible value is Dnat.
	action?: null | string @go(Action,*string)

	// The name which should be used for this NAT rule collection.
	name?: null | string @go(Name,*string)

	// The priority of the NAT rule collection. The range is 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// A nat_rule (NAT rule) block as defined below.
	rule?: [...#NATRuleCollectionRuleObservation] @go(Rule,[]NATRuleCollectionRuleObservation)
}

#NATRuleCollectionParameters: {
	// The action to take for the NAT rules in this collection. Currently, the only possible value is Dnat.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name which should be used for this NAT rule collection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The priority of the NAT rule collection. The range is 100 - 65000.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// A nat_rule (NAT rule) block as defined below.
	// +kubebuilder:validation:Optional
	rule: [...#NATRuleCollectionRuleParameters] @go(Rule,[]NATRuleCollectionRuleParameters)
}

#NATRuleCollectionRuleInitParameters: {
	// The destination IP address (including CIDR).
	destinationAddress?: null | string @go(DestinationAddress,*string)

	// Specifies a list of destination ports.
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	protocols?: [...null | string] @go(Protocols,[]*string)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// Specifies the translated address.
	translatedAddress?: null | string @go(TranslatedAddress,*string)

	// Specifies the translated FQDN.
	translatedFqdn?: null | string @go(TranslatedFqdn,*string)

	// Specifies the translated port.
	translatedPort?: null | float64 @go(TranslatedPort,*float64)
}

#NATRuleCollectionRuleObservation: {
	// The destination IP address (including CIDR).
	destinationAddress?: null | string @go(DestinationAddress,*string)

	// Specifies a list of destination ports.
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	protocols?: [...null | string] @go(Protocols,[]*string)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// Specifies the translated address.
	translatedAddress?: null | string @go(TranslatedAddress,*string)

	// Specifies the translated FQDN.
	translatedFqdn?: null | string @go(TranslatedFqdn,*string)

	// Specifies the translated port.
	translatedPort?: null | float64 @go(TranslatedPort,*float64)
}

#NATRuleCollectionRuleParameters: {
	// The destination IP address (including CIDR).
	// +kubebuilder:validation:Optional
	destinationAddress?: null | string @go(DestinationAddress,*string)

	// Specifies a list of destination ports.
	// +kubebuilder:validation:Optional
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	// +kubebuilder:validation:Optional
	protocols: [...null | string] @go(Protocols,[]*string)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	// +kubebuilder:validation:Optional
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	// +kubebuilder:validation:Optional
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)

	// Specifies the translated address.
	// +kubebuilder:validation:Optional
	translatedAddress?: null | string @go(TranslatedAddress,*string)

	// Specifies the translated FQDN.
	// +kubebuilder:validation:Optional
	translatedFqdn?: null | string @go(TranslatedFqdn,*string)

	// Specifies the translated port.
	// +kubebuilder:validation:Optional
	translatedPort?: null | float64 @go(TranslatedPort,*float64)
}

#NetworkRuleCollectionInitParameters: {
	// The action to take for the network rules in this collection. Possible values are Allow and Deny.
	action?: null | string @go(Action,*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// The priority of the network rule collection. The range is 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// One or more network_rule (network rule) blocks as defined below.
	rule?: [...#NetworkRuleCollectionRuleInitParameters] @go(Rule,[]NetworkRuleCollectionRuleInitParameters)
}

#NetworkRuleCollectionObservation: {
	// The action to take for the network rules in this collection. Possible values are Allow and Deny.
	action?: null | string @go(Action,*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// The priority of the network rule collection. The range is 100 - 65000.
	priority?: null | float64 @go(Priority,*float64)

	// One or more network_rule (network rule) blocks as defined below.
	rule?: [...#NetworkRuleCollectionRuleObservation] @go(Rule,[]NetworkRuleCollectionRuleObservation)
}

#NetworkRuleCollectionParameters: {
	// The action to take for the network rules in this collection. Possible values are Allow and Deny.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The priority of the network rule collection. The range is 100 - 65000.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// One or more network_rule (network rule) blocks as defined below.
	// +kubebuilder:validation:Optional
	rule: [...#NetworkRuleCollectionRuleParameters] @go(Rule,[]NetworkRuleCollectionRuleParameters)
}

#NetworkRuleCollectionRuleInitParameters: {
	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// Specifies a list of destination FQDNs.
	destinationFqdns?: [...null | string] @go(DestinationFqdns,[]*string)

	// Specifies a list of destination IP groups.
	destinationIpGroups?: [...null | string] @go(DestinationIPGroups,[]*string)

	// Specifies a list of destination ports.
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	protocols?: [...null | string] @go(Protocols,[]*string)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)
}

#NetworkRuleCollectionRuleObservation: {
	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// Specifies a list of destination FQDNs.
	destinationFqdns?: [...null | string] @go(DestinationFqdns,[]*string)

	// Specifies a list of destination IP groups.
	destinationIpGroups?: [...null | string] @go(DestinationIPGroups,[]*string)

	// Specifies a list of destination ports.
	destinationPorts?: [...null | string] @go(DestinationPorts,[]*string)

	// The name which should be used for this network rule collection.
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	protocols?: [...null | string] @go(Protocols,[]*string)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)
}

#NetworkRuleCollectionRuleParameters: {
	// Specifies a list of destination IP addresses (including CIDR, IP range and *) or Service Tags.
	// +kubebuilder:validation:Optional
	destinationAddresses?: [...null | string] @go(DestinationAddresses,[]*string)

	// Specifies a list of destination FQDNs.
	// +kubebuilder:validation:Optional
	destinationFqdns?: [...null | string] @go(DestinationFqdns,[]*string)

	// Specifies a list of destination IP groups.
	// +kubebuilder:validation:Optional
	destinationIpGroups?: [...null | string] @go(DestinationIPGroups,[]*string)

	// Specifies a list of destination ports.
	// +kubebuilder:validation:Optional
	destinationPorts: [...null | string] @go(DestinationPorts,[]*string)

	// The name which should be used for this network rule collection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies a list of network protocols this rule applies to. Possible values are Any, TCP, UDP, ICMP.
	// +kubebuilder:validation:Optional
	protocols: [...null | string] @go(Protocols,[]*string)

	// Specifies a list of source IP addresses (including CIDR, IP range and *).
	// +kubebuilder:validation:Optional
	sourceAddresses?: [...null | string] @go(SourceAddresses,[]*string)

	// Specifies a list of source IP groups.
	// +kubebuilder:validation:Optional
	sourceIpGroups?: [...null | string] @go(SourceIPGroups,[]*string)
}

#ProtocolsInitParameters: {
	// Port number of the protocol. Range is 0-64000.
	port?: null | float64 @go(Port,*float64)

	// Protocol type. Possible values are Http and Https.
	type?: null | string @go(Type,*string)
}

#ProtocolsObservation: {
	// Port number of the protocol. Range is 0-64000.
	port?: null | float64 @go(Port,*float64)

	// Protocol type. Possible values are Http and Https.
	type?: null | string @go(Type,*string)
}

#ProtocolsParameters: {
	// Port number of the protocol. Range is 0-64000.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// Protocol type. Possible values are Http and Https.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// FirewallPolicyRuleCollectionGroupSpec defines the desired state of FirewallPolicyRuleCollectionGroup
#FirewallPolicyRuleCollectionGroupSpec: {
	forProvider: #FirewallPolicyRuleCollectionGroupParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FirewallPolicyRuleCollectionGroupInitParameters @go(InitProvider)
}

// FirewallPolicyRuleCollectionGroupStatus defines the observed state of FirewallPolicyRuleCollectionGroup.
#FirewallPolicyRuleCollectionGroupStatus: {
	atProvider?: #FirewallPolicyRuleCollectionGroupObservation @go(AtProvider)
}

// FirewallPolicyRuleCollectionGroup is the Schema for the FirewallPolicyRuleCollectionGroups API. Manages a Firewall Policy Rule Collection Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FirewallPolicyRuleCollectionGroup: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.priority) || has(self.initProvider.priority)",message="priority is a required parameter"
	spec:    #FirewallPolicyRuleCollectionGroupSpec   @go(Spec)
	status?: #FirewallPolicyRuleCollectionGroupStatus @go(Status)
}

// FirewallPolicyRuleCollectionGroupList contains a list of FirewallPolicyRuleCollectionGroups
#FirewallPolicyRuleCollectionGroupList: {
	items: [...#FirewallPolicyRuleCollectionGroup] @go(Items,[]FirewallPolicyRuleCollectionGroup)
}
