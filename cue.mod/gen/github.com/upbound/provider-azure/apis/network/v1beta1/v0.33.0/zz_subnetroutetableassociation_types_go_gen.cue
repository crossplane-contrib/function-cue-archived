// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#SubnetRouteTableAssociationObservation: {
	// The ID of the Subnet.
	id?: null | string @go(ID,*string)

	// The ID of the Route Table which should be associated with the Subnet. Changing this forces a new resource to be created.
	routeTableId?: null | string @go(RouteTableID,*string)

	// The ID of the Subnet. Changing this forces a new resource to be created.
	subnetId?: null | string @go(SubnetID,*string)
}

#SubnetRouteTableAssociationParameters: {
	// The ID of the Route Table which should be associated with the Subnet. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=RouteTable
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	routeTableId?: null | string @go(RouteTableID,*string)

	// The ID of the Subnet. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

// SubnetRouteTableAssociationSpec defines the desired state of SubnetRouteTableAssociation
#SubnetRouteTableAssociationSpec: {
	forProvider: #SubnetRouteTableAssociationParameters @go(ForProvider)
}

// SubnetRouteTableAssociationStatus defines the observed state of SubnetRouteTableAssociation.
#SubnetRouteTableAssociationStatus: {
	atProvider?: #SubnetRouteTableAssociationObservation @go(AtProvider)
}

// SubnetRouteTableAssociation is the Schema for the SubnetRouteTableAssociations API. Associates a
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SubnetRouteTableAssociation: {
	spec:    #SubnetRouteTableAssociationSpec   @go(Spec)
	status?: #SubnetRouteTableAssociationStatus @go(Status)
}

// SubnetRouteTableAssociationList contains a list of SubnetRouteTableAssociations
#SubnetRouteTableAssociationList: {
	items: [...#SubnetRouteTableAssociation] @go(Items,[]SubnetRouteTableAssociation)
}
