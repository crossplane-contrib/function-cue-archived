// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#ExpressRouteConnectionInitParameters: {
	// The authorization key to establish the Express Route Connection.
	authorizationKey?: null | string @go(AuthorizationKey,*string)

	// Is Internet security enabled for this Express Route Connection?
	enableInternetSecurity?: null | bool @go(EnableInternetSecurity,*bool)

	// Specified whether Fast Path is enabled for Virtual Wan Firewall Hub. Defaults to false.
	expressRouteGatewayBypassEnabled?: null | bool @go(ExpressRouteGatewayBypassEnabled,*bool)

	// A routing block as defined below.
	routing?: [...#RoutingInitParameters] @go(Routing,[]RoutingInitParameters)

	// The routing weight associated to the Express Route Connection. Possible value is between 0 and 32000. Defaults to 0.
	routingWeight?: null | float64 @go(RoutingWeight,*float64)
}

#ExpressRouteConnectionObservation: {
	// The authorization key to establish the Express Route Connection.
	authorizationKey?: null | string @go(AuthorizationKey,*string)

	// Is Internet security enabled for this Express Route Connection?
	enableInternetSecurity?: null | bool @go(EnableInternetSecurity,*bool)

	// The ID of the Express Route Circuit Peering that this Express Route Connection connects with. Changing this forces a new resource to be created.
	expressRouteCircuitPeeringId?: null | string @go(ExpressRouteCircuitPeeringID,*string)

	// Specified whether Fast Path is enabled for Virtual Wan Firewall Hub. Defaults to false.
	expressRouteGatewayBypassEnabled?: null | bool @go(ExpressRouteGatewayBypassEnabled,*bool)

	// The ID of the Express Route Gateway that this Express Route Connection connects with. Changing this forces a new resource to be created.
	expressRouteGatewayId?: null | string @go(ExpressRouteGatewayID,*string)

	// The ID of the Express Route Connection.
	id?: null | string @go(ID,*string)

	// A routing block as defined below.
	routing?: [...#RoutingObservation] @go(Routing,[]RoutingObservation)

	// The routing weight associated to the Express Route Connection. Possible value is between 0 and 32000. Defaults to 0.
	routingWeight?: null | float64 @go(RoutingWeight,*float64)
}

#ExpressRouteConnectionParameters: {
	// The authorization key to establish the Express Route Connection.
	// +kubebuilder:validation:Optional
	authorizationKey?: null | string @go(AuthorizationKey,*string)

	// Is Internet security enabled for this Express Route Connection?
	// +kubebuilder:validation:Optional
	enableInternetSecurity?: null | bool @go(EnableInternetSecurity,*bool)

	// The ID of the Express Route Circuit Peering that this Express Route Connection connects with. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=ExpressRouteCircuitPeering
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	expressRouteCircuitPeeringId?: null | string @go(ExpressRouteCircuitPeeringID,*string)

	// Specified whether Fast Path is enabled for Virtual Wan Firewall Hub. Defaults to false.
	// +kubebuilder:validation:Optional
	expressRouteGatewayBypassEnabled?: null | bool @go(ExpressRouteGatewayBypassEnabled,*bool)

	// The ID of the Express Route Gateway that this Express Route Connection connects with. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=ExpressRouteGateway
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	expressRouteGatewayId?: null | string @go(ExpressRouteGatewayID,*string)

	// A routing block as defined below.
	// +kubebuilder:validation:Optional
	routing?: [...#RoutingParameters] @go(Routing,[]RoutingParameters)

	// The routing weight associated to the Express Route Connection. Possible value is between 0 and 32000. Defaults to 0.
	// +kubebuilder:validation:Optional
	routingWeight?: null | float64 @go(RoutingWeight,*float64)
}

#PropagatedRouteTableInitParameters: {
	// The list of labels to logically group route tables.
	labels?: [...null | string] @go(Labels,[]*string)

	// A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.
	routeTableIds?: [...null | string] @go(RouteTableIds,[]*string)
}

#PropagatedRouteTableObservation: {
	// The list of labels to logically group route tables.
	labels?: [...null | string] @go(Labels,[]*string)

	// A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.
	routeTableIds?: [...null | string] @go(RouteTableIds,[]*string)
}

#PropagatedRouteTableParameters: {
	// The list of labels to logically group route tables.
	// +kubebuilder:validation:Optional
	labels?: [...null | string] @go(Labels,[]*string)

	// A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.
	// +kubebuilder:validation:Optional
	routeTableIds?: [...null | string] @go(RouteTableIds,[]*string)
}

#RoutingInitParameters: {
	// The ID of the Virtual Hub Route Table associated with this Express Route Connection.
	associatedRouteTableId?: null | string @go(AssociatedRouteTableID,*string)

	// The ID of the Route Map associated with this Express Route Connection for inbound routes.
	inboundRouteMapId?: null | string @go(InboundRouteMapID,*string)

	// The ID of the Route Map associated with this Express Route Connection for outbound routes.
	outboundRouteMapId?: null | string @go(OutboundRouteMapID,*string)

	// A propagated_route_table block as defined below.
	propagatedRouteTable?: [...#PropagatedRouteTableInitParameters] @go(PropagatedRouteTable,[]PropagatedRouteTableInitParameters)
}

#RoutingObservation: {
	// The ID of the Virtual Hub Route Table associated with this Express Route Connection.
	associatedRouteTableId?: null | string @go(AssociatedRouteTableID,*string)

	// The ID of the Route Map associated with this Express Route Connection for inbound routes.
	inboundRouteMapId?: null | string @go(InboundRouteMapID,*string)

	// The ID of the Route Map associated with this Express Route Connection for outbound routes.
	outboundRouteMapId?: null | string @go(OutboundRouteMapID,*string)

	// A propagated_route_table block as defined below.
	propagatedRouteTable?: [...#PropagatedRouteTableObservation] @go(PropagatedRouteTable,[]PropagatedRouteTableObservation)
}

#RoutingParameters: {
	// The ID of the Virtual Hub Route Table associated with this Express Route Connection.
	// +kubebuilder:validation:Optional
	associatedRouteTableId?: null | string @go(AssociatedRouteTableID,*string)

	// The ID of the Route Map associated with this Express Route Connection for inbound routes.
	// +kubebuilder:validation:Optional
	inboundRouteMapId?: null | string @go(InboundRouteMapID,*string)

	// The ID of the Route Map associated with this Express Route Connection for outbound routes.
	// +kubebuilder:validation:Optional
	outboundRouteMapId?: null | string @go(OutboundRouteMapID,*string)

	// A propagated_route_table block as defined below.
	// +kubebuilder:validation:Optional
	propagatedRouteTable?: [...#PropagatedRouteTableParameters] @go(PropagatedRouteTable,[]PropagatedRouteTableParameters)
}

// ExpressRouteConnectionSpec defines the desired state of ExpressRouteConnection
#ExpressRouteConnectionSpec: {
	forProvider: #ExpressRouteConnectionParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ExpressRouteConnectionInitParameters @go(InitProvider)
}

// ExpressRouteConnectionStatus defines the observed state of ExpressRouteConnection.
#ExpressRouteConnectionStatus: {
	atProvider?: #ExpressRouteConnectionObservation @go(AtProvider)
}

// ExpressRouteConnection is the Schema for the ExpressRouteConnections API. Manages an Express Route Connection.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ExpressRouteConnection: {
	spec:    #ExpressRouteConnectionSpec   @go(Spec)
	status?: #ExpressRouteConnectionStatus @go(Status)
}

// ExpressRouteConnectionList contains a list of ExpressRouteConnections
#ExpressRouteConnectionList: {
	items: [...#ExpressRouteConnection] @go(Items,[]ExpressRouteConnection)
}
