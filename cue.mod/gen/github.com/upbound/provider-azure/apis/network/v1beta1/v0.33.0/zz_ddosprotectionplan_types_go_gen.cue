// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#DDoSProtectionPlanObservation: {
	// The ID of the DDoS Protection Plan
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A list of Virtual Network IDs associated with the DDoS Protection Plan.
	virtualNetworkIds?: [...null | string] @go(VirtualNetworkIds,[]*string)
}

#DDoSProtectionPlanParameters: {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// DDoSProtectionPlanSpec defines the desired state of DDoSProtectionPlan
#DDoSProtectionPlanSpec: {
	forProvider: #DDoSProtectionPlanParameters @go(ForProvider)
}

// DDoSProtectionPlanStatus defines the observed state of DDoSProtectionPlan.
#DDoSProtectionPlanStatus: {
	atProvider?: #DDoSProtectionPlanObservation @go(AtProvider)
}

// DDoSProtectionPlan is the Schema for the DDoSProtectionPlans API. Manages an Azure Network DDoS Protection Plan.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#DDoSProtectionPlan: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	spec:    #DDoSProtectionPlanSpec   @go(Spec)
	status?: #DDoSProtectionPlanStatus @go(Status)
}

// DDoSProtectionPlanList contains a list of DDoSProtectionPlans
#DDoSProtectionPlanList: {
	items: [...#DDoSProtectionPlan] @go(Items,[]DDoSProtectionPlan)
}
