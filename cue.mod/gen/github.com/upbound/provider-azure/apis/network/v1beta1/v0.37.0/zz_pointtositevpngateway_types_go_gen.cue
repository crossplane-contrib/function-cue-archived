// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#ConnectionConfigurationInitParameters: {
	// Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to false.
	internetSecurityEnabled?: null | bool @go(InternetSecurityEnabled,*bool)

	// The Name which should be used for this Connection Configuration.
	name?: null | string @go(Name,*string)

	// A route block as defined below.
	route?: [...#RouteInitParameters] @go(Route,[]RouteInitParameters)

	// A vpn_client_address_pool block as defined below.
	vpnClientAddressPool?: [...#VPNClientAddressPoolInitParameters] @go(VPNClientAddressPool,[]VPNClientAddressPoolInitParameters)
}

#ConnectionConfigurationObservation: {
	// Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to false.
	internetSecurityEnabled?: null | bool @go(InternetSecurityEnabled,*bool)

	// The Name which should be used for this Connection Configuration.
	name?: null | string @go(Name,*string)

	// A route block as defined below.
	route?: [...#RouteObservation] @go(Route,[]RouteObservation)

	// A vpn_client_address_pool block as defined below.
	vpnClientAddressPool?: [...#VPNClientAddressPoolObservation] @go(VPNClientAddressPool,[]VPNClientAddressPoolObservation)
}

#ConnectionConfigurationParameters: {
	// Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to false.
	// +kubebuilder:validation:Optional
	internetSecurityEnabled?: null | bool @go(InternetSecurityEnabled,*bool)

	// The Name which should be used for this Connection Configuration.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A route block as defined below.
	// +kubebuilder:validation:Optional
	route?: [...#RouteParameters] @go(Route,[]RouteParameters)

	// A vpn_client_address_pool block as defined below.
	// +kubebuilder:validation:Optional
	vpnClientAddressPool: [...#VPNClientAddressPoolParameters] @go(VPNClientAddressPool,[]VPNClientAddressPoolParameters)
}

#PointToSiteVPNGatewayInitParameters: {
	// A connection_configuration block as defined below.
	connectionConfiguration?: [...#ConnectionConfigurationInitParameters] @go(ConnectionConfiguration,[]ConnectionConfigurationInitParameters)

	// A list of IP Addresses of DNS Servers for the Point-to-Site VPN Gateway.
	dnsServers?: [...null | string] @go(DNSServers,[]*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Is the Routing Preference for the Public IP Interface of the VPN Gateway enabled? Defaults to false. Changing this forces a new resource to be created.
	routingPreferenceInternetEnabled?: null | bool @go(RoutingPreferenceInternetEnabled,*bool)

	// The Scale Unit for this Point-to-Site VPN Gateway.
	scaleUnit?: null | float64 @go(ScaleUnit,*float64)

	// A mapping of tags to assign to the Point-to-Site VPN Gateway.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#PointToSiteVPNGatewayObservation: {
	// A connection_configuration block as defined below.
	connectionConfiguration?: [...#ConnectionConfigurationObservation] @go(ConnectionConfiguration,[]ConnectionConfigurationObservation)

	// A list of IP Addresses of DNS Servers for the Point-to-Site VPN Gateway.
	dnsServers?: [...null | string] @go(DNSServers,[]*string)

	// The ID of the Point-to-Site VPN Gateway.
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the resource group in which to create the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Is the Routing Preference for the Public IP Interface of the VPN Gateway enabled? Defaults to false. Changing this forces a new resource to be created.
	routingPreferenceInternetEnabled?: null | bool @go(RoutingPreferenceInternetEnabled,*bool)

	// The Scale Unit for this Point-to-Site VPN Gateway.
	scaleUnit?: null | float64 @go(ScaleUnit,*float64)

	// A mapping of tags to assign to the Point-to-Site VPN Gateway.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the VPN Server Configuration which this Point-to-Site VPN Gateway should use. Changing this forces a new resource to be created.
	vpnServerConfigurationId?: null | string @go(VPNServerConfigurationID,*string)

	// The ID of the Virtual Hub where this Point-to-Site VPN Gateway should exist. Changing this forces a new resource to be created.
	virtualHubId?: null | string @go(VirtualHubID,*string)
}

#PointToSiteVPNGatewayParameters: {
	// A connection_configuration block as defined below.
	// +kubebuilder:validation:Optional
	connectionConfiguration?: [...#ConnectionConfigurationParameters] @go(ConnectionConfiguration,[]ConnectionConfigurationParameters)

	// A list of IP Addresses of DNS Servers for the Point-to-Site VPN Gateway.
	// +kubebuilder:validation:Optional
	dnsServers?: [...null | string] @go(DNSServers,[]*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the resource group in which to create the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Is the Routing Preference for the Public IP Interface of the VPN Gateway enabled? Defaults to false. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	routingPreferenceInternetEnabled?: null | bool @go(RoutingPreferenceInternetEnabled,*bool)

	// The Scale Unit for this Point-to-Site VPN Gateway.
	// +kubebuilder:validation:Optional
	scaleUnit?: null | float64 @go(ScaleUnit,*float64)

	// A mapping of tags to assign to the Point-to-Site VPN Gateway.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the VPN Server Configuration which this Point-to-Site VPN Gateway should use. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=VPNServerConfiguration
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vpnServerConfigurationId?: null | string @go(VPNServerConfigurationID,*string)

	// The ID of the Virtual Hub where this Point-to-Site VPN Gateway should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=VirtualHub
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualHubId?: null | string @go(VirtualHubID,*string)
}

#RouteInitParameters: {
	// The Virtual Hub Route Table resource id associated with this Routing Configuration.
	associatedRouteTableId?: null | string @go(AssociatedRouteTableID,*string)

	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	inboundRouteMapId?: null | string @go(InboundRouteMapID,*string)

	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	outboundRouteMapId?: null | string @go(OutboundRouteMapID,*string)

	// A propagated_route_table block as defined below.
	propagatedRouteTable?: [...#RoutePropagatedRouteTableInitParameters] @go(PropagatedRouteTable,[]RoutePropagatedRouteTableInitParameters)
}

#RouteObservation: {
	// The Virtual Hub Route Table resource id associated with this Routing Configuration.
	associatedRouteTableId?: null | string @go(AssociatedRouteTableID,*string)

	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	inboundRouteMapId?: null | string @go(InboundRouteMapID,*string)

	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	outboundRouteMapId?: null | string @go(OutboundRouteMapID,*string)

	// A propagated_route_table block as defined below.
	propagatedRouteTable?: [...#RoutePropagatedRouteTableObservation] @go(PropagatedRouteTable,[]RoutePropagatedRouteTableObservation)
}

#RouteParameters: {
	// The Virtual Hub Route Table resource id associated with this Routing Configuration.
	// +kubebuilder:validation:Optional
	associatedRouteTableId?: null | string @go(AssociatedRouteTableID,*string)

	// The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.
	// +kubebuilder:validation:Optional
	inboundRouteMapId?: null | string @go(InboundRouteMapID,*string)

	// The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.
	// +kubebuilder:validation:Optional
	outboundRouteMapId?: null | string @go(OutboundRouteMapID,*string)

	// A propagated_route_table block as defined below.
	// +kubebuilder:validation:Optional
	propagatedRouteTable?: [...#RoutePropagatedRouteTableParameters] @go(PropagatedRouteTable,[]RoutePropagatedRouteTableParameters)
}

#RoutePropagatedRouteTableInitParameters: {
	// The list of Virtual Hub Route Table resource id which the routes will be propagated to.
	ids?: [...null | string] @go(Ids,[]*string)

	// The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.
	labels?: [...null | string] @go(Labels,[]*string)
}

#RoutePropagatedRouteTableObservation: {
	// The list of Virtual Hub Route Table resource id which the routes will be propagated to.
	ids?: [...null | string] @go(Ids,[]*string)

	// The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.
	labels?: [...null | string] @go(Labels,[]*string)
}

#RoutePropagatedRouteTableParameters: {
	// The list of Virtual Hub Route Table resource id which the routes will be propagated to.
	// +kubebuilder:validation:Optional
	ids: [...null | string] @go(Ids,[]*string)

	// The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.
	// +kubebuilder:validation:Optional
	labels?: [...null | string] @go(Labels,[]*string)
}

#VPNClientAddressPoolInitParameters: {
	// A list of CIDR Ranges which should be used as Address Prefixes.
	addressPrefixes?: [...null | string] @go(AddressPrefixes,[]*string)
}

#VPNClientAddressPoolObservation: {
	// A list of CIDR Ranges which should be used as Address Prefixes.
	addressPrefixes?: [...null | string] @go(AddressPrefixes,[]*string)
}

#VPNClientAddressPoolParameters: {
	// A list of CIDR Ranges which should be used as Address Prefixes.
	// +kubebuilder:validation:Optional
	addressPrefixes: [...null | string] @go(AddressPrefixes,[]*string)
}

// PointToSiteVPNGatewaySpec defines the desired state of PointToSiteVPNGateway
#PointToSiteVPNGatewaySpec: {
	forProvider: #PointToSiteVPNGatewayParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PointToSiteVPNGatewayInitParameters @go(InitProvider)
}

// PointToSiteVPNGatewayStatus defines the observed state of PointToSiteVPNGateway.
#PointToSiteVPNGatewayStatus: {
	atProvider?: #PointToSiteVPNGatewayObservation @go(AtProvider)
}

// PointToSiteVPNGateway is the Schema for the PointToSiteVPNGateways API. Manages a Point-to-Site VPN Gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#PointToSiteVPNGateway: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.connectionConfiguration) || (has(self.initProvider) && has(self.initProvider.connectionConfiguration))",message="spec.forProvider.connectionConfiguration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scaleUnit) || (has(self.initProvider) && has(self.initProvider.scaleUnit))",message="spec.forProvider.scaleUnit is a required parameter"
	spec:    #PointToSiteVPNGatewaySpec   @go(Spec)
	status?: #PointToSiteVPNGatewayStatus @go(Status)
}

// PointToSiteVPNGatewayList contains a list of PointToSiteVPNGateways
#PointToSiteVPNGatewayList: {
	items: [...#PointToSiteVPNGateway] @go(Items,[]PointToSiteVPNGateway)
}
