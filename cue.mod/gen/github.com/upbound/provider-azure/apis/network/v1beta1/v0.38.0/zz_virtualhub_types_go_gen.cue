// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#VirtualHubInitParameters_2: {
	// The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. The address prefix subnet cannot be smaller than a .
	addressPrefix?: null | string @go(AddressPrefix,*string)

	// The hub routing preference. Possible values are ExpressRoute, ASPath and VpnGateway. Defaults to ExpressRoute.
	hubRoutingPreference?: null | string @go(HubRoutingPreference,*string)

	// Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// One or more route blocks as defined below.
	route?: [...#VirtualHubRouteInitParameters] @go(Route,[]VirtualHubRouteInitParameters)

	// The SKU of the Virtual Hub. Possible values are Basic and Standard. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the Virtual Hub.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#VirtualHubObservation_2: {
	// The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. The address prefix subnet cannot be smaller than a .
	addressPrefix?: null | string @go(AddressPrefix,*string)

	// The ID of the default Route Table in the Virtual Hub.
	defaultRouteTableId?: null | string @go(DefaultRouteTableID,*string)

	// The hub routing preference. Possible values are ExpressRoute, ASPath and VpnGateway. Defaults to ExpressRoute.
	hubRoutingPreference?: null | string @go(HubRoutingPreference,*string)

	// The ID of the Virtual Hub.
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more route blocks as defined below.
	route?: [...#VirtualHubRouteObservation] @go(Route,[]VirtualHubRouteObservation)

	// The SKU of the Virtual Hub. Possible values are Basic and Standard. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the Virtual Hub.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The Autonomous System Number of the Virtual Hub BGP router.
	virtualRouterAsn?: null | float64 @go(VirtualRouterAsn,*float64)

	// The IP addresses of the Virtual Hub BGP router.
	virtualRouterIps?: [...null | string] @go(VirtualRouterIps,[]*string)

	// The ID of a Virtual WAN within which the Virtual Hub should be created. Changing this forces a new resource to be created.
	virtualWanId?: null | string @go(VirtualWanID,*string)
}

#VirtualHubParameters_2: {
	// The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. The address prefix subnet cannot be smaller than a .
	// +kubebuilder:validation:Optional
	addressPrefix?: null | string @go(AddressPrefix,*string)

	// The hub routing preference. Possible values are ExpressRoute, ASPath and VpnGateway. Defaults to ExpressRoute.
	// +kubebuilder:validation:Optional
	hubRoutingPreference?: null | string @go(HubRoutingPreference,*string)

	// Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more route blocks as defined below.
	// +kubebuilder:validation:Optional
	route?: [...#VirtualHubRouteParameters] @go(Route,[]VirtualHubRouteParameters)

	// The SKU of the Virtual Hub. Possible values are Basic and Standard. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the Virtual Hub.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of a Virtual WAN within which the Virtual Hub should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=VirtualWAN
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualWanId?: null | string @go(VirtualWanID,*string)
}

#VirtualHubRouteInitParameters: {
	// A list of Address Prefixes.
	addressPrefixes?: [...null | string] @go(AddressPrefixes,[]*string)

	// The IP Address that Packets should be forwarded to as the Next Hop.
	nextHopIpAddress?: null | string @go(NextHopIPAddress,*string)
}

#VirtualHubRouteObservation: {
	// A list of Address Prefixes.
	addressPrefixes?: [...null | string] @go(AddressPrefixes,[]*string)

	// The IP Address that Packets should be forwarded to as the Next Hop.
	nextHopIpAddress?: null | string @go(NextHopIPAddress,*string)
}

#VirtualHubRouteParameters: {
	// A list of Address Prefixes.
	// +kubebuilder:validation:Optional
	addressPrefixes: [...null | string] @go(AddressPrefixes,[]*string)

	// The IP Address that Packets should be forwarded to as the Next Hop.
	// +kubebuilder:validation:Optional
	nextHopIpAddress?: null | string @go(NextHopIPAddress,*string)
}

// VirtualHubSpec defines the desired state of VirtualHub
#VirtualHubSpec: {
	forProvider: #VirtualHubParameters_2 @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #VirtualHubInitParameters_2 @go(InitProvider)
}

// VirtualHubStatus defines the observed state of VirtualHub.
#VirtualHubStatus: {
	atProvider?: #VirtualHubObservation_2 @go(AtProvider)
}

// VirtualHub is the Schema for the VirtualHubs API. Manages a Virtual Hub within a Virtual WAN.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#VirtualHub: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #VirtualHubSpec   @go(Spec)
	status?: #VirtualHubStatus @go(Status)
}

// VirtualHubList contains a list of VirtualHubs
#VirtualHubList: {
	items: [...#VirtualHub] @go(Items,[]VirtualHub)
}
