// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#SecurityRuleInitParameters_2: {
	// Specifies whether network traffic is allowed or denied. Possible values are Allow and Deny.
	access?: null | string @go(Access,*string)

	// A description for this rule. Restricted to 140 characters.
	description?: null | string @go(Description,*string)

	// CIDR or destination IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. Besides, it also supports all available Service Tags like ‘Sql.WestEurope‘, ‘Storage.EastUS‘, etc. You can list the available service tags with the CLI: shell az network list-service-tags --location westcentralus. For further information please see Azure CLI - az network list-service-tags. This is required if destination_address_prefixes is not specified.
	destinationAddressPrefix?: null | string @go(DestinationAddressPrefix,*string)

	// List of destination address prefixes. Tags may not be used. This is required if destination_address_prefix is not specified.
	destinationAddressPrefixes?: [...null | string] @go(DestinationAddressPrefixes,[]*string)

	// A List of destination Application Security Group IDs
	destinationApplicationSecurityGroupIds?: [...null | string] @go(DestinationApplicationSecurityGroupIds,[]*string)

	// Destination Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if destination_port_ranges is not specified.
	destinationPortRange?: null | string @go(DestinationPortRange,*string)

	// List of destination ports or port ranges. This is required if destination_port_range is not specified.
	destinationPortRanges?: [...null | string] @go(DestinationPortRanges,[]*string)

	// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are Inbound and Outbound.
	direction?: null | string @go(Direction,*string)

	// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	priority?: null | float64 @go(Priority,*float64)

	// Network protocol this rule applies to. Possible values include Tcp, Udp, Icmp, Esp, Ah or * (which matches all).
	protocol?: null | string @go(Protocol,*string)

	// CIDR or source IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if source_address_prefixes is not specified.
	sourceAddressPrefix?: null | string @go(SourceAddressPrefix,*string)

	// List of source address prefixes. Tags may not be used. This is required if source_address_prefix is not specified.
	sourceAddressPrefixes?: [...null | string] @go(SourceAddressPrefixes,[]*string)

	// A List of source Application Security Group IDs
	sourceApplicationSecurityGroupIds?: [...null | string] @go(SourceApplicationSecurityGroupIds,[]*string)

	// Source Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if source_port_ranges is not specified.
	sourcePortRange?: null | string @go(SourcePortRange,*string)

	// List of source ports or port ranges. This is required if source_port_range is not specified.
	sourcePortRanges?: [...null | string] @go(SourcePortRanges,[]*string)
}

#SecurityRuleObservation_2: {
	// Specifies whether network traffic is allowed or denied. Possible values are Allow and Deny.
	access?: null | string @go(Access,*string)

	// A description for this rule. Restricted to 140 characters.
	description?: null | string @go(Description,*string)

	// CIDR or destination IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. Besides, it also supports all available Service Tags like ‘Sql.WestEurope‘, ‘Storage.EastUS‘, etc. You can list the available service tags with the CLI: shell az network list-service-tags --location westcentralus. For further information please see Azure CLI - az network list-service-tags. This is required if destination_address_prefixes is not specified.
	destinationAddressPrefix?: null | string @go(DestinationAddressPrefix,*string)

	// List of destination address prefixes. Tags may not be used. This is required if destination_address_prefix is not specified.
	destinationAddressPrefixes?: [...null | string] @go(DestinationAddressPrefixes,[]*string)

	// A List of destination Application Security Group IDs
	destinationApplicationSecurityGroupIds?: [...null | string] @go(DestinationApplicationSecurityGroupIds,[]*string)

	// Destination Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if destination_port_ranges is not specified.
	destinationPortRange?: null | string @go(DestinationPortRange,*string)

	// List of destination ports or port ranges. This is required if destination_port_range is not specified.
	destinationPortRanges?: [...null | string] @go(DestinationPortRanges,[]*string)

	// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are Inbound and Outbound.
	direction?: null | string @go(Direction,*string)

	// The ID of the Network Security Rule.
	id?: null | string @go(ID,*string)

	// The name of the Network Security Group that we want to attach the rule to. Changing this forces a new resource to be created.
	networkSecurityGroupName?: null | string @go(NetworkSecurityGroupName,*string)

	// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	priority?: null | float64 @go(Priority,*float64)

	// Network protocol this rule applies to. Possible values include Tcp, Udp, Icmp, Esp, Ah or * (which matches all).
	protocol?: null | string @go(Protocol,*string)

	// The name of the resource group in which to create the Network Security Rule. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// CIDR or source IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if source_address_prefixes is not specified.
	sourceAddressPrefix?: null | string @go(SourceAddressPrefix,*string)

	// List of source address prefixes. Tags may not be used. This is required if source_address_prefix is not specified.
	sourceAddressPrefixes?: [...null | string] @go(SourceAddressPrefixes,[]*string)

	// A List of source Application Security Group IDs
	sourceApplicationSecurityGroupIds?: [...null | string] @go(SourceApplicationSecurityGroupIds,[]*string)

	// Source Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if source_port_ranges is not specified.
	sourcePortRange?: null | string @go(SourcePortRange,*string)

	// List of source ports or port ranges. This is required if source_port_range is not specified.
	sourcePortRanges?: [...null | string] @go(SourcePortRanges,[]*string)
}

#SecurityRuleParameters_2: {
	// Specifies whether network traffic is allowed or denied. Possible values are Allow and Deny.
	// +kubebuilder:validation:Optional
	access?: null | string @go(Access,*string)

	// A description for this rule. Restricted to 140 characters.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// CIDR or destination IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. Besides, it also supports all available Service Tags like ‘Sql.WestEurope‘, ‘Storage.EastUS‘, etc. You can list the available service tags with the CLI: shell az network list-service-tags --location westcentralus. For further information please see Azure CLI - az network list-service-tags. This is required if destination_address_prefixes is not specified.
	// +kubebuilder:validation:Optional
	destinationAddressPrefix?: null | string @go(DestinationAddressPrefix,*string)

	// List of destination address prefixes. Tags may not be used. This is required if destination_address_prefix is not specified.
	// +kubebuilder:validation:Optional
	destinationAddressPrefixes?: [...null | string] @go(DestinationAddressPrefixes,[]*string)

	// A List of destination Application Security Group IDs
	// +kubebuilder:validation:Optional
	destinationApplicationSecurityGroupIds?: [...null | string] @go(DestinationApplicationSecurityGroupIds,[]*string)

	// Destination Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if destination_port_ranges is not specified.
	// +kubebuilder:validation:Optional
	destinationPortRange?: null | string @go(DestinationPortRange,*string)

	// List of destination ports or port ranges. This is required if destination_port_range is not specified.
	// +kubebuilder:validation:Optional
	destinationPortRanges?: [...null | string] @go(DestinationPortRanges,[]*string)

	// The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are Inbound and Outbound.
	// +kubebuilder:validation:Optional
	direction?: null | string @go(Direction,*string)

	// The name of the Network Security Group that we want to attach the rule to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=SecurityGroup
	// +kubebuilder:validation:Optional
	networkSecurityGroupName?: null | string @go(NetworkSecurityGroupName,*string)

	// Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// Network protocol this rule applies to. Possible values include Tcp, Udp, Icmp, Esp, Ah or * (which matches all).
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// The name of the resource group in which to create the Network Security Rule. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// CIDR or source IP range or * to match any IP. Tags such as VirtualNetwork, AzureLoadBalancer and Internet can also be used. This is required if source_address_prefixes is not specified.
	// +kubebuilder:validation:Optional
	sourceAddressPrefix?: null | string @go(SourceAddressPrefix,*string)

	// List of source address prefixes. Tags may not be used. This is required if source_address_prefix is not specified.
	// +kubebuilder:validation:Optional
	sourceAddressPrefixes?: [...null | string] @go(SourceAddressPrefixes,[]*string)

	// A List of source Application Security Group IDs
	// +kubebuilder:validation:Optional
	sourceApplicationSecurityGroupIds?: [...null | string] @go(SourceApplicationSecurityGroupIds,[]*string)

	// Source Port or Range. Integer or range between 0 and 65535 or * to match any. This is required if source_port_ranges is not specified.
	// +kubebuilder:validation:Optional
	sourcePortRange?: null | string @go(SourcePortRange,*string)

	// List of source ports or port ranges. This is required if source_port_range is not specified.
	// +kubebuilder:validation:Optional
	sourcePortRanges?: [...null | string] @go(SourcePortRanges,[]*string)
}

// SecurityRuleSpec defines the desired state of SecurityRule
#SecurityRuleSpec: {
	forProvider: #SecurityRuleParameters_2 @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SecurityRuleInitParameters_2 @go(InitProvider)
}

// SecurityRuleStatus defines the observed state of SecurityRule.
#SecurityRuleStatus: {
	atProvider?: #SecurityRuleObservation_2 @go(AtProvider)
}

// SecurityRule is the Schema for the SecurityRules API. Manages a Network Security Rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SecurityRule: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.access) || has(self.initProvider.access)",message="access is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.direction) || has(self.initProvider.direction)",message="direction is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.priority) || has(self.initProvider.priority)",message="priority is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || has(self.initProvider.protocol)",message="protocol is a required parameter"
	spec:    #SecurityRuleSpec   @go(Spec)
	status?: #SecurityRuleStatus @go(Status)
}

// SecurityRuleList contains a list of SecurityRules
#SecurityRuleList: {
	items: [...#SecurityRule] @go(Items,[]SecurityRule)
}
