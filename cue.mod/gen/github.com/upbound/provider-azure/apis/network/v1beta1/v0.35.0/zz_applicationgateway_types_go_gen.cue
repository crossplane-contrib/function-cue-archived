// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#ApplicationGatewayInitParameters: {
	// One or more authentication_certificate blocks as defined below.
	authenticationCertificate?: [...#AuthenticationCertificateInitParameters] @go(AuthenticationCertificate,[]AuthenticationCertificateInitParameters)

	// A autoscale_configuration block as defined below.
	autoscaleConfiguration?: [...#AutoscaleConfigurationInitParameters] @go(AutoscaleConfiguration,[]AutoscaleConfigurationInitParameters)

	// One or more backend_address_pool blocks as defined below.
	backendAddressPool?: [...#BackendAddressPoolInitParameters] @go(BackendAddressPool,[]BackendAddressPoolInitParameters)

	// One or more backend_http_settings blocks as defined below.
	backendHttpSettings?: [...#BackendHTTPSettingsInitParameters] @go(BackendHTTPSettings,[]BackendHTTPSettingsInitParameters)

	// One or more custom_error_configuration blocks as defined below.
	customErrorConfiguration?: [...#CustomErrorConfigurationInitParameters] @go(CustomErrorConfiguration,[]CustomErrorConfigurationInitParameters)

	// Is HTTP2 enabled on the application gateway resource? Defaults to false.
	enableHttp2?: null | bool @go(EnableHttp2,*bool)

	// Is FIPS enabled on the Application Gateway?
	fipsEnabled?: null | bool @go(FipsEnabled,*bool)

	// The ID of the Web Application Firewall Policy.
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// Is the Firewall Policy associated with the Application Gateway?
	forceFirewallPolicyAssociation?: null | bool @go(ForceFirewallPolicyAssociation,*bool)

	// One or more frontend_ip_configuration blocks as defined below.
	frontendIpConfiguration?: [...#FrontendIPConfigurationInitParameters] @go(FrontendIPConfiguration,[]FrontendIPConfigurationInitParameters)

	// One or more frontend_port blocks as defined below.
	frontendPort?: [...#FrontendPortInitParameters] @go(FrontendPort,[]FrontendPortInitParameters)

	// One or more gateway_ip_configuration blocks as defined below.
	gatewayIpConfiguration?: [...#GatewayIPConfigurationInitParameters] @go(GatewayIPConfiguration,[]GatewayIPConfigurationInitParameters)

	// A global block as defined below.
	global?: [...#GlobalInitParameters] @go(Global,[]GlobalInitParameters)

	// One or more http_listener blocks as defined below.
	httpListener?: [...#HTTPListenerInitParameters] @go(HTTPListener,[]HTTPListenerInitParameters)

	// An identity block as defined below.
	identity?: [...#IdentityInitParameters] @go(Identity,[]IdentityInitParameters)

	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// One or more private_link_configuration blocks as defined below.
	privateLinkConfiguration?: [...#PrivateLinkConfigurationInitParameters] @go(PrivateLinkConfiguration,[]PrivateLinkConfigurationInitParameters)

	// One or more probe blocks as defined below.
	probe?: [...#ProbeInitParameters] @go(Probe,[]ProbeInitParameters)

	// One or more redirect_configuration blocks as defined below.
	redirectConfiguration?: [...#RedirectConfigurationInitParameters] @go(RedirectConfiguration,[]RedirectConfigurationInitParameters)

	// One or more request_routing_rule blocks as defined below.
	requestRoutingRule?: [...#RequestRoutingRuleInitParameters] @go(RequestRoutingRule,[]RequestRoutingRuleInitParameters)

	// One or more rewrite_rule_set blocks as defined below. Only valid for v2 SKUs.
	rewriteRuleSet?: [...#RewriteRuleSetInitParameters] @go(RewriteRuleSet,[]RewriteRuleSetInitParameters)

	// One or more ssl_certificate blocks as defined below.
	sslCertificate?: [...#SSLCertificateInitParameters] @go(SSLCertificate,[]SSLCertificateInitParameters)

	// a ssl_policy block as defined below.
	sslPolicy?: [...#SSLPolicyInitParameters] @go(SSLPolicy,[]SSLPolicyInitParameters)

	// One or more ssl_profile blocks as defined below.
	sslProfile?: [...#SSLProfileInitParameters] @go(SSLProfile,[]SSLProfileInitParameters)

	// A sku block as defined below.
	sku?: [...#SkuInitParameters] @go(Sku,[]SkuInitParameters)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more trusted_client_certificate blocks as defined below.
	trustedClientCertificate?: [...#TrustedClientCertificateInitParameters] @go(TrustedClientCertificate,[]TrustedClientCertificateInitParameters)

	// One or more trusted_root_certificate blocks as defined below.
	trustedRootCertificate?: [...#TrustedRootCertificateInitParameters] @go(TrustedRootCertificate,[]TrustedRootCertificateInitParameters)

	// One or more url_path_map blocks as defined below.
	urlPathMap?: [...#URLPathMapInitParameters] @go(URLPathMap,[]URLPathMapInitParameters)

	// A waf_configuration block as defined below.
	wafConfiguration?: [...#WafConfigurationInitParameters] @go(WafConfiguration,[]WafConfigurationInitParameters)

	// Specifies a list of Availability Zones in which this Application Gateway should be located. Changing this forces a new Application Gateway to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#ApplicationGatewayObservation: {
	// One or more authentication_certificate blocks as defined below.
	authenticationCertificate?: [...#AuthenticationCertificateObservation] @go(AuthenticationCertificate,[]AuthenticationCertificateObservation)

	// A autoscale_configuration block as defined below.
	autoscaleConfiguration?: [...#AutoscaleConfigurationObservation] @go(AutoscaleConfiguration,[]AutoscaleConfigurationObservation)

	// One or more backend_address_pool blocks as defined below.
	backendAddressPool?: [...#BackendAddressPoolObservation] @go(BackendAddressPool,[]BackendAddressPoolObservation)

	// One or more backend_http_settings blocks as defined below.
	backendHttpSettings?: [...#BackendHTTPSettingsObservation] @go(BackendHTTPSettings,[]BackendHTTPSettingsObservation)

	// One or more custom_error_configuration blocks as defined below.
	customErrorConfiguration?: [...#CustomErrorConfigurationObservation] @go(CustomErrorConfiguration,[]CustomErrorConfigurationObservation)

	// Is HTTP2 enabled on the application gateway resource? Defaults to false.
	enableHttp2?: null | bool @go(EnableHttp2,*bool)

	// Is FIPS enabled on the Application Gateway?
	fipsEnabled?: null | bool @go(FipsEnabled,*bool)

	// The ID of the Web Application Firewall Policy.
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// Is the Firewall Policy associated with the Application Gateway?
	forceFirewallPolicyAssociation?: null | bool @go(ForceFirewallPolicyAssociation,*bool)

	// One or more frontend_ip_configuration blocks as defined below.
	frontendIpConfiguration?: [...#FrontendIPConfigurationObservation] @go(FrontendIPConfiguration,[]FrontendIPConfigurationObservation)

	// One or more frontend_port blocks as defined below.
	frontendPort?: [...#FrontendPortObservation] @go(FrontendPort,[]FrontendPortObservation)

	// One or more gateway_ip_configuration blocks as defined below.
	gatewayIpConfiguration?: [...#GatewayIPConfigurationObservation] @go(GatewayIPConfiguration,[]GatewayIPConfigurationObservation)

	// A global block as defined below.
	global?: [...#GlobalObservation] @go(Global,[]GlobalObservation)

	// One or more http_listener blocks as defined below.
	httpListener?: [...#HTTPListenerObservation] @go(HTTPListener,[]HTTPListenerObservation)

	// The ID of the Application Gateway.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// A list of private_endpoint_connection blocks as defined below.
	privateEndpointConnection?: [...#PrivateEndpointConnectionObservation] @go(PrivateEndpointConnection,[]PrivateEndpointConnectionObservation)

	// One or more private_link_configuration blocks as defined below.
	privateLinkConfiguration?: [...#PrivateLinkConfigurationObservation] @go(PrivateLinkConfiguration,[]PrivateLinkConfigurationObservation)

	// One or more probe blocks as defined below.
	probe?: [...#ProbeObservation] @go(Probe,[]ProbeObservation)

	// One or more redirect_configuration blocks as defined below.
	redirectConfiguration?: [...#RedirectConfigurationObservation] @go(RedirectConfiguration,[]RedirectConfigurationObservation)

	// One or more request_routing_rule blocks as defined below.
	requestRoutingRule?: [...#RequestRoutingRuleObservation] @go(RequestRoutingRule,[]RequestRoutingRuleObservation)

	// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more rewrite_rule_set blocks as defined below. Only valid for v2 SKUs.
	rewriteRuleSet?: [...#RewriteRuleSetObservation] @go(RewriteRuleSet,[]RewriteRuleSetObservation)

	// One or more ssl_certificate blocks as defined below.
	sslCertificate?: [...#SSLCertificateObservation] @go(SSLCertificate,[]SSLCertificateObservation)

	// a ssl_policy block as defined below.
	sslPolicy?: [...#SSLPolicyObservation] @go(SSLPolicy,[]SSLPolicyObservation)

	// One or more ssl_profile blocks as defined below.
	sslProfile?: [...#SSLProfileObservation] @go(SSLProfile,[]SSLProfileObservation)

	// A sku block as defined below.
	sku?: [...#SkuObservation] @go(Sku,[]SkuObservation)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more trusted_client_certificate blocks as defined below.
	trustedClientCertificate?: [...#TrustedClientCertificateObservation] @go(TrustedClientCertificate,[]TrustedClientCertificateObservation)

	// One or more trusted_root_certificate blocks as defined below.
	trustedRootCertificate?: [...#TrustedRootCertificateObservation] @go(TrustedRootCertificate,[]TrustedRootCertificateObservation)

	// One or more url_path_map blocks as defined below.
	urlPathMap?: [...#URLPathMapObservation] @go(URLPathMap,[]URLPathMapObservation)

	// A waf_configuration block as defined below.
	wafConfiguration?: [...#WafConfigurationObservation] @go(WafConfiguration,[]WafConfigurationObservation)

	// Specifies a list of Availability Zones in which this Application Gateway should be located. Changing this forces a new Application Gateway to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#ApplicationGatewayParameters: {
	// One or more authentication_certificate blocks as defined below.
	// +kubebuilder:validation:Optional
	authenticationCertificate?: [...#AuthenticationCertificateParameters] @go(AuthenticationCertificate,[]AuthenticationCertificateParameters)

	// A autoscale_configuration block as defined below.
	// +kubebuilder:validation:Optional
	autoscaleConfiguration?: [...#AutoscaleConfigurationParameters] @go(AutoscaleConfiguration,[]AutoscaleConfigurationParameters)

	// One or more backend_address_pool blocks as defined below.
	// +kubebuilder:validation:Optional
	backendAddressPool?: [...#BackendAddressPoolParameters] @go(BackendAddressPool,[]BackendAddressPoolParameters)

	// One or more backend_http_settings blocks as defined below.
	// +kubebuilder:validation:Optional
	backendHttpSettings?: [...#BackendHTTPSettingsParameters] @go(BackendHTTPSettings,[]BackendHTTPSettingsParameters)

	// One or more custom_error_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	customErrorConfiguration?: [...#CustomErrorConfigurationParameters] @go(CustomErrorConfiguration,[]CustomErrorConfigurationParameters)

	// Is HTTP2 enabled on the application gateway resource? Defaults to false.
	// +kubebuilder:validation:Optional
	enableHttp2?: null | bool @go(EnableHttp2,*bool)

	// Is FIPS enabled on the Application Gateway?
	// +kubebuilder:validation:Optional
	fipsEnabled?: null | bool @go(FipsEnabled,*bool)

	// The ID of the Web Application Firewall Policy.
	// +kubebuilder:validation:Optional
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// Is the Firewall Policy associated with the Application Gateway?
	// +kubebuilder:validation:Optional
	forceFirewallPolicyAssociation?: null | bool @go(ForceFirewallPolicyAssociation,*bool)

	// One or more frontend_ip_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	frontendIpConfiguration?: [...#FrontendIPConfigurationParameters] @go(FrontendIPConfiguration,[]FrontendIPConfigurationParameters)

	// One or more frontend_port blocks as defined below.
	// +kubebuilder:validation:Optional
	frontendPort?: [...#FrontendPortParameters] @go(FrontendPort,[]FrontendPortParameters)

	// One or more gateway_ip_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	gatewayIpConfiguration?: [...#GatewayIPConfigurationParameters] @go(GatewayIPConfiguration,[]GatewayIPConfigurationParameters)

	// A global block as defined below.
	// +kubebuilder:validation:Optional
	global?: [...#GlobalParameters] @go(Global,[]GlobalParameters)

	// One or more http_listener blocks as defined below.
	// +kubebuilder:validation:Optional
	httpListener?: [...#HTTPListenerParameters] @go(HTTPListener,[]HTTPListenerParameters)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// One or more private_link_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	privateLinkConfiguration?: [...#PrivateLinkConfigurationParameters] @go(PrivateLinkConfiguration,[]PrivateLinkConfigurationParameters)

	// One or more probe blocks as defined below.
	// +kubebuilder:validation:Optional
	probe?: [...#ProbeParameters] @go(Probe,[]ProbeParameters)

	// One or more redirect_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	redirectConfiguration?: [...#RedirectConfigurationParameters] @go(RedirectConfiguration,[]RedirectConfigurationParameters)

	// One or more request_routing_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	requestRoutingRule?: [...#RequestRoutingRuleParameters] @go(RequestRoutingRule,[]RequestRoutingRuleParameters)

	// The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more rewrite_rule_set blocks as defined below. Only valid for v2 SKUs.
	// +kubebuilder:validation:Optional
	rewriteRuleSet?: [...#RewriteRuleSetParameters] @go(RewriteRuleSet,[]RewriteRuleSetParameters)

	// One or more ssl_certificate blocks as defined below.
	// +kubebuilder:validation:Optional
	sslCertificate?: [...#SSLCertificateParameters] @go(SSLCertificate,[]SSLCertificateParameters)

	// a ssl_policy block as defined below.
	// +kubebuilder:validation:Optional
	sslPolicy?: [...#SSLPolicyParameters] @go(SSLPolicy,[]SSLPolicyParameters)

	// One or more ssl_profile blocks as defined below.
	// +kubebuilder:validation:Optional
	sslProfile?: [...#SSLProfileParameters] @go(SSLProfile,[]SSLProfileParameters)

	// A sku block as defined below.
	// +kubebuilder:validation:Optional
	sku?: [...#SkuParameters] @go(Sku,[]SkuParameters)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more trusted_client_certificate blocks as defined below.
	// +kubebuilder:validation:Optional
	trustedClientCertificate?: [...#TrustedClientCertificateParameters] @go(TrustedClientCertificate,[]TrustedClientCertificateParameters)

	// One or more trusted_root_certificate blocks as defined below.
	// +kubebuilder:validation:Optional
	trustedRootCertificate?: [...#TrustedRootCertificateParameters] @go(TrustedRootCertificate,[]TrustedRootCertificateParameters)

	// One or more url_path_map blocks as defined below.
	// +kubebuilder:validation:Optional
	urlPathMap?: [...#URLPathMapParameters] @go(URLPathMap,[]URLPathMapParameters)

	// A waf_configuration block as defined below.
	// +kubebuilder:validation:Optional
	wafConfiguration?: [...#WafConfigurationParameters] @go(WafConfiguration,[]WafConfigurationParameters)

	// Specifies a list of Availability Zones in which this Application Gateway should be located. Changing this forces a new Application Gateway to be created.
	// +kubebuilder:validation:Optional
	zones?: [...null | string] @go(Zones,[]*string)
}

#AuthenticationCertificateInitParameters: {
	// The Name of the Authentication Certificate to use.
	name?: null | string @go(Name,*string)
}

#AuthenticationCertificateObservation: {
	// The ID of the Authentication Certificate.
	id?: null | string @go(ID,*string)

	// The Name of the Authentication Certificate to use.
	name?: null | string @go(Name,*string)
}

#AuthenticationCertificateParameters: {
	// The Name of the Authentication Certificate to use.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#AutoscaleConfigurationInitParameters: {
	// Maximum capacity for autoscaling. Accepted values are in the range 2 to 125.
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// Minimum capacity for autoscaling. Accepted values are in the range 0 to 100.
	minCapacity?: null | float64 @go(MinCapacity,*float64)
}

#AutoscaleConfigurationObservation: {
	// Maximum capacity for autoscaling. Accepted values are in the range 2 to 125.
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// Minimum capacity for autoscaling. Accepted values are in the range 0 to 100.
	minCapacity?: null | float64 @go(MinCapacity,*float64)
}

#AutoscaleConfigurationParameters: {
	// Maximum capacity for autoscaling. Accepted values are in the range 2 to 125.
	// +kubebuilder:validation:Optional
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// Minimum capacity for autoscaling. Accepted values are in the range 0 to 100.
	// +kubebuilder:validation:Optional
	minCapacity?: null | float64 @go(MinCapacity,*float64)
}

#BackendAddressPoolInitParameters: {
	// A list of FQDN's which should be part of the Backend Address Pool.
	fqdns?: [...null | string] @go(Fqdns,[]*string)

	// A list of IP Addresses which should be part of the Backend Address Pool.
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)

	// The name of the Backend Address Pool.
	name?: null | string @go(Name,*string)
}

#BackendAddressPoolObservation: {
	// A list of FQDN's which should be part of the Backend Address Pool.
	fqdns?: [...null | string] @go(Fqdns,[]*string)

	// The ID of the Backend Address Pool.
	id?: null | string @go(ID,*string)

	// A list of IP Addresses which should be part of the Backend Address Pool.
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)

	// The name of the Backend Address Pool.
	name?: null | string @go(Name,*string)
}

#BackendAddressPoolParameters: {
	// A list of FQDN's which should be part of the Backend Address Pool.
	// +kubebuilder:validation:Optional
	fqdns?: [...null | string] @go(Fqdns,[]*string)

	// A list of IP Addresses which should be part of the Backend Address Pool.
	// +kubebuilder:validation:Optional
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)

	// The name of the Backend Address Pool.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#BackendHTTPSettingsAuthenticationCertificateInitParameters: {
	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)
}

#BackendHTTPSettingsAuthenticationCertificateObservation: {
	// The ID of the URL Path Map.
	id?: null | string @go(ID,*string)

	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)
}

#BackendHTTPSettingsAuthenticationCertificateParameters: {
	// The Name of the URL Path Map.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#BackendHTTPSettingsInitParameters: {
	// The name of the affinity cookie.
	affinityCookieName?: null | string @go(AffinityCookieName,*string)

	// One or more authentication_certificate blocks as defined below.
	authenticationCertificate?: [...#BackendHTTPSettingsAuthenticationCertificateInitParameters] @go(AuthenticationCertificate,[]BackendHTTPSettingsAuthenticationCertificateInitParameters)

	// A connection_draining block as defined below.
	connectionDraining?: [...#ConnectionDrainingInitParameters] @go(ConnectionDraining,[]ConnectionDrainingInitParameters)

	// Is Cookie-Based Affinity enabled? Possible values are Enabled and Disabled.
	cookieBasedAffinity?: null | string @go(CookieBasedAffinity,*string)

	// Host header to be sent to the backend servers. Cannot be set if pick_host_name_from_backend_address is set to true.
	hostName?: null | string @go(HostName,*string)

	// The name of the Backend HTTP Settings Collection.
	name?: null | string @go(Name,*string)

	// The Path which should be used as a prefix for all HTTP requests.
	path?: null | string @go(Path,*string)

	// Whether host header should be picked from the host name of the backend server. Defaults to false.
	pickHostNameFromBackendAddress?: null | bool @go(PickHostNameFromBackendAddress,*bool)

	// The port which should be used for this Backend HTTP Settings Collection.
	port?: null | float64 @go(Port,*float64)

	// The name of an associated HTTP Probe.
	probeName?: null | string @go(ProbeName,*string)

	// The Protocol which should be used. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// The request timeout in seconds, which must be between 1 and 86400 seconds. Defaults to 30.
	requestTimeout?: null | float64 @go(RequestTimeout,*float64)

	// A list of trusted_root_certificate names.
	trustedRootCertificateNames?: [...null | string] @go(TrustedRootCertificateNames,[]*string)
}

#BackendHTTPSettingsObservation: {
	// The name of the affinity cookie.
	affinityCookieName?: null | string @go(AffinityCookieName,*string)

	// One or more authentication_certificate blocks as defined below.
	authenticationCertificate?: [...#BackendHTTPSettingsAuthenticationCertificateObservation] @go(AuthenticationCertificate,[]BackendHTTPSettingsAuthenticationCertificateObservation)

	// A connection_draining block as defined below.
	connectionDraining?: [...#ConnectionDrainingObservation] @go(ConnectionDraining,[]ConnectionDrainingObservation)

	// Is Cookie-Based Affinity enabled? Possible values are Enabled and Disabled.
	cookieBasedAffinity?: null | string @go(CookieBasedAffinity,*string)

	// Host header to be sent to the backend servers. Cannot be set if pick_host_name_from_backend_address is set to true.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Backend HTTP Settings Configuration.
	id?: null | string @go(ID,*string)

	// The name of the Backend HTTP Settings Collection.
	name?: null | string @go(Name,*string)

	// The Path which should be used as a prefix for all HTTP requests.
	path?: null | string @go(Path,*string)

	// Whether host header should be picked from the host name of the backend server. Defaults to false.
	pickHostNameFromBackendAddress?: null | bool @go(PickHostNameFromBackendAddress,*bool)

	// The port which should be used for this Backend HTTP Settings Collection.
	port?: null | float64 @go(Port,*float64)

	// The ID of the associated Probe.
	probeId?: null | string @go(ProbeID,*string)

	// The name of an associated HTTP Probe.
	probeName?: null | string @go(ProbeName,*string)

	// The Protocol which should be used. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// The request timeout in seconds, which must be between 1 and 86400 seconds. Defaults to 30.
	requestTimeout?: null | float64 @go(RequestTimeout,*float64)

	// A list of trusted_root_certificate names.
	trustedRootCertificateNames?: [...null | string] @go(TrustedRootCertificateNames,[]*string)
}

#BackendHTTPSettingsParameters: {
	// The name of the affinity cookie.
	// +kubebuilder:validation:Optional
	affinityCookieName?: null | string @go(AffinityCookieName,*string)

	// One or more authentication_certificate blocks as defined below.
	// +kubebuilder:validation:Optional
	authenticationCertificate?: [...#BackendHTTPSettingsAuthenticationCertificateParameters] @go(AuthenticationCertificate,[]BackendHTTPSettingsAuthenticationCertificateParameters)

	// A connection_draining block as defined below.
	// +kubebuilder:validation:Optional
	connectionDraining?: [...#ConnectionDrainingParameters] @go(ConnectionDraining,[]ConnectionDrainingParameters)

	// Is Cookie-Based Affinity enabled? Possible values are Enabled and Disabled.
	// +kubebuilder:validation:Optional
	cookieBasedAffinity?: null | string @go(CookieBasedAffinity,*string)

	// Host header to be sent to the backend servers. Cannot be set if pick_host_name_from_backend_address is set to true.
	// +kubebuilder:validation:Optional
	hostName?: null | string @go(HostName,*string)

	// The name of the Backend HTTP Settings Collection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Path which should be used as a prefix for all HTTP requests.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Whether host header should be picked from the host name of the backend server. Defaults to false.
	// +kubebuilder:validation:Optional
	pickHostNameFromBackendAddress?: null | bool @go(PickHostNameFromBackendAddress,*bool)

	// The port which should be used for this Backend HTTP Settings Collection.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// The name of an associated HTTP Probe.
	// +kubebuilder:validation:Optional
	probeName?: null | string @go(ProbeName,*string)

	// The Protocol which should be used. Possible values are Http and Https.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// The request timeout in seconds, which must be between 1 and 86400 seconds. Defaults to 30.
	// +kubebuilder:validation:Optional
	requestTimeout?: null | float64 @go(RequestTimeout,*float64)

	// A list of trusted_root_certificate names.
	// +kubebuilder:validation:Optional
	trustedRootCertificateNames?: [...null | string] @go(TrustedRootCertificateNames,[]*string)
}

#ConditionInitParameters: {
	// Perform a case in-sensitive comparison. Defaults to false
	ignoreCase?: null | bool @go(IgnoreCase,*bool)

	// Negate the result of the condition evaluation. Defaults to false
	negate?: null | bool @go(Negate,*bool)

	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	pattern?: null | string @go(Pattern,*string)

	// The variable of the condition.
	variable?: null | string @go(Variable,*string)
}

#ConditionObservation: {
	// Perform a case in-sensitive comparison. Defaults to false
	ignoreCase?: null | bool @go(IgnoreCase,*bool)

	// Negate the result of the condition evaluation. Defaults to false
	negate?: null | bool @go(Negate,*bool)

	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	pattern?: null | string @go(Pattern,*string)

	// The variable of the condition.
	variable?: null | string @go(Variable,*string)
}

#ConditionParameters: {
	// Perform a case in-sensitive comparison. Defaults to false
	// +kubebuilder:validation:Optional
	ignoreCase?: null | bool @go(IgnoreCase,*bool)

	// Negate the result of the condition evaluation. Defaults to false
	// +kubebuilder:validation:Optional
	negate?: null | bool @go(Negate,*bool)

	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	// +kubebuilder:validation:Optional
	pattern?: null | string @go(Pattern,*string)

	// The variable of the condition.
	// +kubebuilder:validation:Optional
	variable?: null | string @go(Variable,*string)
}

#ConnectionDrainingInitParameters: {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	drainTimeoutSec?: null | float64 @go(DrainTimeoutSec,*float64)

	// Is the Web Application Firewall enabled?
	enabled?: null | bool @go(Enabled,*bool)
}

#ConnectionDrainingObservation: {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	drainTimeoutSec?: null | float64 @go(DrainTimeoutSec,*float64)

	// Is the Web Application Firewall enabled?
	enabled?: null | bool @go(Enabled,*bool)
}

#ConnectionDrainingParameters: {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	// +kubebuilder:validation:Optional
	drainTimeoutSec?: null | float64 @go(DrainTimeoutSec,*float64)

	// Is the Web Application Firewall enabled?
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)
}

#CustomErrorConfigurationInitParameters: {
	// Error page URL of the application gateway customer error.
	customErrorPageUrl?: null | string @go(CustomErrorPageURL,*string)

	// Status code of the application gateway customer error. Possible values are HttpStatus403 and HttpStatus502
	statusCode?: null | string @go(StatusCode,*string)
}

#CustomErrorConfigurationObservation: {
	// Error page URL of the application gateway customer error.
	customErrorPageUrl?: null | string @go(CustomErrorPageURL,*string)

	// The ID of the Custom Error Configuration.
	id?: null | string @go(ID,*string)

	// Status code of the application gateway customer error. Possible values are HttpStatus403 and HttpStatus502
	statusCode?: null | string @go(StatusCode,*string)
}

#CustomErrorConfigurationParameters: {
	// Error page URL of the application gateway customer error.
	// +kubebuilder:validation:Optional
	customErrorPageUrl?: null | string @go(CustomErrorPageURL,*string)

	// Status code of the application gateway customer error. Possible values are HttpStatus403 and HttpStatus502
	// +kubebuilder:validation:Optional
	statusCode?: null | string @go(StatusCode,*string)
}

#DisabledRuleGroupInitParameters: {
	// The rule group where specific rules should be disabled. Possible values are BadBots, crs_20_protocol_violations, crs_21_protocol_anomalies, crs_23_request_limits, crs_30_http_policy, crs_35_bad_robots, crs_40_generic_attacks, crs_41_sql_injection_attacks, crs_41_xss_attacks, crs_42_tight_security, crs_45_trojans, General, GoodBots, Known-CVEs, REQUEST-911-METHOD-ENFORCEMENT, REQUEST-913-SCANNER-DETECTION, REQUEST-920-PROTOCOL-ENFORCEMENT, REQUEST-921-PROTOCOL-ATTACK, REQUEST-930-APPLICATION-ATTACK-LFI, REQUEST-931-APPLICATION-ATTACK-RFI, REQUEST-932-APPLICATION-ATTACK-RCE, REQUEST-933-APPLICATION-ATTACK-PHP, REQUEST-941-APPLICATION-ATTACK-XSS, REQUEST-942-APPLICATION-ATTACK-SQLI, REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION, REQUEST-944-APPLICATION-ATTACK-JAVA and UnknownBots.
	ruleGroupName?: null | string @go(RuleGroupName,*string)

	// A list of rules which should be disabled in that group. Disables all rules in the specified group if rules is not specified.
	rules?: [...null | float64] @go(Rules,[]*float64)
}

#DisabledRuleGroupObservation: {
	// The rule group where specific rules should be disabled. Possible values are BadBots, crs_20_protocol_violations, crs_21_protocol_anomalies, crs_23_request_limits, crs_30_http_policy, crs_35_bad_robots, crs_40_generic_attacks, crs_41_sql_injection_attacks, crs_41_xss_attacks, crs_42_tight_security, crs_45_trojans, General, GoodBots, Known-CVEs, REQUEST-911-METHOD-ENFORCEMENT, REQUEST-913-SCANNER-DETECTION, REQUEST-920-PROTOCOL-ENFORCEMENT, REQUEST-921-PROTOCOL-ATTACK, REQUEST-930-APPLICATION-ATTACK-LFI, REQUEST-931-APPLICATION-ATTACK-RFI, REQUEST-932-APPLICATION-ATTACK-RCE, REQUEST-933-APPLICATION-ATTACK-PHP, REQUEST-941-APPLICATION-ATTACK-XSS, REQUEST-942-APPLICATION-ATTACK-SQLI, REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION, REQUEST-944-APPLICATION-ATTACK-JAVA and UnknownBots.
	ruleGroupName?: null | string @go(RuleGroupName,*string)

	// A list of rules which should be disabled in that group. Disables all rules in the specified group if rules is not specified.
	rules?: [...null | float64] @go(Rules,[]*float64)
}

#DisabledRuleGroupParameters: {
	// The rule group where specific rules should be disabled. Possible values are BadBots, crs_20_protocol_violations, crs_21_protocol_anomalies, crs_23_request_limits, crs_30_http_policy, crs_35_bad_robots, crs_40_generic_attacks, crs_41_sql_injection_attacks, crs_41_xss_attacks, crs_42_tight_security, crs_45_trojans, General, GoodBots, Known-CVEs, REQUEST-911-METHOD-ENFORCEMENT, REQUEST-913-SCANNER-DETECTION, REQUEST-920-PROTOCOL-ENFORCEMENT, REQUEST-921-PROTOCOL-ATTACK, REQUEST-930-APPLICATION-ATTACK-LFI, REQUEST-931-APPLICATION-ATTACK-RFI, REQUEST-932-APPLICATION-ATTACK-RCE, REQUEST-933-APPLICATION-ATTACK-PHP, REQUEST-941-APPLICATION-ATTACK-XSS, REQUEST-942-APPLICATION-ATTACK-SQLI, REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION, REQUEST-944-APPLICATION-ATTACK-JAVA and UnknownBots.
	// +kubebuilder:validation:Optional
	ruleGroupName?: null | string @go(RuleGroupName,*string)

	// A list of rules which should be disabled in that group. Disables all rules in the specified group if rules is not specified.
	// +kubebuilder:validation:Optional
	rules?: [...null | float64] @go(Rules,[]*float64)
}

#ExclusionInitParameters: {
	// Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are RequestArgKeys, RequestArgNames, RequestArgValues, RequestCookieKeys, RequestCookieNames, RequestCookieValues, RequestHeaderKeys, RequestHeaderNames and RequestHeaderValues
	matchVariable?: null | string @go(MatchVariable,*string)

	// String value which will be used for the filter operation. If empty will exclude all traffic on this match_variable
	selector?: null | string @go(Selector,*string)

	// Operator which will be used to search in the variable content. Possible values are Contains, EndsWith, Equals, EqualsAny and StartsWith. If empty will exclude all traffic on this match_variable
	selectorMatchOperator?: null | string @go(SelectorMatchOperator,*string)
}

#ExclusionObservation: {
	// Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are RequestArgKeys, RequestArgNames, RequestArgValues, RequestCookieKeys, RequestCookieNames, RequestCookieValues, RequestHeaderKeys, RequestHeaderNames and RequestHeaderValues
	matchVariable?: null | string @go(MatchVariable,*string)

	// String value which will be used for the filter operation. If empty will exclude all traffic on this match_variable
	selector?: null | string @go(Selector,*string)

	// Operator which will be used to search in the variable content. Possible values are Contains, EndsWith, Equals, EqualsAny and StartsWith. If empty will exclude all traffic on this match_variable
	selectorMatchOperator?: null | string @go(SelectorMatchOperator,*string)
}

#ExclusionParameters: {
	// Match variable of the exclusion rule to exclude header, cookie or GET arguments. Possible values are RequestArgKeys, RequestArgNames, RequestArgValues, RequestCookieKeys, RequestCookieNames, RequestCookieValues, RequestHeaderKeys, RequestHeaderNames and RequestHeaderValues
	// +kubebuilder:validation:Optional
	matchVariable?: null | string @go(MatchVariable,*string)

	// String value which will be used for the filter operation. If empty will exclude all traffic on this match_variable
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)

	// Operator which will be used to search in the variable content. Possible values are Contains, EndsWith, Equals, EqualsAny and StartsWith. If empty will exclude all traffic on this match_variable
	// +kubebuilder:validation:Optional
	selectorMatchOperator?: null | string @go(SelectorMatchOperator,*string)
}

#FrontendIPConfigurationInitParameters: {
	// The name of the Frontend IP Configuration.
	name?: null | string @go(Name,*string)

	// The Private IP Address to use for the Application Gateway.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The Allocation Method for the Private IP Address. Possible values are Dynamic and Static.
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The name of the private link configuration to use for this frontend IP configuration.
	privateLinkConfigurationName?: null | string @go(PrivateLinkConfigurationName,*string)
}

#FrontendIPConfigurationObservation: {
	// The ID of the Frontend IP Configuration.
	id?: null | string @go(ID,*string)

	// The name of the Frontend IP Configuration.
	name?: null | string @go(Name,*string)

	// The Private IP Address to use for the Application Gateway.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The Allocation Method for the Private IP Address. Possible values are Dynamic and Static.
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The ID of the associated private link configuration.
	privateLinkConfigurationId?: null | string @go(PrivateLinkConfigurationID,*string)

	// The name of the private link configuration to use for this frontend IP configuration.
	privateLinkConfigurationName?: null | string @go(PrivateLinkConfigurationName,*string)

	// The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the sku of this Application Gateway. Please refer to the Azure documentation for public IP addresses for details.
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// The ID of the Subnet.
	subnetId?: null | string @go(SubnetID,*string)
}

#FrontendIPConfigurationParameters: {
	// The name of the Frontend IP Configuration.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Private IP Address to use for the Application Gateway.
	// +kubebuilder:validation:Optional
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The Allocation Method for the Private IP Address. Possible values are Dynamic and Static.
	// +kubebuilder:validation:Optional
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The name of the private link configuration to use for this frontend IP configuration.
	// +kubebuilder:validation:Optional
	privateLinkConfigurationName?: null | string @go(PrivateLinkConfigurationName,*string)

	// The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the sku of this Application Gateway. Please refer to the Azure documentation for public IP addresses for details.
	// +crossplane:generate:reference:type=PublicIP
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// The ID of the Subnet.
	// +crossplane:generate:reference:type=Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

#FrontendPortInitParameters: {
	// The name of the Frontend Port.
	name?: null | string @go(Name,*string)

	// The port used for this Frontend Port.
	port?: null | float64 @go(Port,*float64)
}

#FrontendPortObservation: {
	// The ID of the Frontend Port.
	id?: null | string @go(ID,*string)

	// The name of the Frontend Port.
	name?: null | string @go(Name,*string)

	// The port used for this Frontend Port.
	port?: null | float64 @go(Port,*float64)
}

#FrontendPortParameters: {
	// The name of the Frontend Port.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The port used for this Frontend Port.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)
}

#GatewayIPConfigurationInitParameters: {
	// The Name of this Gateway IP Configuration.
	name?: null | string @go(Name,*string)
}

#GatewayIPConfigurationObservation: {
	// The ID of the Gateway IP Configuration.
	id?: null | string @go(ID,*string)

	// The Name of this Gateway IP Configuration.
	name?: null | string @go(Name,*string)

	// The ID of the Subnet which the Application Gateway should be connected to.
	subnetId?: null | string @go(SubnetID,*string)
}

#GatewayIPConfigurationParameters: {
	// The Name of this Gateway IP Configuration.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID of the Subnet which the Application Gateway should be connected to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

#GlobalInitParameters: {
	// Whether Application Gateway's Request buffer is enabled.
	requestBufferingEnabled?: null | bool @go(RequestBufferingEnabled,*bool)

	// Whether Application Gateway's Response buffer is enabled.
	responseBufferingEnabled?: null | bool @go(ResponseBufferingEnabled,*bool)
}

#GlobalObservation: {
	// Whether Application Gateway's Request buffer is enabled.
	requestBufferingEnabled?: null | bool @go(RequestBufferingEnabled,*bool)

	// Whether Application Gateway's Response buffer is enabled.
	responseBufferingEnabled?: null | bool @go(ResponseBufferingEnabled,*bool)
}

#GlobalParameters: {
	// Whether Application Gateway's Request buffer is enabled.
	// +kubebuilder:validation:Optional
	requestBufferingEnabled?: null | bool @go(RequestBufferingEnabled,*bool)

	// Whether Application Gateway's Response buffer is enabled.
	// +kubebuilder:validation:Optional
	responseBufferingEnabled?: null | bool @go(ResponseBufferingEnabled,*bool)
}

#HTTPListenerCustomErrorConfigurationInitParameters: {
	// Error page URL of the application gateway customer error.
	customErrorPageUrl?: null | string @go(CustomErrorPageURL,*string)

	// A list of allowed status codes for this Health Probe.
	statusCode?: null | string @go(StatusCode,*string)
}

#HTTPListenerCustomErrorConfigurationObservation: {
	// Error page URL of the application gateway customer error.
	customErrorPageUrl?: null | string @go(CustomErrorPageURL,*string)

	// The ID of the URL Path Map.
	id?: null | string @go(ID,*string)

	// A list of allowed status codes for this Health Probe.
	statusCode?: null | string @go(StatusCode,*string)
}

#HTTPListenerCustomErrorConfigurationParameters: {
	// Error page URL of the application gateway customer error.
	// +kubebuilder:validation:Optional
	customErrorPageUrl?: null | string @go(CustomErrorPageURL,*string)

	// A list of allowed status codes for this Health Probe.
	// +kubebuilder:validation:Optional
	statusCode?: null | string @go(StatusCode,*string)
}

#HTTPListenerInitParameters: {
	// One or more custom_error_configuration blocks as defined below.
	customErrorConfiguration?: [...#HTTPListenerCustomErrorConfigurationInitParameters] @go(CustomErrorConfiguration,[]HTTPListenerCustomErrorConfigurationInitParameters)

	// The ID of the Web Application Firewall Policy which should be used for this HTTP Listener.
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// The Name of the Frontend IP Configuration used for this HTTP Listener.
	frontendIpConfigurationName?: null | string @go(FrontendIPConfigurationName,*string)

	// The Name of the Frontend Port use for this HTTP Listener.
	frontendPortName?: null | string @go(FrontendPortName,*string)

	// The Hostname which should be used for this HTTP Listener. Setting this value changes Listener Type to 'Multi site'.
	hostName?: null | string @go(HostName,*string)

	// A list of Hostname(s) should be used for this HTTP Listener. It allows special wildcard characters.
	hostNames?: [...null | string] @go(HostNames,[]*string)

	// The Name of the HTTP Listener.
	name?: null | string @go(Name,*string)

	// The Protocol to use for this HTTP Listener. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Should Server Name Indication be Required? Defaults to false.
	requireSni?: null | bool @go(RequireSni,*bool)

	// The name of the associated SSL Certificate which should be used for this HTTP Listener.
	sslCertificateName?: null | string @go(SSLCertificateName,*string)

	// The name of the associated SSL Profile which should be used for this HTTP Listener.
	sslProfileName?: null | string @go(SSLProfileName,*string)
}

#HTTPListenerObservation: {
	// One or more custom_error_configuration blocks as defined below.
	customErrorConfiguration?: [...#HTTPListenerCustomErrorConfigurationObservation] @go(CustomErrorConfiguration,[]HTTPListenerCustomErrorConfigurationObservation)

	// The ID of the Web Application Firewall Policy which should be used for this HTTP Listener.
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// The ID of the associated Frontend Configuration.
	frontendIpConfigurationId?: null | string @go(FrontendIPConfigurationID,*string)

	// The Name of the Frontend IP Configuration used for this HTTP Listener.
	frontendIpConfigurationName?: null | string @go(FrontendIPConfigurationName,*string)

	// The ID of the associated Frontend Port.
	frontendPortId?: null | string @go(FrontendPortID,*string)

	// The Name of the Frontend Port use for this HTTP Listener.
	frontendPortName?: null | string @go(FrontendPortName,*string)

	// The Hostname which should be used for this HTTP Listener. Setting this value changes Listener Type to 'Multi site'.
	hostName?: null | string @go(HostName,*string)

	// A list of Hostname(s) should be used for this HTTP Listener. It allows special wildcard characters.
	hostNames?: [...null | string] @go(HostNames,[]*string)

	// The ID of the HTTP Listener.
	id?: null | string @go(ID,*string)

	// The Name of the HTTP Listener.
	name?: null | string @go(Name,*string)

	// The Protocol to use for this HTTP Listener. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Should Server Name Indication be Required? Defaults to false.
	requireSni?: null | bool @go(RequireSni,*bool)

	// The ID of the associated SSL Certificate.
	sslCertificateId?: null | string @go(SSLCertificateID,*string)

	// The name of the associated SSL Certificate which should be used for this HTTP Listener.
	sslCertificateName?: null | string @go(SSLCertificateName,*string)

	// The ID of the associated SSL Profile.
	sslProfileId?: null | string @go(SSLProfileID,*string)

	// The name of the associated SSL Profile which should be used for this HTTP Listener.
	sslProfileName?: null | string @go(SSLProfileName,*string)
}

#HTTPListenerParameters: {
	// One or more custom_error_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	customErrorConfiguration?: [...#HTTPListenerCustomErrorConfigurationParameters] @go(CustomErrorConfiguration,[]HTTPListenerCustomErrorConfigurationParameters)

	// The ID of the Web Application Firewall Policy which should be used for this HTTP Listener.
	// +kubebuilder:validation:Optional
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// The Name of the Frontend IP Configuration used for this HTTP Listener.
	// +kubebuilder:validation:Optional
	frontendIpConfigurationName?: null | string @go(FrontendIPConfigurationName,*string)

	// The Name of the Frontend Port use for this HTTP Listener.
	// +kubebuilder:validation:Optional
	frontendPortName?: null | string @go(FrontendPortName,*string)

	// The Hostname which should be used for this HTTP Listener. Setting this value changes Listener Type to 'Multi site'.
	// +kubebuilder:validation:Optional
	hostName?: null | string @go(HostName,*string)

	// A list of Hostname(s) should be used for this HTTP Listener. It allows special wildcard characters.
	// +kubebuilder:validation:Optional
	hostNames?: [...null | string] @go(HostNames,[]*string)

	// The Name of the HTTP Listener.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Protocol to use for this HTTP Listener. Possible values are Http and Https.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// Should Server Name Indication be Required? Defaults to false.
	// +kubebuilder:validation:Optional
	requireSni?: null | bool @go(RequireSni,*bool)

	// The name of the associated SSL Certificate which should be used for this HTTP Listener.
	// +kubebuilder:validation:Optional
	sslCertificateName?: null | string @go(SSLCertificateName,*string)

	// The name of the associated SSL Profile which should be used for this HTTP Listener.
	// +kubebuilder:validation:Optional
	sslProfileName?: null | string @go(SSLProfileName,*string)
}

#IPConfigurationInitParameters: {
	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// Is this the Primary IP Configuration?
	primary?: null | bool @go(Primary,*bool)

	// The Static IP Address which should be used.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The allocation method used for the Private IP Address. Possible values are Dynamic and Static.
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)
}

#IPConfigurationObservation: {
	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// Is this the Primary IP Configuration?
	primary?: null | bool @go(Primary,*bool)

	// The Static IP Address which should be used.
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The allocation method used for the Private IP Address. Possible values are Dynamic and Static.
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The ID of the subnet the private link configuration should connect to.
	subnetId?: null | string @go(SubnetID,*string)
}

#IPConfigurationParameters: {
	// The Name of the URL Path Map.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Is this the Primary IP Configuration?
	// +kubebuilder:validation:Optional
	primary?: null | bool @go(Primary,*bool)

	// The Static IP Address which should be used.
	// +kubebuilder:validation:Optional
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The allocation method used for the Private IP Address. Possible values are Dynamic and Static.
	// +kubebuilder:validation:Optional
	privateIpAddressAllocation?: null | string @go(PrivateIPAddressAllocation,*string)

	// The ID of the subnet the private link configuration should connect to.
	// +crossplane:generate:reference:type=Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

#IdentityInitParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Application Gateway.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Application Gateway. Only possible value is UserAssigned.
	type?: null | string @go(Type,*string)
}

#IdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Application Gateway.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Application Gateway. Only possible value is UserAssigned.
	type?: null | string @go(Type,*string)
}

#IdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Application Gateway.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Application Gateway. Only possible value is UserAssigned.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#MatchInitParameters: {
	// A snippet from the Response Body which must be present in the Response.
	body?: null | string @go(Body,*string)

	// A list of allowed status codes for this Health Probe.
	statusCode?: [...null | string] @go(StatusCode,[]*string)
}

#MatchObservation: {
	// A snippet from the Response Body which must be present in the Response.
	body?: null | string @go(Body,*string)

	// A list of allowed status codes for this Health Probe.
	statusCode?: [...null | string] @go(StatusCode,[]*string)
}

#MatchParameters: {
	// A snippet from the Response Body which must be present in the Response.
	// +kubebuilder:validation:Optional
	body?: null | string @go(Body,*string)

	// A list of allowed status codes for this Health Probe.
	// +kubebuilder:validation:Optional
	statusCode?: [...null | string] @go(StatusCode,[]*string)
}

#PathRuleInitParameters: {
	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendAddressPoolName?: null | string @go(BackendAddressPoolName,*string)

	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendHttpSettingsName?: null | string @go(BackendHTTPSettingsName,*string)

	// The ID of the Web Application Firewall Policy which should be used as a HTTP Listener.
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// A list of Paths used in this Path Rule.
	paths?: [...null | string] @go(Paths,[]*string)

	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either backend_address_pool_name or backend_http_settings_name is set.
	redirectConfigurationName?: null | string @go(RedirectConfigurationName,*string)

	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	rewriteRuleSetName?: null | string @go(RewriteRuleSetName,*string)
}

#PathRuleObservation: {
	// The ID of the associated Backend Address Pool.
	backendAddressPoolId?: null | string @go(BackendAddressPoolID,*string)

	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendAddressPoolName?: null | string @go(BackendAddressPoolName,*string)

	// The ID of the associated Backend HTTP Settings Configuration.
	backendHttpSettingsId?: null | string @go(BackendHTTPSettingsID,*string)

	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendHttpSettingsName?: null | string @go(BackendHTTPSettingsName,*string)

	// The ID of the Web Application Firewall Policy which should be used as a HTTP Listener.
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// The ID of the URL Path Map.
	id?: null | string @go(ID,*string)

	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// A list of Paths used in this Path Rule.
	paths?: [...null | string] @go(Paths,[]*string)

	// The ID of the associated Redirect Configuration.
	redirectConfigurationId?: null | string @go(RedirectConfigurationID,*string)

	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either backend_address_pool_name or backend_http_settings_name is set.
	redirectConfigurationName?: null | string @go(RedirectConfigurationName,*string)

	// The ID of the associated Rewrite Rule Set.
	rewriteRuleSetId?: null | string @go(RewriteRuleSetID,*string)

	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	rewriteRuleSetName?: null | string @go(RewriteRuleSetName,*string)
}

#PathRuleParameters: {
	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	// +kubebuilder:validation:Optional
	backendAddressPoolName?: null | string @go(BackendAddressPoolName,*string)

	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	// +kubebuilder:validation:Optional
	backendHttpSettingsName?: null | string @go(BackendHTTPSettingsName,*string)

	// The ID of the Web Application Firewall Policy which should be used as a HTTP Listener.
	// +kubebuilder:validation:Optional
	firewallPolicyId?: null | string @go(FirewallPolicyID,*string)

	// The Name of the URL Path Map.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A list of Paths used in this Path Rule.
	// +kubebuilder:validation:Optional
	paths?: [...null | string] @go(Paths,[]*string)

	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either backend_address_pool_name or backend_http_settings_name is set.
	// +kubebuilder:validation:Optional
	redirectConfigurationName?: null | string @go(RedirectConfigurationName,*string)

	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	// +kubebuilder:validation:Optional
	rewriteRuleSetName?: null | string @go(RewriteRuleSetName,*string)
}

#PrivateEndpointConnectionInitParameters: {
}

#PrivateEndpointConnectionObservation: {
	// The ID of the private endpoint connection.
	id?: null | string @go(ID,*string)

	// The name of the private endpoint connection.
	name?: null | string @go(Name,*string)
}

#PrivateEndpointConnectionParameters: {
}

#PrivateLinkConfigurationInitParameters: {
	// One or more ip_configuration blocks as defined below.
	ipConfiguration?: [...#IPConfigurationInitParameters] @go(IPConfiguration,[]IPConfigurationInitParameters)

	// The name of the private link configuration.
	name?: null | string @go(Name,*string)
}

#PrivateLinkConfigurationObservation: {
	// The ID of the private link configuration.
	id?: null | string @go(ID,*string)

	// One or more ip_configuration blocks as defined below.
	ipConfiguration?: [...#IPConfigurationObservation] @go(IPConfiguration,[]IPConfigurationObservation)

	// The name of the private link configuration.
	name?: null | string @go(Name,*string)
}

#PrivateLinkConfigurationParameters: {
	// One or more ip_configuration blocks as defined below.
	// +kubebuilder:validation:Optional
	ipConfiguration?: [...#IPConfigurationParameters] @go(IPConfiguration,[]IPConfigurationParameters)

	// The name of the private link configuration.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#ProbeInitParameters: {
	// The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as 127.0.0.1, unless otherwise configured in custom probe. Cannot be set if pick_host_name_from_backend_http_settings is set to true.
	host?: null | string @go(Host,*string)

	// The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds.
	interval?: null | float64 @go(Interval,*float64)

	// A match block as defined above.
	match?: [...#MatchInitParameters] @go(Match,[]MatchInitParameters)

	// The minimum number of servers that are always marked as healthy. Defaults to 0.
	minimumServers?: null | float64 @go(MinimumServers,*float64)

	// The Name of the Probe.
	name?: null | string @go(Name,*string)

	// The Path used for this Probe.
	path?: null | string @go(Path,*string)

	// Whether the host header should be picked from the backend HTTP settings. Defaults to false.
	pickHostNameFromBackendHttpSettings?: null | bool @go(PickHostNameFromBackendHTTPSettings,*bool)

	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from HTTP settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	port?: null | float64 @go(Port,*float64)

	// The Protocol used for this Probe. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds.
	timeout?: null | float64 @go(Timeout,*float64)

	// The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 to 20.
	unhealthyThreshold?: null | float64 @go(UnhealthyThreshold,*float64)
}

#ProbeObservation: {
	// The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as 127.0.0.1, unless otherwise configured in custom probe. Cannot be set if pick_host_name_from_backend_http_settings is set to true.
	host?: null | string @go(Host,*string)

	// The ID of the Probe.
	id?: null | string @go(ID,*string)

	// The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds.
	interval?: null | float64 @go(Interval,*float64)

	// A match block as defined above.
	match?: [...#MatchObservation] @go(Match,[]MatchObservation)

	// The minimum number of servers that are always marked as healthy. Defaults to 0.
	minimumServers?: null | float64 @go(MinimumServers,*float64)

	// The Name of the Probe.
	name?: null | string @go(Name,*string)

	// The Path used for this Probe.
	path?: null | string @go(Path,*string)

	// Whether the host header should be picked from the backend HTTP settings. Defaults to false.
	pickHostNameFromBackendHttpSettings?: null | bool @go(PickHostNameFromBackendHTTPSettings,*bool)

	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from HTTP settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	port?: null | float64 @go(Port,*float64)

	// The Protocol used for this Probe. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds.
	timeout?: null | float64 @go(Timeout,*float64)

	// The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 to 20.
	unhealthyThreshold?: null | float64 @go(UnhealthyThreshold,*float64)
}

#ProbeParameters: {
	// The Hostname used for this Probe. If the Application Gateway is configured for a single site, by default the Host name should be specified as 127.0.0.1, unless otherwise configured in custom probe. Cannot be set if pick_host_name_from_backend_http_settings is set to true.
	// +kubebuilder:validation:Optional
	host?: null | string @go(Host,*string)

	// The Interval between two consecutive probes in seconds. Possible values range from 1 second to a maximum of 86,400 seconds.
	// +kubebuilder:validation:Optional
	interval?: null | float64 @go(Interval,*float64)

	// A match block as defined above.
	// +kubebuilder:validation:Optional
	match?: [...#MatchParameters] @go(Match,[]MatchParameters)

	// The minimum number of servers that are always marked as healthy. Defaults to 0.
	// +kubebuilder:validation:Optional
	minimumServers?: null | float64 @go(MinimumServers,*float64)

	// The Name of the Probe.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Path used for this Probe.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Whether the host header should be picked from the backend HTTP settings. Defaults to false.
	// +kubebuilder:validation:Optional
	pickHostNameFromBackendHttpSettings?: null | bool @go(PickHostNameFromBackendHTTPSettings,*bool)

	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from HTTP settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// The Protocol used for this Probe. Possible values are Http and Https.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// The Timeout used for this Probe, which indicates when a probe becomes unhealthy. Possible values range from 1 second to a maximum of 86,400 seconds.
	// +kubebuilder:validation:Optional
	timeout?: null | float64 @go(Timeout,*float64)

	// The Unhealthy Threshold for this Probe, which indicates the amount of retries which should be attempted before a node is deemed unhealthy. Possible values are from 1 to 20.
	// +kubebuilder:validation:Optional
	unhealthyThreshold?: null | float64 @go(UnhealthyThreshold,*float64)
}

#RedirectConfigurationInitParameters: {
	// Whether or not to include the path in the redirected Url. Defaults to false
	includePath?: null | bool @go(IncludePath,*bool)

	// Whether or not to include the query string in the redirected Url. Default to false
	includeQueryString?: null | bool @go(IncludeQueryString,*bool)

	// Unique name of the redirect configuration block
	name?: null | string @go(Name,*string)

	// The type of redirect. Possible values are Permanent, Temporary, Found and SeeOther
	redirectType?: null | string @go(RedirectType,*string)

	// The name of the listener to redirect to. Cannot be set if target_url is set.
	targetListenerName?: null | string @go(TargetListenerName,*string)

	// The Url to redirect the request to. Cannot be set if target_listener_name is set.
	targetUrl?: null | string @go(TargetURL,*string)
}

#RedirectConfigurationObservation: {
	// The ID of the Redirect Configuration.
	id?: null | string @go(ID,*string)

	// Whether or not to include the path in the redirected Url. Defaults to false
	includePath?: null | bool @go(IncludePath,*bool)

	// Whether or not to include the query string in the redirected Url. Default to false
	includeQueryString?: null | bool @go(IncludeQueryString,*bool)

	// Unique name of the redirect configuration block
	name?: null | string @go(Name,*string)

	// The type of redirect. Possible values are Permanent, Temporary, Found and SeeOther
	redirectType?: null | string @go(RedirectType,*string)

	// The ID of the Application Gateway.
	targetListenerId?: null | string @go(TargetListenerID,*string)

	// The name of the listener to redirect to. Cannot be set if target_url is set.
	targetListenerName?: null | string @go(TargetListenerName,*string)

	// The Url to redirect the request to. Cannot be set if target_listener_name is set.
	targetUrl?: null | string @go(TargetURL,*string)
}

#RedirectConfigurationParameters: {
	// Whether or not to include the path in the redirected Url. Defaults to false
	// +kubebuilder:validation:Optional
	includePath?: null | bool @go(IncludePath,*bool)

	// Whether or not to include the query string in the redirected Url. Default to false
	// +kubebuilder:validation:Optional
	includeQueryString?: null | bool @go(IncludeQueryString,*bool)

	// Unique name of the redirect configuration block
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The type of redirect. Possible values are Permanent, Temporary, Found and SeeOther
	// +kubebuilder:validation:Optional
	redirectType?: null | string @go(RedirectType,*string)

	// The name of the listener to redirect to. Cannot be set if target_url is set.
	// +kubebuilder:validation:Optional
	targetListenerName?: null | string @go(TargetListenerName,*string)

	// The Url to redirect the request to. Cannot be set if target_listener_name is set.
	// +kubebuilder:validation:Optional
	targetUrl?: null | string @go(TargetURL,*string)
}

#RequestHeaderConfigurationInitParameters: {
	// Header name of the header configuration.
	headerName?: null | string @go(HeaderName,*string)

	// Header value of the header configuration. To delete a response header set this property to an empty string.
	headerValue?: null | string @go(HeaderValue,*string)
}

#RequestHeaderConfigurationObservation: {
	// Header name of the header configuration.
	headerName?: null | string @go(HeaderName,*string)

	// Header value of the header configuration. To delete a response header set this property to an empty string.
	headerValue?: null | string @go(HeaderValue,*string)
}

#RequestHeaderConfigurationParameters: {
	// Header name of the header configuration.
	// +kubebuilder:validation:Optional
	headerName?: null | string @go(HeaderName,*string)

	// Header value of the header configuration. To delete a response header set this property to an empty string.
	// +kubebuilder:validation:Optional
	headerValue?: null | string @go(HeaderValue,*string)
}

#RequestRoutingRuleInitParameters: {
	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendAddressPoolName?: null | string @go(BackendAddressPoolName,*string)

	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendHttpSettingsName?: null | string @go(BackendHTTPSettingsName,*string)

	// The Name of the HTTP Listener which should be used for this Routing Rule.
	httpListenerName?: null | string @go(HTTPListenerName,*string)

	// The Name of this Request Routing Rule.
	name?: null | string @go(Name,*string)

	// Rule evaluation order can be dictated by specifying an integer value from 1 to 20000 with 1 being the highest priority and 20000 being the lowest priority.
	priority?: null | float64 @go(Priority,*float64)

	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either backend_address_pool_name or backend_http_settings_name is set.
	redirectConfigurationName?: null | string @go(RedirectConfigurationName,*string)

	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	rewriteRuleSetName?: null | string @go(RewriteRuleSetName,*string)

	// The Type of Routing that should be used for this Rule. Possible values are Basic and PathBasedRouting.
	ruleType?: null | string @go(RuleType,*string)

	// The Name of the URL Path Map which should be associated with this Routing Rule.
	urlPathMapName?: null | string @go(URLPathMapName,*string)
}

#RequestRoutingRuleObservation: {
	// The ID of the associated Backend Address Pool.
	backendAddressPoolId?: null | string @go(BackendAddressPoolID,*string)

	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendAddressPoolName?: null | string @go(BackendAddressPoolName,*string)

	// The ID of the associated Backend HTTP Settings Configuration.
	backendHttpSettingsId?: null | string @go(BackendHTTPSettingsID,*string)

	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	backendHttpSettingsName?: null | string @go(BackendHTTPSettingsName,*string)

	// The ID of the associated HTTP Listener.
	httpListenerId?: null | string @go(HTTPListenerID,*string)

	// The Name of the HTTP Listener which should be used for this Routing Rule.
	httpListenerName?: null | string @go(HTTPListenerName,*string)

	// The ID of the Request Routing Rule.
	id?: null | string @go(ID,*string)

	// The Name of this Request Routing Rule.
	name?: null | string @go(Name,*string)

	// Rule evaluation order can be dictated by specifying an integer value from 1 to 20000 with 1 being the highest priority and 20000 being the lowest priority.
	priority?: null | float64 @go(Priority,*float64)

	// The ID of the associated Redirect Configuration.
	redirectConfigurationId?: null | string @go(RedirectConfigurationID,*string)

	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either backend_address_pool_name or backend_http_settings_name is set.
	redirectConfigurationName?: null | string @go(RedirectConfigurationName,*string)

	// The ID of the associated Rewrite Rule Set.
	rewriteRuleSetId?: null | string @go(RewriteRuleSetID,*string)

	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	rewriteRuleSetName?: null | string @go(RewriteRuleSetName,*string)

	// The Type of Routing that should be used for this Rule. Possible values are Basic and PathBasedRouting.
	ruleType?: null | string @go(RuleType,*string)

	// The ID of the associated URL Path Map.
	urlPathMapId?: null | string @go(URLPathMapID,*string)

	// The Name of the URL Path Map which should be associated with this Routing Rule.
	urlPathMapName?: null | string @go(URLPathMapName,*string)
}

#RequestRoutingRuleParameters: {
	// The Name of the Backend Address Pool which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	// +kubebuilder:validation:Optional
	backendAddressPoolName?: null | string @go(BackendAddressPoolName,*string)

	// The Name of the Backend HTTP Settings Collection which should be used for this Routing Rule. Cannot be set if redirect_configuration_name is set.
	// +kubebuilder:validation:Optional
	backendHttpSettingsName?: null | string @go(BackendHTTPSettingsName,*string)

	// The Name of the HTTP Listener which should be used for this Routing Rule.
	// +kubebuilder:validation:Optional
	httpListenerName?: null | string @go(HTTPListenerName,*string)

	// The Name of this Request Routing Rule.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Rule evaluation order can be dictated by specifying an integer value from 1 to 20000 with 1 being the highest priority and 20000 being the lowest priority.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// The Name of the Redirect Configuration which should be used for this Routing Rule. Cannot be set if either backend_address_pool_name or backend_http_settings_name is set.
	// +kubebuilder:validation:Optional
	redirectConfigurationName?: null | string @go(RedirectConfigurationName,*string)

	// The Name of the Rewrite Rule Set which should be used for this Routing Rule. Only valid for v2 SKUs.
	// +kubebuilder:validation:Optional
	rewriteRuleSetName?: null | string @go(RewriteRuleSetName,*string)

	// The Type of Routing that should be used for this Rule. Possible values are Basic and PathBasedRouting.
	// +kubebuilder:validation:Optional
	ruleType?: null | string @go(RuleType,*string)

	// The Name of the URL Path Map which should be associated with this Routing Rule.
	// +kubebuilder:validation:Optional
	urlPathMapName?: null | string @go(URLPathMapName,*string)
}

#ResponseHeaderConfigurationInitParameters: {
	// Header name of the header configuration.
	headerName?: null | string @go(HeaderName,*string)

	// Header value of the header configuration. To delete a response header set this property to an empty string.
	headerValue?: null | string @go(HeaderValue,*string)
}

#ResponseHeaderConfigurationObservation: {
	// Header name of the header configuration.
	headerName?: null | string @go(HeaderName,*string)

	// Header value of the header configuration. To delete a response header set this property to an empty string.
	headerValue?: null | string @go(HeaderValue,*string)
}

#ResponseHeaderConfigurationParameters: {
	// Header name of the header configuration.
	// +kubebuilder:validation:Optional
	headerName?: null | string @go(HeaderName,*string)

	// Header value of the header configuration. To delete a response header set this property to an empty string.
	// +kubebuilder:validation:Optional
	headerValue?: null | string @go(HeaderValue,*string)
}

#RewriteRuleInitParameters: {
	// One or more condition blocks as defined above.
	condition?: [...#ConditionInitParameters] @go(Condition,[]ConditionInitParameters)

	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// One or more request_header_configuration blocks as defined above.
	requestHeaderConfiguration?: [...#RequestHeaderConfigurationInitParameters] @go(RequestHeaderConfiguration,[]RequestHeaderConfigurationInitParameters)

	// One or more response_header_configuration blocks as defined above.
	responseHeaderConfiguration?: [...#ResponseHeaderConfigurationInitParameters] @go(ResponseHeaderConfiguration,[]ResponseHeaderConfigurationInitParameters)

	// Rule sequence of the rewrite rule that determines the order of execution in a set.
	ruleSequence?: null | float64 @go(RuleSequence,*float64)

	// One url block as defined below
	url?: [...#URLInitParameters] @go(URL,[]URLInitParameters)
}

#RewriteRuleObservation: {
	// One or more condition blocks as defined above.
	condition?: [...#ConditionObservation] @go(Condition,[]ConditionObservation)

	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// One or more request_header_configuration blocks as defined above.
	requestHeaderConfiguration?: [...#RequestHeaderConfigurationObservation] @go(RequestHeaderConfiguration,[]RequestHeaderConfigurationObservation)

	// One or more response_header_configuration blocks as defined above.
	responseHeaderConfiguration?: [...#ResponseHeaderConfigurationObservation] @go(ResponseHeaderConfiguration,[]ResponseHeaderConfigurationObservation)

	// Rule sequence of the rewrite rule that determines the order of execution in a set.
	ruleSequence?: null | float64 @go(RuleSequence,*float64)

	// One url block as defined below
	url?: [...#URLObservation] @go(URL,[]URLObservation)
}

#RewriteRuleParameters: {
	// One or more condition blocks as defined above.
	// +kubebuilder:validation:Optional
	condition?: [...#ConditionParameters] @go(Condition,[]ConditionParameters)

	// The Name of the URL Path Map.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// One or more request_header_configuration blocks as defined above.
	// +kubebuilder:validation:Optional
	requestHeaderConfiguration?: [...#RequestHeaderConfigurationParameters] @go(RequestHeaderConfiguration,[]RequestHeaderConfigurationParameters)

	// One or more response_header_configuration blocks as defined above.
	// +kubebuilder:validation:Optional
	responseHeaderConfiguration?: [...#ResponseHeaderConfigurationParameters] @go(ResponseHeaderConfiguration,[]ResponseHeaderConfigurationParameters)

	// Rule sequence of the rewrite rule that determines the order of execution in a set.
	// +kubebuilder:validation:Optional
	ruleSequence?: null | float64 @go(RuleSequence,*float64)

	// One url block as defined below
	// +kubebuilder:validation:Optional
	url?: [...#URLParameters] @go(URL,[]URLParameters)
}

#RewriteRuleSetInitParameters: {
	// Unique name of the rewrite rule set block
	name?: null | string @go(Name,*string)

	// One or more rewrite_rule blocks as defined above.
	rewriteRule?: [...#RewriteRuleInitParameters] @go(RewriteRule,[]RewriteRuleInitParameters)
}

#RewriteRuleSetObservation: {
	// The ID of the Rewrite Rule Set
	id?: null | string @go(ID,*string)

	// Unique name of the rewrite rule set block
	name?: null | string @go(Name,*string)

	// One or more rewrite_rule blocks as defined above.
	rewriteRule?: [...#RewriteRuleObservation] @go(RewriteRule,[]RewriteRuleObservation)
}

#RewriteRuleSetParameters: {
	// Unique name of the rewrite rule set block
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// One or more rewrite_rule blocks as defined above.
	// +kubebuilder:validation:Optional
	rewriteRule?: [...#RewriteRuleParameters] @go(RewriteRule,[]RewriteRuleParameters)
}

#SSLCertificateInitParameters: {
	// Secret Id of (base-64 encoded unencrypted pfx) Secret or Certificate object stored in Azure KeyVault. You need to enable soft delete for keyvault to use this feature. Required if data is not set.
	keyVaultSecretId?: null | string @go(KeyVaultSecretID,*string)

	// The Name of the SSL certificate that is unique within this Application Gateway
	name?: null | string @go(Name,*string)
}

#SSLCertificateObservation: {
	// The ID of the SSL Certificate.
	id?: null | string @go(ID,*string)

	// Secret Id of (base-64 encoded unencrypted pfx) Secret or Certificate object stored in Azure KeyVault. You need to enable soft delete for keyvault to use this feature. Required if data is not set.
	keyVaultSecretId?: null | string @go(KeyVaultSecretID,*string)

	// The Name of the SSL certificate that is unique within this Application Gateway
	name?: null | string @go(Name,*string)

	// The Public Certificate Data associated with the SSL Certificate.
	publicCertData?: null | string @go(PublicCertData,*string)
}

#SSLCertificateParameters: {
	// Secret Id of (base-64 encoded unencrypted pfx) Secret or Certificate object stored in Azure KeyVault. You need to enable soft delete for keyvault to use this feature. Required if data is not set.
	// +kubebuilder:validation:Optional
	keyVaultSecretId?: null | string @go(KeyVaultSecretID,*string)

	// The Name of the SSL certificate that is unique within this Application Gateway
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#SSLPolicyInitParameters: {
	// A List of accepted cipher suites. Possible values are: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA256 and TLS_RSA_WITH_AES_256_GCM_SHA384.
	cipherSuites?: [...null | string] @go(CipherSuites,[]*string)

	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	disabledProtocols?: [...null | string] @go(DisabledProtocols,[]*string)

	// The minimal TLS version. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	minProtocolVersion?: null | string @go(MinProtocolVersion,*string)

	// The Name of the Policy e.g AppGwSslPolicy20170401S. Required if policy_type is set to Predefined. Possible values can change over time and are published here https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview. Not compatible with disabled_protocols.
	policyName?: null | string @go(PolicyName,*string)

	// The Type of the Policy. Possible values are Predefined, Custom and CustomV2.
	policyType?: null | string @go(PolicyType,*string)
}

#SSLPolicyObservation: {
	// A List of accepted cipher suites. Possible values are: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA256 and TLS_RSA_WITH_AES_256_GCM_SHA384.
	cipherSuites?: [...null | string] @go(CipherSuites,[]*string)

	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	disabledProtocols?: [...null | string] @go(DisabledProtocols,[]*string)

	// The minimal TLS version. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	minProtocolVersion?: null | string @go(MinProtocolVersion,*string)

	// The Name of the Policy e.g AppGwSslPolicy20170401S. Required if policy_type is set to Predefined. Possible values can change over time and are published here https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview. Not compatible with disabled_protocols.
	policyName?: null | string @go(PolicyName,*string)

	// The Type of the Policy. Possible values are Predefined, Custom and CustomV2.
	policyType?: null | string @go(PolicyType,*string)
}

#SSLPolicyParameters: {
	// A List of accepted cipher suites. Possible values are: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA256 and TLS_RSA_WITH_AES_256_GCM_SHA384.
	// +kubebuilder:validation:Optional
	cipherSuites?: [...null | string] @go(CipherSuites,[]*string)

	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	// +kubebuilder:validation:Optional
	disabledProtocols?: [...null | string] @go(DisabledProtocols,[]*string)

	// The minimal TLS version. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	// +kubebuilder:validation:Optional
	minProtocolVersion?: null | string @go(MinProtocolVersion,*string)

	// The Name of the Policy e.g AppGwSslPolicy20170401S. Required if policy_type is set to Predefined. Possible values can change over time and are published here https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview. Not compatible with disabled_protocols.
	// +kubebuilder:validation:Optional
	policyName?: null | string @go(PolicyName,*string)

	// The Type of the Policy. Possible values are Predefined, Custom and CustomV2.
	// +kubebuilder:validation:Optional
	policyType?: null | string @go(PolicyType,*string)
}

#SSLProfileInitParameters: {
	// The name of the SSL Profile that is unique within this Application Gateway.
	name?: null | string @go(Name,*string)

	// a ssl_policy block as defined below.
	sslPolicy?: [...#SSLProfileSSLPolicyInitParameters] @go(SSLPolicy,[]SSLProfileSSLPolicyInitParameters)

	// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
	trustedClientCertificateNames?: [...null | string] @go(TrustedClientCertificateNames,[]*string)

	// Should client certificate issuer DN be verified? Defaults to false.
	verifyClientCertIssuerDn?: null | bool @go(VerifyClientCertIssuerDn,*bool)
}

#SSLProfileObservation: {
	// The ID of the URL Path Map.
	id?: null | string @go(ID,*string)

	// The name of the SSL Profile that is unique within this Application Gateway.
	name?: null | string @go(Name,*string)

	// a ssl_policy block as defined below.
	sslPolicy?: [...#SSLProfileSSLPolicyObservation] @go(SSLPolicy,[]SSLProfileSSLPolicyObservation)

	// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
	trustedClientCertificateNames?: [...null | string] @go(TrustedClientCertificateNames,[]*string)

	// Should client certificate issuer DN be verified? Defaults to false.
	verifyClientCertIssuerDn?: null | bool @go(VerifyClientCertIssuerDn,*bool)
}

#SSLProfileParameters: {
	// The name of the SSL Profile that is unique within this Application Gateway.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// a ssl_policy block as defined below.
	// +kubebuilder:validation:Optional
	sslPolicy?: [...#SSLProfileSSLPolicyParameters] @go(SSLPolicy,[]SSLProfileSSLPolicyParameters)

	// The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
	// +kubebuilder:validation:Optional
	trustedClientCertificateNames?: [...null | string] @go(TrustedClientCertificateNames,[]*string)

	// Should client certificate issuer DN be verified? Defaults to false.
	// +kubebuilder:validation:Optional
	verifyClientCertIssuerDn?: null | bool @go(VerifyClientCertIssuerDn,*bool)
}

#SSLProfileSSLPolicyInitParameters: {
	// A List of accepted cipher suites. Possible values are: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA256 and TLS_RSA_WITH_AES_256_GCM_SHA384.
	cipherSuites?: [...null | string] @go(CipherSuites,[]*string)

	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	disabledProtocols?: [...null | string] @go(DisabledProtocols,[]*string)

	// The minimal TLS version. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	minProtocolVersion?: null | string @go(MinProtocolVersion,*string)

	// The Name of the Policy e.g AppGwSslPolicy20170401S. Required if policy_type is set to Predefined. Possible values can change over time and are published here https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview. Not compatible with disabled_protocols.
	policyName?: null | string @go(PolicyName,*string)

	// The Type of the Policy. Possible values are Predefined, Custom and CustomV2.
	policyType?: null | string @go(PolicyType,*string)
}

#SSLProfileSSLPolicyObservation: {
	// A List of accepted cipher suites. Possible values are: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA256 and TLS_RSA_WITH_AES_256_GCM_SHA384.
	cipherSuites?: [...null | string] @go(CipherSuites,[]*string)

	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	disabledProtocols?: [...null | string] @go(DisabledProtocols,[]*string)

	// The minimal TLS version. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	minProtocolVersion?: null | string @go(MinProtocolVersion,*string)

	// The Name of the Policy e.g AppGwSslPolicy20170401S. Required if policy_type is set to Predefined. Possible values can change over time and are published here https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview. Not compatible with disabled_protocols.
	policyName?: null | string @go(PolicyName,*string)

	// The Type of the Policy. Possible values are Predefined, Custom and CustomV2.
	policyType?: null | string @go(PolicyType,*string)
}

#SSLProfileSSLPolicyParameters: {
	// A List of accepted cipher suites. Possible values are: TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_128_CBC_SHA256, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA256, TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_128_GCM_SHA256, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_3DES_EDE_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA256 and TLS_RSA_WITH_AES_256_GCM_SHA384.
	// +kubebuilder:validation:Optional
	cipherSuites?: [...null | string] @go(CipherSuites,[]*string)

	// A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	// +kubebuilder:validation:Optional
	disabledProtocols?: [...null | string] @go(DisabledProtocols,[]*string)

	// The minimal TLS version. Possible values are TLSv1_0, TLSv1_1, TLSv1_2 and TLSv1_3.
	// +kubebuilder:validation:Optional
	minProtocolVersion?: null | string @go(MinProtocolVersion,*string)

	// The Name of the Policy e.g AppGwSslPolicy20170401S. Required if policy_type is set to Predefined. Possible values can change over time and are published here https://docs.microsoft.com/azure/application-gateway/application-gateway-ssl-policy-overview. Not compatible with disabled_protocols.
	// +kubebuilder:validation:Optional
	policyName?: null | string @go(PolicyName,*string)

	// The Type of the Policy. Possible values are Predefined, Custom and CustomV2.
	// +kubebuilder:validation:Optional
	policyType?: null | string @go(PolicyType,*string)
}

#SkuInitParameters: {
	// The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between 1 and 32, and 1 to 125 for a V2 SKU. This property is optional if autoscale_configuration is set.
	capacity?: null | float64 @go(Capacity,*float64)

	// The Name of the SKU to use for this Application Gateway. Possible values are Standard_Small, Standard_Medium, Standard_Large, Standard_v2, WAF_Medium, WAF_Large, and WAF_v2.
	name?: null | string @go(Name,*string)

	// The Tier of the SKU to use for this Application Gateway. Possible values are Standard, Standard_v2, WAF and WAF_v2.
	tier?: null | string @go(Tier,*string)
}

#SkuObservation: {
	// The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between 1 and 32, and 1 to 125 for a V2 SKU. This property is optional if autoscale_configuration is set.
	capacity?: null | float64 @go(Capacity,*float64)

	// The Name of the SKU to use for this Application Gateway. Possible values are Standard_Small, Standard_Medium, Standard_Large, Standard_v2, WAF_Medium, WAF_Large, and WAF_v2.
	name?: null | string @go(Name,*string)

	// The Tier of the SKU to use for this Application Gateway. Possible values are Standard, Standard_v2, WAF and WAF_v2.
	tier?: null | string @go(Tier,*string)
}

#SkuParameters: {
	// The Capacity of the SKU to use for this Application Gateway. When using a V1 SKU this value must be between 1 and 32, and 1 to 125 for a V2 SKU. This property is optional if autoscale_configuration is set.
	// +kubebuilder:validation:Optional
	capacity?: null | float64 @go(Capacity,*float64)

	// The Name of the SKU to use for this Application Gateway. Possible values are Standard_Small, Standard_Medium, Standard_Large, Standard_v2, WAF_Medium, WAF_Large, and WAF_v2.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Tier of the SKU to use for this Application Gateway. Possible values are Standard, Standard_v2, WAF and WAF_v2.
	// +kubebuilder:validation:Optional
	tier?: null | string @go(Tier,*string)
}

#TrustedClientCertificateInitParameters: {
	// The name of the Trusted Client Certificate that is unique within this Application Gateway.
	name?: null | string @go(Name,*string)
}

#TrustedClientCertificateObservation: {
	// The ID of the URL Path Map.
	id?: null | string @go(ID,*string)

	// The name of the Trusted Client Certificate that is unique within this Application Gateway.
	name?: null | string @go(Name,*string)
}

#TrustedClientCertificateParameters: {
	// The name of the Trusted Client Certificate that is unique within this Application Gateway.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#TrustedRootCertificateInitParameters: {
	// The Secret ID of (base-64 encoded unencrypted pfx) Secret or Certificate object stored in Azure KeyVault. You need to enable soft delete for the Key Vault to use this feature. Required if data is not set.
	keyVaultSecretId?: null | string @go(KeyVaultSecretID,*string)

	// The Name of the Trusted Root Certificate to use.
	name?: null | string @go(Name,*string)
}

#TrustedRootCertificateObservation: {
	// The ID of the URL Path Map.
	id?: null | string @go(ID,*string)

	// The Secret ID of (base-64 encoded unencrypted pfx) Secret or Certificate object stored in Azure KeyVault. You need to enable soft delete for the Key Vault to use this feature. Required if data is not set.
	keyVaultSecretId?: null | string @go(KeyVaultSecretID,*string)

	// The Name of the Trusted Root Certificate to use.
	name?: null | string @go(Name,*string)
}

#TrustedRootCertificateParameters: {
	// The Secret ID of (base-64 encoded unencrypted pfx) Secret or Certificate object stored in Azure KeyVault. You need to enable soft delete for the Key Vault to use this feature. Required if data is not set.
	// +kubebuilder:validation:Optional
	keyVaultSecretId?: null | string @go(KeyVaultSecretID,*string)

	// The Name of the Trusted Root Certificate to use.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#URLInitParameters: {
	// The components used to rewrite the URL. Possible values are path_only and query_string_only to limit the rewrite to the URL Path or URL Query String only.
	components?: null | string @go(Components,*string)

	// The URL path to rewrite.
	path?: null | string @go(Path,*string)

	// The query string to rewrite.
	queryString?: null | string @go(QueryString,*string)

	// Whether the URL path map should be reevaluated after this rewrite has been applied. More info on rewrite configutation
	reroute?: null | bool @go(Reroute,*bool)
}

#URLObservation: {
	// The components used to rewrite the URL. Possible values are path_only and query_string_only to limit the rewrite to the URL Path or URL Query String only.
	components?: null | string @go(Components,*string)

	// The URL path to rewrite.
	path?: null | string @go(Path,*string)

	// The query string to rewrite.
	queryString?: null | string @go(QueryString,*string)

	// Whether the URL path map should be reevaluated after this rewrite has been applied. More info on rewrite configutation
	reroute?: null | bool @go(Reroute,*bool)
}

#URLParameters: {
	// The components used to rewrite the URL. Possible values are path_only and query_string_only to limit the rewrite to the URL Path or URL Query String only.
	// +kubebuilder:validation:Optional
	components?: null | string @go(Components,*string)

	// The URL path to rewrite.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// The query string to rewrite.
	// +kubebuilder:validation:Optional
	queryString?: null | string @go(QueryString,*string)

	// Whether the URL path map should be reevaluated after this rewrite has been applied. More info on rewrite configutation
	// +kubebuilder:validation:Optional
	reroute?: null | bool @go(Reroute,*bool)
}

#URLPathMapInitParameters: {
	// The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if default_redirect_configuration_name is set.
	defaultBackendAddressPoolName?: null | string @go(DefaultBackendAddressPoolName,*string)

	// The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if default_redirect_configuration_name is set.
	defaultBackendHttpSettingsName?: null | string @go(DefaultBackendHTTPSettingsName,*string)

	// The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either default_backend_address_pool_name or default_backend_http_settings_name is set.
	defaultRedirectConfigurationName?: null | string @go(DefaultRedirectConfigurationName,*string)

	// The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
	defaultRewriteRuleSetName?: null | string @go(DefaultRewriteRuleSetName,*string)

	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// One or more path_rule blocks as defined above.
	pathRule?: [...#PathRuleInitParameters] @go(PathRule,[]PathRuleInitParameters)
}

#URLPathMapObservation: {
	// The ID of the Default Backend Address Pool.
	defaultBackendAddressPoolId?: null | string @go(DefaultBackendAddressPoolID,*string)

	// The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if default_redirect_configuration_name is set.
	defaultBackendAddressPoolName?: null | string @go(DefaultBackendAddressPoolName,*string)

	// The ID of the Default Backend HTTP Settings Collection.
	defaultBackendHttpSettingsId?: null | string @go(DefaultBackendHTTPSettingsID,*string)

	// The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if default_redirect_configuration_name is set.
	defaultBackendHttpSettingsName?: null | string @go(DefaultBackendHTTPSettingsName,*string)

	// The ID of the Default Redirect Configuration.
	defaultRedirectConfigurationId?: null | string @go(DefaultRedirectConfigurationID,*string)

	// The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either default_backend_address_pool_name or default_backend_http_settings_name is set.
	defaultRedirectConfigurationName?: null | string @go(DefaultRedirectConfigurationName,*string)

	// The ID of the Application Gateway.
	defaultRewriteRuleSetId?: null | string @go(DefaultRewriteRuleSetID,*string)

	// The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
	defaultRewriteRuleSetName?: null | string @go(DefaultRewriteRuleSetName,*string)

	// The ID of the URL Path Map.
	id?: null | string @go(ID,*string)

	// The Name of the URL Path Map.
	name?: null | string @go(Name,*string)

	// One or more path_rule blocks as defined above.
	pathRule?: [...#PathRuleObservation] @go(PathRule,[]PathRuleObservation)
}

#URLPathMapParameters: {
	// The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if default_redirect_configuration_name is set.
	// +kubebuilder:validation:Optional
	defaultBackendAddressPoolName?: null | string @go(DefaultBackendAddressPoolName,*string)

	// The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if default_redirect_configuration_name is set.
	// +kubebuilder:validation:Optional
	defaultBackendHttpSettingsName?: null | string @go(DefaultBackendHTTPSettingsName,*string)

	// The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either default_backend_address_pool_name or default_backend_http_settings_name is set.
	// +kubebuilder:validation:Optional
	defaultRedirectConfigurationName?: null | string @go(DefaultRedirectConfigurationName,*string)

	// The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
	// +kubebuilder:validation:Optional
	defaultRewriteRuleSetName?: null | string @go(DefaultRewriteRuleSetName,*string)

	// The Name of the URL Path Map.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// One or more path_rule blocks as defined above.
	// +kubebuilder:validation:Optional
	pathRule?: [...#PathRuleParameters] @go(PathRule,[]PathRuleParameters)
}

#WafConfigurationInitParameters: {
	// one or more disabled_rule_group blocks as defined below.
	disabledRuleGroup?: [...#DisabledRuleGroupInitParameters] @go(DisabledRuleGroup,[]DisabledRuleGroupInitParameters)

	// Is the Web Application Firewall enabled?
	enabled?: null | bool @go(Enabled,*bool)

	// one or more exclusion blocks as defined below.
	exclusion?: [...#ExclusionInitParameters] @go(Exclusion,[]ExclusionInitParameters)

	// The File Upload Limit in MB. Accepted values are in the range 1MB to 750MB for the WAF_v2 SKU, and 1MB to 500MB for all other SKUs. Defaults to 100MB.
	fileUploadLimitMb?: null | float64 @go(FileUploadLimitMb,*float64)

	// The Web Application Firewall Mode. Possible values are Detection and Prevention.
	firewallMode?: null | string @go(FirewallMode,*string)

	// The Maximum Request Body Size in KB. Accepted values are in the range 1KB to 128KB. Defaults to 128KB.
	maxRequestBodySizeKb?: null | float64 @go(MaxRequestBodySizeKb,*float64)

	// Is Request Body Inspection enabled? Defaults to true.
	requestBodyCheck?: null | bool @go(RequestBodyCheck,*bool)

	// The Type of the Rule Set used for this Web Application Firewall. Possible values are OWASP and Microsoft_BotManagerRuleSet.
	ruleSetType?: null | string @go(RuleSetType,*string)

	// The Version of the Rule Set used for this Web Application Firewall. Possible values are 0.1, 1.0, 2.2.9, 3.0, 3.1 and 3.2.
	ruleSetVersion?: null | string @go(RuleSetVersion,*string)
}

#WafConfigurationObservation: {
	// one or more disabled_rule_group blocks as defined below.
	disabledRuleGroup?: [...#DisabledRuleGroupObservation] @go(DisabledRuleGroup,[]DisabledRuleGroupObservation)

	// Is the Web Application Firewall enabled?
	enabled?: null | bool @go(Enabled,*bool)

	// one or more exclusion blocks as defined below.
	exclusion?: [...#ExclusionObservation] @go(Exclusion,[]ExclusionObservation)

	// The File Upload Limit in MB. Accepted values are in the range 1MB to 750MB for the WAF_v2 SKU, and 1MB to 500MB for all other SKUs. Defaults to 100MB.
	fileUploadLimitMb?: null | float64 @go(FileUploadLimitMb,*float64)

	// The Web Application Firewall Mode. Possible values are Detection and Prevention.
	firewallMode?: null | string @go(FirewallMode,*string)

	// The Maximum Request Body Size in KB. Accepted values are in the range 1KB to 128KB. Defaults to 128KB.
	maxRequestBodySizeKb?: null | float64 @go(MaxRequestBodySizeKb,*float64)

	// Is Request Body Inspection enabled? Defaults to true.
	requestBodyCheck?: null | bool @go(RequestBodyCheck,*bool)

	// The Type of the Rule Set used for this Web Application Firewall. Possible values are OWASP and Microsoft_BotManagerRuleSet.
	ruleSetType?: null | string @go(RuleSetType,*string)

	// The Version of the Rule Set used for this Web Application Firewall. Possible values are 0.1, 1.0, 2.2.9, 3.0, 3.1 and 3.2.
	ruleSetVersion?: null | string @go(RuleSetVersion,*string)
}

#WafConfigurationParameters: {
	// one or more disabled_rule_group blocks as defined below.
	// +kubebuilder:validation:Optional
	disabledRuleGroup?: [...#DisabledRuleGroupParameters] @go(DisabledRuleGroup,[]DisabledRuleGroupParameters)

	// Is the Web Application Firewall enabled?
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// one or more exclusion blocks as defined below.
	// +kubebuilder:validation:Optional
	exclusion?: [...#ExclusionParameters] @go(Exclusion,[]ExclusionParameters)

	// The File Upload Limit in MB. Accepted values are in the range 1MB to 750MB for the WAF_v2 SKU, and 1MB to 500MB for all other SKUs. Defaults to 100MB.
	// +kubebuilder:validation:Optional
	fileUploadLimitMb?: null | float64 @go(FileUploadLimitMb,*float64)

	// The Web Application Firewall Mode. Possible values are Detection and Prevention.
	// +kubebuilder:validation:Optional
	firewallMode?: null | string @go(FirewallMode,*string)

	// The Maximum Request Body Size in KB. Accepted values are in the range 1KB to 128KB. Defaults to 128KB.
	// +kubebuilder:validation:Optional
	maxRequestBodySizeKb?: null | float64 @go(MaxRequestBodySizeKb,*float64)

	// Is Request Body Inspection enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	requestBodyCheck?: null | bool @go(RequestBodyCheck,*bool)

	// The Type of the Rule Set used for this Web Application Firewall. Possible values are OWASP and Microsoft_BotManagerRuleSet.
	// +kubebuilder:validation:Optional
	ruleSetType?: null | string @go(RuleSetType,*string)

	// The Version of the Rule Set used for this Web Application Firewall. Possible values are 0.1, 1.0, 2.2.9, 3.0, 3.1 and 3.2.
	// +kubebuilder:validation:Optional
	ruleSetVersion?: null | string @go(RuleSetVersion,*string)
}

// ApplicationGatewaySpec defines the desired state of ApplicationGateway
#ApplicationGatewaySpec: {
	forProvider: #ApplicationGatewayParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ApplicationGatewayInitParameters @go(InitProvider)
}

// ApplicationGatewayStatus defines the observed state of ApplicationGateway.
#ApplicationGatewayStatus: {
	atProvider?: #ApplicationGatewayObservation @go(AtProvider)
}

// ApplicationGateway is the Schema for the ApplicationGateways API. Manages an Application Gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ApplicationGateway: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backendAddressPool) || has(self.initProvider.backendAddressPool)",message="backendAddressPool is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backendHttpSettings) || has(self.initProvider.backendHttpSettings)",message="backendHttpSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.frontendIpConfiguration) || has(self.initProvider.frontendIpConfiguration)",message="frontendIpConfiguration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.frontendPort) || has(self.initProvider.frontendPort)",message="frontendPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gatewayIpConfiguration) || has(self.initProvider.gatewayIpConfiguration)",message="gatewayIpConfiguration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.httpListener) || has(self.initProvider.httpListener)",message="httpListener is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.requestRoutingRule) || has(self.initProvider.requestRoutingRule)",message="requestRoutingRule is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sku) || has(self.initProvider.sku)",message="sku is a required parameter"
	spec:    #ApplicationGatewaySpec   @go(Spec)
	status?: #ApplicationGatewayStatus @go(Status)
}

// ApplicationGatewayList contains a list of ApplicationGateways
#ApplicationGatewayList: {
	items: [...#ApplicationGateway] @go(Items,[]ApplicationGateway)
}
