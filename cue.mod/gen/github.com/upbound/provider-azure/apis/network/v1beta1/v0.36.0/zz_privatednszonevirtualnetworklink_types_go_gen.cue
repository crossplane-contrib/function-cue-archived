// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/network/v1beta1

package v1beta1

#PrivateDNSZoneVirtualNetworkLinkInitParameters: {
	// Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled? Defaults to false.
	registrationEnabled?: null | bool @go(RegistrationEnabled,*bool)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#PrivateDNSZoneVirtualNetworkLinkObservation: {
	// The ID of the Private DNS Zone Virtual Network Link.
	id?: null | string @go(ID,*string)

	// The name of the Private DNS zone (without a terminating dot). Changing this forces a new resource to be created.
	privateDnsZoneName?: null | string @go(PrivateDNSZoneName,*string)

	// Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled? Defaults to false.
	registrationEnabled?: null | bool @go(RegistrationEnabled,*bool)

	// Specifies the resource group where the Private DNS Zone exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the Virtual Network that should be linked to the DNS Zone. Changing this forces a new resource to be created.
	virtualNetworkId?: null | string @go(VirtualNetworkID,*string)
}

#PrivateDNSZoneVirtualNetworkLinkParameters: {
	// The name of the Private DNS zone (without a terminating dot). Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=PrivateDNSZone
	// +kubebuilder:validation:Optional
	privateDnsZoneName?: null | string @go(PrivateDNSZoneName,*string)

	// Is auto-registration of virtual machine records in the virtual network in the Private DNS zone enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	registrationEnabled?: null | bool @go(RegistrationEnabled,*bool)

	// Specifies the resource group where the Private DNS Zone exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the Virtual Network that should be linked to the DNS Zone. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=VirtualNetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualNetworkId?: null | string @go(VirtualNetworkID,*string)
}

// PrivateDNSZoneVirtualNetworkLinkSpec defines the desired state of PrivateDNSZoneVirtualNetworkLink
#PrivateDNSZoneVirtualNetworkLinkSpec: {
	forProvider: #PrivateDNSZoneVirtualNetworkLinkParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PrivateDNSZoneVirtualNetworkLinkInitParameters @go(InitProvider)
}

// PrivateDNSZoneVirtualNetworkLinkStatus defines the observed state of PrivateDNSZoneVirtualNetworkLink.
#PrivateDNSZoneVirtualNetworkLinkStatus: {
	atProvider?: #PrivateDNSZoneVirtualNetworkLinkObservation @go(AtProvider)
}

// PrivateDNSZoneVirtualNetworkLink is the Schema for the PrivateDNSZoneVirtualNetworkLinks API. Manages a Private DNS Zone Virtual Network Link.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#PrivateDNSZoneVirtualNetworkLink: {
	spec:    #PrivateDNSZoneVirtualNetworkLinkSpec   @go(Spec)
	status?: #PrivateDNSZoneVirtualNetworkLinkStatus @go(Status)
}

// PrivateDNSZoneVirtualNetworkLinkList contains a list of PrivateDNSZoneVirtualNetworkLinks
#PrivateDNSZoneVirtualNetworkLinkList: {
	items: [...#PrivateDNSZoneVirtualNetworkLink] @go(Items,[]PrivateDNSZoneVirtualNetworkLink)
}
