// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/authorization/v1beta1

package v1beta1

#PermissionsInitParameters: {
	// One or more Allowed Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	actions?: [...null | string] @go(Actions,[]*string)

	// One or more Allowed Data Actions, such as *, Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read. See 'Azure Resource Manager resource provider operations' for details.
	dataActions?: [...null | string] @go(DataActions,[]*string)

	// One or more Disallowed Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	notActions?: [...null | string] @go(NotActions,[]*string)

	// One or more Disallowed Data Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	notDataActions?: [...null | string] @go(NotDataActions,[]*string)
}

#PermissionsObservation: {
	// One or more Allowed Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	actions?: [...null | string] @go(Actions,[]*string)

	// One or more Allowed Data Actions, such as *, Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read. See 'Azure Resource Manager resource provider operations' for details.
	dataActions?: [...null | string] @go(DataActions,[]*string)

	// One or more Disallowed Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	notActions?: [...null | string] @go(NotActions,[]*string)

	// One or more Disallowed Data Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	notDataActions?: [...null | string] @go(NotDataActions,[]*string)
}

#PermissionsParameters: {
	// One or more Allowed Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	// +kubebuilder:validation:Optional
	actions?: [...null | string] @go(Actions,[]*string)

	// One or more Allowed Data Actions, such as *, Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read. See 'Azure Resource Manager resource provider operations' for details.
	// +kubebuilder:validation:Optional
	dataActions?: [...null | string] @go(DataActions,[]*string)

	// One or more Disallowed Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	// +kubebuilder:validation:Optional
	notActions?: [...null | string] @go(NotActions,[]*string)

	// One or more Disallowed Data Actions, such as *, Microsoft.Resources/subscriptions/resourceGroups/read. See 'Azure Resource Manager resource provider operations' for details.
	// +kubebuilder:validation:Optional
	notDataActions?: [...null | string] @go(NotDataActions,[]*string)
}

#RoleDefinitionInitParameters: {
	// One or more assignable scopes for this Role Definition, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM.
	assignableScopes?: [...null | string] @go(AssignableScopes,[]*string)

	// A description of the Role Definition.
	description?: null | string @go(Description,*string)

	// The name of the Role Definition.
	name?: null | string @go(Name,*string)

	// A permissions block as defined below.
	permissions?: [...#PermissionsInitParameters] @go(Permissions,[]PermissionsInitParameters)

	// A unique UUID/GUID which identifies this role - one will be generated if not specified. Changing this forces a new resource to be created.
	roleDefinitionId?: null | string @go(RoleDefinitionID,*string)

	// The scope at which the Role Definition applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM. It is recommended to use the first entry of the assignable_scopes. Changing this forces a new resource to be created.
	scope?: null | string @go(Scope,*string)
}

#RoleDefinitionObservation: {
	// One or more assignable scopes for this Role Definition, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM.
	assignableScopes?: [...null | string] @go(AssignableScopes,[]*string)

	// A description of the Role Definition.
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)

	// The name of the Role Definition.
	name?: null | string @go(Name,*string)

	// A permissions block as defined below.
	permissions?: [...#PermissionsObservation] @go(Permissions,[]PermissionsObservation)

	// A unique UUID/GUID which identifies this role - one will be generated if not specified. Changing this forces a new resource to be created.
	roleDefinitionId?: null | string @go(RoleDefinitionID,*string)

	// The Azure Resource Manager ID for the resource.
	roleDefinitionResourceId?: null | string @go(RoleDefinitionResourceID,*string)

	// The scope at which the Role Definition applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM. It is recommended to use the first entry of the assignable_scopes. Changing this forces a new resource to be created.
	scope?: null | string @go(Scope,*string)
}

#RoleDefinitionParameters: {
	// One or more assignable scopes for this Role Definition, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM.
	// +kubebuilder:validation:Optional
	assignableScopes?: [...null | string] @go(AssignableScopes,[]*string)

	// A description of the Role Definition.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The name of the Role Definition.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A permissions block as defined below.
	// +kubebuilder:validation:Optional
	permissions?: [...#PermissionsParameters] @go(Permissions,[]PermissionsParameters)

	// A unique UUID/GUID which identifies this role - one will be generated if not specified. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	roleDefinitionId?: null | string @go(RoleDefinitionID,*string)

	// The scope at which the Role Definition applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM. It is recommended to use the first entry of the assignable_scopes. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	scope?: null | string @go(Scope,*string)
}

// RoleDefinitionSpec defines the desired state of RoleDefinition
#RoleDefinitionSpec: {
	forProvider: #RoleDefinitionParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #RoleDefinitionInitParameters @go(InitProvider)
}

// RoleDefinitionStatus defines the observed state of RoleDefinition.
#RoleDefinitionStatus: {
	atProvider?: #RoleDefinitionObservation @go(AtProvider)
}

// RoleDefinition is the Schema for the RoleDefinitions API. Manages a custom Role Definition.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#RoleDefinition: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scope) || (has(self.initProvider) && has(self.initProvider.scope))",message="spec.forProvider.scope is a required parameter"
	spec:    #RoleDefinitionSpec   @go(Spec)
	status?: #RoleDefinitionStatus @go(Status)
}

// RoleDefinitionList contains a list of RoleDefinitions
#RoleDefinitionList: {
	items: [...#RoleDefinition] @go(Items,[]RoleDefinition)
}
