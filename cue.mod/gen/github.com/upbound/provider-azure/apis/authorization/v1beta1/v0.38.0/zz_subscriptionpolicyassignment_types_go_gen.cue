// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/authorization/v1beta1

package v1beta1

#SubscriptionPolicyAssignmentIdentityInitParameters: {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are SystemAssigned or UserAssigned.
	type?: null | string @go(Type,*string)
}

#SubscriptionPolicyAssignmentIdentityObservation: {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID of the Policy Assignment for this Subscription.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID of the Policy Assignment for this Subscription.
	tenantId?: null | string @go(TenantID,*string)

	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are SystemAssigned or UserAssigned.
	type?: null | string @go(Type,*string)
}

#SubscriptionPolicyAssignmentIdentityParameters: {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are SystemAssigned or UserAssigned.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#SubscriptionPolicyAssignmentInitParameters: {
	// A description which should be used for this Policy Assignment.
	description?: null | string @go(Description,*string)

	// The Display Name for this Policy Assignment.
	displayName?: null | string @go(DisplayName,*string)

	// Specifies if this Policy should be enforced or not? Defaults to true.
	enforce?: null | bool @go(Enforce,*bool)

	// An identity block as defined below.
	identity?: [...#SubscriptionPolicyAssignmentIdentityInitParameters] @go(Identity,[]SubscriptionPolicyAssignmentIdentityInitParameters)

	// The Azure Region where the Policy Assignment should exist. Changing this forces a new Policy Assignment to be created.
	location?: null | string @go(Location,*string)

	// A JSON mapping of any Metadata for this Policy.
	metadata?: null | string @go(Metadata,*string)

	// One or more non_compliance_message blocks as defined below.
	nonComplianceMessage?: [...#SubscriptionPolicyAssignmentNonComplianceMessageInitParameters] @go(NonComplianceMessage,[]SubscriptionPolicyAssignmentNonComplianceMessageInitParameters)

	// Specifies a list of Resource Scopes (for example a Subscription, or a Resource Group) within this Management Group which are excluded from this Policy.
	notScopes?: [...null | string] @go(NotScopes,[]*string)

	// One or more overrides blocks as defined below. More detail about overrides and resource_selectors see policy assignment structure
	overrides?: [...#SubscriptionPolicyAssignmentOverridesInitParameters] @go(Overrides,[]SubscriptionPolicyAssignmentOverridesInitParameters)

	// A JSON mapping of any Parameters for this Policy.
	parameters?: null | string @go(Parameters,*string)

	// One or more resource_selectors blocks as defined below to filter polices by resource properties.
	resourceSelectors?: [...#SubscriptionPolicyAssignmentResourceSelectorsInitParameters] @go(ResourceSelectors,[]SubscriptionPolicyAssignmentResourceSelectorsInitParameters)

	// The ID of the Subscription where this Policy Assignment should be created. Changing this forces a new Policy Assignment to be created.
	subscriptionId?: null | string @go(SubscriptionID,*string)
}

#SubscriptionPolicyAssignmentNonComplianceMessageInitParameters: {
	// The non-compliance message text. When assigning policy sets (initiatives), unless policy_definition_reference_id is specified then this message will be the default for all policies.
	content?: null | string @go(Content,*string)

	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	policyDefinitionReferenceId?: null | string @go(PolicyDefinitionReferenceID,*string)
}

#SubscriptionPolicyAssignmentNonComplianceMessageObservation: {
	// The non-compliance message text. When assigning policy sets (initiatives), unless policy_definition_reference_id is specified then this message will be the default for all policies.
	content?: null | string @go(Content,*string)

	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	policyDefinitionReferenceId?: null | string @go(PolicyDefinitionReferenceID,*string)
}

#SubscriptionPolicyAssignmentNonComplianceMessageParameters: {
	// The non-compliance message text. When assigning policy sets (initiatives), unless policy_definition_reference_id is specified then this message will be the default for all policies.
	// +kubebuilder:validation:Optional
	content?: null | string @go(Content,*string)

	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	// +kubebuilder:validation:Optional
	policyDefinitionReferenceId?: null | string @go(PolicyDefinitionReferenceID,*string)
}

#SubscriptionPolicyAssignmentObservation: {
	// A description which should be used for this Policy Assignment.
	description?: null | string @go(Description,*string)

	// The Display Name for this Policy Assignment.
	displayName?: null | string @go(DisplayName,*string)

	// Specifies if this Policy should be enforced or not? Defaults to true.
	enforce?: null | bool @go(Enforce,*bool)

	// The ID of the Subscription Policy Assignment.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#SubscriptionPolicyAssignmentIdentityObservation] @go(Identity,[]SubscriptionPolicyAssignmentIdentityObservation)

	// The Azure Region where the Policy Assignment should exist. Changing this forces a new Policy Assignment to be created.
	location?: null | string @go(Location,*string)

	// A JSON mapping of any Metadata for this Policy.
	metadata?: null | string @go(Metadata,*string)

	// One or more non_compliance_message blocks as defined below.
	nonComplianceMessage?: [...#SubscriptionPolicyAssignmentNonComplianceMessageObservation] @go(NonComplianceMessage,[]SubscriptionPolicyAssignmentNonComplianceMessageObservation)

	// Specifies a list of Resource Scopes (for example a Subscription, or a Resource Group) within this Management Group which are excluded from this Policy.
	notScopes?: [...null | string] @go(NotScopes,[]*string)

	// One or more overrides blocks as defined below. More detail about overrides and resource_selectors see policy assignment structure
	overrides?: [...#SubscriptionPolicyAssignmentOverridesObservation] @go(Overrides,[]SubscriptionPolicyAssignmentOverridesObservation)

	// A JSON mapping of any Parameters for this Policy.
	parameters?: null | string @go(Parameters,*string)

	// The ID of the Policy Definition or Policy Definition Set. Changing this forces a new Policy Assignment to be created.
	policyDefinitionId?: null | string @go(PolicyDefinitionID,*string)

	// One or more resource_selectors blocks as defined below to filter polices by resource properties.
	resourceSelectors?: [...#SubscriptionPolicyAssignmentResourceSelectorsObservation] @go(ResourceSelectors,[]SubscriptionPolicyAssignmentResourceSelectorsObservation)

	// The ID of the Subscription where this Policy Assignment should be created. Changing this forces a new Policy Assignment to be created.
	subscriptionId?: null | string @go(SubscriptionID,*string)
}

#SubscriptionPolicyAssignmentOverridesInitParameters: {
	// One or more override_selector as defined below.
	selectors?: [...#SubscriptionPolicyAssignmentOverridesSelectorsInitParameters] @go(Selectors,[]SubscriptionPolicyAssignmentOverridesSelectorsInitParameters)

	// Specifies the value to override the policy property. Possible values for policyEffect override listed policy effects.
	value?: null | string @go(Value,*string)
}

#SubscriptionPolicyAssignmentOverridesObservation: {
	// One or more override_selector as defined below.
	selectors?: [...#SubscriptionPolicyAssignmentOverridesSelectorsObservation] @go(Selectors,[]SubscriptionPolicyAssignmentOverridesSelectorsObservation)

	// Specifies the value to override the policy property. Possible values for policyEffect override listed policy effects.
	value?: null | string @go(Value,*string)
}

#SubscriptionPolicyAssignmentOverridesParameters: {
	// One or more override_selector as defined below.
	// +kubebuilder:validation:Optional
	selectors?: [...#SubscriptionPolicyAssignmentOverridesSelectorsParameters] @go(Selectors,[]SubscriptionPolicyAssignmentOverridesSelectorsParameters)

	// Specifies the value to override the policy property. Possible values for policyEffect override listed policy effects.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#SubscriptionPolicyAssignmentOverridesSelectorsInitParameters: {
	// The list of allowed values for the specified kind. Cannot be used with not_in. Can contain up to 50 values.
	in?: [...null | string] @go(In,[]*string)

	// The list of not-allowed values for the specified kind. Cannot be used with in. Can contain up to 50 values.
	notIn?: [...null | string] @go(NotIn,[]*string)
}

#SubscriptionPolicyAssignmentOverridesSelectorsObservation: {
	// The list of allowed values for the specified kind. Cannot be used with not_in. Can contain up to 50 values.
	in?: [...null | string] @go(In,[]*string)

	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are resourceLocation,  resourceType and resourceWithoutLocation.
	kind?: null | string @go(Kind,*string)

	// The list of not-allowed values for the specified kind. Cannot be used with in. Can contain up to 50 values.
	notIn?: [...null | string] @go(NotIn,[]*string)
}

#SubscriptionPolicyAssignmentOverridesSelectorsParameters: {
	// The list of allowed values for the specified kind. Cannot be used with not_in. Can contain up to 50 values.
	// +kubebuilder:validation:Optional
	in?: [...null | string] @go(In,[]*string)

	// The list of not-allowed values for the specified kind. Cannot be used with in. Can contain up to 50 values.
	// +kubebuilder:validation:Optional
	notIn?: [...null | string] @go(NotIn,[]*string)
}

#SubscriptionPolicyAssignmentParameters: {
	// A description which should be used for this Policy Assignment.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The Display Name for this Policy Assignment.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// Specifies if this Policy should be enforced or not? Defaults to true.
	// +kubebuilder:validation:Optional
	enforce?: null | bool @go(Enforce,*bool)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#SubscriptionPolicyAssignmentIdentityParameters] @go(Identity,[]SubscriptionPolicyAssignmentIdentityParameters)

	// The Azure Region where the Policy Assignment should exist. Changing this forces a new Policy Assignment to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// A JSON mapping of any Metadata for this Policy.
	// +kubebuilder:validation:Optional
	metadata?: null | string @go(Metadata,*string)

	// One or more non_compliance_message blocks as defined below.
	// +kubebuilder:validation:Optional
	nonComplianceMessage?: [...#SubscriptionPolicyAssignmentNonComplianceMessageParameters] @go(NonComplianceMessage,[]SubscriptionPolicyAssignmentNonComplianceMessageParameters)

	// Specifies a list of Resource Scopes (for example a Subscription, or a Resource Group) within this Management Group which are excluded from this Policy.
	// +kubebuilder:validation:Optional
	notScopes?: [...null | string] @go(NotScopes,[]*string)

	// One or more overrides blocks as defined below. More detail about overrides and resource_selectors see policy assignment structure
	// +kubebuilder:validation:Optional
	overrides?: [...#SubscriptionPolicyAssignmentOverridesParameters] @go(Overrides,[]SubscriptionPolicyAssignmentOverridesParameters)

	// A JSON mapping of any Parameters for this Policy.
	// +kubebuilder:validation:Optional
	parameters?: null | string @go(Parameters,*string)

	// The ID of the Policy Definition or Policy Definition Set. Changing this forces a new Policy Assignment to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/authorization/v1beta1.PolicyDefinition
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	policyDefinitionId?: null | string @go(PolicyDefinitionID,*string)

	// One or more resource_selectors blocks as defined below to filter polices by resource properties.
	// +kubebuilder:validation:Optional
	resourceSelectors?: [...#SubscriptionPolicyAssignmentResourceSelectorsParameters] @go(ResourceSelectors,[]SubscriptionPolicyAssignmentResourceSelectorsParameters)

	// The ID of the Subscription where this Policy Assignment should be created. Changing this forces a new Policy Assignment to be created.
	// +kubebuilder:validation:Optional
	subscriptionId?: null | string @go(SubscriptionID,*string)
}

#SubscriptionPolicyAssignmentResourceSelectorsInitParameters: {
	// Specifies a name for the resource selector.
	name?: null | string @go(Name,*string)

	// One or more resource_selector block as defined below.
	selectors?: [...#SubscriptionPolicyAssignmentResourceSelectorsSelectorsInitParameters] @go(Selectors,[]SubscriptionPolicyAssignmentResourceSelectorsSelectorsInitParameters)
}

#SubscriptionPolicyAssignmentResourceSelectorsObservation: {
	// Specifies a name for the resource selector.
	name?: null | string @go(Name,*string)

	// One or more resource_selector block as defined below.
	selectors?: [...#SubscriptionPolicyAssignmentResourceSelectorsSelectorsObservation] @go(Selectors,[]SubscriptionPolicyAssignmentResourceSelectorsSelectorsObservation)
}

#SubscriptionPolicyAssignmentResourceSelectorsParameters: {
	// Specifies a name for the resource selector.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// One or more resource_selector block as defined below.
	// +kubebuilder:validation:Optional
	selectors: [...#SubscriptionPolicyAssignmentResourceSelectorsSelectorsParameters] @go(Selectors,[]SubscriptionPolicyAssignmentResourceSelectorsSelectorsParameters)
}

#SubscriptionPolicyAssignmentResourceSelectorsSelectorsInitParameters: {
	// The list of allowed values for the specified kind. Cannot be used with not_in. Can contain up to 50 values.
	in?: [...null | string] @go(In,[]*string)

	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are resourceLocation,  resourceType and resourceWithoutLocation.
	kind?: null | string @go(Kind,*string)

	// The list of not-allowed values for the specified kind. Cannot be used with in. Can contain up to 50 values.
	notIn?: [...null | string] @go(NotIn,[]*string)
}

#SubscriptionPolicyAssignmentResourceSelectorsSelectorsObservation: {
	// The list of allowed values for the specified kind. Cannot be used with not_in. Can contain up to 50 values.
	in?: [...null | string] @go(In,[]*string)

	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are resourceLocation,  resourceType and resourceWithoutLocation.
	kind?: null | string @go(Kind,*string)

	// The list of not-allowed values for the specified kind. Cannot be used with in. Can contain up to 50 values.
	notIn?: [...null | string] @go(NotIn,[]*string)
}

#SubscriptionPolicyAssignmentResourceSelectorsSelectorsParameters: {
	// The list of allowed values for the specified kind. Cannot be used with not_in. Can contain up to 50 values.
	// +kubebuilder:validation:Optional
	in?: [...null | string] @go(In,[]*string)

	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are resourceLocation,  resourceType and resourceWithoutLocation.
	// +kubebuilder:validation:Optional
	kind?: null | string @go(Kind,*string)

	// The list of not-allowed values for the specified kind. Cannot be used with in. Can contain up to 50 values.
	// +kubebuilder:validation:Optional
	notIn?: [...null | string] @go(NotIn,[]*string)
}

// SubscriptionPolicyAssignmentSpec defines the desired state of SubscriptionPolicyAssignment
#SubscriptionPolicyAssignmentSpec: {
	forProvider: #SubscriptionPolicyAssignmentParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SubscriptionPolicyAssignmentInitParameters @go(InitProvider)
}

// SubscriptionPolicyAssignmentStatus defines the observed state of SubscriptionPolicyAssignment.
#SubscriptionPolicyAssignmentStatus: {
	atProvider?: #SubscriptionPolicyAssignmentObservation @go(AtProvider)
}

// SubscriptionPolicyAssignment is the Schema for the SubscriptionPolicyAssignments API. Manages a Subscription Policy Assignment.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SubscriptionPolicyAssignment: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subscriptionId) || (has(self.initProvider) && has(self.initProvider.subscriptionId))",message="spec.forProvider.subscriptionId is a required parameter"
	spec:    #SubscriptionPolicyAssignmentSpec   @go(Spec)
	status?: #SubscriptionPolicyAssignmentStatus @go(Status)
}

// SubscriptionPolicyAssignmentList contains a list of SubscriptionPolicyAssignments
#SubscriptionPolicyAssignmentList: {
	items: [...#SubscriptionPolicyAssignment] @go(Items,[]SubscriptionPolicyAssignment)
}
