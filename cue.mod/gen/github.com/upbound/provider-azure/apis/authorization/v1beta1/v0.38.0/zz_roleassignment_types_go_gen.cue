// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/authorization/v1beta1

package v1beta1

#RoleAssignmentInitParameters: {
	// The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
	condition?: null | string @go(Condition,*string)

	// The version of the condition. Possible values are 1.0 or 2.0. Changing this forces a new resource to be created.
	conditionVersion?: null | string @go(ConditionVersion,*string)

	// The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
	delegatedManagedIdentityResourceId?: null | string @go(DelegatedManagedIdentityResourceID,*string)

	// The description for this Role Assignment. Changing this forces a new resource to be created.
	description?: null | string @go(Description,*string)

	// A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
	principalId?: null | string @go(PrincipalID,*string)

	// The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with role_definition_id.
	roleDefinitionName?: null | string @go(RoleDefinitionName,*string)

	// The scope at which the Role Assignment applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM, or /providers/Microsoft.Management/managementGroups/myMG. Changing this forces a new resource to be created.
	scope?: null | string @go(Scope,*string)

	// If the principal_id is a newly provisioned Service Principal set this value to true to skip the Azure Active Directory check which may fail due to replication lag. This argument is only valid if the principal_id is a Service Principal identity. Defaults to false.
	skipServicePrincipalAadCheck?: null | bool @go(SkipServicePrincipalAADCheck,*bool)
}

#RoleAssignmentObservation: {
	// The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
	condition?: null | string @go(Condition,*string)

	// The version of the condition. Possible values are 1.0 or 2.0. Changing this forces a new resource to be created.
	conditionVersion?: null | string @go(ConditionVersion,*string)

	// The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
	delegatedManagedIdentityResourceId?: null | string @go(DelegatedManagedIdentityResourceID,*string)

	// The description for this Role Assignment. Changing this forces a new resource to be created.
	description?: null | string @go(Description,*string)

	// The Role Assignment ID.
	id?: null | string @go(ID,*string)

	// A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
	principalId?: null | string @go(PrincipalID,*string)

	// The type of the principal_id, e.g. User, Group, Service Principal, Application, etc.
	principalType?: null | string @go(PrincipalType,*string)

	// The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with role_definition_name.
	roleDefinitionId?: null | string @go(RoleDefinitionID,*string)

	// The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with role_definition_id.
	roleDefinitionName?: null | string @go(RoleDefinitionName,*string)

	// The scope at which the Role Assignment applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM, or /providers/Microsoft.Management/managementGroups/myMG. Changing this forces a new resource to be created.
	scope?: null | string @go(Scope,*string)

	// If the principal_id is a newly provisioned Service Principal set this value to true to skip the Azure Active Directory check which may fail due to replication lag. This argument is only valid if the principal_id is a Service Principal identity. Defaults to false.
	skipServicePrincipalAadCheck?: null | bool @go(SkipServicePrincipalAADCheck,*bool)
}

#RoleAssignmentParameters: {
	// The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	condition?: null | string @go(Condition,*string)

	// The version of the condition. Possible values are 1.0 or 2.0. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	conditionVersion?: null | string @go(ConditionVersion,*string)

	// The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	delegatedManagedIdentityResourceId?: null | string @go(DelegatedManagedIdentityResourceID,*string)

	// The description for this Role Assignment. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	principalId?: null | string @go(PrincipalID,*string)

	// The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with role_definition_name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/authorization/v1beta1.RoleDefinition
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("role_definition_resource_id",true)
	// +kubebuilder:validation:Optional
	roleDefinitionId?: null | string @go(RoleDefinitionID,*string)

	// The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with role_definition_id.
	// +kubebuilder:validation:Optional
	roleDefinitionName?: null | string @go(RoleDefinitionName,*string)

	// The scope at which the Role Assignment applies to, such as /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333, /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup, or /subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM, or /providers/Microsoft.Management/managementGroups/myMG. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	scope?: null | string @go(Scope,*string)

	// If the principal_id is a newly provisioned Service Principal set this value to true to skip the Azure Active Directory check which may fail due to replication lag. This argument is only valid if the principal_id is a Service Principal identity. Defaults to false.
	// +kubebuilder:validation:Optional
	skipServicePrincipalAadCheck?: null | bool @go(SkipServicePrincipalAADCheck,*bool)
}

// RoleAssignmentSpec defines the desired state of RoleAssignment
#RoleAssignmentSpec: {
	forProvider: #RoleAssignmentParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #RoleAssignmentInitParameters @go(InitProvider)
}

// RoleAssignmentStatus defines the observed state of RoleAssignment.
#RoleAssignmentStatus: {
	atProvider?: #RoleAssignmentObservation @go(AtProvider)
}

// RoleAssignment is the Schema for the RoleAssignments API. Assigns a given Principal (User or Group) to a given Role.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#RoleAssignment: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.principalId) || (has(self.initProvider) && has(self.initProvider.principalId))",message="spec.forProvider.principalId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scope) || (has(self.initProvider) && has(self.initProvider.scope))",message="spec.forProvider.scope is a required parameter"
	spec:    #RoleAssignmentSpec   @go(Spec)
	status?: #RoleAssignmentStatus @go(Status)
}

// RoleAssignmentList contains a list of RoleAssignments
#RoleAssignmentList: {
	items: [...#RoleAssignment] @go(Items,[]RoleAssignment)
}
