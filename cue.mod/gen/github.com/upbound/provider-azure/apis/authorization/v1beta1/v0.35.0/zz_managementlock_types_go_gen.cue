// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/authorization/v1beta1

package v1beta1

#ManagementLockInitParameters: {
	// Specifies the Level to be used for this Lock. Possible values are CanNotDelete and ReadOnly. Changing this forces a new resource to be created.
	lockLevel?: null | string @go(LockLevel,*string)

	// Specifies the name of the Management Lock. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
	notes?: null | string @go(Notes,*string)
}

#ManagementLockObservation: {
	// The ID of the Management Lock
	id?: null | string @go(ID,*string)

	// Specifies the Level to be used for this Lock. Possible values are CanNotDelete and ReadOnly. Changing this forces a new resource to be created.
	lockLevel?: null | string @go(LockLevel,*string)

	// Specifies the name of the Management Lock. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
	notes?: null | string @go(Notes,*string)

	// Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
	scope?: null | string @go(Scope,*string)
}

#ManagementLockParameters: {
	// Specifies the Level to be used for this Lock. Possible values are CanNotDelete and ReadOnly. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	lockLevel?: null | string @go(LockLevel,*string)

	// Specifies the name of the Management Lock. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	notes?: null | string @go(Notes,*string)

	// Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	scope?: null | string @go(Scope,*string)
}

// ManagementLockSpec defines the desired state of ManagementLock
#ManagementLockSpec: {
	forProvider: #ManagementLockParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ManagementLockInitParameters @go(InitProvider)
}

// ManagementLockStatus defines the observed state of ManagementLock.
#ManagementLockStatus: {
	atProvider?: #ManagementLockObservation @go(AtProvider)
}

// ManagementLock is the Schema for the ManagementLocks API. Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ManagementLock: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.lockLevel) || has(self.initProvider.lockLevel)",message="lockLevel is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	spec:    #ManagementLockSpec   @go(Spec)
	status?: #ManagementLockStatus @go(Status)
}

// ManagementLockList contains a list of ManagementLocks
#ManagementLockList: {
	items: [...#ManagementLock] @go(Items,[]ManagementLock)
}
