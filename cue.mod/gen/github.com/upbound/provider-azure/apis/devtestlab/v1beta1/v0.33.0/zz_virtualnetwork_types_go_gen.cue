// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devtestlab/v1beta1

package v1beta1

#SubnetObservation: {
	// The name of the Subnet for this Virtual Network.
	name?: null | string @go(Name,*string)

	// Can this subnet be used for creating Virtual Machines? Possible values are Allow, Default and Deny.
	useInVirtualMachineCreation?: null | string @go(UseInVirtualMachineCreation,*string)

	// Can Virtual Machines in this Subnet use Public IP Addresses? Possible values are Allow, Default and Deny.
	usePublicIpAddress?: null | string @go(UsePublicIPAddress,*string)
}

#SubnetParameters: {
	// Can this subnet be used for creating Virtual Machines? Possible values are Allow, Default and Deny.
	// +kubebuilder:validation:Optional
	useInVirtualMachineCreation?: null | string @go(UseInVirtualMachineCreation,*string)

	// Can Virtual Machines in this Subnet use Public IP Addresses? Possible values are Allow, Default and Deny.
	// +kubebuilder:validation:Optional
	usePublicIpAddress?: null | string @go(UsePublicIPAddress,*string)
}

#VirtualNetworkObservation: {
	// A description for the Virtual Network.
	description?: null | string @go(Description,*string)

	// The ID of the Dev Test Virtual Network.
	id?: null | string @go(ID,*string)

	// Specifies the name of the Dev Test Lab in which the Virtual Network should be created. Changing this forces a new resource to be created.
	labName?: null | string @go(LabName,*string)

	// Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A subnet block as defined below.
	subnet?: [...#SubnetObservation] @go(Subnet,[]SubnetObservation)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The unique immutable identifier of the Dev Test Virtual Network.
	uniqueIdentifier?: null | string @go(UniqueIdentifier,*string)
}

#VirtualNetworkParameters: {
	// A description for the Virtual Network.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies the name of the Dev Test Lab in which the Virtual Network should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devtestlab/v1beta1.Lab
	// +kubebuilder:validation:Optional
	labName?: null | string @go(LabName,*string)

	// Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A subnet block as defined below.
	// +kubebuilder:validation:Optional
	subnet?: [...#SubnetParameters] @go(Subnet,[]SubnetParameters)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// VirtualNetworkSpec defines the desired state of VirtualNetwork
#VirtualNetworkSpec: {
	forProvider: #VirtualNetworkParameters @go(ForProvider)
}

// VirtualNetworkStatus defines the observed state of VirtualNetwork.
#VirtualNetworkStatus: {
	atProvider?: #VirtualNetworkObservation @go(AtProvider)
}

// VirtualNetwork is the Schema for the VirtualNetworks API. Manages a Virtual Network within a DevTest Lab.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#VirtualNetwork: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #VirtualNetworkSpec   @go(Spec)
	status?: #VirtualNetworkStatus @go(Status)
}

// VirtualNetworkList contains a list of VirtualNetworks
#VirtualNetworkList: {
	items: [...#VirtualNetwork] @go(Items,[]VirtualNetwork)
}
