// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devtestlab/v1beta1

package v1beta1

#GlobalVMShutdownScheduleInitParameters: {
	// The time each day when the schedule takes effect. Must match the format HHmm where HH is 00-23 and mm is 00-59 (e.g. 0930, 2300, etc.)
	dailyRecurrenceTime?: null | string @go(DailyRecurrenceTime,*string)

	// Whether to enable the schedule. Possible values are true and false. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The location where the schedule is created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The notification setting of a schedule. A notification_settings as defined below.
	notificationSettings?: [...#NotificationSettingsInitParameters] @go(NotificationSettings,[]NotificationSettingsInitParameters)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The time zone ID (e.g. Pacific Standard time). Refer to this guide for a full list of accepted time zone names.
	timezone?: null | string @go(Timezone,*string)
}

#GlobalVMShutdownScheduleObservation: {
	// The time each day when the schedule takes effect. Must match the format HHmm where HH is 00-23 and mm is 00-59 (e.g. 0930, 2300, etc.)
	dailyRecurrenceTime?: null | string @go(DailyRecurrenceTime,*string)

	// Whether to enable the schedule. Possible values are true and false. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The Dev Test Global Schedule ID.
	id?: null | string @go(ID,*string)

	// The location where the schedule is created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The notification setting of a schedule. A notification_settings as defined below.
	notificationSettings?: [...#NotificationSettingsObservation] @go(NotificationSettings,[]NotificationSettingsObservation)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The time zone ID (e.g. Pacific Standard time). Refer to this guide for a full list of accepted time zone names.
	timezone?: null | string @go(Timezone,*string)

	// The resource ID of the target ARM-based Virtual Machine. Changing this forces a new resource to be created.
	virtualMachineId?: null | string @go(VirtualMachineID,*string)
}

#GlobalVMShutdownScheduleParameters: {
	// The time each day when the schedule takes effect. Must match the format HHmm where HH is 00-23 and mm is 00-59 (e.g. 0930, 2300, etc.)
	// +kubebuilder:validation:Optional
	dailyRecurrenceTime?: null | string @go(DailyRecurrenceTime,*string)

	// Whether to enable the schedule. Possible values are true and false. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The location where the schedule is created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The notification setting of a schedule. A notification_settings as defined below.
	// +kubebuilder:validation:Optional
	notificationSettings?: [...#NotificationSettingsParameters] @go(NotificationSettings,[]NotificationSettingsParameters)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The time zone ID (e.g. Pacific Standard time). Refer to this guide for a full list of accepted time zone names.
	// +kubebuilder:validation:Optional
	timezone?: null | string @go(Timezone,*string)

	// The resource ID of the target ARM-based Virtual Machine. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.LinuxVirtualMachine
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualMachineId?: null | string @go(VirtualMachineID,*string)
}

#NotificationSettingsInitParameters: {
	// E-mail address to which the notification will be sent.
	email?: null | string @go(Email,*string)

	// Whether to enable pre-shutdown notifications. Possible values are true and false.
	enabled?: null | bool @go(Enabled,*bool)

	// Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to 30.
	timeInMinutes?: null | float64 @go(TimeInMinutes,*float64)

	// The webhook URL to which the notification will be sent.
	webhookUrl?: null | string @go(WebhookURL,*string)
}

#NotificationSettingsObservation: {
	// E-mail address to which the notification will be sent.
	email?: null | string @go(Email,*string)

	// Whether to enable pre-shutdown notifications. Possible values are true and false.
	enabled?: null | bool @go(Enabled,*bool)

	// Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to 30.
	timeInMinutes?: null | float64 @go(TimeInMinutes,*float64)

	// The webhook URL to which the notification will be sent.
	webhookUrl?: null | string @go(WebhookURL,*string)
}

#NotificationSettingsParameters: {
	// E-mail address to which the notification will be sent.
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// Whether to enable pre-shutdown notifications. Possible values are true and false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to 30.
	// +kubebuilder:validation:Optional
	timeInMinutes?: null | float64 @go(TimeInMinutes,*float64)

	// The webhook URL to which the notification will be sent.
	// +kubebuilder:validation:Optional
	webhookUrl?: null | string @go(WebhookURL,*string)
}

// GlobalVMShutdownScheduleSpec defines the desired state of GlobalVMShutdownSchedule
#GlobalVMShutdownScheduleSpec: {
	forProvider: #GlobalVMShutdownScheduleParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #GlobalVMShutdownScheduleInitParameters @go(InitProvider)
}

// GlobalVMShutdownScheduleStatus defines the observed state of GlobalVMShutdownSchedule.
#GlobalVMShutdownScheduleStatus: {
	atProvider?: #GlobalVMShutdownScheduleObservation @go(AtProvider)
}

// GlobalVMShutdownSchedule is the Schema for the GlobalVMShutdownSchedules API. Manages automated shutdown schedules for Azure Resource Manager VMs outside of Dev Test Labs.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#GlobalVMShutdownSchedule: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dailyRecurrenceTime) || has(self.initProvider.dailyRecurrenceTime)",message="dailyRecurrenceTime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.notificationSettings) || has(self.initProvider.notificationSettings)",message="notificationSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.timezone) || has(self.initProvider.timezone)",message="timezone is a required parameter"
	spec:    #GlobalVMShutdownScheduleSpec   @go(Spec)
	status?: #GlobalVMShutdownScheduleStatus @go(Status)
}

// GlobalVMShutdownScheduleList contains a list of GlobalVMShutdownSchedules
#GlobalVMShutdownScheduleList: {
	items: [...#GlobalVMShutdownSchedule] @go(Items,[]GlobalVMShutdownSchedule)
}
