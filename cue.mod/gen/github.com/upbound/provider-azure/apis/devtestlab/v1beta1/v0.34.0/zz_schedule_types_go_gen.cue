// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devtestlab/v1beta1

package v1beta1

#DailyRecurrenceObservation: {
	// The time each day when the schedule takes effect.
	time?: null | string @go(Time,*string)
}

#DailyRecurrenceParameters: {
	// The time each day when the schedule takes effect.
	// +kubebuilder:validation:Required
	time?: null | string @go(Time,*string)
}

#HourlyRecurrenceObservation: {
	// Minutes of the hour the schedule will run.
	minute?: null | float64 @go(Minute,*float64)
}

#HourlyRecurrenceParameters: {
	// Minutes of the hour the schedule will run.
	// +kubebuilder:validation:Required
	minute?: null | float64 @go(Minute,*float64)
}

#ScheduleNotificationSettingsObservation: {
	// The status of the notification. Possible values are Enabled and Disabled. Defaults to Disabled
	status?: null | string @go(Status,*string)

	// Time in minutes before event at which notification will be sent.
	timeInMinutes?: null | float64 @go(TimeInMinutes,*float64)

	// The webhook URL to which the notification will be sent.
	webhookUrl?: null | string @go(WebhookURL,*string)
}

#ScheduleNotificationSettingsParameters: {
	// The status of the notification. Possible values are Enabled and Disabled. Defaults to Disabled
	// +kubebuilder:validation:Optional
	status?: null | string @go(Status,*string)

	// Time in minutes before event at which notification will be sent.
	// +kubebuilder:validation:Optional
	timeInMinutes?: null | float64 @go(TimeInMinutes,*float64)

	// The webhook URL to which the notification will be sent.
	// +kubebuilder:validation:Optional
	webhookUrl?: null | string @go(WebhookURL,*string)
}

#ScheduleObservation: {
	// The properties of a daily schedule. If the schedule occurs once each day of the week, specify the daily recurrence. A daily_recurrence block as defined below.
	dailyRecurrence?: [...#DailyRecurrenceObservation] @go(DailyRecurrence,[]DailyRecurrenceObservation)

	// The properties of an hourly schedule. If the schedule occurs multiple times a day, specify the hourly recurrence. A hourly_recurrence block as defined below.
	hourlyRecurrence?: [...#HourlyRecurrenceObservation] @go(HourlyRecurrence,[]HourlyRecurrenceObservation)

	// The ID of the DevTest Schedule.
	id?: null | string @go(ID,*string)

	// The name of the dev test lab. Changing this forces a new resource to be created.
	labName?: null | string @go(LabName,*string)

	// The location where the schedule is created. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The notification setting of a schedule. A notification_settings as defined below.
	notificationSettings?: [...#ScheduleNotificationSettingsObservation] @go(NotificationSettings,[]ScheduleNotificationSettingsObservation)

	// The name of the resource group in which to create the dev test lab schedule. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The status of this schedule. Possible values are Enabled and Disabled. Defaults to Disabled.
	status?: null | string @go(Status,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The task type of the schedule. Possible values include LabVmsShutdownTask and LabVmAutoStart.
	taskType?: null | string @go(TaskType,*string)

	// The time zone ID (e.g. Pacific Standard time).
	timeZoneId?: null | string @go(TimeZoneID,*string)

	// The properties of a weekly schedule. If the schedule occurs only some days of the week, specify the weekly recurrence. A weekly_recurrence block as defined below.
	weeklyRecurrence?: [...#WeeklyRecurrenceObservation] @go(WeeklyRecurrence,[]WeeklyRecurrenceObservation)
}

#ScheduleParameters: {
	// The properties of a daily schedule. If the schedule occurs once each day of the week, specify the daily recurrence. A daily_recurrence block as defined below.
	// +kubebuilder:validation:Optional
	dailyRecurrence?: [...#DailyRecurrenceParameters] @go(DailyRecurrence,[]DailyRecurrenceParameters)

	// The properties of an hourly schedule. If the schedule occurs multiple times a day, specify the hourly recurrence. A hourly_recurrence block as defined below.
	// +kubebuilder:validation:Optional
	hourlyRecurrence?: [...#HourlyRecurrenceParameters] @go(HourlyRecurrence,[]HourlyRecurrenceParameters)

	// The name of the dev test lab. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devtestlab/v1beta1.Lab
	// +kubebuilder:validation:Optional
	labName?: null | string @go(LabName,*string)

	// The location where the schedule is created. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The notification setting of a schedule. A notification_settings as defined below.
	// +kubebuilder:validation:Optional
	notificationSettings?: [...#ScheduleNotificationSettingsParameters] @go(NotificationSettings,[]ScheduleNotificationSettingsParameters)

	// The name of the resource group in which to create the dev test lab schedule. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The status of this schedule. Possible values are Enabled and Disabled. Defaults to Disabled.
	// +kubebuilder:validation:Optional
	status?: null | string @go(Status,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The task type of the schedule. Possible values include LabVmsShutdownTask and LabVmAutoStart.
	// +kubebuilder:validation:Optional
	taskType?: null | string @go(TaskType,*string)

	// The time zone ID (e.g. Pacific Standard time).
	// +kubebuilder:validation:Optional
	timeZoneId?: null | string @go(TimeZoneID,*string)

	// The properties of a weekly schedule. If the schedule occurs only some days of the week, specify the weekly recurrence. A weekly_recurrence block as defined below.
	// +kubebuilder:validation:Optional
	weeklyRecurrence?: [...#WeeklyRecurrenceParameters] @go(WeeklyRecurrence,[]WeeklyRecurrenceParameters)
}

#WeeklyRecurrenceObservation: {
	// The time when the schedule takes effect.
	time?: null | string @go(Time,*string)

	// A list of days that this schedule takes effect . Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	weekDays?: [...null | string] @go(WeekDays,[]*string)
}

#WeeklyRecurrenceParameters: {
	// The time when the schedule takes effect.
	// +kubebuilder:validation:Required
	time?: null | string @go(Time,*string)

	// A list of days that this schedule takes effect . Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	// +kubebuilder:validation:Optional
	weekDays?: [...null | string] @go(WeekDays,[]*string)
}

// ScheduleSpec defines the desired state of Schedule
#ScheduleSpec: {
	forProvider: #ScheduleParameters @go(ForProvider)
}

// ScheduleStatus defines the observed state of Schedule.
#ScheduleStatus: {
	atProvider?: #ScheduleObservation @go(AtProvider)
}

// Schedule is the Schema for the Schedules API. Manages automated startup and shutdown schedules for Azure Dev Test Lab.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Schedule: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.notificationSettings)",message="notificationSettings is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.taskType)",message="taskType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.timeZoneId)",message="timeZoneId is a required parameter"
	spec:    #ScheduleSpec   @go(Spec)
	status?: #ScheduleStatus @go(Status)
}

// ScheduleList contains a list of Schedules
#ScheduleList: {
	items: [...#Schedule] @go(Items,[]Schedule)
}
