// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devtestlab/v1beta1

package v1beta1

#GalleryImageReferenceInitParameters: {
	// The Offer of the Gallery Image. Changing this forces a new resource to be created.
	offer?: null | string @go(Offer,*string)

	// The Publisher of the Gallery Image. Changing this forces a new resource to be created.
	publisher?: null | string @go(Publisher,*string)

	// The SKU of the Gallery Image. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// The Version of the Gallery Image. Changing this forces a new resource to be created.
	version?: null | string @go(Version,*string)
}

#GalleryImageReferenceObservation: {
	// The Offer of the Gallery Image. Changing this forces a new resource to be created.
	offer?: null | string @go(Offer,*string)

	// The Publisher of the Gallery Image. Changing this forces a new resource to be created.
	publisher?: null | string @go(Publisher,*string)

	// The SKU of the Gallery Image. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// The Version of the Gallery Image. Changing this forces a new resource to be created.
	version?: null | string @go(Version,*string)
}

#GalleryImageReferenceParameters: {
	// The Offer of the Gallery Image. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	offer?: null | string @go(Offer,*string)

	// The Publisher of the Gallery Image. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	publisher?: null | string @go(Publisher,*string)

	// The SKU of the Gallery Image. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sku?: null | string @go(Sku,*string)

	// The Version of the Gallery Image. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#InboundNATRuleInitParameters: {
	// The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
	backendPort?: null | float64 @go(BackendPort,*float64)

	// The Protocol used for this NAT Rule. Possible values are Tcp and Udp.
	protocol?: null | string @go(Protocol,*string)
}

#InboundNATRuleObservation: {
	// The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
	backendPort?: null | float64 @go(BackendPort,*float64)

	// The frontend port associated with this Inbound NAT Rule.
	frontendPort?: null | float64 @go(FrontendPort,*float64)

	// The Protocol used for this NAT Rule. Possible values are Tcp and Udp.
	protocol?: null | string @go(Protocol,*string)
}

#InboundNATRuleParameters: {
	// The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	backendPort?: null | float64 @go(BackendPort,*float64)

	// The Protocol used for this NAT Rule. Possible values are Tcp and Udp.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)
}

#LinuxVirtualMachineInitParameters: {
	// Can this Virtual Machine be claimed by users? Defaults to true.
	allowClaim?: null | bool @go(AllowClaim,*bool)

	// Should the Virtual Machine be created without a Public IP Address? Changing this forces a new resource to be created.
	disallowPublicIpAddress?: null | bool @go(DisallowPublicIPAddress,*bool)

	// A gallery_image_reference block as defined below.
	galleryImageReference?: [...#GalleryImageReferenceInitParameters] @go(GalleryImageReference,[]GalleryImageReferenceInitParameters)

	// One or more inbound_nat_rule blocks as defined below. Changing this forces a new resource to be created.
	inboundNatRule?: [...#InboundNATRuleInitParameters] @go(InboundNATRule,[]InboundNATRuleInitParameters)

	// Specifies the supported Azure location where the Dev Test Lab exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the name of the Dev Test Machine. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Any notes about the Virtual Machine.
	notes?: null | string @go(Notes,*string)

	// The SSH Key associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.
	sshKey?: null | string @go(SSHKey,*string)

	// The Machine Size to use for this Virtual Machine, such as Standard_F2. Changing this forces a new resource to be created.
	size?: null | string @go(Size,*string)

	// The type of Storage to use on this Virtual Machine. Possible values are Standard and Premium.
	storageType?: null | string @go(StorageType,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The Username associated with the local administrator on this Virtual Machine. Changing this forces a new resource to be created.
	username?: null | string @go(Username,*string)
}

#LinuxVirtualMachineObservation: {
	// Can this Virtual Machine be claimed by users? Defaults to true.
	allowClaim?: null | bool @go(AllowClaim,*bool)

	// Should the Virtual Machine be created without a Public IP Address? Changing this forces a new resource to be created.
	disallowPublicIpAddress?: null | bool @go(DisallowPublicIPAddress,*bool)

	// The FQDN of the Virtual Machine.
	fqdn?: null | string @go(Fqdn,*string)

	// A gallery_image_reference block as defined below.
	galleryImageReference?: [...#GalleryImageReferenceObservation] @go(GalleryImageReference,[]GalleryImageReferenceObservation)

	// The ID of the Virtual Machine.
	id?: null | string @go(ID,*string)

	// One or more inbound_nat_rule blocks as defined below. Changing this forces a new resource to be created.
	inboundNatRule?: [...#InboundNATRuleObservation] @go(InboundNATRule,[]InboundNATRuleObservation)

	// Specifies the name of the Dev Test Lab in which the Virtual Machine should be created. Changing this forces a new resource to be created.
	labName?: null | string @go(LabName,*string)

	// The name of a Subnet within the Dev Test Virtual Network where this machine should exist. Changing this forces a new resource to be created.
	labSubnetName?: null | string @go(LabSubnetName,*string)

	// The ID of the Dev Test Virtual Network where this Virtual Machine should be created. Changing this forces a new resource to be created.
	labVirtualNetworkId?: null | string @go(LabVirtualNetworkID,*string)

	// Specifies the supported Azure location where the Dev Test Lab exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the name of the Dev Test Machine. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Any notes about the Virtual Machine.
	notes?: null | string @go(Notes,*string)

	// The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SSH Key associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.
	sshKey?: null | string @go(SSHKey,*string)

	// The Machine Size to use for this Virtual Machine, such as Standard_F2. Changing this forces a new resource to be created.
	size?: null | string @go(Size,*string)

	// The type of Storage to use on this Virtual Machine. Possible values are Standard and Premium.
	storageType?: null | string @go(StorageType,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The unique immutable identifier of the Virtual Machine.
	uniqueIdentifier?: null | string @go(UniqueIdentifier,*string)

	// The Username associated with the local administrator on this Virtual Machine. Changing this forces a new resource to be created.
	username?: null | string @go(Username,*string)
}

#LinuxVirtualMachineParameters: {
	// Can this Virtual Machine be claimed by users? Defaults to true.
	// +kubebuilder:validation:Optional
	allowClaim?: null | bool @go(AllowClaim,*bool)

	// Should the Virtual Machine be created without a Public IP Address? Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	disallowPublicIpAddress?: null | bool @go(DisallowPublicIPAddress,*bool)

	// A gallery_image_reference block as defined below.
	// +kubebuilder:validation:Optional
	galleryImageReference?: [...#GalleryImageReferenceParameters] @go(GalleryImageReference,[]GalleryImageReferenceParameters)

	// One or more inbound_nat_rule blocks as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	inboundNatRule?: [...#InboundNATRuleParameters] @go(InboundNATRule,[]InboundNATRuleParameters)

	// Specifies the name of the Dev Test Lab in which the Virtual Machine should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devtestlab/v1beta1.Lab
	// +kubebuilder:validation:Optional
	labName?: null | string @go(LabName,*string)

	// The name of a Subnet within the Dev Test Virtual Network where this machine should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	labSubnetName?: null | string @go(LabSubnetName,*string)

	// The ID of the Dev Test Virtual Network where this Virtual Machine should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devtestlab/v1beta1.VirtualNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	labVirtualNetworkId?: null | string @go(LabVirtualNetworkID,*string)

	// Specifies the supported Azure location where the Dev Test Lab exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the name of the Dev Test Machine. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Any notes about the Virtual Machine.
	// +kubebuilder:validation:Optional
	notes?: null | string @go(Notes,*string)

	// The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SSH Key associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sshKey?: null | string @go(SSHKey,*string)

	// The Machine Size to use for this Virtual Machine, such as Standard_F2. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	size?: null | string @go(Size,*string)

	// The type of Storage to use on this Virtual Machine. Possible values are Standard and Premium.
	// +kubebuilder:validation:Optional
	storageType?: null | string @go(StorageType,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The Username associated with the local administrator on this Virtual Machine. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	username?: null | string @go(Username,*string)
}

// LinuxVirtualMachineSpec defines the desired state of LinuxVirtualMachine
#LinuxVirtualMachineSpec: {
	forProvider: #LinuxVirtualMachineParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #LinuxVirtualMachineInitParameters @go(InitProvider)
}

// LinuxVirtualMachineStatus defines the observed state of LinuxVirtualMachine.
#LinuxVirtualMachineStatus: {
	atProvider?: #LinuxVirtualMachineObservation @go(AtProvider)
}

// LinuxVirtualMachine is the Schema for the LinuxVirtualMachines API. Manages a Linux Virtual Machine within a Dev Test Lab.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LinuxVirtualMachine: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.galleryImageReference) || (has(self.initProvider) && has(self.initProvider.galleryImageReference))",message="spec.forProvider.galleryImageReference is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.size) || (has(self.initProvider) && has(self.initProvider.size))",message="spec.forProvider.size is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageType) || (has(self.initProvider) && has(self.initProvider.storageType))",message="spec.forProvider.storageType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.username) || (has(self.initProvider) && has(self.initProvider.username))",message="spec.forProvider.username is a required parameter"
	spec:    #LinuxVirtualMachineSpec   @go(Spec)
	status?: #LinuxVirtualMachineStatus @go(Status)
}

// LinuxVirtualMachineList contains a list of LinuxVirtualMachines
#LinuxVirtualMachineList: {
	items: [...#LinuxVirtualMachine] @go(Items,[]LinuxVirtualMachine)
}
