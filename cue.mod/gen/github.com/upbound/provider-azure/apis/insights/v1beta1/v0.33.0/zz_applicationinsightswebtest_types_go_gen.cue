// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/insights/v1beta1

package v1beta1

#ApplicationInsightsWebTestObservation: {
	// The ID of the Application Insights component on which the WebTest operates. Changing this forces a new resource to be created.
	applicationInsightsId?: null | string @go(ApplicationInsightsID,*string)

	// An XML configuration specification for a WebTest (see here for more information).
	configuration?: null | string @go(Configuration,*string)

	// Purpose/user defined descriptive test for this WebTest.
	description?: null | string @go(Description,*string)

	// Is the test actively being monitored.
	enabled?: null | bool @go(Enabled,*bool)

	// Interval in seconds between test runs for this WebTest. Valid options are 300, 600 and 900. Defaults to 300.
	frequency?: null | float64 @go(Frequency,*float64)

	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	geoLocations?: [...null | string] @go(GeoLocations,[]*string)
	id?: null | string @go(ID,*string)

	// The kind of web test that this web test watches. Choices are ping and multistep. Changing this forces a new resource to be created.
	kind?: null | string @go(Kind,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created. It needs to correlate with location of parent resource (azurerm_application_insights).
	location?: null | string @go(Location,*string)

	// Specifies the name of the Application Insights WebTest. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The name of the resource group in which to create the Application Insights WebTest. Changing this forces a new resource
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Allow for retries should this WebTest fail.
	retryEnabled?:       null | bool   @go(RetryEnabled,*bool)
	syntheticMonitorId?: null | string @go(SyntheticMonitorID,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Seconds until this WebTest will timeout and fail. Default is 30.
	timeout?: null | float64 @go(Timeout,*float64)
}

#ApplicationInsightsWebTestParameters: {
	// The ID of the Application Insights component on which the WebTest operates. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/insights/v1beta1.ApplicationInsights
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	applicationInsightsId?: null | string @go(ApplicationInsightsID,*string)

	// An XML configuration specification for a WebTest (see here for more information).
	// +kubebuilder:validation:Optional
	configuration?: null | string @go(Configuration,*string)

	// Purpose/user defined descriptive test for this WebTest.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Is the test actively being monitored.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Interval in seconds between test runs for this WebTest. Valid options are 300, 600 and 900. Defaults to 300.
	// +kubebuilder:validation:Optional
	frequency?: null | float64 @go(Frequency,*float64)

	// A list of where to physically run the tests from to give global coverage for accessibility of your application.
	// +kubebuilder:validation:Optional
	geoLocations?: [...null | string] @go(GeoLocations,[]*string)

	// The kind of web test that this web test watches. Choices are ping and multistep. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	kind?: null | string @go(Kind,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created. It needs to correlate with location of parent resource (azurerm_application_insights).
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the name of the Application Insights WebTest. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The name of the resource group in which to create the Application Insights WebTest. Changing this forces a new resource
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Allow for retries should this WebTest fail.
	// +kubebuilder:validation:Optional
	retryEnabled?: null | bool @go(RetryEnabled,*bool)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Seconds until this WebTest will timeout and fail. Default is 30.
	// +kubebuilder:validation:Optional
	timeout?: null | float64 @go(Timeout,*float64)
}

// ApplicationInsightsWebTestSpec defines the desired state of ApplicationInsightsWebTest
#ApplicationInsightsWebTestSpec: {
	forProvider: #ApplicationInsightsWebTestParameters @go(ForProvider)
}

// ApplicationInsightsWebTestStatus defines the observed state of ApplicationInsightsWebTest.
#ApplicationInsightsWebTestStatus: {
	atProvider?: #ApplicationInsightsWebTestObservation @go(AtProvider)
}

// ApplicationInsightsWebTest is the Schema for the ApplicationInsightsWebTests API. Manages an Application Insights WebTest.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ApplicationInsightsWebTest: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.configuration)",message="configuration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.geoLocations)",message="geoLocations is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.kind)",message="kind is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #ApplicationInsightsWebTestSpec   @go(Spec)
	status?: #ApplicationInsightsWebTestStatus @go(Status)
}

// ApplicationInsightsWebTestList contains a list of ApplicationInsightsWebTests
#ApplicationInsightsWebTestList: {
	items: [...#ApplicationInsightsWebTest] @go(Items,[]ApplicationInsightsWebTest)
}
