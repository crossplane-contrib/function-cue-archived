// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/insights/v1beta1

package v1beta1

#CapacityInitParameters: {
	// The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between 0 and 1000.
	default?: null | float64 @go(Default,*float64)

	// The maximum number of instances for this resource. Valid values are between 0 and 1000.
	maximum?: null | float64 @go(Maximum,*float64)

	// The minimum number of instances for this resource. Valid values are between 0 and 1000.
	minimum?: null | float64 @go(Minimum,*float64)
}

#CapacityObservation: {
	// The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between 0 and 1000.
	default?: null | float64 @go(Default,*float64)

	// The maximum number of instances for this resource. Valid values are between 0 and 1000.
	maximum?: null | float64 @go(Maximum,*float64)

	// The minimum number of instances for this resource. Valid values are between 0 and 1000.
	minimum?: null | float64 @go(Minimum,*float64)
}

#CapacityParameters: {
	// The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between 0 and 1000.
	// +kubebuilder:validation:Optional
	default?: null | float64 @go(Default,*float64)

	// The maximum number of instances for this resource. Valid values are between 0 and 1000.
	// +kubebuilder:validation:Optional
	maximum?: null | float64 @go(Maximum,*float64)

	// The minimum number of instances for this resource. Valid values are between 0 and 1000.
	// +kubebuilder:validation:Optional
	minimum?: null | float64 @go(Minimum,*float64)
}

#DimensionsInitParameters: {
	// Specifies the name of the profile.
	name?: null | string @go(Name,*string)

	// Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.
	operator?: null | string @go(Operator,*string)

	// A list of dimension values.
	values?: [...null | string] @go(Values,[]*string)
}

#DimensionsObservation: {
	// Specifies the name of the profile.
	name?: null | string @go(Name,*string)

	// Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.
	operator?: null | string @go(Operator,*string)

	// A list of dimension values.
	values?: [...null | string] @go(Values,[]*string)
}

#DimensionsParameters: {
	// Specifies the name of the profile.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of dimension values.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#EmailInitParameters: {
	// Specifies a list of custom email addresses to which the email notifications will be sent.
	customEmails?: [...null | string] @go(CustomEmails,[]*string)

	// Should email notifications be sent to the subscription administrator? Defaults to false.
	sendToSubscriptionAdministrator?: null | bool @go(SendToSubscriptionAdministrator,*bool)

	// Should email notifications be sent to the subscription co-administrator? Defaults to false.
	sendToSubscriptionCoAdministrator?: null | bool @go(SendToSubscriptionCoAdministrator,*bool)
}

#EmailObservation: {
	// Specifies a list of custom email addresses to which the email notifications will be sent.
	customEmails?: [...null | string] @go(CustomEmails,[]*string)

	// Should email notifications be sent to the subscription administrator? Defaults to false.
	sendToSubscriptionAdministrator?: null | bool @go(SendToSubscriptionAdministrator,*bool)

	// Should email notifications be sent to the subscription co-administrator? Defaults to false.
	sendToSubscriptionCoAdministrator?: null | bool @go(SendToSubscriptionCoAdministrator,*bool)
}

#EmailParameters: {
	// Specifies a list of custom email addresses to which the email notifications will be sent.
	// +kubebuilder:validation:Optional
	customEmails?: [...null | string] @go(CustomEmails,[]*string)

	// Should email notifications be sent to the subscription administrator? Defaults to false.
	// +kubebuilder:validation:Optional
	sendToSubscriptionAdministrator?: null | bool @go(SendToSubscriptionAdministrator,*bool)

	// Should email notifications be sent to the subscription co-administrator? Defaults to false.
	// +kubebuilder:validation:Optional
	sendToSubscriptionCoAdministrator?: null | bool @go(SendToSubscriptionCoAdministrator,*bool)
}

#FixedDateInitParameters: {
	// Specifies the end date for the profile, formatted as an RFC3339 date string.
	end?: null | string @go(End,*string)

	// Specifies the start date for the profile, formatted as an RFC3339 date string.
	start?: null | string @go(Start,*string)

	// The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.
	timezone?: null | string @go(Timezone,*string)
}

#FixedDateObservation: {
	// Specifies the end date for the profile, formatted as an RFC3339 date string.
	end?: null | string @go(End,*string)

	// Specifies the start date for the profile, formatted as an RFC3339 date string.
	start?: null | string @go(Start,*string)

	// The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.
	timezone?: null | string @go(Timezone,*string)
}

#FixedDateParameters: {
	// Specifies the end date for the profile, formatted as an RFC3339 date string.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// Specifies the start date for the profile, formatted as an RFC3339 date string.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)

	// The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.
	// +kubebuilder:validation:Optional
	timezone?: null | string @go(Timezone,*string)
}

#MetricTriggerInitParameters: {
	// One or more dimensions block as defined below.
	dimensions?: [...#DimensionsInitParameters] @go(Dimensions,[]DimensionsInitParameters)

	// Whether to enable metric divide by instance count.
	divideByInstanceCount?: null | bool @go(DivideByInstanceCount,*bool)

	// The name of the metric that defines what the rule monitors, such as Percentage CPU for Virtual Machine Scale Sets and CpuPercentage for App Service Plan.
	metricName?: null | string @go(MetricName,*string)

	// The namespace of the metric that defines what the rule monitors, such as microsoft.compute/virtualmachinescalesets for Virtual Machine Scale Sets.
	metricNamespace?: null | string @go(MetricNamespace,*string)

	// Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.
	operator?: null | string @go(Operator,*string)

	// Specifies how the metrics from multiple instances are combined. Possible values are Average, Max, Min and Sum.
	statistic?: null | string @go(Statistic,*string)

	// Specifies the threshold of the metric that triggers the scale action.
	threshold?: null | float64 @go(Threshold,*float64)

	// Specifies how the data that's collected should be combined over time. Possible values include Average, Count, Maximum, Minimum, Last and Total.
	timeAggregation?: null | string @go(TimeAggregation,*string)

	// Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.
	timeGrain?: null | string @go(TimeGrain,*string)

	// Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.
	timeWindow?: null | string @go(TimeWindow,*string)
}

#MetricTriggerObservation: {
	// One or more dimensions block as defined below.
	dimensions?: [...#DimensionsObservation] @go(Dimensions,[]DimensionsObservation)

	// Whether to enable metric divide by instance count.
	divideByInstanceCount?: null | bool @go(DivideByInstanceCount,*bool)

	// The name of the metric that defines what the rule monitors, such as Percentage CPU for Virtual Machine Scale Sets and CpuPercentage for App Service Plan.
	metricName?: null | string @go(MetricName,*string)

	// The namespace of the metric that defines what the rule monitors, such as microsoft.compute/virtualmachinescalesets for Virtual Machine Scale Sets.
	metricNamespace?: null | string @go(MetricNamespace,*string)

	// The ID of the Resource which the Rule monitors.
	metricResourceId?: null | string @go(MetricResourceID,*string)

	// Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.
	operator?: null | string @go(Operator,*string)

	// Specifies how the metrics from multiple instances are combined. Possible values are Average, Max, Min and Sum.
	statistic?: null | string @go(Statistic,*string)

	// Specifies the threshold of the metric that triggers the scale action.
	threshold?: null | float64 @go(Threshold,*float64)

	// Specifies how the data that's collected should be combined over time. Possible values include Average, Count, Maximum, Minimum, Last and Total.
	timeAggregation?: null | string @go(TimeAggregation,*string)

	// Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.
	timeGrain?: null | string @go(TimeGrain,*string)

	// Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.
	timeWindow?: null | string @go(TimeWindow,*string)
}

#MetricTriggerParameters: {
	// One or more dimensions block as defined below.
	// +kubebuilder:validation:Optional
	dimensions?: [...#DimensionsParameters] @go(Dimensions,[]DimensionsParameters)

	// Whether to enable metric divide by instance count.
	// +kubebuilder:validation:Optional
	divideByInstanceCount?: null | bool @go(DivideByInstanceCount,*bool)

	// The name of the metric that defines what the rule monitors, such as Percentage CPU for Virtual Machine Scale Sets and CpuPercentage for App Service Plan.
	// +kubebuilder:validation:Optional
	metricName?: null | string @go(MetricName,*string)

	// The namespace of the metric that defines what the rule monitors, such as microsoft.compute/virtualmachinescalesets for Virtual Machine Scale Sets.
	// +kubebuilder:validation:Optional
	metricNamespace?: null | string @go(MetricNamespace,*string)

	// The ID of the Resource which the Rule monitors.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.LinuxVirtualMachineScaleSet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	metricResourceId?: null | string @go(MetricResourceID,*string)

	// Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Specifies how the metrics from multiple instances are combined. Possible values are Average, Max, Min and Sum.
	// +kubebuilder:validation:Optional
	statistic?: null | string @go(Statistic,*string)

	// Specifies the threshold of the metric that triggers the scale action.
	// +kubebuilder:validation:Optional
	threshold?: null | float64 @go(Threshold,*float64)

	// Specifies how the data that's collected should be combined over time. Possible values include Average, Count, Maximum, Minimum, Last and Total.
	// +kubebuilder:validation:Optional
	timeAggregation?: null | string @go(TimeAggregation,*string)

	// Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.
	// +kubebuilder:validation:Optional
	timeGrain?: null | string @go(TimeGrain,*string)

	// Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.
	// +kubebuilder:validation:Optional
	timeWindow?: null | string @go(TimeWindow,*string)
}

#MonitorAutoscaleSettingInitParameters: {
	// Specifies whether automatic scaling is enabled for the target resource. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the AutoScale Setting. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Specifies a notification block as defined below.
	notification?: [...#NotificationInitParameters] @go(Notification,[]NotificationInitParameters)

	// Specifies one or more (up to 20) profile blocks as defined below.
	profile?: [...#ProfileInitParameters] @go(Profile,[]ProfileInitParameters)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#MonitorAutoscaleSettingObservation: {
	// Specifies whether automatic scaling is enabled for the target resource. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the AutoScale Setting.
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the AutoScale Setting. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Specifies a notification block as defined below.
	notification?: [...#NotificationObservation] @go(Notification,[]NotificationObservation)

	// Specifies one or more (up to 20) profile blocks as defined below.
	profile?: [...#ProfileObservation] @go(Profile,[]ProfileObservation)

	// The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.
	targetResourceId?: null | string @go(TargetResourceID,*string)
}

#MonitorAutoscaleSettingParameters: {
	// Specifies whether automatic scaling is enabled for the target resource. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the AutoScale Setting. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies a notification block as defined below.
	// +kubebuilder:validation:Optional
	notification?: [...#NotificationParameters] @go(Notification,[]NotificationParameters)

	// Specifies one or more (up to 20) profile blocks as defined below.
	// +kubebuilder:validation:Optional
	profile?: [...#ProfileParameters] @go(Profile,[]ProfileParameters)

	// The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.LinuxVirtualMachineScaleSet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	targetResourceId?: null | string @go(TargetResourceID,*string)
}

#NotificationInitParameters: {
	// A email block as defined below.
	email?: [...#EmailInitParameters] @go(Email,[]EmailInitParameters)

	// One or more webhook blocks as defined below.
	webhook?: [...#WebhookInitParameters] @go(Webhook,[]WebhookInitParameters)
}

#NotificationObservation: {
	// A email block as defined below.
	email?: [...#EmailObservation] @go(Email,[]EmailObservation)

	// One or more webhook blocks as defined below.
	webhook?: [...#WebhookObservation] @go(Webhook,[]WebhookObservation)
}

#NotificationParameters: {
	// A email block as defined below.
	// +kubebuilder:validation:Optional
	email?: [...#EmailParameters] @go(Email,[]EmailParameters)

	// One or more webhook blocks as defined below.
	// +kubebuilder:validation:Optional
	webhook?: [...#WebhookParameters] @go(Webhook,[]WebhookParameters)
}

#ProfileInitParameters: {
	// A capacity block as defined below.
	capacity?: [...#CapacityInitParameters] @go(Capacity,[]CapacityInitParameters)

	// A fixed_date block as defined below. This cannot be specified if a recurrence block is specified.
	fixedDate?: [...#FixedDateInitParameters] @go(FixedDate,[]FixedDateInitParameters)

	// Specifies the name of the profile.
	name?: null | string @go(Name,*string)

	// A recurrence block as defined below. This cannot be specified if a fixed_date block is specified.
	recurrence?: [...#RecurrenceInitParameters] @go(Recurrence,[]RecurrenceInitParameters)

	// One or more (up to 10) rule blocks as defined below.
	rule?: [...#RuleInitParameters] @go(Rule,[]RuleInitParameters)
}

#ProfileObservation: {
	// A capacity block as defined below.
	capacity?: [...#CapacityObservation] @go(Capacity,[]CapacityObservation)

	// A fixed_date block as defined below. This cannot be specified if a recurrence block is specified.
	fixedDate?: [...#FixedDateObservation] @go(FixedDate,[]FixedDateObservation)

	// Specifies the name of the profile.
	name?: null | string @go(Name,*string)

	// A recurrence block as defined below. This cannot be specified if a fixed_date block is specified.
	recurrence?: [...#RecurrenceObservation] @go(Recurrence,[]RecurrenceObservation)

	// One or more (up to 10) rule blocks as defined below.
	rule?: [...#RuleObservation] @go(Rule,[]RuleObservation)
}

#ProfileParameters: {
	// A capacity block as defined below.
	// +kubebuilder:validation:Optional
	capacity: [...#CapacityParameters] @go(Capacity,[]CapacityParameters)

	// A fixed_date block as defined below. This cannot be specified if a recurrence block is specified.
	// +kubebuilder:validation:Optional
	fixedDate?: [...#FixedDateParameters] @go(FixedDate,[]FixedDateParameters)

	// Specifies the name of the profile.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A recurrence block as defined below. This cannot be specified if a fixed_date block is specified.
	// +kubebuilder:validation:Optional
	recurrence?: [...#RecurrenceParameters] @go(Recurrence,[]RecurrenceParameters)

	// One or more (up to 10) rule blocks as defined below.
	// +kubebuilder:validation:Optional
	rule?: [...#RuleParameters] @go(Rule,[]RuleParameters)
}

#RecurrenceInitParameters: {
	// A list of days that this profile takes effect on. Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	days?: [...null | string] @go(Days,[]*string)

	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from 0 to 23.
	hours?: [...null | float64] @go(Hours,[]*float64)

	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	minutes?: [...null | float64] @go(Minutes,[]*float64)

	// The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.
	timezone?: null | string @go(Timezone,*string)
}

#RecurrenceObservation: {
	// A list of days that this profile takes effect on. Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	days?: [...null | string] @go(Days,[]*string)

	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from 0 to 23.
	hours?: [...null | float64] @go(Hours,[]*float64)

	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	minutes?: [...null | float64] @go(Minutes,[]*float64)

	// The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.
	timezone?: null | string @go(Timezone,*string)
}

#RecurrenceParameters: {
	// A list of days that this profile takes effect on. Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.
	// +kubebuilder:validation:Optional
	days: [...null | string] @go(Days,[]*string)

	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from 0 to 23.
	// +kubebuilder:validation:Optional
	hours: [...null | float64] @go(Hours,[]*float64)

	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	// +kubebuilder:validation:Optional
	minutes: [...null | float64] @go(Minutes,[]*float64)

	// The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.
	// +kubebuilder:validation:Optional
	timezone?: null | string @go(Timezone,*string)
}

#RuleInitParameters: {
	// A metric_trigger block as defined below.
	metricTrigger?: [...#MetricTriggerInitParameters] @go(MetricTrigger,[]MetricTriggerInitParameters)

	// A scale_action block as defined below.
	scaleAction?: [...#ScaleActionInitParameters] @go(ScaleAction,[]ScaleActionInitParameters)
}

#RuleObservation: {
	// A metric_trigger block as defined below.
	metricTrigger?: [...#MetricTriggerObservation] @go(MetricTrigger,[]MetricTriggerObservation)

	// A scale_action block as defined below.
	scaleAction?: [...#ScaleActionObservation] @go(ScaleAction,[]ScaleActionObservation)
}

#RuleParameters: {
	// A metric_trigger block as defined below.
	// +kubebuilder:validation:Optional
	metricTrigger: [...#MetricTriggerParameters] @go(MetricTrigger,[]MetricTriggerParameters)

	// A scale_action block as defined below.
	// +kubebuilder:validation:Optional
	scaleAction: [...#ScaleActionParameters] @go(ScaleAction,[]ScaleActionParameters)
}

#ScaleActionInitParameters: {
	// The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.
	cooldown?: null | string @go(Cooldown,*string)

	// The scale direction. Possible values are Increase and Decrease.
	direction?: null | string @go(Direction,*string)

	// The type of action that should occur. Possible values are ChangeCount, ExactCount, PercentChangeCount and ServiceAllowedNextValue.
	type?: null | string @go(Type,*string)

	// The number of instances involved in the scaling action.
	value?: null | float64 @go(Value,*float64)
}

#ScaleActionObservation: {
	// The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.
	cooldown?: null | string @go(Cooldown,*string)

	// The scale direction. Possible values are Increase and Decrease.
	direction?: null | string @go(Direction,*string)

	// The type of action that should occur. Possible values are ChangeCount, ExactCount, PercentChangeCount and ServiceAllowedNextValue.
	type?: null | string @go(Type,*string)

	// The number of instances involved in the scaling action.
	value?: null | float64 @go(Value,*float64)
}

#ScaleActionParameters: {
	// The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.
	// +kubebuilder:validation:Optional
	cooldown?: null | string @go(Cooldown,*string)

	// The scale direction. Possible values are Increase and Decrease.
	// +kubebuilder:validation:Optional
	direction?: null | string @go(Direction,*string)

	// The type of action that should occur. Possible values are ChangeCount, ExactCount, PercentChangeCount and ServiceAllowedNextValue.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// The number of instances involved in the scaling action.
	// +kubebuilder:validation:Optional
	value?: null | float64 @go(Value,*float64)
}

#WebhookInitParameters: {
	// A map of settings.
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// The HTTPS URI which should receive scale notifications.
	serviceUri?: null | string @go(ServiceURI,*string)
}

#WebhookObservation: {
	// A map of settings.
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// The HTTPS URI which should receive scale notifications.
	serviceUri?: null | string @go(ServiceURI,*string)
}

#WebhookParameters: {
	// A map of settings.
	// +kubebuilder:validation:Optional
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// The HTTPS URI which should receive scale notifications.
	// +kubebuilder:validation:Optional
	serviceUri?: null | string @go(ServiceURI,*string)
}

// MonitorAutoscaleSettingSpec defines the desired state of MonitorAutoscaleSetting
#MonitorAutoscaleSettingSpec: {
	forProvider: #MonitorAutoscaleSettingParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MonitorAutoscaleSettingInitParameters @go(InitProvider)
}

// MonitorAutoscaleSettingStatus defines the observed state of MonitorAutoscaleSetting.
#MonitorAutoscaleSettingStatus: {
	atProvider?: #MonitorAutoscaleSettingObservation @go(AtProvider)
}

// MonitorAutoscaleSetting is the Schema for the MonitorAutoscaleSettings API. Manages an AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MonitorAutoscaleSetting: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.profile) || (has(self.initProvider) && has(self.initProvider.profile))",message="spec.forProvider.profile is a required parameter"
	spec:    #MonitorAutoscaleSettingSpec   @go(Spec)
	status?: #MonitorAutoscaleSettingStatus @go(Status)
}

// MonitorAutoscaleSettingList contains a list of MonitorAutoscaleSettings
#MonitorAutoscaleSettingList: {
	items: [...#MonitorAutoscaleSetting] @go(Items,[]MonitorAutoscaleSetting)
}
