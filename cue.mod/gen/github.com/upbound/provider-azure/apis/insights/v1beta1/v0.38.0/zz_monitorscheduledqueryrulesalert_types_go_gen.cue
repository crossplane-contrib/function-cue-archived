// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/insights/v1beta1

package v1beta1

#MonitorScheduledQueryRulesAlertActionInitParameters: {
	// Custom payload to be sent for all webhook payloads in alerting action.
	customWebhookPayload?: null | string @go(CustomWebhookPayload,*string)

	// Custom subject override for all email ids in Azure action group.
	emailSubject?: null | string @go(EmailSubject,*string)
}

#MonitorScheduledQueryRulesAlertActionObservation: {
	// List of action group reference resource IDs.
	actionGroup?: [...null | string] @go(ActionGroup,[]*string)

	// Custom payload to be sent for all webhook payloads in alerting action.
	customWebhookPayload?: null | string @go(CustomWebhookPayload,*string)

	// Custom subject override for all email ids in Azure action group.
	emailSubject?: null | string @go(EmailSubject,*string)
}

#MonitorScheduledQueryRulesAlertActionParameters: {
	// List of action group reference resource IDs.
	// +crossplane:generate:reference:type=MonitorActionGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	actionGroup?: [...null | string] @go(ActionGroup,[]*string)

	// Custom payload to be sent for all webhook payloads in alerting action.
	// +kubebuilder:validation:Optional
	customWebhookPayload?: null | string @go(CustomWebhookPayload,*string)

	// Custom subject override for all email ids in Azure action group.
	// +kubebuilder:validation:Optional
	emailSubject?: null | string @go(EmailSubject,*string)
}

#MonitorScheduledQueryRulesAlertInitParameters: {
	// An action block as defined below.
	action?: [...#MonitorScheduledQueryRulesAlertActionInitParameters] @go(Action,[]MonitorScheduledQueryRulesAlertActionInitParameters)

	// List of Resource IDs referred into query.
	authorizedResourceIds?: [...null | string] @go(AuthorizedResourceIds,[]*string)

	// Should the alerts in this Metric Alert be auto resolved? Defaults to false.
	// -> NOTE auto_mitigation_enabled and throttling are mutually exclusive and cannot both be set.
	autoMitigationEnabled?: null | bool @go(AutoMitigationEnabled,*bool)

	// The description of the scheduled query rule.
	description?: null | string @go(Description,*string)

	// Whether this scheduled query rule is enabled. Default is true.
	enabled?: null | bool @go(Enabled,*bool)

	// Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
	frequency?: null | float64 @go(Frequency,*float64)

	// Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the scheduled query rule. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Log search query.
	query?: null | string @go(Query,*string)

	// The type of query results. Possible values are ResultCount and Number. Default is ResultCount. If set to Number, query must include an AggregatedValue column of a numeric type, for example, Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m).
	queryType?: null | string @go(QueryType,*string)

	// Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
	severity?: null | float64 @go(Severity,*float64)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
	throttling?: null | float64 @go(Throttling,*float64)

	// Time window for which data needs to be fetched for query (must be greater than or equal to frequency). Values must be between 5 and 2880 (inclusive).
	timeWindow?: null | float64 @go(TimeWindow,*float64)

	// A trigger block as defined below.
	trigger?: [...#TriggerInitParameters] @go(Trigger,[]TriggerInitParameters)
}

#MonitorScheduledQueryRulesAlertObservation: {
	// An action block as defined below.
	action?: [...#MonitorScheduledQueryRulesAlertActionObservation] @go(Action,[]MonitorScheduledQueryRulesAlertActionObservation)

	// List of Resource IDs referred into query.
	authorizedResourceIds?: [...null | string] @go(AuthorizedResourceIds,[]*string)

	// Should the alerts in this Metric Alert be auto resolved? Defaults to false.
	// -> NOTE auto_mitigation_enabled and throttling are mutually exclusive and cannot both be set.
	autoMitigationEnabled?: null | bool @go(AutoMitigationEnabled,*bool)

	// The resource URI over which log search query is to be run.
	dataSourceId?: null | string @go(DataSourceID,*string)

	// The description of the scheduled query rule.
	description?: null | string @go(Description,*string)

	// Whether this scheduled query rule is enabled. Default is true.
	enabled?: null | bool @go(Enabled,*bool)

	// Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
	frequency?: null | float64 @go(Frequency,*float64)

	// The ID of the scheduled query rule.
	id?: null | string @go(ID,*string)

	// Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the scheduled query rule. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Log search query.
	query?: null | string @go(Query,*string)

	// The type of query results. Possible values are ResultCount and Number. Default is ResultCount. If set to Number, query must include an AggregatedValue column of a numeric type, for example, Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m).
	queryType?: null | string @go(QueryType,*string)

	// The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
	severity?: null | float64 @go(Severity,*float64)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
	throttling?: null | float64 @go(Throttling,*float64)

	// Time window for which data needs to be fetched for query (must be greater than or equal to frequency). Values must be between 5 and 2880 (inclusive).
	timeWindow?: null | float64 @go(TimeWindow,*float64)

	// A trigger block as defined below.
	trigger?: [...#TriggerObservation] @go(Trigger,[]TriggerObservation)
}

#MonitorScheduledQueryRulesAlertParameters: {
	// An action block as defined below.
	// +kubebuilder:validation:Optional
	action?: [...#MonitorScheduledQueryRulesAlertActionParameters] @go(Action,[]MonitorScheduledQueryRulesAlertActionParameters)

	// List of Resource IDs referred into query.
	// +kubebuilder:validation:Optional
	authorizedResourceIds?: [...null | string] @go(AuthorizedResourceIds,[]*string)

	// Should the alerts in this Metric Alert be auto resolved? Defaults to false.
	// -> NOTE auto_mitigation_enabled and throttling are mutually exclusive and cannot both be set.
	// +kubebuilder:validation:Optional
	autoMitigationEnabled?: null | bool @go(AutoMitigationEnabled,*bool)

	// The resource URI over which log search query is to be run.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/insights/v1beta1.ApplicationInsights
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataSourceId?: null | string @go(DataSourceID,*string)

	// The description of the scheduled query rule.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Whether this scheduled query rule is enabled. Default is true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
	// +kubebuilder:validation:Optional
	frequency?: null | float64 @go(Frequency,*float64)

	// Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the scheduled query rule. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Log search query.
	// +kubebuilder:validation:Optional
	query?: null | string @go(Query,*string)

	// The type of query results. Possible values are ResultCount and Number. Default is ResultCount. If set to Number, query must include an AggregatedValue column of a numeric type, for example, Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m).
	// +kubebuilder:validation:Optional
	queryType?: null | string @go(QueryType,*string)

	// The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
	// +kubebuilder:validation:Optional
	severity?: null | float64 @go(Severity,*float64)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
	// +kubebuilder:validation:Optional
	throttling?: null | float64 @go(Throttling,*float64)

	// Time window for which data needs to be fetched for query (must be greater than or equal to frequency). Values must be between 5 and 2880 (inclusive).
	// +kubebuilder:validation:Optional
	timeWindow?: null | float64 @go(TimeWindow,*float64)

	// A trigger block as defined below.
	// +kubebuilder:validation:Optional
	trigger?: [...#TriggerParameters] @go(Trigger,[]TriggerParameters)
}

#TriggerInitParameters: {
	// A metric_trigger block as defined above. Trigger condition for metric query rule.
	metricTrigger?: [...#TriggerMetricTriggerInitParameters] @go(MetricTrigger,[]TriggerMetricTriggerInitParameters)

	// Evaluation operation for rule - 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
	operator?: null | string @go(Operator,*string)

	// Result or count threshold based on which rule should be triggered. Values must be between 0 and 10000 inclusive.
	threshold?: null | float64 @go(Threshold,*float64)
}

#TriggerMetricTriggerInitParameters: {
	// Evaluation of metric on a particular column.
	metricColumn?: null | string @go(MetricColumn,*string)

	// Metric Trigger Type - 'Consecutive' or 'Total'.
	metricTriggerType?: null | string @go(MetricTriggerType,*string)

	// Evaluation operation for rule - 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
	operator?: null | string @go(Operator,*string)

	// Result or count threshold based on which rule should be triggered. Values must be between 0 and 10000 inclusive.
	threshold?: null | float64 @go(Threshold,*float64)
}

#TriggerMetricTriggerObservation: {
	// Evaluation of metric on a particular column.
	metricColumn?: null | string @go(MetricColumn,*string)

	// Metric Trigger Type - 'Consecutive' or 'Total'.
	metricTriggerType?: null | string @go(MetricTriggerType,*string)

	// Evaluation operation for rule - 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
	operator?: null | string @go(Operator,*string)

	// Result or count threshold based on which rule should be triggered. Values must be between 0 and 10000 inclusive.
	threshold?: null | float64 @go(Threshold,*float64)
}

#TriggerMetricTriggerParameters: {
	// Evaluation of metric on a particular column.
	// +kubebuilder:validation:Optional
	metricColumn?: null | string @go(MetricColumn,*string)

	// Metric Trigger Type - 'Consecutive' or 'Total'.
	// +kubebuilder:validation:Optional
	metricTriggerType?: null | string @go(MetricTriggerType,*string)

	// Evaluation operation for rule - 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Result or count threshold based on which rule should be triggered. Values must be between 0 and 10000 inclusive.
	// +kubebuilder:validation:Optional
	threshold?: null | float64 @go(Threshold,*float64)
}

#TriggerObservation: {
	// A metric_trigger block as defined above. Trigger condition for metric query rule.
	metricTrigger?: [...#TriggerMetricTriggerObservation] @go(MetricTrigger,[]TriggerMetricTriggerObservation)

	// Evaluation operation for rule - 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
	operator?: null | string @go(Operator,*string)

	// Result or count threshold based on which rule should be triggered. Values must be between 0 and 10000 inclusive.
	threshold?: null | float64 @go(Threshold,*float64)
}

#TriggerParameters: {
	// A metric_trigger block as defined above. Trigger condition for metric query rule.
	// +kubebuilder:validation:Optional
	metricTrigger?: [...#TriggerMetricTriggerParameters] @go(MetricTrigger,[]TriggerMetricTriggerParameters)

	// Evaluation operation for rule - 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Result or count threshold based on which rule should be triggered. Values must be between 0 and 10000 inclusive.
	// +kubebuilder:validation:Optional
	threshold?: null | float64 @go(Threshold,*float64)
}

// MonitorScheduledQueryRulesAlertSpec defines the desired state of MonitorScheduledQueryRulesAlert
#MonitorScheduledQueryRulesAlertSpec: {
	forProvider: #MonitorScheduledQueryRulesAlertParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MonitorScheduledQueryRulesAlertInitParameters @go(InitProvider)
}

// MonitorScheduledQueryRulesAlertStatus defines the observed state of MonitorScheduledQueryRulesAlert.
#MonitorScheduledQueryRulesAlertStatus: {
	atProvider?: #MonitorScheduledQueryRulesAlertObservation @go(AtProvider)
}

// MonitorScheduledQueryRulesAlert is the Schema for the MonitorScheduledQueryRulesAlerts API. Manages an AlertingAction Scheduled Query Rules resource within Azure Monitor
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MonitorScheduledQueryRulesAlert: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.action) || (has(self.initProvider) && has(self.initProvider.action))",message="spec.forProvider.action is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.frequency) || (has(self.initProvider) && has(self.initProvider.frequency))",message="spec.forProvider.frequency is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.query) || (has(self.initProvider) && has(self.initProvider.query))",message="spec.forProvider.query is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.timeWindow) || (has(self.initProvider) && has(self.initProvider.timeWindow))",message="spec.forProvider.timeWindow is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.trigger) || (has(self.initProvider) && has(self.initProvider.trigger))",message="spec.forProvider.trigger is a required parameter"
	spec:    #MonitorScheduledQueryRulesAlertSpec   @go(Spec)
	status?: #MonitorScheduledQueryRulesAlertStatus @go(Status)
}

// MonitorScheduledQueryRulesAlertList contains a list of MonitorScheduledQueryRulesAlerts
#MonitorScheduledQueryRulesAlertList: {
	items: [...#MonitorScheduledQueryRulesAlert] @go(Items,[]MonitorScheduledQueryRulesAlert)
}
