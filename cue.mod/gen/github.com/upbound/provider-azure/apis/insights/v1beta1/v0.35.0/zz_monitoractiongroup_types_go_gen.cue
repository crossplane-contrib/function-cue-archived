// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/insights/v1beta1

package v1beta1

#AADAuthInitParameters: {
	// The identifier URI for AAD auth.
	identifierUri?: null | string @go(IdentifierURI,*string)

	// The webhook application object Id for AAD auth.
	objectId?: null | string @go(ObjectID,*string)

	// The tenant id for AAD auth.
	tenantId?: null | string @go(TenantID,*string)
}

#AADAuthObservation: {
	// The identifier URI for AAD auth.
	identifierUri?: null | string @go(IdentifierURI,*string)

	// The webhook application object Id for AAD auth.
	objectId?: null | string @go(ObjectID,*string)

	// The tenant id for AAD auth.
	tenantId?: null | string @go(TenantID,*string)
}

#AADAuthParameters: {
	// The identifier URI for AAD auth.
	// +kubebuilder:validation:Optional
	identifierUri?: null | string @go(IdentifierURI,*string)

	// The webhook application object Id for AAD auth.
	// +kubebuilder:validation:Optional
	objectId?: null | string @go(ObjectID,*string)

	// The tenant id for AAD auth.
	// +kubebuilder:validation:Optional
	tenantId?: null | string @go(TenantID,*string)
}

#ArmRoleReceiverInitParameters: {
	// The name of the ARM role receiver.
	name?: null | string @go(Name,*string)

	// The arm role id.
	roleId?: null | string @go(RoleID,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#ArmRoleReceiverObservation: {
	// The name of the ARM role receiver.
	name?: null | string @go(Name,*string)

	// The arm role id.
	roleId?: null | string @go(RoleID,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#ArmRoleReceiverParameters: {
	// The name of the ARM role receiver.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The arm role id.
	// +kubebuilder:validation:Optional
	roleId?: null | string @go(RoleID,*string)

	// Enables or disables the common alert schema.
	// +kubebuilder:validation:Optional
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#AutomationRunBookReceiverInitParameters: {
	// The automation account ID which holds this runbook and authenticates to Azure resources.
	automationAccountId?: null | string @go(AutomationAccountID,*string)

	// Indicates whether this instance is global runbook.
	isGlobalRunbook?: null | bool @go(IsGlobalRunBook,*bool)

	// The name of the automation runbook receiver.
	name?: null | string @go(Name,*string)

	// The name for this runbook.
	runbookName?: null | string @go(RunBookName,*string)

	// The URI where webhooks should be sent.
	serviceUri?: null | string @go(ServiceURI,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)

	// The resource id for webhook linked to this runbook.
	webhookResourceId?: null | string @go(WebhookResourceID,*string)
}

#AutomationRunBookReceiverObservation: {
	// The automation account ID which holds this runbook and authenticates to Azure resources.
	automationAccountId?: null | string @go(AutomationAccountID,*string)

	// Indicates whether this instance is global runbook.
	isGlobalRunbook?: null | bool @go(IsGlobalRunBook,*bool)

	// The name of the automation runbook receiver.
	name?: null | string @go(Name,*string)

	// The name for this runbook.
	runbookName?: null | string @go(RunBookName,*string)

	// The URI where webhooks should be sent.
	serviceUri?: null | string @go(ServiceURI,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)

	// The resource id for webhook linked to this runbook.
	webhookResourceId?: null | string @go(WebhookResourceID,*string)
}

#AutomationRunBookReceiverParameters: {
	// The automation account ID which holds this runbook and authenticates to Azure resources.
	// +kubebuilder:validation:Optional
	automationAccountId?: null | string @go(AutomationAccountID,*string)

	// Indicates whether this instance is global runbook.
	// +kubebuilder:validation:Optional
	isGlobalRunbook?: null | bool @go(IsGlobalRunBook,*bool)

	// The name of the automation runbook receiver.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The name for this runbook.
	// +kubebuilder:validation:Optional
	runbookName?: null | string @go(RunBookName,*string)

	// The URI where webhooks should be sent.
	// +kubebuilder:validation:Optional
	serviceUri?: null | string @go(ServiceURI,*string)

	// Enables or disables the common alert schema.
	// +kubebuilder:validation:Optional
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)

	// The resource id for webhook linked to this runbook.
	// +kubebuilder:validation:Optional
	webhookResourceId?: null | string @go(WebhookResourceID,*string)
}

#AzureAppPushReceiverInitParameters: {
	// The email address of the user signed into the mobile app who will receive push notifications from this receiver.
	emailAddress?: null | string @go(EmailAddress,*string)

	// The name of the Azure app push receiver.
	name?: null | string @go(Name,*string)
}

#AzureAppPushReceiverObservation: {
	// The email address of the user signed into the mobile app who will receive push notifications from this receiver.
	emailAddress?: null | string @go(EmailAddress,*string)

	// The name of the Azure app push receiver.
	name?: null | string @go(Name,*string)
}

#AzureAppPushReceiverParameters: {
	// The email address of the user signed into the mobile app who will receive push notifications from this receiver.
	// +kubebuilder:validation:Optional
	emailAddress?: null | string @go(EmailAddress,*string)

	// The name of the Azure app push receiver.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#AzureFunctionReceiverInitParameters: {
	// The Azure resource ID of the function app.
	functionAppResourceId?: null | string @go(FunctionAppResourceID,*string)

	// The function name in the function app.
	functionName?: null | string @go(FunctionName,*string)

	// The HTTP trigger url where HTTP request sent to.
	httpTriggerUrl?: null | string @go(HTTPTriggerURL,*string)

	// The name of the Azure Function receiver.
	name?: null | string @go(Name,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#AzureFunctionReceiverObservation: {
	// The Azure resource ID of the function app.
	functionAppResourceId?: null | string @go(FunctionAppResourceID,*string)

	// The function name in the function app.
	functionName?: null | string @go(FunctionName,*string)

	// The HTTP trigger url where HTTP request sent to.
	httpTriggerUrl?: null | string @go(HTTPTriggerURL,*string)

	// The name of the Azure Function receiver.
	name?: null | string @go(Name,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#AzureFunctionReceiverParameters: {
	// The Azure resource ID of the function app.
	// +kubebuilder:validation:Optional
	functionAppResourceId?: null | string @go(FunctionAppResourceID,*string)

	// The function name in the function app.
	// +kubebuilder:validation:Optional
	functionName?: null | string @go(FunctionName,*string)

	// The HTTP trigger url where HTTP request sent to.
	// +kubebuilder:validation:Optional
	httpTriggerUrl?: null | string @go(HTTPTriggerURL,*string)

	// The name of the Azure Function receiver.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Enables or disables the common alert schema.
	// +kubebuilder:validation:Optional
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#EmailReceiverInitParameters: {
	// The email address of this receiver.
	emailAddress?: null | string @go(EmailAddress,*string)

	// The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	name?: null | string @go(Name,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#EmailReceiverObservation: {
	// The email address of this receiver.
	emailAddress?: null | string @go(EmailAddress,*string)

	// The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	name?: null | string @go(Name,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#EmailReceiverParameters: {
	// The email address of this receiver.
	// +kubebuilder:validation:Optional
	emailAddress?: null | string @go(EmailAddress,*string)

	// The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Enables or disables the common alert schema.
	// +kubebuilder:validation:Optional
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#EventHubReceiverInitParameters: {
	// The resource ID of the respective Event Hub.
	eventHubId?: null | string @go(EventHubID,*string)

	// The name of the specific Event Hub queue.
	eventHubName?: null | string @go(EventHubName,*string)

	// The namespace name of the Event Hub.
	eventHubNamespace?: null | string @go(EventHubNamespace,*string)

	// The name of the EventHub Receiver, must be unique within action group.
	name?: null | string @go(Name,*string)

	// The ID for the subscription containing this Event Hub. Default to the subscription ID of the Action Group.
	subscriptionId?: null | string @go(SubscriptionID,*string)

	// The Tenant ID for the subscription containing this Event Hub.
	tenantId?: null | string @go(TenantID,*string)

	// Indicates whether to use common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#EventHubReceiverObservation: {
	// The resource ID of the respective Event Hub.
	eventHubId?: null | string @go(EventHubID,*string)

	// The name of the specific Event Hub queue.
	eventHubName?: null | string @go(EventHubName,*string)

	// The namespace name of the Event Hub.
	eventHubNamespace?: null | string @go(EventHubNamespace,*string)

	// The name of the EventHub Receiver, must be unique within action group.
	name?: null | string @go(Name,*string)

	// The ID for the subscription containing this Event Hub. Default to the subscription ID of the Action Group.
	subscriptionId?: null | string @go(SubscriptionID,*string)

	// The Tenant ID for the subscription containing this Event Hub.
	tenantId?: null | string @go(TenantID,*string)

	// Indicates whether to use common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#EventHubReceiverParameters: {
	// The resource ID of the respective Event Hub.
	// +kubebuilder:validation:Optional
	eventHubId?: null | string @go(EventHubID,*string)

	// The name of the specific Event Hub queue.
	// +kubebuilder:validation:Optional
	eventHubName?: null | string @go(EventHubName,*string)

	// The namespace name of the Event Hub.
	// +kubebuilder:validation:Optional
	eventHubNamespace?: null | string @go(EventHubNamespace,*string)

	// The name of the EventHub Receiver, must be unique within action group.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID for the subscription containing this Event Hub. Default to the subscription ID of the Action Group.
	// +kubebuilder:validation:Optional
	subscriptionId?: null | string @go(SubscriptionID,*string)

	// The Tenant ID for the subscription containing this Event Hub.
	// +kubebuilder:validation:Optional
	tenantId?: null | string @go(TenantID,*string)

	// Indicates whether to use common alert schema.
	// +kubebuilder:validation:Optional
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#ItsmReceiverInitParameters: {
	// The unique connection identifier of the ITSM connection.
	connectionId?: null | string @go(ConnectionID,*string)

	// The name of the ITSM receiver.
	name?: null | string @go(Name,*string)

	// The region of the workspace.
	region?: null | string @go(Region,*string)

	// A JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
	ticketConfiguration?: null | string @go(TicketConfiguration,*string)

	// The Azure Log Analytics workspace ID where this connection is defined. Format is <subscription id>|<workspace id>, for example 00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000.
	workspaceId?: null | string @go(WorkspaceID,*string)
}

#ItsmReceiverObservation: {
	// The unique connection identifier of the ITSM connection.
	connectionId?: null | string @go(ConnectionID,*string)

	// The name of the ITSM receiver.
	name?: null | string @go(Name,*string)

	// The region of the workspace.
	region?: null | string @go(Region,*string)

	// A JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
	ticketConfiguration?: null | string @go(TicketConfiguration,*string)

	// The Azure Log Analytics workspace ID where this connection is defined. Format is <subscription id>|<workspace id>, for example 00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000.
	workspaceId?: null | string @go(WorkspaceID,*string)
}

#ItsmReceiverParameters: {
	// The unique connection identifier of the ITSM connection.
	// +kubebuilder:validation:Optional
	connectionId?: null | string @go(ConnectionID,*string)

	// The name of the ITSM receiver.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The region of the workspace.
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)

	// A JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
	// +kubebuilder:validation:Optional
	ticketConfiguration?: null | string @go(TicketConfiguration,*string)

	// The Azure Log Analytics workspace ID where this connection is defined. Format is <subscription id>|<workspace id>, for example 00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000.
	// +kubebuilder:validation:Optional
	workspaceId?: null | string @go(WorkspaceID,*string)
}

#LogicAppReceiverInitParameters: {
	// The callback url where HTTP request sent to.
	callbackUrl?: null | string @go(CallbackURL,*string)

	// The name of the logic app receiver.
	name?: null | string @go(Name,*string)

	// The Azure resource ID of the logic app.
	resourceId?: null | string @go(ResourceID,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#LogicAppReceiverObservation: {
	// The callback url where HTTP request sent to.
	callbackUrl?: null | string @go(CallbackURL,*string)

	// The name of the logic app receiver.
	name?: null | string @go(Name,*string)

	// The Azure resource ID of the logic app.
	resourceId?: null | string @go(ResourceID,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#LogicAppReceiverParameters: {
	// The callback url where HTTP request sent to.
	// +kubebuilder:validation:Optional
	callbackUrl?: null | string @go(CallbackURL,*string)

	// The name of the logic app receiver.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Azure resource ID of the logic app.
	// +kubebuilder:validation:Optional
	resourceId?: null | string @go(ResourceID,*string)

	// Enables or disables the common alert schema.
	// +kubebuilder:validation:Optional
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#MonitorActionGroupInitParameters: {
	// One or more arm_role_receiver blocks as defined below.
	armRoleReceiver?: [...#ArmRoleReceiverInitParameters] @go(ArmRoleReceiver,[]ArmRoleReceiverInitParameters)

	// One or more automation_runbook_receiver blocks as defined below.
	automationRunbookReceiver?: [...#AutomationRunBookReceiverInitParameters] @go(AutomationRunBookReceiver,[]AutomationRunBookReceiverInitParameters)

	// One or more azure_app_push_receiver blocks as defined below.
	azureAppPushReceiver?: [...#AzureAppPushReceiverInitParameters] @go(AzureAppPushReceiver,[]AzureAppPushReceiverInitParameters)

	// One or more azure_function_receiver blocks as defined below.
	azureFunctionReceiver?: [...#AzureFunctionReceiverInitParameters] @go(AzureFunctionReceiver,[]AzureFunctionReceiverInitParameters)

	// One or more email_receiver blocks as defined below.
	emailReceiver?: [...#EmailReceiverInitParameters] @go(EmailReceiver,[]EmailReceiverInitParameters)

	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// One or more event_hub_receiver blocks as defined below.
	eventHubReceiver?: [...#EventHubReceiverInitParameters] @go(EventHubReceiver,[]EventHubReceiverInitParameters)

	// One or more itsm_receiver blocks as defined below.
	itsmReceiver?: [...#ItsmReceiverInitParameters] @go(ItsmReceiver,[]ItsmReceiverInitParameters)

	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to global.
	location?: null | string @go(Location,*string)

	// One or more logic_app_receiver blocks as defined below.
	logicAppReceiver?: [...#LogicAppReceiverInitParameters] @go(LogicAppReceiver,[]LogicAppReceiverInitParameters)

	// One or more sms_receiver blocks as defined below.
	smsReceiver?: [...#SMSReceiverInitParameters] @go(SMSReceiver,[]SMSReceiverInitParameters)

	// The short name of the action group. This will be used in SMS messages.
	shortName?: null | string @go(ShortName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more voice_receiver blocks as defined below.
	voiceReceiver?: [...#VoiceReceiverInitParameters] @go(VoiceReceiver,[]VoiceReceiverInitParameters)

	// One or more webhook_receiver blocks as defined below.
	webhookReceiver?: [...#WebhookReceiverInitParameters] @go(WebhookReceiver,[]WebhookReceiverInitParameters)
}

#MonitorActionGroupObservation: {
	// One or more arm_role_receiver blocks as defined below.
	armRoleReceiver?: [...#ArmRoleReceiverObservation] @go(ArmRoleReceiver,[]ArmRoleReceiverObservation)

	// One or more automation_runbook_receiver blocks as defined below.
	automationRunbookReceiver?: [...#AutomationRunBookReceiverObservation] @go(AutomationRunBookReceiver,[]AutomationRunBookReceiverObservation)

	// One or more azure_app_push_receiver blocks as defined below.
	azureAppPushReceiver?: [...#AzureAppPushReceiverObservation] @go(AzureAppPushReceiver,[]AzureAppPushReceiverObservation)

	// One or more azure_function_receiver blocks as defined below.
	azureFunctionReceiver?: [...#AzureFunctionReceiverObservation] @go(AzureFunctionReceiver,[]AzureFunctionReceiverObservation)

	// One or more email_receiver blocks as defined below.
	emailReceiver?: [...#EmailReceiverObservation] @go(EmailReceiver,[]EmailReceiverObservation)

	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// One or more event_hub_receiver blocks as defined below.
	eventHubReceiver?: [...#EventHubReceiverObservation] @go(EventHubReceiver,[]EventHubReceiverObservation)

	// The ID of the Action Group.
	id?: null | string @go(ID,*string)

	// One or more itsm_receiver blocks as defined below.
	itsmReceiver?: [...#ItsmReceiverObservation] @go(ItsmReceiver,[]ItsmReceiverObservation)

	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to global.
	location?: null | string @go(Location,*string)

	// One or more logic_app_receiver blocks as defined below.
	logicAppReceiver?: [...#LogicAppReceiverObservation] @go(LogicAppReceiver,[]LogicAppReceiverObservation)

	// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more sms_receiver blocks as defined below.
	smsReceiver?: [...#SMSReceiverObservation] @go(SMSReceiver,[]SMSReceiverObservation)

	// The short name of the action group. This will be used in SMS messages.
	shortName?: null | string @go(ShortName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more voice_receiver blocks as defined below.
	voiceReceiver?: [...#VoiceReceiverObservation] @go(VoiceReceiver,[]VoiceReceiverObservation)

	// One or more webhook_receiver blocks as defined below.
	webhookReceiver?: [...#WebhookReceiverObservation] @go(WebhookReceiver,[]WebhookReceiverObservation)
}

#MonitorActionGroupParameters: {
	// One or more arm_role_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	armRoleReceiver?: [...#ArmRoleReceiverParameters] @go(ArmRoleReceiver,[]ArmRoleReceiverParameters)

	// One or more automation_runbook_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	automationRunbookReceiver?: [...#AutomationRunBookReceiverParameters] @go(AutomationRunBookReceiver,[]AutomationRunBookReceiverParameters)

	// One or more azure_app_push_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	azureAppPushReceiver?: [...#AzureAppPushReceiverParameters] @go(AzureAppPushReceiver,[]AzureAppPushReceiverParameters)

	// One or more azure_function_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	azureFunctionReceiver?: [...#AzureFunctionReceiverParameters] @go(AzureFunctionReceiver,[]AzureFunctionReceiverParameters)

	// One or more email_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	emailReceiver?: [...#EmailReceiverParameters] @go(EmailReceiver,[]EmailReceiverParameters)

	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// One or more event_hub_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	eventHubReceiver?: [...#EventHubReceiverParameters] @go(EventHubReceiver,[]EventHubReceiverParameters)

	// One or more itsm_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	itsmReceiver?: [...#ItsmReceiverParameters] @go(ItsmReceiver,[]ItsmReceiverParameters)

	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to global.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// One or more logic_app_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	logicAppReceiver?: [...#LogicAppReceiverParameters] @go(LogicAppReceiver,[]LogicAppReceiverParameters)

	// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more sms_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	smsReceiver?: [...#SMSReceiverParameters] @go(SMSReceiver,[]SMSReceiverParameters)

	// The short name of the action group. This will be used in SMS messages.
	// +kubebuilder:validation:Optional
	shortName?: null | string @go(ShortName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// One or more voice_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	voiceReceiver?: [...#VoiceReceiverParameters] @go(VoiceReceiver,[]VoiceReceiverParameters)

	// One or more webhook_receiver blocks as defined below.
	// +kubebuilder:validation:Optional
	webhookReceiver?: [...#WebhookReceiverParameters] @go(WebhookReceiver,[]WebhookReceiverParameters)
}

#SMSReceiverInitParameters: {
	// The country code of the SMS receiver.
	countryCode?: null | string @go(CountryCode,*string)

	// The name of the SMS receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	name?: null | string @go(Name,*string)

	// The phone number of the SMS receiver.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#SMSReceiverObservation: {
	// The country code of the SMS receiver.
	countryCode?: null | string @go(CountryCode,*string)

	// The name of the SMS receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	name?: null | string @go(Name,*string)

	// The phone number of the SMS receiver.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#SMSReceiverParameters: {
	// The country code of the SMS receiver.
	// +kubebuilder:validation:Optional
	countryCode?: null | string @go(CountryCode,*string)

	// The name of the SMS receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The phone number of the SMS receiver.
	// +kubebuilder:validation:Optional
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#VoiceReceiverInitParameters: {
	// The country code of the voice receiver.
	countryCode?: null | string @go(CountryCode,*string)

	// The name of the voice receiver.
	name?: null | string @go(Name,*string)

	// The phone number of the voice receiver.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#VoiceReceiverObservation: {
	// The country code of the voice receiver.
	countryCode?: null | string @go(CountryCode,*string)

	// The name of the voice receiver.
	name?: null | string @go(Name,*string)

	// The phone number of the voice receiver.
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#VoiceReceiverParameters: {
	// The country code of the voice receiver.
	// +kubebuilder:validation:Optional
	countryCode?: null | string @go(CountryCode,*string)

	// The name of the voice receiver.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The phone number of the voice receiver.
	// +kubebuilder:validation:Optional
	phoneNumber?: null | string @go(PhoneNumber,*string)
}

#WebhookReceiverInitParameters: {
	// The aad_auth block as defined below
	aadAuth?: [...#AADAuthInitParameters] @go(AADAuth,[]AADAuthInitParameters)

	// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	name?: null | string @go(Name,*string)

	// The URI where webhooks should be sent.
	serviceUri?: null | string @go(ServiceURI,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#WebhookReceiverObservation: {
	// The aad_auth block as defined below
	aadAuth?: [...#AADAuthObservation] @go(AADAuth,[]AADAuthObservation)

	// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	name?: null | string @go(Name,*string)

	// The URI where webhooks should be sent.
	serviceUri?: null | string @go(ServiceURI,*string)

	// Enables or disables the common alert schema.
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

#WebhookReceiverParameters: {
	// The aad_auth block as defined below
	// +kubebuilder:validation:Optional
	aadAuth?: [...#AADAuthParameters] @go(AADAuth,[]AADAuthParameters)

	// The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The URI where webhooks should be sent.
	// +kubebuilder:validation:Optional
	serviceUri?: null | string @go(ServiceURI,*string)

	// Enables or disables the common alert schema.
	// +kubebuilder:validation:Optional
	useCommonAlertSchema?: null | bool @go(UseCommonAlertSchema,*bool)
}

// MonitorActionGroupSpec defines the desired state of MonitorActionGroup
#MonitorActionGroupSpec: {
	forProvider: #MonitorActionGroupParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MonitorActionGroupInitParameters @go(InitProvider)
}

// MonitorActionGroupStatus defines the observed state of MonitorActionGroup.
#MonitorActionGroupStatus: {
	atProvider?: #MonitorActionGroupObservation @go(AtProvider)
}

// MonitorActionGroup is the Schema for the MonitorActionGroups API. Manages an Action Group within Azure Monitor
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MonitorActionGroup: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.shortName) || has(self.initProvider.shortName)",message="shortName is a required parameter"
	spec:    #MonitorActionGroupSpec   @go(Spec)
	status?: #MonitorActionGroupStatus @go(Status)
}

// MonitorActionGroupList contains a list of MonitorActionGroups
#MonitorActionGroupList: {
	items: [...#MonitorActionGroup] @go(Items,[]MonitorActionGroup)
}
