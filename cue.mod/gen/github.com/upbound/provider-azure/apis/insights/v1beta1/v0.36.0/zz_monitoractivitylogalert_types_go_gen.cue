// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/insights/v1beta1

package v1beta1

#ActionInitParameters: {
	// The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
	webhookProperties?: {[string]: null | string} @go(WebhookProperties,map[string]*string)
}

#ActionObservation: {
	// The ID of the Action Group can be sourced from the .
	actionGroupId?: null | string @go(ActionGroupID,*string)

	// The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
	webhookProperties?: {[string]: null | string} @go(WebhookProperties,map[string]*string)
}

#ActionParameters: {
	// The ID of the Action Group can be sourced from the .
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/insights/v1beta1.MonitorActionGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	actionGroupId?: null | string @go(ActionGroupID,*string)

	// The map of custom string properties to include with the post operation. These data are appended to the webhook payload.
	// +kubebuilder:validation:Optional
	webhookProperties?: {[string]: null | string} @go(WebhookProperties,map[string]*string)
}

#CriteriaInitParameters: {
	// The email address or Azure Active Directory identifier of the user who performed the operation.
	caller?: null | string @go(Caller,*string)

	// The category of the operation. Possible values are Administrative, Autoscale, Policy, Recommendation, ResourceHealth, Security and ServiceHealth.
	category?: null | string @go(Category,*string)

	// The severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.
	level?: null | string @go(Level,*string)

	// The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: <resourceProvider>/<resourceType>/<operation>.
	operationName?: null | string @go(OperationName,*string)

	// The recommendation category of the event. Possible values are Cost, Reliability, OperationalExcellence and Performance. It is only allowed when category is Recommendation.
	recommendationCategory?: null | string @go(RecommendationCategory,*string)

	// The recommendation impact of the event. Possible values are High, Medium and Low. It is only allowed when category is Recommendation.
	recommendationImpact?: null | string @go(RecommendationImpact,*string)

	// The recommendation type of the event. It is only allowed when category is Recommendation.
	recommendationType?: null | string @go(RecommendationType,*string)

	// The name of resource group monitored by the activity log alert.
	resourceGroup?: null | string @go(ResourceGroup,*string)

	// A block to define fine grain resource health settings.
	resourceHealth?: [...#ResourceHealthInitParameters] @go(ResourceHealth,[]ResourceHealthInitParameters)

	// The name of the resource provider monitored by the activity log alert.
	resourceProvider?: null | string @go(ResourceProvider,*string)

	// The resource type monitored by the activity log alert.
	resourceType?: null | string @go(ResourceType,*string)

	// A block to define fine grain service health settings.
	serviceHealth?: [...#ServiceHealthInitParameters] @go(ServiceHealth,[]ServiceHealthInitParameters)

	// The status of the event. For example, Started, Failed, or Succeeded.
	status?: null | string @go(Status,*string)

	// The sub status of the event.
	subStatus?: null | string @go(SubStatus,*string)
}

#CriteriaObservation: {
	// The email address or Azure Active Directory identifier of the user who performed the operation.
	caller?: null | string @go(Caller,*string)

	// The category of the operation. Possible values are Administrative, Autoscale, Policy, Recommendation, ResourceHealth, Security and ServiceHealth.
	category?: null | string @go(Category,*string)

	// The severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.
	level?: null | string @go(Level,*string)

	// The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: <resourceProvider>/<resourceType>/<operation>.
	operationName?: null | string @go(OperationName,*string)

	// The recommendation category of the event. Possible values are Cost, Reliability, OperationalExcellence and Performance. It is only allowed when category is Recommendation.
	recommendationCategory?: null | string @go(RecommendationCategory,*string)

	// The recommendation impact of the event. Possible values are High, Medium and Low. It is only allowed when category is Recommendation.
	recommendationImpact?: null | string @go(RecommendationImpact,*string)

	// The recommendation type of the event. It is only allowed when category is Recommendation.
	recommendationType?: null | string @go(RecommendationType,*string)

	// The name of resource group monitored by the activity log alert.
	resourceGroup?: null | string @go(ResourceGroup,*string)

	// A block to define fine grain resource health settings.
	resourceHealth?: [...#ResourceHealthObservation] @go(ResourceHealth,[]ResourceHealthObservation)

	// The specific resource monitored by the activity log alert. It should be within one of the scopes.
	resourceId?: null | string @go(ResourceID,*string)

	// The name of the resource provider monitored by the activity log alert.
	resourceProvider?: null | string @go(ResourceProvider,*string)

	// The resource type monitored by the activity log alert.
	resourceType?: null | string @go(ResourceType,*string)

	// A block to define fine grain service health settings.
	serviceHealth?: [...#ServiceHealthObservation] @go(ServiceHealth,[]ServiceHealthObservation)

	// The status of the event. For example, Started, Failed, or Succeeded.
	status?: null | string @go(Status,*string)

	// The sub status of the event.
	subStatus?: null | string @go(SubStatus,*string)
}

#CriteriaParameters: {
	// The email address or Azure Active Directory identifier of the user who performed the operation.
	// +kubebuilder:validation:Optional
	caller?: null | string @go(Caller,*string)

	// The category of the operation. Possible values are Administrative, Autoscale, Policy, Recommendation, ResourceHealth, Security and ServiceHealth.
	// +kubebuilder:validation:Optional
	category?: null | string @go(Category,*string)

	// The severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.
	// +kubebuilder:validation:Optional
	level?: null | string @go(Level,*string)

	// The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: <resourceProvider>/<resourceType>/<operation>.
	// +kubebuilder:validation:Optional
	operationName?: null | string @go(OperationName,*string)

	// The recommendation category of the event. Possible values are Cost, Reliability, OperationalExcellence and Performance. It is only allowed when category is Recommendation.
	// +kubebuilder:validation:Optional
	recommendationCategory?: null | string @go(RecommendationCategory,*string)

	// The recommendation impact of the event. Possible values are High, Medium and Low. It is only allowed when category is Recommendation.
	// +kubebuilder:validation:Optional
	recommendationImpact?: null | string @go(RecommendationImpact,*string)

	// The recommendation type of the event. It is only allowed when category is Recommendation.
	// +kubebuilder:validation:Optional
	recommendationType?: null | string @go(RecommendationType,*string)

	// The name of resource group monitored by the activity log alert.
	// +kubebuilder:validation:Optional
	resourceGroup?: null | string @go(ResourceGroup,*string)

	// A block to define fine grain resource health settings.
	// +kubebuilder:validation:Optional
	resourceHealth?: [...#ResourceHealthParameters] @go(ResourceHealth,[]ResourceHealthParameters)

	// The specific resource monitored by the activity log alert. It should be within one of the scopes.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	resourceId?: null | string @go(ResourceID,*string)

	// The name of the resource provider monitored by the activity log alert.
	// +kubebuilder:validation:Optional
	resourceProvider?: null | string @go(ResourceProvider,*string)

	// The resource type monitored by the activity log alert.
	// +kubebuilder:validation:Optional
	resourceType?: null | string @go(ResourceType,*string)

	// A block to define fine grain service health settings.
	// +kubebuilder:validation:Optional
	serviceHealth?: [...#ServiceHealthParameters] @go(ServiceHealth,[]ServiceHealthParameters)

	// The status of the event. For example, Started, Failed, or Succeeded.
	// +kubebuilder:validation:Optional
	status?: null | string @go(Status,*string)

	// The sub status of the event.
	// +kubebuilder:validation:Optional
	subStatus?: null | string @go(SubStatus,*string)
}

#MonitorActivityLogAlertInitParameters: {
	// One or more action blocks as defined below.
	action?: [...#ActionInitParameters] @go(Action,[]ActionInitParameters)

	// A criteria block as defined below.
	criteria?: [...#CriteriaInitParameters] @go(Criteria,[]CriteriaInitParameters)

	// The description of this activity log alert.
	description?: null | string @go(Description,*string)

	// Should this Activity Log Alert be enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The name of the activity log alert. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#MonitorActivityLogAlertObservation: {
	// One or more action blocks as defined below.
	action?: [...#ActionObservation] @go(Action,[]ActionObservation)

	// A criteria block as defined below.
	criteria?: [...#CriteriaObservation] @go(Criteria,[]CriteriaObservation)

	// The description of this activity log alert.
	description?: null | string @go(Description,*string)

	// Should this Activity Log Alert be enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the activity log alert.
	id?: null | string @go(ID,*string)

	// The name of the activity log alert. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The name of the resource group in which to create the activity log alert instance. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The Scope at which the Activity Log should be applied. A list of strings which could be a resource group , or a subscription, or a resource ID (such as a Storage Account).
	scopes?: [...null | string] @go(Scopes,[]*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#MonitorActivityLogAlertParameters: {
	// One or more action blocks as defined below.
	// +kubebuilder:validation:Optional
	action?: [...#ActionParameters] @go(Action,[]ActionParameters)

	// A criteria block as defined below.
	// +kubebuilder:validation:Optional
	criteria?: [...#CriteriaParameters] @go(Criteria,[]CriteriaParameters)

	// The description of this activity log alert.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Should this Activity Log Alert be enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The name of the activity log alert. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The name of the resource group in which to create the activity log alert instance. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The Scope at which the Activity Log should be applied. A list of strings which could be a resource group , or a subscription, or a resource ID (such as a Storage Account).
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	scopes?: [...null | string] @go(Scopes,[]*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ResourceHealthInitParameters: {
	// The current resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.
	current?: [...null | string] @go(Current,[]*string)

	// The previous resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.
	previous?: [...null | string] @go(Previous,[]*string)

	// The reason that will log an alert. Possible values are PlatformInitiated (such as a problem with the resource in an affected region of an Azure incident), UserInitiated (such as a shutdown request of a VM) and Unknown.
	reason?: [...null | string] @go(Reason,[]*string)
}

#ResourceHealthObservation: {
	// The current resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.
	current?: [...null | string] @go(Current,[]*string)

	// The previous resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.
	previous?: [...null | string] @go(Previous,[]*string)

	// The reason that will log an alert. Possible values are PlatformInitiated (such as a problem with the resource in an affected region of an Azure incident), UserInitiated (such as a shutdown request of a VM) and Unknown.
	reason?: [...null | string] @go(Reason,[]*string)
}

#ResourceHealthParameters: {
	// The current resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.
	// +kubebuilder:validation:Optional
	current?: [...null | string] @go(Current,[]*string)

	// The previous resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.
	// +kubebuilder:validation:Optional
	previous?: [...null | string] @go(Previous,[]*string)

	// The reason that will log an alert. Possible values are PlatformInitiated (such as a problem with the resource in an affected region of an Azure incident), UserInitiated (such as a shutdown request of a VM) and Unknown.
	// +kubebuilder:validation:Optional
	reason?: [...null | string] @go(Reason,[]*string)
}

#ServiceHealthInitParameters: {
	// Events this alert will monitor Possible values are Incident, Maintenance, Informational, ActionRequired and Security.
	events?: [...null | string] @go(Events,[]*string)

	// Locations this alert will monitor. For example, West Europe.
	locations?: [...null | string] @go(Locations,[]*string)

	// Services this alert will monitor. For example, Activity Logs & Alerts, Action Groups. Defaults to all Services.
	services?: [...null | string] @go(Services,[]*string)
}

#ServiceHealthObservation: {
	// Events this alert will monitor Possible values are Incident, Maintenance, Informational, ActionRequired and Security.
	events?: [...null | string] @go(Events,[]*string)

	// Locations this alert will monitor. For example, West Europe.
	locations?: [...null | string] @go(Locations,[]*string)

	// Services this alert will monitor. For example, Activity Logs & Alerts, Action Groups. Defaults to all Services.
	services?: [...null | string] @go(Services,[]*string)
}

#ServiceHealthParameters: {
	// Events this alert will monitor Possible values are Incident, Maintenance, Informational, ActionRequired and Security.
	// +kubebuilder:validation:Optional
	events?: [...null | string] @go(Events,[]*string)

	// Locations this alert will monitor. For example, West Europe.
	// +kubebuilder:validation:Optional
	locations?: [...null | string] @go(Locations,[]*string)

	// Services this alert will monitor. For example, Activity Logs & Alerts, Action Groups. Defaults to all Services.
	// +kubebuilder:validation:Optional
	services?: [...null | string] @go(Services,[]*string)
}

// MonitorActivityLogAlertSpec defines the desired state of MonitorActivityLogAlert
#MonitorActivityLogAlertSpec: {
	forProvider: #MonitorActivityLogAlertParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MonitorActivityLogAlertInitParameters @go(InitProvider)
}

// MonitorActivityLogAlertStatus defines the observed state of MonitorActivityLogAlert.
#MonitorActivityLogAlertStatus: {
	atProvider?: #MonitorActivityLogAlertObservation @go(AtProvider)
}

// MonitorActivityLogAlert is the Schema for the MonitorActivityLogAlerts API. Manages an Activity Log Alert within Azure Monitor
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MonitorActivityLogAlert: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.criteria) || has(self.initProvider.criteria)",message="criteria is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	spec:    #MonitorActivityLogAlertSpec   @go(Spec)
	status?: #MonitorActivityLogAlertStatus @go(Status)
}

// MonitorActivityLogAlertList contains a list of MonitorActivityLogAlerts
#MonitorActivityLogAlertList: {
	items: [...#MonitorActivityLogAlert] @go(Items,[]MonitorActivityLogAlert)
}
