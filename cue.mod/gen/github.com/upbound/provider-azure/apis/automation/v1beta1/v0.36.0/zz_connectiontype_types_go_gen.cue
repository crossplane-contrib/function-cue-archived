// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/automation/v1beta1

package v1beta1

#ConnectionTypeInitParameters: {
	// One or more field blocks as defined below. Changing this forces a new Automation to be created.
	field?: [...#FieldInitParameters] @go(Field,[]FieldInitParameters)

	// Whether the connection type is global. Changing this forces a new Automation to be created.
	isGlobal?: null | bool @go(IsGlobal,*bool)

	// The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
	name?: null | string @go(Name,*string)
}

#ConnectionTypeObservation: {
	// The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
	automationAccountName?: null | string @go(AutomationAccountName,*string)

	// One or more field blocks as defined below. Changing this forces a new Automation to be created.
	field?: [...#FieldObservation] @go(Field,[]FieldObservation)

	// The the Automation Connection Type ID.
	id?: null | string @go(ID,*string)

	// Whether the connection type is global. Changing this forces a new Automation to be created.
	isGlobal?: null | bool @go(IsGlobal,*bool)

	// The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
	name?: null | string @go(Name,*string)

	// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#ConnectionTypeParameters: {
	// The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/automation/v1beta1.Account
	// +kubebuilder:validation:Optional
	automationAccountName?: null | string @go(AutomationAccountName,*string)

	// One or more field blocks as defined below. Changing this forces a new Automation to be created.
	// +kubebuilder:validation:Optional
	field?: [...#FieldParameters] @go(Field,[]FieldParameters)

	// Whether the connection type is global. Changing this forces a new Automation to be created.
	// +kubebuilder:validation:Optional
	isGlobal?: null | bool @go(IsGlobal,*bool)

	// The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#FieldInitParameters: {
	// Whether to set the isEncrypted flag of the connection field definition.
	isEncrypted?: null | bool @go(IsEncrypted,*bool)

	// Whether to set the isOptional flag of the connection field definition.
	isOptional?: null | bool @go(IsOptional,*bool)

	// The name which should be used for this connection field definition.
	name?: null | string @go(Name,*string)

	// The type of the connection field definition.
	type?: null | string @go(Type,*string)
}

#FieldObservation: {
	// Whether to set the isEncrypted flag of the connection field definition.
	isEncrypted?: null | bool @go(IsEncrypted,*bool)

	// Whether to set the isOptional flag of the connection field definition.
	isOptional?: null | bool @go(IsOptional,*bool)

	// The name which should be used for this connection field definition.
	name?: null | string @go(Name,*string)

	// The type of the connection field definition.
	type?: null | string @go(Type,*string)
}

#FieldParameters: {
	// Whether to set the isEncrypted flag of the connection field definition.
	// +kubebuilder:validation:Optional
	isEncrypted?: null | bool @go(IsEncrypted,*bool)

	// Whether to set the isOptional flag of the connection field definition.
	// +kubebuilder:validation:Optional
	isOptional?: null | bool @go(IsOptional,*bool)

	// The name which should be used for this connection field definition.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The type of the connection field definition.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// ConnectionTypeSpec defines the desired state of ConnectionType
#ConnectionTypeSpec: {
	forProvider: #ConnectionTypeParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ConnectionTypeInitParameters @go(InitProvider)
}

// ConnectionTypeStatus defines the observed state of ConnectionType.
#ConnectionTypeStatus: {
	atProvider?: #ConnectionTypeObservation @go(AtProvider)
}

// ConnectionType is the Schema for the ConnectionTypes API. Manages an Automation Connection Type.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ConnectionType: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.field) || has(self.initProvider.field)",message="field is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	spec:    #ConnectionTypeSpec   @go(Spec)
	status?: #ConnectionTypeStatus @go(Status)
}

// ConnectionTypeList contains a list of ConnectionTypes
#ConnectionTypeList: {
	items: [...#ConnectionType] @go(Items,[]ConnectionType)
}
