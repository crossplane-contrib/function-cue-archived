// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/automation/v1beta1

package v1beta1

#ContentLinkHashInitParameters: {
	// Specifies the hash algorithm used to hash the content.
	algorithm?: null | string @go(Algorithm,*string)

	// Specifies the expected hash value of the content.
	value?: null | string @go(Value,*string)
}

#ContentLinkHashObservation: {
	// Specifies the hash algorithm used to hash the content.
	algorithm?: null | string @go(Algorithm,*string)

	// Specifies the expected hash value of the content.
	value?: null | string @go(Value,*string)
}

#ContentLinkHashParameters: {
	// Specifies the hash algorithm used to hash the content.
	// +kubebuilder:validation:Optional
	algorithm?: null | string @go(Algorithm,*string)

	// Specifies the expected hash value of the content.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#ContentLinkInitParameters: {
	// A hash block as defined below.
	hash?: [...#ContentLinkHashInitParameters] @go(Hash,[]ContentLinkHashInitParameters)

	// The URI of the runbook content.
	uri?: null | string @go(URI,*string)

	// Specifies the version of the content
	version?: null | string @go(Version,*string)
}

#ContentLinkObservation: {
	// A hash block as defined below.
	hash?: [...#ContentLinkHashObservation] @go(Hash,[]ContentLinkHashObservation)

	// The URI of the runbook content.
	uri?: null | string @go(URI,*string)

	// Specifies the version of the content
	version?: null | string @go(Version,*string)
}

#ContentLinkParameters: {
	// A hash block as defined below.
	// +kubebuilder:validation:Optional
	hash?: [...#ContentLinkHashParameters] @go(Hash,[]ContentLinkHashParameters)

	// The URI of the runbook content.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)

	// Specifies the version of the content
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#DraftInitParameters: {
	// A publish_content_link block as defined above.
	contentLink?: [...#ContentLinkInitParameters] @go(ContentLink,[]ContentLinkInitParameters)

	// Whether the draft in edit mode.
	editModeEnabled?: null | bool @go(EditModeEnabled,*bool)

	// Specifies the output types of the runbook.
	outputTypes?: [...null | string] @go(OutputTypes,[]*string)

	// A list of parameters block as defined below.
	parameters?: [...#ParametersInitParameters] @go(Parameters,[]ParametersInitParameters)
}

#DraftObservation: {
	// A publish_content_link block as defined above.
	contentLink?: [...#ContentLinkObservation] @go(ContentLink,[]ContentLinkObservation)
	creationTime?: null | string @go(CreationTime,*string)

	// Whether the draft in edit mode.
	editModeEnabled?:  null | bool   @go(EditModeEnabled,*bool)
	lastModifiedTime?: null | string @go(LastModifiedTime,*string)

	// Specifies the output types of the runbook.
	outputTypes?: [...null | string] @go(OutputTypes,[]*string)

	// A list of parameters block as defined below.
	parameters?: [...#ParametersObservation] @go(Parameters,[]ParametersObservation)
}

#DraftParameters: {
	// A publish_content_link block as defined above.
	// +kubebuilder:validation:Optional
	contentLink?: [...#ContentLinkParameters] @go(ContentLink,[]ContentLinkParameters)

	// Whether the draft in edit mode.
	// +kubebuilder:validation:Optional
	editModeEnabled?: null | bool @go(EditModeEnabled,*bool)

	// Specifies the output types of the runbook.
	// +kubebuilder:validation:Optional
	outputTypes?: [...null | string] @go(OutputTypes,[]*string)

	// A list of parameters block as defined below.
	// +kubebuilder:validation:Optional
	parameters?: [...#ParametersParameters] @go(Parameters,[]ParametersParameters)
}

#JobScheduleInitParameters: {
	// The Automation Runbook ID.
	jobScheduleId?: null | string @go(JobScheduleID,*string)

	// A list of parameters block as defined below.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
	runOn?: null | string @go(RunOn,*string)

	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	scheduleName?: null | string @go(ScheduleName,*string)
}

#JobScheduleObservation: {
	// The Automation Runbook ID.
	jobScheduleId?: null | string @go(JobScheduleID,*string)

	// A list of parameters block as defined below.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
	runOn?: null | string @go(RunOn,*string)

	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	scheduleName?: null | string @go(ScheduleName,*string)
}

#JobScheduleParameters: {
	// The Automation Runbook ID.
	// +kubebuilder:validation:Optional
	jobScheduleId?: null | string @go(JobScheduleID,*string)

	// A list of parameters block as defined below.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// +kubebuilder:validation:Optional
	runOn?: null | string @go(RunOn,*string)

	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	scheduleName?: null | string @go(ScheduleName,*string)
}

#ParametersInitParameters: {
	// Specifies the default value of the parameter.
	defaultValue?: null | string @go(DefaultValue,*string)

	// The name of the parameter.
	key?: null | string @go(Key,*string)

	// Whether this parameter is mandatory.
	mandatory?: null | bool @go(Mandatory,*bool)

	// Specifies the position of the parameter.
	position?: null | float64 @go(Position,*float64)

	// Specifies the type of this parameter.
	type?: null | string @go(Type,*string)
}

#ParametersObservation: {
	// Specifies the default value of the parameter.
	defaultValue?: null | string @go(DefaultValue,*string)

	// The name of the parameter.
	key?: null | string @go(Key,*string)

	// Whether this parameter is mandatory.
	mandatory?: null | bool @go(Mandatory,*bool)

	// Specifies the position of the parameter.
	position?: null | float64 @go(Position,*float64)

	// Specifies the type of this parameter.
	type?: null | string @go(Type,*string)
}

#ParametersParameters: {
	// Specifies the default value of the parameter.
	// +kubebuilder:validation:Optional
	defaultValue?: null | string @go(DefaultValue,*string)

	// The name of the parameter.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// Whether this parameter is mandatory.
	// +kubebuilder:validation:Optional
	mandatory?: null | bool @go(Mandatory,*bool)

	// Specifies the position of the parameter.
	// +kubebuilder:validation:Optional
	position?: null | float64 @go(Position,*float64)

	// Specifies the type of this parameter.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#PublishContentLinkHashInitParameters: {
	// Specifies the hash algorithm used to hash the content.
	algorithm?: null | string @go(Algorithm,*string)

	// Specifies the expected hash value of the content.
	value?: null | string @go(Value,*string)
}

#PublishContentLinkHashObservation: {
	// Specifies the hash algorithm used to hash the content.
	algorithm?: null | string @go(Algorithm,*string)

	// Specifies the expected hash value of the content.
	value?: null | string @go(Value,*string)
}

#PublishContentLinkHashParameters: {
	// Specifies the hash algorithm used to hash the content.
	// +kubebuilder:validation:Optional
	algorithm?: null | string @go(Algorithm,*string)

	// Specifies the expected hash value of the content.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#PublishContentLinkInitParameters: {
	// A hash block as defined below.
	hash?: [...#PublishContentLinkHashInitParameters] @go(Hash,[]PublishContentLinkHashInitParameters)

	// The URI of the runbook content.
	uri?: null | string @go(URI,*string)

	// Specifies the version of the content
	version?: null | string @go(Version,*string)
}

#PublishContentLinkObservation: {
	// A hash block as defined below.
	hash?: [...#PublishContentLinkHashObservation] @go(Hash,[]PublishContentLinkHashObservation)

	// The URI of the runbook content.
	uri?: null | string @go(URI,*string)

	// Specifies the version of the content
	version?: null | string @go(Version,*string)
}

#PublishContentLinkParameters: {
	// A hash block as defined below.
	// +kubebuilder:validation:Optional
	hash?: [...#PublishContentLinkHashParameters] @go(Hash,[]PublishContentLinkHashParameters)

	// The URI of the runbook content.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)

	// Specifies the version of the content
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#RunBookInitParameters: {
	// The desired content of the runbook.
	content?: null | string @go(Content,*string)

	// A description for this credential.
	description?: null | string @go(Description,*string)

	// A draft block as defined below .
	draft?: [...#DraftInitParameters] @go(Draft,[]DraftInitParameters)
	jobSchedule?: [...#JobScheduleInitParameters] @go(JobSchedule,[]JobScheduleInitParameters)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are 0 for None, 9 for Basic, and 15 for Detailed. Must turn on Verbose logging in order to see the tracing.
	logActivityTraceLevel?: null | float64 @go(LogActivityTraceLevel,*float64)

	// Progress log option.
	logProgress?: null | bool @go(LogProgress,*bool)

	// Verbose log option.
	logVerbose?: null | bool @go(LogVerbose,*bool)

	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The published runbook content link.
	publishContentLink?: [...#PublishContentLinkInitParameters] @go(PublishContentLink,[]PublishContentLinkInitParameters)

	// The type of the runbook - can be either Graph, GraphPowerShell, GraphPowerShellWorkflow, PowerShellWorkflow, PowerShell, Python3, Python2 or Script. Changing this forces a new resource to be created.
	runbookType?: null | string @go(RunBookType,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#RunBookObservation: {
	// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
	automationAccountName?: null | string @go(AutomationAccountName,*string)

	// The desired content of the runbook.
	content?: null | string @go(Content,*string)

	// A description for this credential.
	description?: null | string @go(Description,*string)

	// A draft block as defined below .
	draft?: [...#DraftObservation] @go(Draft,[]DraftObservation)

	// The Automation Runbook ID.
	id?: null | string @go(ID,*string)
	jobSchedule?: [...#JobScheduleObservation] @go(JobSchedule,[]JobScheduleObservation)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are 0 for None, 9 for Basic, and 15 for Detailed. Must turn on Verbose logging in order to see the tracing.
	logActivityTraceLevel?: null | float64 @go(LogActivityTraceLevel,*float64)

	// Progress log option.
	logProgress?: null | bool @go(LogProgress,*bool)

	// Verbose log option.
	logVerbose?: null | bool @go(LogVerbose,*bool)

	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The published runbook content link.
	publishContentLink?: [...#PublishContentLinkObservation] @go(PublishContentLink,[]PublishContentLinkObservation)

	// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The type of the runbook - can be either Graph, GraphPowerShell, GraphPowerShellWorkflow, PowerShellWorkflow, PowerShell, Python3, Python2 or Script. Changing this forces a new resource to be created.
	runbookType?: null | string @go(RunBookType,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#RunBookParameters: {
	// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/automation/v1beta1.Account
	// +kubebuilder:validation:Optional
	automationAccountName?: null | string @go(AutomationAccountName,*string)

	// The desired content of the runbook.
	// +kubebuilder:validation:Optional
	content?: null | string @go(Content,*string)

	// A description for this credential.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A draft block as defined below .
	// +kubebuilder:validation:Optional
	draft?: [...#DraftParameters] @go(Draft,[]DraftParameters)

	// +kubebuilder:validation:Optional
	jobSchedule?: [...#JobScheduleParameters] @go(JobSchedule,[]JobScheduleParameters)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are 0 for None, 9 for Basic, and 15 for Detailed. Must turn on Verbose logging in order to see the tracing.
	// +kubebuilder:validation:Optional
	logActivityTraceLevel?: null | float64 @go(LogActivityTraceLevel,*float64)

	// Progress log option.
	// +kubebuilder:validation:Optional
	logProgress?: null | bool @go(LogProgress,*bool)

	// Verbose log option.
	// +kubebuilder:validation:Optional
	logVerbose?: null | bool @go(LogVerbose,*bool)

	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The published runbook content link.
	// +kubebuilder:validation:Optional
	publishContentLink?: [...#PublishContentLinkParameters] @go(PublishContentLink,[]PublishContentLinkParameters)

	// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The type of the runbook - can be either Graph, GraphPowerShell, GraphPowerShellWorkflow, PowerShellWorkflow, PowerShell, Python3, Python2 or Script. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	runbookType?: null | string @go(RunBookType,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// RunBookSpec defines the desired state of RunBook
#RunBookSpec: {
	forProvider: #RunBookParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #RunBookInitParameters @go(InitProvider)
}

// RunBookStatus defines the observed state of RunBook.
#RunBookStatus: {
	atProvider?: #RunBookObservation @go(AtProvider)
}

// RunBook is the Schema for the RunBooks API. Manages a Automation Runbook.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#RunBook: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.logProgress) || (has(self.initProvider) && has(self.initProvider.logProgress))",message="spec.forProvider.logProgress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.logVerbose) || (has(self.initProvider) && has(self.initProvider.logVerbose))",message="spec.forProvider.logVerbose is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.runbookType) || (has(self.initProvider) && has(self.initProvider.runbookType))",message="spec.forProvider.runbookType is a required parameter"
	spec:    #RunBookSpec   @go(Spec)
	status?: #RunBookStatus @go(Status)
}

// RunBookList contains a list of RunBooks
#RunBookList: {
	items: [...#RunBook] @go(Items,[]RunBook)
}
