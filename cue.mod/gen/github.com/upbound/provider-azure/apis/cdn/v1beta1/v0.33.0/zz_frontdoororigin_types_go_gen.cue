// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cdn/v1beta1

package v1beta1

#FrontdoorOriginObservation: {
	// The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
	cdnFrontdoorOriginGroupId?: null | string @go(CdnFrontdoorOriginGroupID,*string)

	// Specifies whether certificate name checks are enabled for this origin.
	certificateNameCheckEnabled?: null | bool @go(CertificateNameCheckEnabled,*bool)

	// Should the origin be enabled? Possible values are true or false. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The value of the HTTP port. Must be between 1 and 65535. Defaults to 80.
	httpPort?: null | float64 @go(HTTPPort,*float64)

	// The value of the HTTPS port. Must be between 1 and 65535. Defaults to 443.
	httpsPort?: null | float64 @go(HTTPSPort,*float64)

	// Should the origin be enabled? Possible values are true or false. Defaults to true.
	healthProbesEnabled?: null | bool @go(HealthProbesEnabled,*bool)

	// The IPv4 address, IPv6 address or Domain name of the Origin.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Front Door Origin.
	id?: null | string @go(ID,*string)

	// The host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.
	originHostHeader?: null | string @go(OriginHostHeader,*string)

	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between 1 and 5 (inclusive). Defaults to 1.
	priority?: null | float64 @go(Priority,*float64)

	// A private_link block as defined below.
	privateLink?: [...#PrivateLinkObservation] @go(PrivateLink,[]PrivateLinkObservation)

	// The weight of the origin in a given origin group for load balancing. Must be between 1 and 1000. Defaults to 500.
	weight?: null | float64 @go(Weight,*float64)
}

#FrontdoorOriginParameters: {
	// The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cdn/v1beta1.FrontdoorOriginGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	cdnFrontdoorOriginGroupId?: null | string @go(CdnFrontdoorOriginGroupID,*string)

	// Specifies whether certificate name checks are enabled for this origin.
	// +kubebuilder:validation:Optional
	certificateNameCheckEnabled?: null | bool @go(CertificateNameCheckEnabled,*bool)

	// Should the origin be enabled? Possible values are true or false. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The value of the HTTP port. Must be between 1 and 65535. Defaults to 80.
	// +kubebuilder:validation:Optional
	httpPort?: null | float64 @go(HTTPPort,*float64)

	// The value of the HTTPS port. Must be between 1 and 65535. Defaults to 443.
	// +kubebuilder:validation:Optional
	httpsPort?: null | float64 @go(HTTPSPort,*float64)

	// Should the origin be enabled? Possible values are true or false. Defaults to true.
	// +kubebuilder:validation:Optional
	healthProbesEnabled?: null | bool @go(HealthProbesEnabled,*bool)

	// The IPv4 address, IPv6 address or Domain name of the Origin.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("primary_blob_host",true)
	// +kubebuilder:validation:Optional
	hostName?: null | string @go(HostName,*string)

	// The host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("primary_blob_host",true)
	// +kubebuilder:validation:Optional
	originHostHeader?: null | string @go(OriginHostHeader,*string)

	// Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between 1 and 5 (inclusive). Defaults to 1.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// A private_link block as defined below.
	// +kubebuilder:validation:Optional
	privateLink?: [...#PrivateLinkParameters] @go(PrivateLink,[]PrivateLinkParameters)

	// The weight of the origin in a given origin group for load balancing. Must be between 1 and 1000. Defaults to 500.
	// +kubebuilder:validation:Optional
	weight?: null | float64 @go(Weight,*float64)
}

#PrivateLinkObservation: {
	// Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The ID of the Azure Resource to connect to via the Private Link.
	privateLinkTargetId?: null | string @go(PrivateLinkTargetID,*string)

	// Specifies the request message that will be submitted to the private_link_target_id when requesting the private link endpoint connection. Values must be between 1 and 140 characters in length. Defaults to Access request for CDN FrontDoor Private Link Origin.
	requestMessage?: null | string @go(RequestMessage,*string)

	// Specifies the type of target for this Private Link Endpoint. Possible values are blob, blob_secondary, web and sites.
	targetType?: null | string @go(TargetType,*string)
}

#PrivateLinkParameters: {
	// Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("location",false)
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID of the Azure Resource to connect to via the Private Link.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	privateLinkTargetId?: null | string @go(PrivateLinkTargetID,*string)

	// Specifies the request message that will be submitted to the private_link_target_id when requesting the private link endpoint connection. Values must be between 1 and 140 characters in length. Defaults to Access request for CDN FrontDoor Private Link Origin.
	// +kubebuilder:validation:Optional
	requestMessage?: null | string @go(RequestMessage,*string)

	// Specifies the type of target for this Private Link Endpoint. Possible values are blob, blob_secondary, web and sites.
	// +kubebuilder:validation:Optional
	targetType?: null | string @go(TargetType,*string)
}

// FrontdoorOriginSpec defines the desired state of FrontdoorOrigin
#FrontdoorOriginSpec: {
	forProvider: #FrontdoorOriginParameters @go(ForProvider)
}

// FrontdoorOriginStatus defines the observed state of FrontdoorOrigin.
#FrontdoorOriginStatus: {
	atProvider?: #FrontdoorOriginObservation @go(AtProvider)
}

// FrontdoorOrigin is the Schema for the FrontdoorOrigins API. Manages a Front Door (standard/premium) Origin.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FrontdoorOrigin: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.certificateNameCheckEnabled)",message="certificateNameCheckEnabled is a required parameter"
	spec:    #FrontdoorOriginSpec   @go(Spec)
	status?: #FrontdoorOriginStatus @go(Status)
}

// FrontdoorOriginList contains a list of FrontdoorOrigins
#FrontdoorOriginList: {
	items: [...#FrontdoorOrigin] @go(Items,[]FrontdoorOrigin)
}
