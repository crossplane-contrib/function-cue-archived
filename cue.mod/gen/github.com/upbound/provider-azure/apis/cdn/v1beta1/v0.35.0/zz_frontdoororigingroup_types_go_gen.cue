// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cdn/v1beta1

package v1beta1

#FrontdoorOriginGroupInitParameters: {
	// A health_probe block as defined below.
	healthProbe?: [...#HealthProbeInitParameters] @go(HealthProbe,[]HealthProbeInitParameters)

	// A load_balancing block as defined below.
	loadBalancing?: [...#LoadBalancingInitParameters] @go(LoadBalancing,[]LoadBalancingInitParameters)

	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between 0 and 50 minutes (inclusive). Default is 10 minutes.
	restoreTrafficTimeToHealedOrNewEndpointInMinutes?: null | float64 @go(RestoreTrafficTimeToHealedOrNewEndpointInMinutes,*float64)

	// Specifies whether session affinity should be enabled on this host. Defaults to true.
	sessionAffinityEnabled?: null | bool @go(SessionAffinityEnabled,*bool)
}

#FrontdoorOriginGroupObservation: {
	// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
	cdnFrontdoorProfileId?: null | string @go(CdnFrontdoorProfileID,*string)

	// A health_probe block as defined below.
	healthProbe?: [...#HealthProbeObservation] @go(HealthProbe,[]HealthProbeObservation)

	// The ID of the Front Door Origin Group.
	id?: null | string @go(ID,*string)

	// A load_balancing block as defined below.
	loadBalancing?: [...#LoadBalancingObservation] @go(LoadBalancing,[]LoadBalancingObservation)

	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between 0 and 50 minutes (inclusive). Default is 10 minutes.
	restoreTrafficTimeToHealedOrNewEndpointInMinutes?: null | float64 @go(RestoreTrafficTimeToHealedOrNewEndpointInMinutes,*float64)

	// Specifies whether session affinity should be enabled on this host. Defaults to true.
	sessionAffinityEnabled?: null | bool @go(SessionAffinityEnabled,*bool)
}

#FrontdoorOriginGroupParameters: {
	// The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cdn/v1beta1.FrontdoorProfile
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	cdnFrontdoorProfileId?: null | string @go(CdnFrontdoorProfileID,*string)

	// A health_probe block as defined below.
	// +kubebuilder:validation:Optional
	healthProbe?: [...#HealthProbeParameters] @go(HealthProbe,[]HealthProbeParameters)

	// A load_balancing block as defined below.
	// +kubebuilder:validation:Optional
	loadBalancing?: [...#LoadBalancingParameters] @go(LoadBalancing,[]LoadBalancingParameters)

	// Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between 0 and 50 minutes (inclusive). Default is 10 minutes.
	// +kubebuilder:validation:Optional
	restoreTrafficTimeToHealedOrNewEndpointInMinutes?: null | float64 @go(RestoreTrafficTimeToHealedOrNewEndpointInMinutes,*float64)

	// Specifies whether session affinity should be enabled on this host. Defaults to true.
	// +kubebuilder:validation:Optional
	sessionAffinityEnabled?: null | bool @go(SessionAffinityEnabled,*bool)
}

#HealthProbeInitParameters: {
	// Specifies the number of seconds between health probes. Possible values are between 5 and 31536000 seconds (inclusive).
	intervalInSeconds?: null | float64 @go(IntervalInSeconds,*float64)

	// Specifies the path relative to the origin that is used to determine the health of the origin. Defaults to /.
	path?: null | string @go(Path,*string)

	// Specifies the protocol to use for health probe. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Specifies the type of health probe request that is made. Possible values are GET and HEAD. Defaults to HEAD.
	requestType?: null | string @go(RequestType,*string)
}

#HealthProbeObservation: {
	// Specifies the number of seconds between health probes. Possible values are between 5 and 31536000 seconds (inclusive).
	intervalInSeconds?: null | float64 @go(IntervalInSeconds,*float64)

	// Specifies the path relative to the origin that is used to determine the health of the origin. Defaults to /.
	path?: null | string @go(Path,*string)

	// Specifies the protocol to use for health probe. Possible values are Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Specifies the type of health probe request that is made. Possible values are GET and HEAD. Defaults to HEAD.
	requestType?: null | string @go(RequestType,*string)
}

#HealthProbeParameters: {
	// Specifies the number of seconds between health probes. Possible values are between 5 and 31536000 seconds (inclusive).
	// +kubebuilder:validation:Optional
	intervalInSeconds?: null | float64 @go(IntervalInSeconds,*float64)

	// Specifies the path relative to the origin that is used to determine the health of the origin. Defaults to /.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Specifies the protocol to use for health probe. Possible values are Http and Https.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// Specifies the type of health probe request that is made. Possible values are GET and HEAD. Defaults to HEAD.
	// +kubebuilder:validation:Optional
	requestType?: null | string @go(RequestType,*string)
}

#LoadBalancingInitParameters: {
	// Specifies the additional latency in milliseconds for probes to fall into the lowest latency bucket. Possible values are between 0 and 1000 milliseconds (inclusive). Defaults to 50.
	additionalLatencyInMilliseconds?: null | float64 @go(AdditionalLatencyInMilliseconds,*float64)

	// Specifies the number of samples to consider for load balancing decisions. Possible values are between 0 and 255 (inclusive). Defaults to 4.
	sampleSize?: null | float64 @go(SampleSize,*float64)

	// Specifies the number of samples within the sample period that must succeed. Possible values are between 0 and 255 (inclusive). Defaults to 3.
	successfulSamplesRequired?: null | float64 @go(SuccessfulSamplesRequired,*float64)
}

#LoadBalancingObservation: {
	// Specifies the additional latency in milliseconds for probes to fall into the lowest latency bucket. Possible values are between 0 and 1000 milliseconds (inclusive). Defaults to 50.
	additionalLatencyInMilliseconds?: null | float64 @go(AdditionalLatencyInMilliseconds,*float64)

	// Specifies the number of samples to consider for load balancing decisions. Possible values are between 0 and 255 (inclusive). Defaults to 4.
	sampleSize?: null | float64 @go(SampleSize,*float64)

	// Specifies the number of samples within the sample period that must succeed. Possible values are between 0 and 255 (inclusive). Defaults to 3.
	successfulSamplesRequired?: null | float64 @go(SuccessfulSamplesRequired,*float64)
}

#LoadBalancingParameters: {
	// Specifies the additional latency in milliseconds for probes to fall into the lowest latency bucket. Possible values are between 0 and 1000 milliseconds (inclusive). Defaults to 50.
	// +kubebuilder:validation:Optional
	additionalLatencyInMilliseconds?: null | float64 @go(AdditionalLatencyInMilliseconds,*float64)

	// Specifies the number of samples to consider for load balancing decisions. Possible values are between 0 and 255 (inclusive). Defaults to 4.
	// +kubebuilder:validation:Optional
	sampleSize?: null | float64 @go(SampleSize,*float64)

	// Specifies the number of samples within the sample period that must succeed. Possible values are between 0 and 255 (inclusive). Defaults to 3.
	// +kubebuilder:validation:Optional
	successfulSamplesRequired?: null | float64 @go(SuccessfulSamplesRequired,*float64)
}

// FrontdoorOriginGroupSpec defines the desired state of FrontdoorOriginGroup
#FrontdoorOriginGroupSpec: {
	forProvider: #FrontdoorOriginGroupParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FrontdoorOriginGroupInitParameters @go(InitProvider)
}

// FrontdoorOriginGroupStatus defines the observed state of FrontdoorOriginGroup.
#FrontdoorOriginGroupStatus: {
	atProvider?: #FrontdoorOriginGroupObservation @go(AtProvider)
}

// FrontdoorOriginGroup is the Schema for the FrontdoorOriginGroups API. Manages a Front Door (standard/premium) Origin Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FrontdoorOriginGroup: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadBalancing) || has(self.initProvider.loadBalancing)",message="loadBalancing is a required parameter"
	spec:    #FrontdoorOriginGroupSpec   @go(Spec)
	status?: #FrontdoorOriginGroupStatus @go(Status)
}

// FrontdoorOriginGroupList contains a list of FrontdoorOriginGroups
#FrontdoorOriginGroupList: {
	items: [...#FrontdoorOriginGroup] @go(Items,[]FrontdoorOriginGroup)
}
