// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cdn/v1beta1

package v1beta1

#ActionsInitParameters: {
	// A request_header_action block as defined below.
	requestHeaderAction?: [...#RequestHeaderActionInitParameters] @go(RequestHeaderAction,[]RequestHeaderActionInitParameters)

	// A response_header_action block as defined below.
	responseHeaderAction?: [...#ResponseHeaderActionInitParameters] @go(ResponseHeaderAction,[]ResponseHeaderActionInitParameters)

	// A route_configuration_override_action block as defined below.
	routeConfigurationOverrideAction?: [...#RouteConfigurationOverrideActionInitParameters] @go(RouteConfigurationOverrideAction,[]RouteConfigurationOverrideActionInitParameters)

	// A url_redirect_action block as defined below. You may not have a url_redirect_action and a url_rewrite_action defined in the same actions block.
	urlRedirectAction?: [...#ActionsURLRedirectActionInitParameters] @go(URLRedirectAction,[]ActionsURLRedirectActionInitParameters)

	// A url_rewrite_action block as defined below. You may not have a url_rewrite_action and a url_redirect_action defined in the same actions block.
	urlRewriteAction?: [...#ActionsURLRewriteActionInitParameters] @go(URLRewriteAction,[]ActionsURLRewriteActionInitParameters)
}

#ActionsObservation: {
	// A request_header_action block as defined below.
	requestHeaderAction?: [...#RequestHeaderActionObservation] @go(RequestHeaderAction,[]RequestHeaderActionObservation)

	// A response_header_action block as defined below.
	responseHeaderAction?: [...#ResponseHeaderActionObservation] @go(ResponseHeaderAction,[]ResponseHeaderActionObservation)

	// A route_configuration_override_action block as defined below.
	routeConfigurationOverrideAction?: [...#RouteConfigurationOverrideActionObservation] @go(RouteConfigurationOverrideAction,[]RouteConfigurationOverrideActionObservation)

	// A url_redirect_action block as defined below. You may not have a url_redirect_action and a url_rewrite_action defined in the same actions block.
	urlRedirectAction?: [...#ActionsURLRedirectActionObservation] @go(URLRedirectAction,[]ActionsURLRedirectActionObservation)

	// A url_rewrite_action block as defined below. You may not have a url_rewrite_action and a url_redirect_action defined in the same actions block.
	urlRewriteAction?: [...#ActionsURLRewriteActionObservation] @go(URLRewriteAction,[]ActionsURLRewriteActionObservation)
}

#ActionsParameters: {
	// A request_header_action block as defined below.
	// +kubebuilder:validation:Optional
	requestHeaderAction?: [...#RequestHeaderActionParameters] @go(RequestHeaderAction,[]RequestHeaderActionParameters)

	// A response_header_action block as defined below.
	// +kubebuilder:validation:Optional
	responseHeaderAction?: [...#ResponseHeaderActionParameters] @go(ResponseHeaderAction,[]ResponseHeaderActionParameters)

	// A route_configuration_override_action block as defined below.
	// +kubebuilder:validation:Optional
	routeConfigurationOverrideAction?: [...#RouteConfigurationOverrideActionParameters] @go(RouteConfigurationOverrideAction,[]RouteConfigurationOverrideActionParameters)

	// A url_redirect_action block as defined below. You may not have a url_redirect_action and a url_rewrite_action defined in the same actions block.
	// +kubebuilder:validation:Optional
	urlRedirectAction?: [...#ActionsURLRedirectActionParameters] @go(URLRedirectAction,[]ActionsURLRedirectActionParameters)

	// A url_rewrite_action block as defined below. You may not have a url_rewrite_action and a url_redirect_action defined in the same actions block.
	// +kubebuilder:validation:Optional
	urlRewriteAction?: [...#ActionsURLRewriteActionParameters] @go(URLRewriteAction,[]ActionsURLRewriteActionParameters)
}

#ActionsURLRedirectActionInitParameters: {
	// The fragment to use in the redirect. The value must be a string between 0 and 1024 characters in length, leave blank to preserve the incoming fragment. Defaults to an empty string. Defaults to "".
	destinationFragment?: null | string @go(DestinationFragment,*string)

	// The host name you want the request to be redirected to. The value must be a string between 0 and 2048 characters in length, leave blank to preserve the incoming host.
	destinationHostname?: null | string @go(DestinationHostName,*string)

	// The path to use in the redirect. The value must be a string and include the leading /, leave blank to preserve the incoming path. Defaults to an empty string. Defaults to "".
	destinationPath?: null | string @go(DestinationPath,*string)

	// The query string used in the redirect URL. The value must be in the <key>=<value> or <key>={action_server_variable} format and must not include the leading ?, leave blank to preserve the incoming query string. Maximum allowed length for this field is 2048 characters. Defaults to an empty string. Defaults to "".
	queryString?: null | string @go(QueryString,*string)

	// The protocol the request will be redirected as. Possible values include MatchRequest, Http or Https. Defaults to MatchRequest.
	redirectProtocol?: null | string @go(RedirectProtocol,*string)

	// The response type to return to the requestor. Possible values include Moved, Found , TemporaryRedirect or PermanentRedirect.
	redirectType?: null | string @go(RedirectType,*string)
}

#ActionsURLRedirectActionObservation: {
	// The fragment to use in the redirect. The value must be a string between 0 and 1024 characters in length, leave blank to preserve the incoming fragment. Defaults to an empty string. Defaults to "".
	destinationFragment?: null | string @go(DestinationFragment,*string)

	// The host name you want the request to be redirected to. The value must be a string between 0 and 2048 characters in length, leave blank to preserve the incoming host.
	destinationHostname?: null | string @go(DestinationHostName,*string)

	// The path to use in the redirect. The value must be a string and include the leading /, leave blank to preserve the incoming path. Defaults to an empty string. Defaults to "".
	destinationPath?: null | string @go(DestinationPath,*string)

	// The query string used in the redirect URL. The value must be in the <key>=<value> or <key>={action_server_variable} format and must not include the leading ?, leave blank to preserve the incoming query string. Maximum allowed length for this field is 2048 characters. Defaults to an empty string. Defaults to "".
	queryString?: null | string @go(QueryString,*string)

	// The protocol the request will be redirected as. Possible values include MatchRequest, Http or Https. Defaults to MatchRequest.
	redirectProtocol?: null | string @go(RedirectProtocol,*string)

	// The response type to return to the requestor. Possible values include Moved, Found , TemporaryRedirect or PermanentRedirect.
	redirectType?: null | string @go(RedirectType,*string)
}

#ActionsURLRedirectActionParameters: {
	// The fragment to use in the redirect. The value must be a string between 0 and 1024 characters in length, leave blank to preserve the incoming fragment. Defaults to an empty string. Defaults to "".
	// +kubebuilder:validation:Optional
	destinationFragment?: null | string @go(DestinationFragment,*string)

	// The host name you want the request to be redirected to. The value must be a string between 0 and 2048 characters in length, leave blank to preserve the incoming host.
	// +kubebuilder:validation:Optional
	destinationHostname?: null | string @go(DestinationHostName,*string)

	// The path to use in the redirect. The value must be a string and include the leading /, leave blank to preserve the incoming path. Defaults to an empty string. Defaults to "".
	// +kubebuilder:validation:Optional
	destinationPath?: null | string @go(DestinationPath,*string)

	// The query string used in the redirect URL. The value must be in the <key>=<value> or <key>={action_server_variable} format and must not include the leading ?, leave blank to preserve the incoming query string. Maximum allowed length for this field is 2048 characters. Defaults to an empty string. Defaults to "".
	// +kubebuilder:validation:Optional
	queryString?: null | string @go(QueryString,*string)

	// The protocol the request will be redirected as. Possible values include MatchRequest, Http or Https. Defaults to MatchRequest.
	// +kubebuilder:validation:Optional
	redirectProtocol?: null | string @go(RedirectProtocol,*string)

	// The response type to return to the requestor. Possible values include Moved, Found , TemporaryRedirect or PermanentRedirect.
	// +kubebuilder:validation:Optional
	redirectType?: null | string @go(RedirectType,*string)
}

#ActionsURLRewriteActionInitParameters: {
	// The destination path to use in the rewrite. The destination path overwrites the source pattern.
	destination?: null | string @go(Destination,*string)

	// Append the remaining path after the source pattern to the new destination path? Possible values true or false. Defaults to false.
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash "/" as the source pattern value.
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#ActionsURLRewriteActionObservation: {
	// The destination path to use in the rewrite. The destination path overwrites the source pattern.
	destination?: null | string @go(Destination,*string)

	// Append the remaining path after the source pattern to the new destination path? Possible values true or false. Defaults to false.
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash "/" as the source pattern value.
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#ActionsURLRewriteActionParameters: {
	// The destination path to use in the rewrite. The destination path overwrites the source pattern.
	// +kubebuilder:validation:Optional
	destination?: null | string @go(Destination,*string)

	// Append the remaining path after the source pattern to the new destination path? Possible values true or false. Defaults to false.
	// +kubebuilder:validation:Optional
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash "/" as the source pattern value.
	// +kubebuilder:validation:Optional
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#ClientPortConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ClientPortConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ClientPortConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#ConditionsCookiesConditionInitParameters: {
	// A string value representing the name of the cookie.
	cookieName?: null | string @go(CookieName,*string)

	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsCookiesConditionObservation: {
	// A string value representing the name of the cookie.
	cookieName?: null | string @go(CookieName,*string)

	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsCookiesConditionParameters: {
	// A string value representing the name of the cookie.
	// +kubebuilder:validation:Optional
	cookieName?: null | string @go(CookieName,*string)

	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsHTTPVersionConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsHTTPVersionConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsHTTPVersionConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#ConditionsInitParameters: {
	// A client_port_condition block as defined below.
	clientPortCondition?: [...#ClientPortConditionInitParameters] @go(ClientPortCondition,[]ClientPortConditionInitParameters)

	// A cookies_condition block as defined below.
	cookiesCondition?: [...#ConditionsCookiesConditionInitParameters] @go(CookiesCondition,[]ConditionsCookiesConditionInitParameters)

	// A http_version_condition block as defined below.
	httpVersionCondition?: [...#ConditionsHTTPVersionConditionInitParameters] @go(HTTPVersionCondition,[]ConditionsHTTPVersionConditionInitParameters)

	// A host_name_condition block as defined below.
	hostNameCondition?: [...#HostNameConditionInitParameters] @go(HostNameCondition,[]HostNameConditionInitParameters)

	// A is_device_condition block as defined below.
	isDeviceCondition?: [...#IsDeviceConditionInitParameters] @go(IsDeviceCondition,[]IsDeviceConditionInitParameters)

	// A post_args_condition block as defined below.
	postArgsCondition?: [...#PostArgsConditionInitParameters] @go(PostArgsCondition,[]PostArgsConditionInitParameters)

	// A query_string_condition block as defined below.
	queryStringCondition?: [...#ConditionsQueryStringConditionInitParameters] @go(QueryStringCondition,[]ConditionsQueryStringConditionInitParameters)

	// A remote_address_condition block as defined below.
	remoteAddressCondition?: [...#ConditionsRemoteAddressConditionInitParameters] @go(RemoteAddressCondition,[]ConditionsRemoteAddressConditionInitParameters)

	// A request_body_condition block as defined below.
	requestBodyCondition?: [...#ConditionsRequestBodyConditionInitParameters] @go(RequestBodyCondition,[]ConditionsRequestBodyConditionInitParameters)

	// A request_header_condition block as defined below.
	requestHeaderCondition?: [...#ConditionsRequestHeaderConditionInitParameters] @go(RequestHeaderCondition,[]ConditionsRequestHeaderConditionInitParameters)

	// A request_method_condition block as defined below.
	requestMethodCondition?: [...#ConditionsRequestMethodConditionInitParameters] @go(RequestMethodCondition,[]ConditionsRequestMethodConditionInitParameters)

	// A request_scheme_condition block as defined below.
	requestSchemeCondition?: [...#ConditionsRequestSchemeConditionInitParameters] @go(RequestSchemeCondition,[]ConditionsRequestSchemeConditionInitParameters)

	// A request_uri_condition block as defined below.
	requestUriCondition?: [...#ConditionsRequestURIConditionInitParameters] @go(RequestURICondition,[]ConditionsRequestURIConditionInitParameters)

	// A ssl_protocol_condition block as defined below.
	sslProtocolCondition?: [...#SSLProtocolConditionInitParameters] @go(SSLProtocolCondition,[]SSLProtocolConditionInitParameters)

	// A server_port_condition block as defined below.
	serverPortCondition?: [...#ServerPortConditionInitParameters] @go(ServerPortCondition,[]ServerPortConditionInitParameters)

	// A socket_address_condition block as defined below.
	socketAddressCondition?: [...#SocketAddressConditionInitParameters] @go(SocketAddressCondition,[]SocketAddressConditionInitParameters)

	// A url_file_extension_condition block as defined below.
	urlFileExtensionCondition?: [...#ConditionsURLFileExtensionConditionInitParameters] @go(URLFileExtensionCondition,[]ConditionsURLFileExtensionConditionInitParameters)

	// A url_filename_condition block as defined below.
	urlFilenameCondition?: [...#URLFilenameConditionInitParameters] @go(URLFilenameCondition,[]URLFilenameConditionInitParameters)

	// A url_path_condition block as defined below.
	urlPathCondition?: [...#ConditionsURLPathConditionInitParameters] @go(URLPathCondition,[]ConditionsURLPathConditionInitParameters)
}

#ConditionsObservation: {
	// A client_port_condition block as defined below.
	clientPortCondition?: [...#ClientPortConditionObservation] @go(ClientPortCondition,[]ClientPortConditionObservation)

	// A cookies_condition block as defined below.
	cookiesCondition?: [...#ConditionsCookiesConditionObservation] @go(CookiesCondition,[]ConditionsCookiesConditionObservation)

	// A http_version_condition block as defined below.
	httpVersionCondition?: [...#ConditionsHTTPVersionConditionObservation] @go(HTTPVersionCondition,[]ConditionsHTTPVersionConditionObservation)

	// A host_name_condition block as defined below.
	hostNameCondition?: [...#HostNameConditionObservation] @go(HostNameCondition,[]HostNameConditionObservation)

	// A is_device_condition block as defined below.
	isDeviceCondition?: [...#IsDeviceConditionObservation] @go(IsDeviceCondition,[]IsDeviceConditionObservation)

	// A post_args_condition block as defined below.
	postArgsCondition?: [...#PostArgsConditionObservation] @go(PostArgsCondition,[]PostArgsConditionObservation)

	// A query_string_condition block as defined below.
	queryStringCondition?: [...#ConditionsQueryStringConditionObservation] @go(QueryStringCondition,[]ConditionsQueryStringConditionObservation)

	// A remote_address_condition block as defined below.
	remoteAddressCondition?: [...#ConditionsRemoteAddressConditionObservation] @go(RemoteAddressCondition,[]ConditionsRemoteAddressConditionObservation)

	// A request_body_condition block as defined below.
	requestBodyCondition?: [...#ConditionsRequestBodyConditionObservation] @go(RequestBodyCondition,[]ConditionsRequestBodyConditionObservation)

	// A request_header_condition block as defined below.
	requestHeaderCondition?: [...#ConditionsRequestHeaderConditionObservation] @go(RequestHeaderCondition,[]ConditionsRequestHeaderConditionObservation)

	// A request_method_condition block as defined below.
	requestMethodCondition?: [...#ConditionsRequestMethodConditionObservation] @go(RequestMethodCondition,[]ConditionsRequestMethodConditionObservation)

	// A request_scheme_condition block as defined below.
	requestSchemeCondition?: [...#ConditionsRequestSchemeConditionObservation] @go(RequestSchemeCondition,[]ConditionsRequestSchemeConditionObservation)

	// A request_uri_condition block as defined below.
	requestUriCondition?: [...#ConditionsRequestURIConditionObservation] @go(RequestURICondition,[]ConditionsRequestURIConditionObservation)

	// A ssl_protocol_condition block as defined below.
	sslProtocolCondition?: [...#SSLProtocolConditionObservation] @go(SSLProtocolCondition,[]SSLProtocolConditionObservation)

	// A server_port_condition block as defined below.
	serverPortCondition?: [...#ServerPortConditionObservation] @go(ServerPortCondition,[]ServerPortConditionObservation)

	// A socket_address_condition block as defined below.
	socketAddressCondition?: [...#SocketAddressConditionObservation] @go(SocketAddressCondition,[]SocketAddressConditionObservation)

	// A url_file_extension_condition block as defined below.
	urlFileExtensionCondition?: [...#ConditionsURLFileExtensionConditionObservation] @go(URLFileExtensionCondition,[]ConditionsURLFileExtensionConditionObservation)

	// A url_filename_condition block as defined below.
	urlFilenameCondition?: [...#URLFilenameConditionObservation] @go(URLFilenameCondition,[]URLFilenameConditionObservation)

	// A url_path_condition block as defined below.
	urlPathCondition?: [...#ConditionsURLPathConditionObservation] @go(URLPathCondition,[]ConditionsURLPathConditionObservation)
}

#ConditionsParameters: {
	// A client_port_condition block as defined below.
	// +kubebuilder:validation:Optional
	clientPortCondition?: [...#ClientPortConditionParameters] @go(ClientPortCondition,[]ClientPortConditionParameters)

	// A cookies_condition block as defined below.
	// +kubebuilder:validation:Optional
	cookiesCondition?: [...#ConditionsCookiesConditionParameters] @go(CookiesCondition,[]ConditionsCookiesConditionParameters)

	// A http_version_condition block as defined below.
	// +kubebuilder:validation:Optional
	httpVersionCondition?: [...#ConditionsHTTPVersionConditionParameters] @go(HTTPVersionCondition,[]ConditionsHTTPVersionConditionParameters)

	// A host_name_condition block as defined below.
	// +kubebuilder:validation:Optional
	hostNameCondition?: [...#HostNameConditionParameters] @go(HostNameCondition,[]HostNameConditionParameters)

	// A is_device_condition block as defined below.
	// +kubebuilder:validation:Optional
	isDeviceCondition?: [...#IsDeviceConditionParameters] @go(IsDeviceCondition,[]IsDeviceConditionParameters)

	// A post_args_condition block as defined below.
	// +kubebuilder:validation:Optional
	postArgsCondition?: [...#PostArgsConditionParameters] @go(PostArgsCondition,[]PostArgsConditionParameters)

	// A query_string_condition block as defined below.
	// +kubebuilder:validation:Optional
	queryStringCondition?: [...#ConditionsQueryStringConditionParameters] @go(QueryStringCondition,[]ConditionsQueryStringConditionParameters)

	// A remote_address_condition block as defined below.
	// +kubebuilder:validation:Optional
	remoteAddressCondition?: [...#ConditionsRemoteAddressConditionParameters] @go(RemoteAddressCondition,[]ConditionsRemoteAddressConditionParameters)

	// A request_body_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestBodyCondition?: [...#ConditionsRequestBodyConditionParameters] @go(RequestBodyCondition,[]ConditionsRequestBodyConditionParameters)

	// A request_header_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestHeaderCondition?: [...#ConditionsRequestHeaderConditionParameters] @go(RequestHeaderCondition,[]ConditionsRequestHeaderConditionParameters)

	// A request_method_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestMethodCondition?: [...#ConditionsRequestMethodConditionParameters] @go(RequestMethodCondition,[]ConditionsRequestMethodConditionParameters)

	// A request_scheme_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestSchemeCondition?: [...#ConditionsRequestSchemeConditionParameters] @go(RequestSchemeCondition,[]ConditionsRequestSchemeConditionParameters)

	// A request_uri_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestUriCondition?: [...#ConditionsRequestURIConditionParameters] @go(RequestURICondition,[]ConditionsRequestURIConditionParameters)

	// A ssl_protocol_condition block as defined below.
	// +kubebuilder:validation:Optional
	sslProtocolCondition?: [...#SSLProtocolConditionParameters] @go(SSLProtocolCondition,[]SSLProtocolConditionParameters)

	// A server_port_condition block as defined below.
	// +kubebuilder:validation:Optional
	serverPortCondition?: [...#ServerPortConditionParameters] @go(ServerPortCondition,[]ServerPortConditionParameters)

	// A socket_address_condition block as defined below.
	// +kubebuilder:validation:Optional
	socketAddressCondition?: [...#SocketAddressConditionParameters] @go(SocketAddressCondition,[]SocketAddressConditionParameters)

	// A url_file_extension_condition block as defined below.
	// +kubebuilder:validation:Optional
	urlFileExtensionCondition?: [...#ConditionsURLFileExtensionConditionParameters] @go(URLFileExtensionCondition,[]ConditionsURLFileExtensionConditionParameters)

	// A url_filename_condition block as defined below.
	// +kubebuilder:validation:Optional
	urlFilenameCondition?: [...#URLFilenameConditionParameters] @go(URLFilenameCondition,[]URLFilenameConditionParameters)

	// A url_path_condition block as defined below.
	// +kubebuilder:validation:Optional
	urlPathCondition?: [...#ConditionsURLPathConditionParameters] @go(URLPathCondition,[]ConditionsURLPathConditionParameters)
}

#ConditionsQueryStringConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsQueryStringConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsQueryStringConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRemoteAddressConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsRemoteAddressConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsRemoteAddressConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#ConditionsRequestBodyConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestBodyConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestBodyConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestHeaderConditionInitParameters: {
	// The name of the header to modify.
	headerName?: null | string @go(HeaderName,*string)

	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestHeaderConditionObservation: {
	// The name of the header to modify.
	headerName?: null | string @go(HeaderName,*string)

	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestHeaderConditionParameters: {
	// The name of the header to modify.
	// +kubebuilder:validation:Optional
	headerName?: null | string @go(HeaderName,*string)

	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestMethodConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsRequestMethodConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsRequestMethodConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#ConditionsRequestSchemeConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsRequestSchemeConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ConditionsRequestSchemeConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#ConditionsRequestURIConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestURIConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsRequestURIConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsURLFileExtensionConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsURLFileExtensionConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsURLFileExtensionConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsURLPathConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsURLPathConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#ConditionsURLPathConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#FrontdoorRuleInitParameters: {
	// An actions block as defined below.
	actions?: [...#ActionsInitParameters] @go(Actions,[]ActionsInitParameters)

	// If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are Continue and Stop. Defaults to Continue.
	behaviorOnMatch?: null | string @go(BehaviorOnMatch,*string)

	// A conditions block as defined below.
	conditions?: [...#ConditionsInitParameters] @go(Conditions,[]ConditionsInitParameters)

	// The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at 1(e.g. 1, 2, 3...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.
	order?: null | float64 @go(Order,*float64)
}

#FrontdoorRuleObservation: {
	// An actions block as defined below.
	actions?: [...#ActionsObservation] @go(Actions,[]ActionsObservation)

	// If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are Continue and Stop. Defaults to Continue.
	behaviorOnMatch?: null | string @go(BehaviorOnMatch,*string)

	// The resource ID of the Front Door Rule Set for this Front Door Rule. Changing this forces a new Front Door Rule to be created.
	cdnFrontdoorRuleSetId?: null | string @go(CdnFrontdoorRuleSetID,*string)

	// The name of the Front Door Rule Set containing this Front Door Rule.
	cdnFrontdoorRuleSetName?: null | string @go(CdnFrontdoorRuleSetName,*string)

	// A conditions block as defined below.
	conditions?: [...#ConditionsObservation] @go(Conditions,[]ConditionsObservation)

	// The ID of the Front Door Rule.
	id?: null | string @go(ID,*string)

	// The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at 1(e.g. 1, 2, 3...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.
	order?: null | float64 @go(Order,*float64)
}

#FrontdoorRuleParameters: {
	// An actions block as defined below.
	// +kubebuilder:validation:Optional
	actions?: [...#ActionsParameters] @go(Actions,[]ActionsParameters)

	// If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are Continue and Stop. Defaults to Continue.
	// +kubebuilder:validation:Optional
	behaviorOnMatch?: null | string @go(BehaviorOnMatch,*string)

	// The resource ID of the Front Door Rule Set for this Front Door Rule. Changing this forces a new Front Door Rule to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cdn/v1beta1.FrontdoorRuleSet
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	cdnFrontdoorRuleSetId?: null | string @go(CdnFrontdoorRuleSetID,*string)

	// A conditions block as defined below.
	// +kubebuilder:validation:Optional
	conditions?: [...#ConditionsParameters] @go(Conditions,[]ConditionsParameters)

	// The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at 1(e.g. 1, 2, 3...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.
	// +kubebuilder:validation:Optional
	order?: null | float64 @go(Order,*float64)
}

#HostNameConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#HostNameConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#HostNameConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#IsDeviceConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#IsDeviceConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#IsDeviceConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#PostArgsConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A string value representing the name of the POST argument.
	postArgsName?: null | string @go(PostArgsName,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#PostArgsConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A string value representing the name of the POST argument.
	postArgsName?: null | string @go(PostArgsName,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#PostArgsConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A string value representing the name of the POST argument.
	// +kubebuilder:validation:Optional
	postArgsName?: null | string @go(PostArgsName,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestHeaderActionInitParameters: {
	// The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.
	headerAction?: null | string @go(HeaderAction,*string)

	// The name of the header to modify.
	headerName?: null | string @go(HeaderName,*string)

	// The value to append or overwrite.
	value?: null | string @go(Value,*string)
}

#RequestHeaderActionObservation: {
	// The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.
	headerAction?: null | string @go(HeaderAction,*string)

	// The name of the header to modify.
	headerName?: null | string @go(HeaderName,*string)

	// The value to append or overwrite.
	value?: null | string @go(Value,*string)
}

#RequestHeaderActionParameters: {
	// The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.
	// +kubebuilder:validation:Optional
	headerAction?: null | string @go(HeaderAction,*string)

	// The name of the header to modify.
	// +kubebuilder:validation:Optional
	headerName?: null | string @go(HeaderName,*string)

	// The value to append or overwrite.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#ResponseHeaderActionInitParameters: {
	// The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.
	headerAction?: null | string @go(HeaderAction,*string)

	// The name of the header to modify.
	headerName?: null | string @go(HeaderName,*string)

	// The value to append or overwrite.
	value?: null | string @go(Value,*string)
}

#ResponseHeaderActionObservation: {
	// The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.
	headerAction?: null | string @go(HeaderAction,*string)

	// The name of the header to modify.
	headerName?: null | string @go(HeaderName,*string)

	// The value to append or overwrite.
	value?: null | string @go(Value,*string)
}

#ResponseHeaderActionParameters: {
	// The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.
	// +kubebuilder:validation:Optional
	headerAction?: null | string @go(HeaderAction,*string)

	// The name of the header to modify.
	// +kubebuilder:validation:Optional
	headerName?: null | string @go(HeaderName,*string)

	// The value to append or overwrite.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#RouteConfigurationOverrideActionInitParameters: {
	// HonorOrigin the Front Door will always honor origin response header directive. If the origin directive is missing, Front Door will cache contents anywhere from 1 to 3 days. OverrideAlways the TTL value returned from your Front Door Origin is overwritten with the value specified in the action. This behavior will only be applied if the response is cacheable. OverrideIfOriginMissing if no TTL value gets returned from your Front Door Origin, the rule sets the TTL to the value specified in the action. This behavior will only be applied if the response is cacheable. Disabled the Front Door will not cache the response contents, irrespective of Front Door Origin response directives. Possible values include HonorOrigin, OverrideAlways, OverrideIfOriginMissing or Disabled.
	cacheBehavior?: null | string @go(CacheBehavior,*string)

	// When Cache behavior is set to Override or SetIfMissing, this field specifies the cache duration to use. The maximum duration is 366 days specified in the d.HH:MM:SS format(e.g. 365.23:59:59). If the desired maximum cache duration is less than 1 day then the maximum cache duration should be specified in the HH:MM:SS format(e.g. 23:59:59).
	cacheDuration?: null | string @go(CacheDuration,*string)

	// Should the Front Door dynamically compress the content? Possible values include true or false.
	compressionEnabled?: null | bool @go(CompressionEnabled,*bool)

	// The forwarding protocol the request will be redirected as. This overrides the configuration specified in the route to be associated with. Possible values include MatchRequest, HttpOnly or HttpsOnly.
	forwardingProtocol?: null | string @go(ForwardingProtocol,*string)

	// IncludeSpecifiedQueryStrings query strings specified in the query_string_parameters field get included when the cache key gets generated. UseQueryString cache every unique URL, each unique URL will have its own cache key. IgnoreSpecifiedQueryStrings query strings specified in the query_string_parameters field get excluded when the cache key gets generated. IgnoreQueryString query strings aren't considered when the cache key gets generated. Possible values include IgnoreQueryString, UseQueryString, IgnoreSpecifiedQueryStrings or IncludeSpecifiedQueryStrings.
	queryStringCachingBehavior?: null | string @go(QueryStringCachingBehavior,*string)

	// A list of query string parameter names.
	queryStringParameters?: [...null | string] @go(QueryStringParameters,[]*string)
}

#RouteConfigurationOverrideActionObservation: {
	// HonorOrigin the Front Door will always honor origin response header directive. If the origin directive is missing, Front Door will cache contents anywhere from 1 to 3 days. OverrideAlways the TTL value returned from your Front Door Origin is overwritten with the value specified in the action. This behavior will only be applied if the response is cacheable. OverrideIfOriginMissing if no TTL value gets returned from your Front Door Origin, the rule sets the TTL to the value specified in the action. This behavior will only be applied if the response is cacheable. Disabled the Front Door will not cache the response contents, irrespective of Front Door Origin response directives. Possible values include HonorOrigin, OverrideAlways, OverrideIfOriginMissing or Disabled.
	cacheBehavior?: null | string @go(CacheBehavior,*string)

	// When Cache behavior is set to Override or SetIfMissing, this field specifies the cache duration to use. The maximum duration is 366 days specified in the d.HH:MM:SS format(e.g. 365.23:59:59). If the desired maximum cache duration is less than 1 day then the maximum cache duration should be specified in the HH:MM:SS format(e.g. 23:59:59).
	cacheDuration?: null | string @go(CacheDuration,*string)

	// The Front Door Origin Group resource ID that the request should be routed to. This overrides the configuration specified in the Front Door Endpoint route.
	cdnFrontdoorOriginGroupId?: null | string @go(CdnFrontdoorOriginGroupID,*string)

	// Should the Front Door dynamically compress the content? Possible values include true or false.
	compressionEnabled?: null | bool @go(CompressionEnabled,*bool)

	// The forwarding protocol the request will be redirected as. This overrides the configuration specified in the route to be associated with. Possible values include MatchRequest, HttpOnly or HttpsOnly.
	forwardingProtocol?: null | string @go(ForwardingProtocol,*string)

	// IncludeSpecifiedQueryStrings query strings specified in the query_string_parameters field get included when the cache key gets generated. UseQueryString cache every unique URL, each unique URL will have its own cache key. IgnoreSpecifiedQueryStrings query strings specified in the query_string_parameters field get excluded when the cache key gets generated. IgnoreQueryString query strings aren't considered when the cache key gets generated. Possible values include IgnoreQueryString, UseQueryString, IgnoreSpecifiedQueryStrings or IncludeSpecifiedQueryStrings.
	queryStringCachingBehavior?: null | string @go(QueryStringCachingBehavior,*string)

	// A list of query string parameter names.
	queryStringParameters?: [...null | string] @go(QueryStringParameters,[]*string)
}

#RouteConfigurationOverrideActionParameters: {
	// HonorOrigin the Front Door will always honor origin response header directive. If the origin directive is missing, Front Door will cache contents anywhere from 1 to 3 days. OverrideAlways the TTL value returned from your Front Door Origin is overwritten with the value specified in the action. This behavior will only be applied if the response is cacheable. OverrideIfOriginMissing if no TTL value gets returned from your Front Door Origin, the rule sets the TTL to the value specified in the action. This behavior will only be applied if the response is cacheable. Disabled the Front Door will not cache the response contents, irrespective of Front Door Origin response directives. Possible values include HonorOrigin, OverrideAlways, OverrideIfOriginMissing or Disabled.
	// +kubebuilder:validation:Optional
	cacheBehavior?: null | string @go(CacheBehavior,*string)

	// When Cache behavior is set to Override or SetIfMissing, this field specifies the cache duration to use. The maximum duration is 366 days specified in the d.HH:MM:SS format(e.g. 365.23:59:59). If the desired maximum cache duration is less than 1 day then the maximum cache duration should be specified in the HH:MM:SS format(e.g. 23:59:59).
	// +kubebuilder:validation:Optional
	cacheDuration?: null | string @go(CacheDuration,*string)

	// The Front Door Origin Group resource ID that the request should be routed to. This overrides the configuration specified in the Front Door Endpoint route.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cdn/v1beta1.FrontdoorOriginGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	cdnFrontdoorOriginGroupId?: null | string @go(CdnFrontdoorOriginGroupID,*string)

	// Should the Front Door dynamically compress the content? Possible values include true or false.
	// +kubebuilder:validation:Optional
	compressionEnabled?: null | bool @go(CompressionEnabled,*bool)

	// The forwarding protocol the request will be redirected as. This overrides the configuration specified in the route to be associated with. Possible values include MatchRequest, HttpOnly or HttpsOnly.
	// +kubebuilder:validation:Optional
	forwardingProtocol?: null | string @go(ForwardingProtocol,*string)

	// IncludeSpecifiedQueryStrings query strings specified in the query_string_parameters field get included when the cache key gets generated. UseQueryString cache every unique URL, each unique URL will have its own cache key. IgnoreSpecifiedQueryStrings query strings specified in the query_string_parameters field get excluded when the cache key gets generated. IgnoreQueryString query strings aren't considered when the cache key gets generated. Possible values include IgnoreQueryString, UseQueryString, IgnoreSpecifiedQueryStrings or IncludeSpecifiedQueryStrings.
	// +kubebuilder:validation:Optional
	queryStringCachingBehavior?: null | string @go(QueryStringCachingBehavior,*string)

	// A list of query string parameter names.
	// +kubebuilder:validation:Optional
	queryStringParameters?: [...null | string] @go(QueryStringParameters,[]*string)
}

#SSLProtocolConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#SSLProtocolConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#SSLProtocolConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#ServerPortConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ServerPortConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#ServerPortConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#SocketAddressConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#SocketAddressConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)
}

#SocketAddressConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#URLFilenameConditionInitParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFilenameConditionObservation: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFilenameConditionParameters: {
	// One or more string or integer values(e.g. "1") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual or RegEx. Details can be found in the Condition Operator List below.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

// FrontdoorRuleSpec defines the desired state of FrontdoorRule
#FrontdoorRuleSpec: {
	forProvider: #FrontdoorRuleParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FrontdoorRuleInitParameters @go(InitProvider)
}

// FrontdoorRuleStatus defines the observed state of FrontdoorRule.
#FrontdoorRuleStatus: {
	atProvider?: #FrontdoorRuleObservation @go(AtProvider)
}

// FrontdoorRule is the Schema for the FrontdoorRules API. Manages a Front Door (standard/premium) Rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FrontdoorRule: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.actions) || has(self.initProvider.actions)",message="actions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.order) || has(self.initProvider.order)",message="order is a required parameter"
	spec:    #FrontdoorRuleSpec   @go(Spec)
	status?: #FrontdoorRuleStatus @go(Status)
}

// FrontdoorRuleList contains a list of FrontdoorRules
#FrontdoorRuleList: {
	items: [...#FrontdoorRule] @go(Items,[]FrontdoorRule)
}
