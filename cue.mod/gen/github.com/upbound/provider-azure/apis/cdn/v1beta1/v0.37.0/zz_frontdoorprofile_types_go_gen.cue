// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cdn/v1beta1

package v1beta1

#FrontdoorProfileInitParameters: {
	// Specifies the maximum response timeout in seconds. Possible values are between 16 and 240 seconds (inclusive). Defaults to 120 seconds.
	responseTimeoutSeconds?: null | float64 @go(ResponseTimeoutSeconds,*float64)

	// Specifies the SKU for this Front Door Profile. Possible values include Standard_AzureFrontDoor and Premium_AzureFrontDoor. Changing this forces a new resource to be created.
	skuName?: null | string @go(SkuName,*string)

	// Specifies a mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#FrontdoorProfileObservation: {
	// The ID of this Front Door Profile.
	id?: null | string @go(ID,*string)

	// The UUID of this Front Door Profile which will be sent in the HTTP Header as the X-Azure-FDID attribute.
	resourceGuid?: null | string @go(ResourceGUID,*string)

	// The name of the Resource Group where this Front Door Profile should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the maximum response timeout in seconds. Possible values are between 16 and 240 seconds (inclusive). Defaults to 120 seconds.
	responseTimeoutSeconds?: null | float64 @go(ResponseTimeoutSeconds,*float64)

	// Specifies the SKU for this Front Door Profile. Possible values include Standard_AzureFrontDoor and Premium_AzureFrontDoor. Changing this forces a new resource to be created.
	skuName?: null | string @go(SkuName,*string)

	// Specifies a mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#FrontdoorProfileParameters: {
	// The name of the Resource Group where this Front Door Profile should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the maximum response timeout in seconds. Possible values are between 16 and 240 seconds (inclusive). Defaults to 120 seconds.
	// +kubebuilder:validation:Optional
	responseTimeoutSeconds?: null | float64 @go(ResponseTimeoutSeconds,*float64)

	// Specifies the SKU for this Front Door Profile. Possible values include Standard_AzureFrontDoor and Premium_AzureFrontDoor. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	skuName?: null | string @go(SkuName,*string)

	// Specifies a mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// FrontdoorProfileSpec defines the desired state of FrontdoorProfile
#FrontdoorProfileSpec: {
	forProvider: #FrontdoorProfileParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FrontdoorProfileInitParameters @go(InitProvider)
}

// FrontdoorProfileStatus defines the observed state of FrontdoorProfile.
#FrontdoorProfileStatus: {
	atProvider?: #FrontdoorProfileObservation @go(AtProvider)
}

// FrontdoorProfile is the Schema for the FrontdoorProfiles API. Manages a Front Door (standard/premium) Profile.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FrontdoorProfile: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.skuName) || (has(self.initProvider) && has(self.initProvider.skuName))",message="spec.forProvider.skuName is a required parameter"
	spec:    #FrontdoorProfileSpec   @go(Spec)
	status?: #FrontdoorProfileStatus @go(Status)
}

// FrontdoorProfileList contains a list of FrontdoorProfiles
#FrontdoorProfileList: {
	items: [...#FrontdoorProfile] @go(Items,[]FrontdoorProfile)
}
