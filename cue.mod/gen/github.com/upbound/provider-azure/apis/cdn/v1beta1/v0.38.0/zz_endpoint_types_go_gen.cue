// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/cdn/v1beta1

package v1beta1

#CacheExpirationActionInitParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	duration?: null | string @go(Duration,*string)
}

#CacheExpirationActionObservation: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	duration?: null | string @go(Duration,*string)
}

#CacheExpirationActionParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Optional
	behavior?: null | string @go(Behavior,*string)

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	// +kubebuilder:validation:Optional
	duration?: null | string @go(Duration,*string)
}

#CacheKeyQueryStringActionInitParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Comma separated list of parameter values.
	parameters?: null | string @go(Parameters,*string)
}

#CacheKeyQueryStringActionObservation: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Comma separated list of parameter values.
	parameters?: null | string @go(Parameters,*string)
}

#CacheKeyQueryStringActionParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Optional
	behavior?: null | string @go(Behavior,*string)

	// Comma separated list of parameter values.
	// +kubebuilder:validation:Optional
	parameters?: null | string @go(Parameters,*string)
}

#CookiesConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// Header name.
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#CookiesConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// Header name.
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#CookiesConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Header name.
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#DeliveryRuleInitParameters: {
	// A cache_expiration_action block as defined above.
	cacheExpirationAction?: [...#CacheExpirationActionInitParameters] @go(CacheExpirationAction,[]CacheExpirationActionInitParameters)

	// A cache_key_query_string_action block as defined above.
	cacheKeyQueryStringAction?: [...#CacheKeyQueryStringActionInitParameters] @go(CacheKeyQueryStringAction,[]CacheKeyQueryStringActionInitParameters)

	// A cookies_condition block as defined above.
	cookiesCondition?: [...#CookiesConditionInitParameters] @go(CookiesCondition,[]CookiesConditionInitParameters)

	// A device_condition block as defined below.
	deviceCondition?: [...#DeviceConditionInitParameters] @go(DeviceCondition,[]DeviceConditionInitParameters)

	// A http_version_condition block as defined below.
	httpVersionCondition?: [...#HTTPVersionConditionInitParameters] @go(HTTPVersionCondition,[]HTTPVersionConditionInitParameters)

	// A modify_request_header_action block as defined below.
	modifyRequestHeaderAction?: [...#ModifyRequestHeaderActionInitParameters] @go(ModifyRequestHeaderAction,[]ModifyRequestHeaderActionInitParameters)

	// A modify_response_header_action block as defined below.
	modifyResponseHeaderAction?: [...#ModifyResponseHeaderActionInitParameters] @go(ModifyResponseHeaderAction,[]ModifyResponseHeaderActionInitParameters)

	// The Name which should be used for this Delivery Rule.
	name?: null | string @go(Name,*string)

	// The order used for this rule. The order values should be sequential and begin at 1.
	order?: null | float64 @go(Order,*float64)

	// A post_arg_condition block as defined below.
	postArgCondition?: [...#PostArgConditionInitParameters] @go(PostArgCondition,[]PostArgConditionInitParameters)

	// A query_string_condition block as defined below.
	queryStringCondition?: [...#QueryStringConditionInitParameters] @go(QueryStringCondition,[]QueryStringConditionInitParameters)

	// A remote_address_condition block as defined below.
	remoteAddressCondition?: [...#RemoteAddressConditionInitParameters] @go(RemoteAddressCondition,[]RemoteAddressConditionInitParameters)

	// A request_body_condition block as defined below.
	requestBodyCondition?: [...#RequestBodyConditionInitParameters] @go(RequestBodyCondition,[]RequestBodyConditionInitParameters)

	// A request_header_condition block as defined below.
	requestHeaderCondition?: [...#RequestHeaderConditionInitParameters] @go(RequestHeaderCondition,[]RequestHeaderConditionInitParameters)

	// A request_method_condition block as defined below.
	requestMethodCondition?: [...#RequestMethodConditionInitParameters] @go(RequestMethodCondition,[]RequestMethodConditionInitParameters)

	// A request_scheme_condition block as defined below.
	requestSchemeCondition?: [...#RequestSchemeConditionInitParameters] @go(RequestSchemeCondition,[]RequestSchemeConditionInitParameters)

	// A request_uri_condition block as defined below.
	requestUriCondition?: [...#RequestURIConditionInitParameters] @go(RequestURICondition,[]RequestURIConditionInitParameters)

	// A url_file_extension_condition block as defined below.
	urlFileExtensionCondition?: [...#URLFileExtensionConditionInitParameters] @go(URLFileExtensionCondition,[]URLFileExtensionConditionInitParameters)

	// A url_file_name_condition block as defined below.
	urlFileNameCondition?: [...#URLFileNameConditionInitParameters] @go(URLFileNameCondition,[]URLFileNameConditionInitParameters)

	// A url_path_condition block as defined below.
	urlPathCondition?: [...#URLPathConditionInitParameters] @go(URLPathCondition,[]URLPathConditionInitParameters)

	// A url_redirect_action block as defined below.
	urlRedirectAction?: [...#URLRedirectActionInitParameters] @go(URLRedirectAction,[]URLRedirectActionInitParameters)

	// A url_rewrite_action block as defined below.
	urlRewriteAction?: [...#URLRewriteActionInitParameters] @go(URLRewriteAction,[]URLRewriteActionInitParameters)
}

#DeliveryRuleObservation: {
	// A cache_expiration_action block as defined above.
	cacheExpirationAction?: [...#CacheExpirationActionObservation] @go(CacheExpirationAction,[]CacheExpirationActionObservation)

	// A cache_key_query_string_action block as defined above.
	cacheKeyQueryStringAction?: [...#CacheKeyQueryStringActionObservation] @go(CacheKeyQueryStringAction,[]CacheKeyQueryStringActionObservation)

	// A cookies_condition block as defined above.
	cookiesCondition?: [...#CookiesConditionObservation] @go(CookiesCondition,[]CookiesConditionObservation)

	// A device_condition block as defined below.
	deviceCondition?: [...#DeviceConditionObservation] @go(DeviceCondition,[]DeviceConditionObservation)

	// A http_version_condition block as defined below.
	httpVersionCondition?: [...#HTTPVersionConditionObservation] @go(HTTPVersionCondition,[]HTTPVersionConditionObservation)

	// A modify_request_header_action block as defined below.
	modifyRequestHeaderAction?: [...#ModifyRequestHeaderActionObservation] @go(ModifyRequestHeaderAction,[]ModifyRequestHeaderActionObservation)

	// A modify_response_header_action block as defined below.
	modifyResponseHeaderAction?: [...#ModifyResponseHeaderActionObservation] @go(ModifyResponseHeaderAction,[]ModifyResponseHeaderActionObservation)

	// The Name which should be used for this Delivery Rule.
	name?: null | string @go(Name,*string)

	// The order used for this rule. The order values should be sequential and begin at 1.
	order?: null | float64 @go(Order,*float64)

	// A post_arg_condition block as defined below.
	postArgCondition?: [...#PostArgConditionObservation] @go(PostArgCondition,[]PostArgConditionObservation)

	// A query_string_condition block as defined below.
	queryStringCondition?: [...#QueryStringConditionObservation] @go(QueryStringCondition,[]QueryStringConditionObservation)

	// A remote_address_condition block as defined below.
	remoteAddressCondition?: [...#RemoteAddressConditionObservation] @go(RemoteAddressCondition,[]RemoteAddressConditionObservation)

	// A request_body_condition block as defined below.
	requestBodyCondition?: [...#RequestBodyConditionObservation] @go(RequestBodyCondition,[]RequestBodyConditionObservation)

	// A request_header_condition block as defined below.
	requestHeaderCondition?: [...#RequestHeaderConditionObservation] @go(RequestHeaderCondition,[]RequestHeaderConditionObservation)

	// A request_method_condition block as defined below.
	requestMethodCondition?: [...#RequestMethodConditionObservation] @go(RequestMethodCondition,[]RequestMethodConditionObservation)

	// A request_scheme_condition block as defined below.
	requestSchemeCondition?: [...#RequestSchemeConditionObservation] @go(RequestSchemeCondition,[]RequestSchemeConditionObservation)

	// A request_uri_condition block as defined below.
	requestUriCondition?: [...#RequestURIConditionObservation] @go(RequestURICondition,[]RequestURIConditionObservation)

	// A url_file_extension_condition block as defined below.
	urlFileExtensionCondition?: [...#URLFileExtensionConditionObservation] @go(URLFileExtensionCondition,[]URLFileExtensionConditionObservation)

	// A url_file_name_condition block as defined below.
	urlFileNameCondition?: [...#URLFileNameConditionObservation] @go(URLFileNameCondition,[]URLFileNameConditionObservation)

	// A url_path_condition block as defined below.
	urlPathCondition?: [...#URLPathConditionObservation] @go(URLPathCondition,[]URLPathConditionObservation)

	// A url_redirect_action block as defined below.
	urlRedirectAction?: [...#URLRedirectActionObservation] @go(URLRedirectAction,[]URLRedirectActionObservation)

	// A url_rewrite_action block as defined below.
	urlRewriteAction?: [...#URLRewriteActionObservation] @go(URLRewriteAction,[]URLRewriteActionObservation)
}

#DeliveryRuleParameters: {
	// A cache_expiration_action block as defined above.
	// +kubebuilder:validation:Optional
	cacheExpirationAction?: [...#CacheExpirationActionParameters] @go(CacheExpirationAction,[]CacheExpirationActionParameters)

	// A cache_key_query_string_action block as defined above.
	// +kubebuilder:validation:Optional
	cacheKeyQueryStringAction?: [...#CacheKeyQueryStringActionParameters] @go(CacheKeyQueryStringAction,[]CacheKeyQueryStringActionParameters)

	// A cookies_condition block as defined above.
	// +kubebuilder:validation:Optional
	cookiesCondition?: [...#CookiesConditionParameters] @go(CookiesCondition,[]CookiesConditionParameters)

	// A device_condition block as defined below.
	// +kubebuilder:validation:Optional
	deviceCondition?: [...#DeviceConditionParameters] @go(DeviceCondition,[]DeviceConditionParameters)

	// A http_version_condition block as defined below.
	// +kubebuilder:validation:Optional
	httpVersionCondition?: [...#HTTPVersionConditionParameters] @go(HTTPVersionCondition,[]HTTPVersionConditionParameters)

	// A modify_request_header_action block as defined below.
	// +kubebuilder:validation:Optional
	modifyRequestHeaderAction?: [...#ModifyRequestHeaderActionParameters] @go(ModifyRequestHeaderAction,[]ModifyRequestHeaderActionParameters)

	// A modify_response_header_action block as defined below.
	// +kubebuilder:validation:Optional
	modifyResponseHeaderAction?: [...#ModifyResponseHeaderActionParameters] @go(ModifyResponseHeaderAction,[]ModifyResponseHeaderActionParameters)

	// The Name which should be used for this Delivery Rule.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The order used for this rule. The order values should be sequential and begin at 1.
	// +kubebuilder:validation:Optional
	order?: null | float64 @go(Order,*float64)

	// A post_arg_condition block as defined below.
	// +kubebuilder:validation:Optional
	postArgCondition?: [...#PostArgConditionParameters] @go(PostArgCondition,[]PostArgConditionParameters)

	// A query_string_condition block as defined below.
	// +kubebuilder:validation:Optional
	queryStringCondition?: [...#QueryStringConditionParameters] @go(QueryStringCondition,[]QueryStringConditionParameters)

	// A remote_address_condition block as defined below.
	// +kubebuilder:validation:Optional
	remoteAddressCondition?: [...#RemoteAddressConditionParameters] @go(RemoteAddressCondition,[]RemoteAddressConditionParameters)

	// A request_body_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestBodyCondition?: [...#RequestBodyConditionParameters] @go(RequestBodyCondition,[]RequestBodyConditionParameters)

	// A request_header_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestHeaderCondition?: [...#RequestHeaderConditionParameters] @go(RequestHeaderCondition,[]RequestHeaderConditionParameters)

	// A request_method_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestMethodCondition?: [...#RequestMethodConditionParameters] @go(RequestMethodCondition,[]RequestMethodConditionParameters)

	// A request_scheme_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestSchemeCondition?: [...#RequestSchemeConditionParameters] @go(RequestSchemeCondition,[]RequestSchemeConditionParameters)

	// A request_uri_condition block as defined below.
	// +kubebuilder:validation:Optional
	requestUriCondition?: [...#RequestURIConditionParameters] @go(RequestURICondition,[]RequestURIConditionParameters)

	// A url_file_extension_condition block as defined below.
	// +kubebuilder:validation:Optional
	urlFileExtensionCondition?: [...#URLFileExtensionConditionParameters] @go(URLFileExtensionCondition,[]URLFileExtensionConditionParameters)

	// A url_file_name_condition block as defined below.
	// +kubebuilder:validation:Optional
	urlFileNameCondition?: [...#URLFileNameConditionParameters] @go(URLFileNameCondition,[]URLFileNameConditionParameters)

	// A url_path_condition block as defined below.
	// +kubebuilder:validation:Optional
	urlPathCondition?: [...#URLPathConditionParameters] @go(URLPathCondition,[]URLPathConditionParameters)

	// A url_redirect_action block as defined below.
	// +kubebuilder:validation:Optional
	urlRedirectAction?: [...#URLRedirectActionParameters] @go(URLRedirectAction,[]URLRedirectActionParameters)

	// A url_rewrite_action block as defined below.
	// +kubebuilder:validation:Optional
	urlRewriteAction?: [...#URLRewriteActionParameters] @go(URLRewriteAction,[]URLRewriteActionParameters)
}

#DeviceConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#DeviceConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#DeviceConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#EndpointInitParameters: {
	// An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.
	contentTypesToCompress?: [...null | string] @go(ContentTypesToCompress,[]*string)

	// Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A delivery_rule blocks as defined below.
	deliveryRule?: [...#DeliveryRuleInitParameters] @go(DeliveryRule,[]DeliveryRuleInitParameters)

	// A set of Geo Filters for this CDN Endpoint. Each geo_filter block supports fields documented below.
	geoFilter?: [...#GeoFilterInitParameters] @go(GeoFilter,[]GeoFilterInitParameters)

	// Actions that are valid for all resources regardless of any conditions. A global_delivery_rule block as defined below.
	globalDeliveryRule?: [...#GlobalDeliveryRuleInitParameters] @go(GlobalDeliveryRule,[]GlobalDeliveryRuleInitParameters)

	// Indicates whether compression is to be enabled.
	isCompressionEnabled?: null | bool @go(IsCompressionEnabled,*bool)

	// Defaults to true.
	isHttpAllowed?: null | bool @go(IsHTTPAllowed,*bool)

	// Defaults to true.
	isHttpsAllowed?: null | bool @go(IsHTTPSAllowed,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// What types of optimization should this CDN Endpoint optimize for? Possible values include DynamicSiteAcceleration, GeneralMediaStreaming, GeneralWebDelivery, LargeFileDownload and VideoOnDemandMediaStreaming.
	optimizationType?: null | string @go(OptimizationType,*string)

	// The set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each origin block supports fields documented below. Changing this forces a new resource to be created.
	origin?: [...#OriginInitParameters] @go(Origin,[]OriginInitParameters)

	// The host header CDN provider will send along with content requests to origins.
	originHostHeader?: null | string @go(OriginHostHeader,*string)

	// The path used at for origin requests.
	originPath?: null | string @go(OriginPath,*string)

	// the path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin_path.
	probePath?: null | string @go(ProbePath,*string)

	// Sets query string caching behavior. Allowed values are IgnoreQueryString, BypassCaching and UseQueryString. NotSet value can be used for Premium Verizon CDN profile. Defaults to IgnoreQueryString.
	querystringCachingBehaviour?: null | string @go(QuerystringCachingBehaviour,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EndpointObservation: {
	// An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.
	contentTypesToCompress?: [...null | string] @go(ContentTypesToCompress,[]*string)

	// Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A delivery_rule blocks as defined below.
	deliveryRule?: [...#DeliveryRuleObservation] @go(DeliveryRule,[]DeliveryRuleObservation)

	// The Fully Qualified Domain Name of the CDN Endpoint.
	fqdn?: null | string @go(Fqdn,*string)

	// A set of Geo Filters for this CDN Endpoint. Each geo_filter block supports fields documented below.
	geoFilter?: [...#GeoFilterObservation] @go(GeoFilter,[]GeoFilterObservation)

	// Actions that are valid for all resources regardless of any conditions. A global_delivery_rule block as defined below.
	globalDeliveryRule?: [...#GlobalDeliveryRuleObservation] @go(GlobalDeliveryRule,[]GlobalDeliveryRuleObservation)

	// The ID of the CDN Endpoint.
	id?: null | string @go(ID,*string)

	// Indicates whether compression is to be enabled.
	isCompressionEnabled?: null | bool @go(IsCompressionEnabled,*bool)

	// Defaults to true.
	isHttpAllowed?: null | bool @go(IsHTTPAllowed,*bool)

	// Defaults to true.
	isHttpsAllowed?: null | bool @go(IsHTTPSAllowed,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// What types of optimization should this CDN Endpoint optimize for? Possible values include DynamicSiteAcceleration, GeneralMediaStreaming, GeneralWebDelivery, LargeFileDownload and VideoOnDemandMediaStreaming.
	optimizationType?: null | string @go(OptimizationType,*string)

	// The set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each origin block supports fields documented below. Changing this forces a new resource to be created.
	origin?: [...#OriginObservation] @go(Origin,[]OriginObservation)

	// The host header CDN provider will send along with content requests to origins.
	originHostHeader?: null | string @go(OriginHostHeader,*string)

	// The path used at for origin requests.
	originPath?: null | string @go(OriginPath,*string)

	// the path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin_path.
	probePath?: null | string @go(ProbePath,*string)

	// The CDN Profile to which to attach the CDN Endpoint. Changing this forces a new resource to be created.
	profileName?: null | string @go(ProfileName,*string)

	// Sets query string caching behavior. Allowed values are IgnoreQueryString, BypassCaching and UseQueryString. NotSet value can be used for Premium Verizon CDN profile. Defaults to IgnoreQueryString.
	querystringCachingBehaviour?: null | string @go(QuerystringCachingBehaviour,*string)

	// The name of the resource group in which to create the CDN Endpoint. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EndpointParameters: {
	// An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.
	// +kubebuilder:validation:Optional
	contentTypesToCompress?: [...null | string] @go(ContentTypesToCompress,[]*string)

	// Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A delivery_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	deliveryRule?: [...#DeliveryRuleParameters] @go(DeliveryRule,[]DeliveryRuleParameters)

	// A set of Geo Filters for this CDN Endpoint. Each geo_filter block supports fields documented below.
	// +kubebuilder:validation:Optional
	geoFilter?: [...#GeoFilterParameters] @go(GeoFilter,[]GeoFilterParameters)

	// Actions that are valid for all resources regardless of any conditions. A global_delivery_rule block as defined below.
	// +kubebuilder:validation:Optional
	globalDeliveryRule?: [...#GlobalDeliveryRuleParameters] @go(GlobalDeliveryRule,[]GlobalDeliveryRuleParameters)

	// Indicates whether compression is to be enabled.
	// +kubebuilder:validation:Optional
	isCompressionEnabled?: null | bool @go(IsCompressionEnabled,*bool)

	// Defaults to true.
	// +kubebuilder:validation:Optional
	isHttpAllowed?: null | bool @go(IsHTTPAllowed,*bool)

	// Defaults to true.
	// +kubebuilder:validation:Optional
	isHttpsAllowed?: null | bool @go(IsHTTPSAllowed,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// What types of optimization should this CDN Endpoint optimize for? Possible values include DynamicSiteAcceleration, GeneralMediaStreaming, GeneralWebDelivery, LargeFileDownload and VideoOnDemandMediaStreaming.
	// +kubebuilder:validation:Optional
	optimizationType?: null | string @go(OptimizationType,*string)

	// The set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each origin block supports fields documented below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	origin?: [...#OriginParameters] @go(Origin,[]OriginParameters)

	// The host header CDN provider will send along with content requests to origins.
	// +kubebuilder:validation:Optional
	originHostHeader?: null | string @go(OriginHostHeader,*string)

	// The path used at for origin requests.
	// +kubebuilder:validation:Optional
	originPath?: null | string @go(OriginPath,*string)

	// the path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin_path.
	// +kubebuilder:validation:Optional
	probePath?: null | string @go(ProbePath,*string)

	// The CDN Profile to which to attach the CDN Endpoint. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cdn/v1beta1.Profile
	// +kubebuilder:validation:Optional
	profileName?: null | string @go(ProfileName,*string)

	// Sets query string caching behavior. Allowed values are IgnoreQueryString, BypassCaching and UseQueryString. NotSet value can be used for Premium Verizon CDN profile. Defaults to IgnoreQueryString.
	// +kubebuilder:validation:Optional
	querystringCachingBehaviour?: null | string @go(QuerystringCachingBehaviour,*string)

	// The name of the resource group in which to create the CDN Endpoint. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#GeoFilterInitParameters: {
	// The Action of the Geo Filter. Possible values include Allow and Block.
	action?: null | string @go(Action,*string)

	// A List of two letter country codes (e.g. US, GB) to be associated with this Geo Filter.
	countryCodes?: [...null | string] @go(CountryCodes,[]*string)

	// The relative path applicable to geo filter.
	relativePath?: null | string @go(RelativePath,*string)
}

#GeoFilterObservation: {
	// The Action of the Geo Filter. Possible values include Allow and Block.
	action?: null | string @go(Action,*string)

	// A List of two letter country codes (e.g. US, GB) to be associated with this Geo Filter.
	countryCodes?: [...null | string] @go(CountryCodes,[]*string)

	// The relative path applicable to geo filter.
	relativePath?: null | string @go(RelativePath,*string)
}

#GeoFilterParameters: {
	// The Action of the Geo Filter. Possible values include Allow and Block.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// A List of two letter country codes (e.g. US, GB) to be associated with this Geo Filter.
	// +kubebuilder:validation:Optional
	countryCodes: [...null | string] @go(CountryCodes,[]*string)

	// The relative path applicable to geo filter.
	// +kubebuilder:validation:Optional
	relativePath?: null | string @go(RelativePath,*string)
}

#GlobalDeliveryRuleCacheExpirationActionInitParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	duration?: null | string @go(Duration,*string)
}

#GlobalDeliveryRuleCacheExpirationActionObservation: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	duration?: null | string @go(Duration,*string)
}

#GlobalDeliveryRuleCacheExpirationActionParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Optional
	behavior?: null | string @go(Behavior,*string)

	// Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss
	// +kubebuilder:validation:Optional
	duration?: null | string @go(Duration,*string)
}

#GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Comma separated list of parameter values.
	parameters?: null | string @go(Parameters,*string)
}

#GlobalDeliveryRuleCacheKeyQueryStringActionObservation: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	behavior?: null | string @go(Behavior,*string)

	// Comma separated list of parameter values.
	parameters?: null | string @go(Parameters,*string)
}

#GlobalDeliveryRuleCacheKeyQueryStringActionParameters: {
	// The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.
	// +kubebuilder:validation:Optional
	behavior?: null | string @go(Behavior,*string)

	// Comma separated list of parameter values.
	// +kubebuilder:validation:Optional
	parameters?: null | string @go(Parameters,*string)
}

#GlobalDeliveryRuleInitParameters: {
	// A cache_expiration_action block as defined above.
	cacheExpirationAction?: [...#GlobalDeliveryRuleCacheExpirationActionInitParameters] @go(CacheExpirationAction,[]GlobalDeliveryRuleCacheExpirationActionInitParameters)

	// A cache_key_query_string_action block as defined above.
	cacheKeyQueryStringAction?: [...#GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters] @go(CacheKeyQueryStringAction,[]GlobalDeliveryRuleCacheKeyQueryStringActionInitParameters)

	// A modify_request_header_action block as defined below.
	modifyRequestHeaderAction?: [...#GlobalDeliveryRuleModifyRequestHeaderActionInitParameters] @go(ModifyRequestHeaderAction,[]GlobalDeliveryRuleModifyRequestHeaderActionInitParameters)

	// A modify_response_header_action block as defined below.
	modifyResponseHeaderAction?: [...#GlobalDeliveryRuleModifyResponseHeaderActionInitParameters] @go(ModifyResponseHeaderAction,[]GlobalDeliveryRuleModifyResponseHeaderActionInitParameters)

	// A url_redirect_action block as defined below.
	urlRedirectAction?: [...#GlobalDeliveryRuleURLRedirectActionInitParameters] @go(URLRedirectAction,[]GlobalDeliveryRuleURLRedirectActionInitParameters)

	// A url_rewrite_action block as defined below.
	urlRewriteAction?: [...#GlobalDeliveryRuleURLRewriteActionInitParameters] @go(URLRewriteAction,[]GlobalDeliveryRuleURLRewriteActionInitParameters)
}

#GlobalDeliveryRuleModifyRequestHeaderActionInitParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#GlobalDeliveryRuleModifyRequestHeaderActionObservation: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#GlobalDeliveryRuleModifyRequestHeaderActionParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#GlobalDeliveryRuleModifyResponseHeaderActionInitParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#GlobalDeliveryRuleModifyResponseHeaderActionObservation: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#GlobalDeliveryRuleModifyResponseHeaderActionParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#GlobalDeliveryRuleObservation: {
	// A cache_expiration_action block as defined above.
	cacheExpirationAction?: [...#GlobalDeliveryRuleCacheExpirationActionObservation] @go(CacheExpirationAction,[]GlobalDeliveryRuleCacheExpirationActionObservation)

	// A cache_key_query_string_action block as defined above.
	cacheKeyQueryStringAction?: [...#GlobalDeliveryRuleCacheKeyQueryStringActionObservation] @go(CacheKeyQueryStringAction,[]GlobalDeliveryRuleCacheKeyQueryStringActionObservation)

	// A modify_request_header_action block as defined below.
	modifyRequestHeaderAction?: [...#GlobalDeliveryRuleModifyRequestHeaderActionObservation] @go(ModifyRequestHeaderAction,[]GlobalDeliveryRuleModifyRequestHeaderActionObservation)

	// A modify_response_header_action block as defined below.
	modifyResponseHeaderAction?: [...#GlobalDeliveryRuleModifyResponseHeaderActionObservation] @go(ModifyResponseHeaderAction,[]GlobalDeliveryRuleModifyResponseHeaderActionObservation)

	// A url_redirect_action block as defined below.
	urlRedirectAction?: [...#GlobalDeliveryRuleURLRedirectActionObservation] @go(URLRedirectAction,[]GlobalDeliveryRuleURLRedirectActionObservation)

	// A url_rewrite_action block as defined below.
	urlRewriteAction?: [...#GlobalDeliveryRuleURLRewriteActionObservation] @go(URLRewriteAction,[]GlobalDeliveryRuleURLRewriteActionObservation)
}

#GlobalDeliveryRuleParameters: {
	// A cache_expiration_action block as defined above.
	// +kubebuilder:validation:Optional
	cacheExpirationAction?: [...#GlobalDeliveryRuleCacheExpirationActionParameters] @go(CacheExpirationAction,[]GlobalDeliveryRuleCacheExpirationActionParameters)

	// A cache_key_query_string_action block as defined above.
	// +kubebuilder:validation:Optional
	cacheKeyQueryStringAction?: [...#GlobalDeliveryRuleCacheKeyQueryStringActionParameters] @go(CacheKeyQueryStringAction,[]GlobalDeliveryRuleCacheKeyQueryStringActionParameters)

	// A modify_request_header_action block as defined below.
	// +kubebuilder:validation:Optional
	modifyRequestHeaderAction?: [...#GlobalDeliveryRuleModifyRequestHeaderActionParameters] @go(ModifyRequestHeaderAction,[]GlobalDeliveryRuleModifyRequestHeaderActionParameters)

	// A modify_response_header_action block as defined below.
	// +kubebuilder:validation:Optional
	modifyResponseHeaderAction?: [...#GlobalDeliveryRuleModifyResponseHeaderActionParameters] @go(ModifyResponseHeaderAction,[]GlobalDeliveryRuleModifyResponseHeaderActionParameters)

	// A url_redirect_action block as defined below.
	// +kubebuilder:validation:Optional
	urlRedirectAction?: [...#GlobalDeliveryRuleURLRedirectActionParameters] @go(URLRedirectAction,[]GlobalDeliveryRuleURLRedirectActionParameters)

	// A url_rewrite_action block as defined below.
	// +kubebuilder:validation:Optional
	urlRewriteAction?: [...#GlobalDeliveryRuleURLRewriteActionParameters] @go(URLRewriteAction,[]GlobalDeliveryRuleURLRewriteActionParameters)
}

#GlobalDeliveryRuleURLRedirectActionInitParameters: {
	// Specifies the fragment part of the URL. This value must not start with a #.
	fragment?: null | string @go(Fragment,*string)

	// Specifies the hostname part of the URL.
	hostname?: null | string @go(HostName,*string)

	// Specifies the path part of the URL. This value must begin with a /.
	path?: null | string @go(Path,*string)

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	queryString?: null | string @go(QueryString,*string)

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	redirectType?: null | string @go(RedirectType,*string)
}

#GlobalDeliveryRuleURLRedirectActionObservation: {
	// Specifies the fragment part of the URL. This value must not start with a #.
	fragment?: null | string @go(Fragment,*string)

	// Specifies the hostname part of the URL.
	hostname?: null | string @go(HostName,*string)

	// Specifies the path part of the URL. This value must begin with a /.
	path?: null | string @go(Path,*string)

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	queryString?: null | string @go(QueryString,*string)

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	redirectType?: null | string @go(RedirectType,*string)
}

#GlobalDeliveryRuleURLRedirectActionParameters: {
	// Specifies the fragment part of the URL. This value must not start with a #.
	// +kubebuilder:validation:Optional
	fragment?: null | string @go(Fragment,*string)

	// Specifies the hostname part of the URL.
	// +kubebuilder:validation:Optional
	hostname?: null | string @go(HostName,*string)

	// Specifies the path part of the URL. This value must begin with a /.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	// +kubebuilder:validation:Optional
	queryString?: null | string @go(QueryString,*string)

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	// +kubebuilder:validation:Optional
	redirectType?: null | string @go(RedirectType,*string)
}

#GlobalDeliveryRuleURLRewriteActionInitParameters: {
	// This value must start with a / and can't be longer than 260 characters.
	destination?: null | string @go(Destination,*string)

	// Defaults to true.
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// This value must start with a / and can't be longer than 260 characters.
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#GlobalDeliveryRuleURLRewriteActionObservation: {
	// This value must start with a / and can't be longer than 260 characters.
	destination?: null | string @go(Destination,*string)

	// Defaults to true.
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// This value must start with a / and can't be longer than 260 characters.
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#GlobalDeliveryRuleURLRewriteActionParameters: {
	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Optional
	destination?: null | string @go(Destination,*string)

	// Defaults to true.
	// +kubebuilder:validation:Optional
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Optional
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#HTTPVersionConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#HTTPVersionConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#HTTPVersionConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#ModifyRequestHeaderActionInitParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#ModifyRequestHeaderActionObservation: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#ModifyRequestHeaderActionParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#ModifyResponseHeaderActionInitParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#ModifyResponseHeaderActionObservation: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	value?: null | string @go(Value,*string)
}

#ModifyResponseHeaderActionParameters: {
	// Action to be executed on a header value. Valid values are Append, Delete and Overwrite.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The value of the header. Only needed when action is set to Append or overwrite.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#OriginInitParameters: {
	// The HTTP port of the origin. Defaults to 80. Changing this forces a new resource to be created.
	httpPort?: null | float64 @go(HTTPPort,*float64)

	// The HTTPS port of the origin. Defaults to 443. Changing this forces a new resource to be created.
	httpsPort?: null | float64 @go(HTTPSPort,*float64)

	// A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
	hostName?: null | string @go(HostName,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)
}

#OriginObservation: {
	// The HTTP port of the origin. Defaults to 80. Changing this forces a new resource to be created.
	httpPort?: null | float64 @go(HTTPPort,*float64)

	// The HTTPS port of the origin. Defaults to 443. Changing this forces a new resource to be created.
	httpsPort?: null | float64 @go(HTTPSPort,*float64)

	// A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
	hostName?: null | string @go(HostName,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)
}

#OriginParameters: {
	// The HTTP port of the origin. Defaults to 80. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	httpPort?: null | float64 @go(HTTPPort,*float64)

	// The HTTPS port of the origin. Defaults to 443. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	httpsPort?: null | float64 @go(HTTPSPort,*float64)

	// A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	hostName?: null | string @go(HostName,*string)

	// The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

#PostArgConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// Header name.
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#PostArgConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// Header name.
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#PostArgConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Header name.
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#QueryStringConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#QueryStringConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#QueryStringConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RemoteAddressConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#RemoteAddressConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#RemoteAddressConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#RequestBodyConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestBodyConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestBodyConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestHeaderConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// Header name.
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestHeaderConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// Header name.
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestHeaderConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Header name.
	// +kubebuilder:validation:Optional
	selector?: null | string @go(Selector,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestMethodConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#RequestMethodConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#RequestMethodConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#RequestSchemeConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#RequestSchemeConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)
}

#RequestSchemeConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)
}

#RequestURIConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestURIConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#RequestURIConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFileExtensionConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFileExtensionConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFileExtensionConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFileNameConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFileNameConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLFileNameConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLPathConditionInitParameters: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLPathConditionObservation: {
	// List of string values. This is required if operator is not Any.
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLPathConditionParameters: {
	// List of string values. This is required if operator is not Any.
	// +kubebuilder:validation:Optional
	matchValues?: [...null | string] @go(MatchValues,[]*string)

	// Defaults to false.
	// +kubebuilder:validation:Optional
	negateCondition?: null | bool @go(NegateCondition,*bool)

	// Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of transforms. Valid values are Lowercase and Uppercase.
	// +kubebuilder:validation:Optional
	transforms?: [...null | string] @go(Transforms,[]*string)
}

#URLRedirectActionInitParameters: {
	// Specifies the fragment part of the URL. This value must not start with a #.
	fragment?: null | string @go(Fragment,*string)

	// Specifies the hostname part of the URL.
	hostname?: null | string @go(HostName,*string)

	// Specifies the path part of the URL. This value must begin with a /.
	path?: null | string @go(Path,*string)

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	queryString?: null | string @go(QueryString,*string)

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	redirectType?: null | string @go(RedirectType,*string)
}

#URLRedirectActionObservation: {
	// Specifies the fragment part of the URL. This value must not start with a #.
	fragment?: null | string @go(Fragment,*string)

	// Specifies the hostname part of the URL.
	hostname?: null | string @go(HostName,*string)

	// Specifies the path part of the URL. This value must begin with a /.
	path?: null | string @go(Path,*string)

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	protocol?: null | string @go(Protocol,*string)

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	queryString?: null | string @go(QueryString,*string)

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	redirectType?: null | string @go(RedirectType,*string)
}

#URLRedirectActionParameters: {
	// Specifies the fragment part of the URL. This value must not start with a #.
	// +kubebuilder:validation:Optional
	fragment?: null | string @go(Fragment,*string)

	// Specifies the hostname part of the URL.
	// +kubebuilder:validation:Optional
	hostname?: null | string @go(HostName,*string)

	// Specifies the path part of the URL. This value must begin with a /.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// Specifies the query string part of the URL. This value must not start with a ? or & and must be in <key>=<value> format separated by &.
	// +kubebuilder:validation:Optional
	queryString?: null | string @go(QueryString,*string)

	// Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.
	// +kubebuilder:validation:Optional
	redirectType?: null | string @go(RedirectType,*string)
}

#URLRewriteActionInitParameters: {
	// This value must start with a / and can't be longer than 260 characters.
	destination?: null | string @go(Destination,*string)

	// Defaults to true.
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// This value must start with a / and can't be longer than 260 characters.
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#URLRewriteActionObservation: {
	// This value must start with a / and can't be longer than 260 characters.
	destination?: null | string @go(Destination,*string)

	// Defaults to true.
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// This value must start with a / and can't be longer than 260 characters.
	sourcePattern?: null | string @go(SourcePattern,*string)
}

#URLRewriteActionParameters: {
	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Optional
	destination?: null | string @go(Destination,*string)

	// Defaults to true.
	// +kubebuilder:validation:Optional
	preserveUnmatchedPath?: null | bool @go(PreserveUnmatchedPath,*bool)

	// This value must start with a / and can't be longer than 260 characters.
	// +kubebuilder:validation:Optional
	sourcePattern?: null | string @go(SourcePattern,*string)
}

// EndpointSpec defines the desired state of Endpoint
#EndpointSpec: {
	forProvider: #EndpointParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #EndpointInitParameters @go(InitProvider)
}

// EndpointStatus defines the observed state of Endpoint.
#EndpointStatus: {
	atProvider?: #EndpointObservation @go(AtProvider)
}

// Endpoint is the Schema for the Endpoints API. Manages a CDN Endpoint.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Endpoint: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.origin) || (has(self.initProvider) && has(self.initProvider.origin))",message="spec.forProvider.origin is a required parameter"
	spec:    #EndpointSpec   @go(Spec)
	status?: #EndpointStatus @go(Status)
}

// EndpointList contains a list of Endpoints
#EndpointList: {
	items: [...#Endpoint] @go(Items,[]Endpoint)
}
