// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/web/v1beta1

package v1beta1

#StaticSiteIdentityInitParameters: {
	// A list of Managed Identity IDs which should be assigned to this Static Site resource.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Type of Managed Identity assigned to this Static Site resource. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#StaticSiteIdentityObservation: {
	// A list of Managed Identity IDs which should be assigned to this Static Site resource.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID associated with this Managed Service Identity.
	principalId?: null | string @go(PrincipalID,*string)

	// The ID of the Static Web App.
	tenantId?: null | string @go(TenantID,*string)

	// The Type of Managed Identity assigned to this Static Site resource. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#StaticSiteIdentityParameters: {
	// A list of Managed Identity IDs which should be assigned to this Static Site resource.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Type of Managed Identity assigned to this Static Site resource. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#StaticSiteInitParameters: {
	// An identity block as defined below.
	identity?: [...#StaticSiteIdentityInitParameters] @go(Identity,[]StaticSiteIdentityInitParameters)

	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	location?: null | string @go(Location,*string)

	// Specifies the SKU size of the Static Web App. Possible values are Free or Standard. Defaults to Free.
	skuSize?: null | string @go(SkuSize,*string)

	// Specifies the SKU tier of the Static Web App. Possible values are Free or Standard. Defaults to Free.
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#StaticSiteObservation: {
	// The default host name of the Static Web App.
	defaultHostName?: null | string @go(DefaultHostName,*string)

	// The ID of the Static Web App.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#StaticSiteIdentityObservation] @go(Identity,[]StaticSiteIdentityObservation)

	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	location?: null | string @go(Location,*string)

	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the SKU size of the Static Web App. Possible values are Free or Standard. Defaults to Free.
	skuSize?: null | string @go(SkuSize,*string)

	// Specifies the SKU tier of the Static Web App. Possible values are Free or Standard. Defaults to Free.
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#StaticSiteParameters: {
	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#StaticSiteIdentityParameters] @go(Identity,[]StaticSiteIdentityParameters)

	// The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the SKU size of the Static Web App. Possible values are Free or Standard. Defaults to Free.
	// +kubebuilder:validation:Optional
	skuSize?: null | string @go(SkuSize,*string)

	// Specifies the SKU tier of the Static Web App. Possible values are Free or Standard. Defaults to Free.
	// +kubebuilder:validation:Optional
	skuTier?: null | string @go(SkuTier,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// StaticSiteSpec defines the desired state of StaticSite
#StaticSiteSpec: {
	forProvider: #StaticSiteParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #StaticSiteInitParameters @go(InitProvider)
}

// StaticSiteStatus defines the observed state of StaticSite.
#StaticSiteStatus: {
	atProvider?: #StaticSiteObservation @go(AtProvider)
}

// StaticSite is the Schema for the StaticSites API. Manages a Static Site.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#StaticSite: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #StaticSiteSpec   @go(Spec)
	status?: #StaticSiteStatus @go(Status)
}

// StaticSiteList contains a list of StaticSites
#StaticSiteList: {
	items: [...#StaticSite] @go(Items,[]StaticSite)
}
