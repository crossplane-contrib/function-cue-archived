// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/management/v1beta1

package v1beta1

#ManagementGroupSubscriptionAssociationInitParameters: {
}

#ManagementGroupSubscriptionAssociationObservation: {
	// The ID of the Management Group Subscription Association.
	id?: null | string @go(ID,*string)

	// The ID of the Management Group to associate the Subscription with. Changing this forces a new Management to be created.
	managementGroupId?: null | string @go(ManagementGroupID,*string)

	// The ID of the Subscription to be associated with the Management Group. Changing this forces a new Management to be created.
	subscriptionId?: null | string @go(SubscriptionID,*string)
}

#ManagementGroupSubscriptionAssociationParameters: {
	// The ID of the Management Group to associate the Subscription with. Changing this forces a new Management to be created.
	// +crossplane:generate:reference:type=ManagementGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	managementGroupId?: null | string @go(ManagementGroupID,*string)

	// The ID of the Subscription to be associated with the Management Group. Changing this forces a new Management to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.Subscription
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subscriptionId?: null | string @go(SubscriptionID,*string)
}

// ManagementGroupSubscriptionAssociationSpec defines the desired state of ManagementGroupSubscriptionAssociation
#ManagementGroupSubscriptionAssociationSpec: {
	forProvider: #ManagementGroupSubscriptionAssociationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ManagementGroupSubscriptionAssociationInitParameters @go(InitProvider)
}

// ManagementGroupSubscriptionAssociationStatus defines the observed state of ManagementGroupSubscriptionAssociation.
#ManagementGroupSubscriptionAssociationStatus: {
	atProvider?: #ManagementGroupSubscriptionAssociationObservation @go(AtProvider)
}

// ManagementGroupSubscriptionAssociation is the Schema for the ManagementGroupSubscriptionAssociations API. Manages a Management Group Subscription Association.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ManagementGroupSubscriptionAssociation: {
	spec:    #ManagementGroupSubscriptionAssociationSpec   @go(Spec)
	status?: #ManagementGroupSubscriptionAssociationStatus @go(Status)
}

// ManagementGroupSubscriptionAssociationList contains a list of ManagementGroupSubscriptionAssociations
#ManagementGroupSubscriptionAssociationList: {
	items: [...#ManagementGroupSubscriptionAssociation] @go(Items,[]ManagementGroupSubscriptionAssociation)
}
