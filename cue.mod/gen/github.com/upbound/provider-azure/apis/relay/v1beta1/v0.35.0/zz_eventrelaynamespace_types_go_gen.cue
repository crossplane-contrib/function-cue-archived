// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/relay/v1beta1

package v1beta1

#EventRelayNamespaceInitParameters: {
	// Specifies the supported Azure location where the Azure Relay Namespace exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the SKU to use. At this time the only supported value is Standard.
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EventRelayNamespaceObservation: {
	// The Azure Relay Namespace ID.
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure location where the Azure Relay Namespace exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The Identifier for Azure Insights metrics.
	metricId?: null | string @go(MetricID,*string)

	// The name of the resource group in which to create the Azure Relay Namespace. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The name of the SKU to use. At this time the only supported value is Standard.
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EventRelayNamespaceParameters: {
	// Specifies the supported Azure location where the Azure Relay Namespace exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the resource group in which to create the Azure Relay Namespace. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The name of the SKU to use. At this time the only supported value is Standard.
	// +kubebuilder:validation:Optional
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// EventRelayNamespaceSpec defines the desired state of EventRelayNamespace
#EventRelayNamespaceSpec: {
	forProvider: #EventRelayNamespaceParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #EventRelayNamespaceInitParameters @go(InitProvider)
}

// EventRelayNamespaceStatus defines the observed state of EventRelayNamespace.
#EventRelayNamespaceStatus: {
	atProvider?: #EventRelayNamespaceObservation @go(AtProvider)
}

// EventRelayNamespace is the Schema for the EventRelayNamespaces API. Manages an Azure Relay Namespace.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#EventRelayNamespace: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.skuName) || has(self.initProvider.skuName)",message="skuName is a required parameter"
	spec:    #EventRelayNamespaceSpec   @go(Spec)
	status?: #EventRelayNamespaceStatus @go(Status)
}

// EventRelayNamespaceList contains a list of EventRelayNamespaces
#EventRelayNamespaceList: {
	items: [...#EventRelayNamespace] @go(Items,[]EventRelayNamespace)
}
