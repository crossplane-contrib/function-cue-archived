// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/eventgrid/v1beta1

package v1beta1

#DomainTopicInitParameters: {
}

#DomainTopicObservation: {
	// Specifies the name of the EventGrid Domain. Changing this forces a new resource to be created.
	domainName?: null | string @go(DomainName,*string)

	// The ID of the EventGrid Domain Topic.
	id?: null | string @go(ID,*string)

	// The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#DomainTopicParameters: {
	// Specifies the name of the EventGrid Domain. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/eventgrid/v1beta1.Domain
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

// DomainTopicSpec defines the desired state of DomainTopic
#DomainTopicSpec: {
	forProvider: #DomainTopicParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #DomainTopicInitParameters @go(InitProvider)
}

// DomainTopicStatus defines the observed state of DomainTopic.
#DomainTopicStatus: {
	atProvider?: #DomainTopicObservation @go(AtProvider)
}

// DomainTopic is the Schema for the DomainTopics API. Manages an EventGrid Domain Topic
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#DomainTopic: {
	spec:    #DomainTopicSpec   @go(Spec)
	status?: #DomainTopicStatus @go(Status)
}

// DomainTopicList contains a list of DomainTopics
#DomainTopicList: {
	items: [...#DomainTopic] @go(Items,[]DomainTopic)
}
