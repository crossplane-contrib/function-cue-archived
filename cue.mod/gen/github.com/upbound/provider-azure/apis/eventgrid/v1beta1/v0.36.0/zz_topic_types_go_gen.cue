// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/eventgrid/v1beta1

package v1beta1

#TopicIdentityInitParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Event Grid Topic.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Event Grid Topic. Possible values are SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#TopicIdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Event Grid Topic.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID associated with this Managed Service Identity.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID associated with this Managed Service Identity.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that should be configured on this Event Grid Topic. Possible values are SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#TopicIdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Event Grid Topic.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Event Grid Topic. Possible values are SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#TopicInboundIPRuleInitParameters: {
	// The action to take when the rule is matched. Possible values are Allow.
	action?: null | string @go(Action,*string)

	// The IP mask (CIDR) to match on.
	ipMask?: null | string @go(IPMask,*string)
}

#TopicInboundIPRuleObservation: {
	// The action to take when the rule is matched. Possible values are Allow.
	action?: null | string @go(Action,*string)

	// The IP mask (CIDR) to match on.
	ipMask?: null | string @go(IPMask,*string)
}

#TopicInboundIPRuleParameters: {
	// The action to take when the rule is matched. Possible values are Allow.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The IP mask (CIDR) to match on.
	// +kubebuilder:validation:Optional
	ipMask?: null | string @go(IPMask,*string)
}

#TopicInitParameters: {
	// An identity block as defined below.
	identity?: [...#TopicIdentityInitParameters] @go(Identity,[]TopicIdentityInitParameters)

	// One or more inbound_ip_rule blocks as defined below.
	inboundIpRule?: [...#TopicInboundIPRuleInitParameters] @go(InboundIPRule,[]TopicInboundIPRuleInitParameters)

	// A input_mapping_default_values block as defined below. Changing this forces a new resource to be created.
	inputMappingDefaultValues?: [...#TopicInputMappingDefaultValuesInitParameters] @go(InputMappingDefaultValues,[]TopicInputMappingDefaultValuesInitParameters)

	// A input_mapping_fields block as defined below. Changing this forces a new resource to be created.
	inputMappingFields?: [...#TopicInputMappingFieldsInitParameters] @go(InputMappingFields,[]TopicInputMappingFieldsInitParameters)

	// Specifies the schema in which incoming events will be published to this domain. Allowed values are CloudEventSchemaV1_0, CustomEventSchema, or EventGridSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	inputSchema?: null | string @go(InputSchema,*string)

	// Whether local authentication methods is enabled for the EventGrid Topic. Defaults to true.
	localAuthEnabled?: null | bool @go(LocalAuthEnabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Whether or not public network access is allowed for this server. Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#TopicInputMappingDefaultValuesInitParameters: {
	// Specifies the default data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	dataVersion?: null | string @go(DataVersion,*string)

	// Specifies the default event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	eventType?: null | string @go(EventType,*string)

	// Specifies the default subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	subject?: null | string @go(Subject,*string)
}

#TopicInputMappingDefaultValuesObservation: {
	// Specifies the default data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	dataVersion?: null | string @go(DataVersion,*string)

	// Specifies the default event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	eventType?: null | string @go(EventType,*string)

	// Specifies the default subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	subject?: null | string @go(Subject,*string)
}

#TopicInputMappingDefaultValuesParameters: {
	// Specifies the default data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	dataVersion?: null | string @go(DataVersion,*string)

	// Specifies the default event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	eventType?: null | string @go(EventType,*string)

	// Specifies the default subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	subject?: null | string @go(Subject,*string)
}

#TopicInputMappingFieldsInitParameters: {
	// Specifies the data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	dataVersion?: null | string @go(DataVersion,*string)

	// Specifies the event time of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	eventTime?: null | string @go(EventTime,*string)

	// Specifies the event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	eventType?: null | string @go(EventType,*string)

	// Specifies the id of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	id?: null | string @go(ID,*string)

	// Specifies the subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	subject?: null | string @go(Subject,*string)

	// Specifies the topic of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	topic?: null | string @go(Topic,*string)
}

#TopicInputMappingFieldsObservation: {
	// Specifies the data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	dataVersion?: null | string @go(DataVersion,*string)

	// Specifies the event time of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	eventTime?: null | string @go(EventTime,*string)

	// Specifies the event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	eventType?: null | string @go(EventType,*string)

	// Specifies the id of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	id?: null | string @go(ID,*string)

	// Specifies the subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	subject?: null | string @go(Subject,*string)

	// Specifies the topic of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	topic?: null | string @go(Topic,*string)
}

#TopicInputMappingFieldsParameters: {
	// Specifies the data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	dataVersion?: null | string @go(DataVersion,*string)

	// Specifies the event time of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	eventTime?: null | string @go(EventTime,*string)

	// Specifies the event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	eventType?: null | string @go(EventType,*string)

	// Specifies the id of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Specifies the subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	subject?: null | string @go(Subject,*string)

	// Specifies the topic of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	topic?: null | string @go(Topic,*string)
}

#TopicObservation: {
	// The Endpoint associated with the EventGrid Topic.
	endpoint?: null | string @go(Endpoint,*string)

	// The EventGrid Topic ID.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#TopicIdentityObservation] @go(Identity,[]TopicIdentityObservation)

	// One or more inbound_ip_rule blocks as defined below.
	inboundIpRule?: [...#TopicInboundIPRuleObservation] @go(InboundIPRule,[]TopicInboundIPRuleObservation)

	// A input_mapping_default_values block as defined below. Changing this forces a new resource to be created.
	inputMappingDefaultValues?: [...#TopicInputMappingDefaultValuesObservation] @go(InputMappingDefaultValues,[]TopicInputMappingDefaultValuesObservation)

	// A input_mapping_fields block as defined below. Changing this forces a new resource to be created.
	inputMappingFields?: [...#TopicInputMappingFieldsObservation] @go(InputMappingFields,[]TopicInputMappingFieldsObservation)

	// Specifies the schema in which incoming events will be published to this domain. Allowed values are CloudEventSchemaV1_0, CustomEventSchema, or EventGridSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	inputSchema?: null | string @go(InputSchema,*string)

	// Whether local authentication methods is enabled for the EventGrid Topic. Defaults to true.
	localAuthEnabled?: null | bool @go(LocalAuthEnabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Whether or not public network access is allowed for this server. Defaults to true.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The name of the resource group in which the EventGrid Topic exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#TopicParameters: {
	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#TopicIdentityParameters] @go(Identity,[]TopicIdentityParameters)

	// One or more inbound_ip_rule blocks as defined below.
	// +kubebuilder:validation:Optional
	inboundIpRule?: [...#TopicInboundIPRuleParameters] @go(InboundIPRule,[]TopicInboundIPRuleParameters)

	// A input_mapping_default_values block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	inputMappingDefaultValues?: [...#TopicInputMappingDefaultValuesParameters] @go(InputMappingDefaultValues,[]TopicInputMappingDefaultValuesParameters)

	// A input_mapping_fields block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	inputMappingFields?: [...#TopicInputMappingFieldsParameters] @go(InputMappingFields,[]TopicInputMappingFieldsParameters)

	// Specifies the schema in which incoming events will be published to this domain. Allowed values are CloudEventSchemaV1_0, CustomEventSchema, or EventGridSchema. Defaults to EventGridSchema. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	inputSchema?: null | string @go(InputSchema,*string)

	// Whether local authentication methods is enabled for the EventGrid Topic. Defaults to true.
	// +kubebuilder:validation:Optional
	localAuthEnabled?: null | bool @go(LocalAuthEnabled,*bool)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Whether or not public network access is allowed for this server. Defaults to true.
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The name of the resource group in which the EventGrid Topic exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// TopicSpec defines the desired state of Topic
#TopicSpec: {
	forProvider: #TopicParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TopicInitParameters @go(InitProvider)
}

// TopicStatus defines the observed state of Topic.
#TopicStatus: {
	atProvider?: #TopicObservation @go(AtProvider)
}

// Topic is the Schema for the Topics API. Manages an EventGrid Topic
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Topic: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	spec:    #TopicSpec   @go(Spec)
	status?: #TopicStatus @go(Status)
}

// TopicList contains a list of Topics
#TopicList: {
	items: [...#Topic] @go(Items,[]Topic)
}
