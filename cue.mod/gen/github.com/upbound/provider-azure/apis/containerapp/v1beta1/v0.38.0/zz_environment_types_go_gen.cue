// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/containerapp/v1beta1

package v1beta1

#EnvironmentInitParameters: {
	// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to false. Changing this forces a new resource to be created.
	// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
	internalLoadBalancerEnabled?: null | bool @go(InternalLoadBalancerEnabled,*bool)

	// Specifies the supported Azure location where the Container App Environment is to exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EnvironmentObservation: {
	// The default, publicly resolvable, name of this Container App Environment.
	// The default publicly resolvable name of this Container App Environment
	defaultDomain?: null | string @go(DefaultDomain,*string)

	// The network addressing in which the Container Apps in this Container App Environment will reside in CIDR notation.
	// The network addressing in which the Container Apps in this Container App Environment will reside in CIDR notation.
	dockerBridgeCidr?: null | string @go(DockerBridgeCidr,*string)

	// The ID of the Container App Environment
	id?: null | string @go(ID,*string)

	// The existing Subnet to use for the Container Apps Control Plane. Changing this forces a new resource to be created.
	// The existing Subnet to use for the Container Apps Control Plane. **NOTE:** The Subnet must have a `/21` or larger address space.
	infrastructureSubnetId?: null | string @go(InfrastructureSubnetID,*string)

	// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to false. Changing this forces a new resource to be created.
	// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
	internalLoadBalancerEnabled?: null | bool @go(InternalLoadBalancerEnabled,*bool)

	// Specifies the supported Azure location where the Container App Environment is to exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to. Changing this forces a new resource to be created.
	// The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to.
	logAnalyticsWorkspaceId?: null | string @go(LogAnalyticsWorkspaceID,*string)

	// The IP range, in CIDR notation, that is reserved for environment infrastructure IP addresses.
	// The IP range, in CIDR notation, that is reserved for environment infrastructure IP addresses.
	platformReservedCidr?: null | string @go(PlatformReservedCidr,*string)

	// The IP address from the IP range defined by platform_reserved_cidr that is reserved for the internal DNS server.
	// The IP address from the IP range defined by `platform_reserved_cidr` that is reserved for the internal DNS server.
	platformReservedDnsIpAddress?: null | string @go(PlatformReservedDNSIPAddress,*string)

	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The Static IP address of the Environment.
	// The Static IP Address of the Environment.
	staticIpAddress?: null | string @go(StaticIPAddress,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EnvironmentParameters: {
	// The existing Subnet to use for the Container Apps Control Plane. Changing this forces a new resource to be created.
	// The existing Subnet to use for the Container Apps Control Plane. **NOTE:** The Subnet must have a `/21` or larger address space.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	infrastructureSubnetId?: null | string @go(InfrastructureSubnetID,*string)

	// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to false. Changing this forces a new resource to be created.
	// Should the Container Environment operate in Internal Load Balancing Mode? Defaults to `false`. **Note:** can only be set to `true` if `infrastructure_subnet_id` is specified.
	// +kubebuilder:validation:Optional
	internalLoadBalancerEnabled?: null | bool @go(InternalLoadBalancerEnabled,*bool)

	// Specifies the supported Azure location where the Container App Environment is to exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to. Changing this forces a new resource to be created.
	// The ID for the Log Analytics Workspace to link this Container Apps Managed Environment to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/operationalinsights/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	logAnalyticsWorkspaceId?: null | string @go(LogAnalyticsWorkspaceID,*string)

	// The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// EnvironmentSpec defines the desired state of Environment
#EnvironmentSpec: {
	forProvider: #EnvironmentParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #EnvironmentInitParameters @go(InitProvider)
}

// EnvironmentStatus defines the observed state of Environment.
#EnvironmentStatus: {
	atProvider?: #EnvironmentObservation @go(AtProvider)
}

// Environment is the Schema for the Environments API. Manages a Container App Environment.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Environment: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #EnvironmentSpec   @go(Spec)
	status?: #EnvironmentStatus @go(Status)
}

// EnvironmentList contains a list of Environments
#EnvironmentList: {
	items: [...#Environment] @go(Items,[]Environment)
}
