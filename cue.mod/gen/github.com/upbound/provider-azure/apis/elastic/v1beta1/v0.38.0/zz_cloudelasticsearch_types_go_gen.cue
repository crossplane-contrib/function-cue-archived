// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/elastic/v1beta1

package v1beta1

#CloudElasticsearchInitParameters: {
	// Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
	elasticCloudEmailAddress?: null | string @go(ElasticCloudEmailAddress,*string)

	// The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
	location?: null | string @go(Location,*string)

	// A logs block as defined below.
	logs?: [...#LogsInitParameters] @go(Logs,[]LogsInitParameters)

	// Specifies if the Elasticsearch should have monitoring configured? Defaults to true. Changing this forces a new Elasticsearch to be created.
	monitoringEnabled?: null | bool @go(MonitoringEnabled,*bool)

	// Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags which should be assigned to the Elasticsearch resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#CloudElasticsearchObservation: {
	// The ID of the Deployment within Elastic Cloud.
	elasticCloudDeploymentId?: null | string @go(ElasticCloudDeploymentID,*string)

	// Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
	elasticCloudEmailAddress?: null | string @go(ElasticCloudEmailAddress,*string)

	// The Default URL used for Single Sign On (SSO) to Elastic Cloud.
	elasticCloudSsoDefaultUrl?: null | string @go(ElasticCloudSsoDefaultURL,*string)

	// The ID of the User Account within Elastic Cloud.
	elasticCloudUserId?: null | string @go(ElasticCloudUserID,*string)

	// The URL to the Elasticsearch Service associated with this Elasticsearch.
	elasticsearchServiceUrl?: null | string @go(ElasticsearchServiceURL,*string)

	// The ID of the Elasticsearch.
	id?: null | string @go(ID,*string)

	// The URL to the Kibana Dashboard associated with this Elasticsearch.
	kibanaServiceUrl?: null | string @go(KibanaServiceURL,*string)

	// The URI used for SSO to the Kibana Dashboard associated with this Elasticsearch.
	kibanaSsoUri?: null | string @go(KibanaSsoURI,*string)

	// The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
	location?: null | string @go(Location,*string)

	// A logs block as defined below.
	logs?: [...#LogsObservation] @go(Logs,[]LogsObservation)

	// Specifies if the Elasticsearch should have monitoring configured? Defaults to true. Changing this forces a new Elasticsearch to be created.
	monitoringEnabled?: null | bool @go(MonitoringEnabled,*bool)

	// The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags which should be assigned to the Elasticsearch resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#CloudElasticsearchParameters: {
	// Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
	// +kubebuilder:validation:Optional
	elasticCloudEmailAddress?: null | string @go(ElasticCloudEmailAddress,*string)

	// The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// A logs block as defined below.
	// +kubebuilder:validation:Optional
	logs?: [...#LogsParameters] @go(Logs,[]LogsParameters)

	// Specifies if the Elasticsearch should have monitoring configured? Defaults to true. Changing this forces a new Elasticsearch to be created.
	// +kubebuilder:validation:Optional
	monitoringEnabled?: null | bool @go(MonitoringEnabled,*bool)

	// The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
	// +kubebuilder:validation:Optional
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags which should be assigned to the Elasticsearch resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#FilteringTagInitParameters: {
	// Specifies the type of action which should be taken when the Tag matches the name and value. Possible values are Exclude and Include.
	action?: null | string @go(Action,*string)

	// The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
	name?: null | string @go(Name,*string)

	// Specifies the value of the Tag which should be filtered.
	value?: null | string @go(Value,*string)
}

#FilteringTagObservation: {
	// Specifies the type of action which should be taken when the Tag matches the name and value. Possible values are Exclude and Include.
	action?: null | string @go(Action,*string)

	// The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
	name?: null | string @go(Name,*string)

	// Specifies the value of the Tag which should be filtered.
	value?: null | string @go(Value,*string)
}

#FilteringTagParameters: {
	// Specifies the type of action which should be taken when the Tag matches the name and value. Possible values are Exclude and Include.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)

	// The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Specifies the value of the Tag which should be filtered.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

#LogsInitParameters: {
	// A list of filtering_tag blocks as defined above.
	filteringTag?: [...#FilteringTagInitParameters] @go(FilteringTag,[]FilteringTagInitParameters)

	// Specifies if the Azure Activity Logs should be sent to the Elasticsearch cluster. Defaults to false.
	sendActivityLogs?: null | bool @go(SendActivityLogs,*bool)

	// Specifies if the AzureAD Logs should be sent to the Elasticsearch cluster. Defaults to false.
	sendAzureadLogs?: null | bool @go(SendAzureadLogs,*bool)

	// Specifies if the Azure Subscription Logs should be sent to the Elasticsearch cluster. Defaults to false.
	sendSubscriptionLogs?: null | bool @go(SendSubscriptionLogs,*bool)
}

#LogsObservation: {
	// A list of filtering_tag blocks as defined above.
	filteringTag?: [...#FilteringTagObservation] @go(FilteringTag,[]FilteringTagObservation)

	// Specifies if the Azure Activity Logs should be sent to the Elasticsearch cluster. Defaults to false.
	sendActivityLogs?: null | bool @go(SendActivityLogs,*bool)

	// Specifies if the AzureAD Logs should be sent to the Elasticsearch cluster. Defaults to false.
	sendAzureadLogs?: null | bool @go(SendAzureadLogs,*bool)

	// Specifies if the Azure Subscription Logs should be sent to the Elasticsearch cluster. Defaults to false.
	sendSubscriptionLogs?: null | bool @go(SendSubscriptionLogs,*bool)
}

#LogsParameters: {
	// A list of filtering_tag blocks as defined above.
	// +kubebuilder:validation:Optional
	filteringTag?: [...#FilteringTagParameters] @go(FilteringTag,[]FilteringTagParameters)

	// Specifies if the Azure Activity Logs should be sent to the Elasticsearch cluster. Defaults to false.
	// +kubebuilder:validation:Optional
	sendActivityLogs?: null | bool @go(SendActivityLogs,*bool)

	// Specifies if the AzureAD Logs should be sent to the Elasticsearch cluster. Defaults to false.
	// +kubebuilder:validation:Optional
	sendAzureadLogs?: null | bool @go(SendAzureadLogs,*bool)

	// Specifies if the Azure Subscription Logs should be sent to the Elasticsearch cluster. Defaults to false.
	// +kubebuilder:validation:Optional
	sendSubscriptionLogs?: null | bool @go(SendSubscriptionLogs,*bool)
}

// CloudElasticsearchSpec defines the desired state of CloudElasticsearch
#CloudElasticsearchSpec: {
	forProvider: #CloudElasticsearchParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #CloudElasticsearchInitParameters @go(InitProvider)
}

// CloudElasticsearchStatus defines the observed state of CloudElasticsearch.
#CloudElasticsearchStatus: {
	atProvider?: #CloudElasticsearchObservation @go(AtProvider)
}

// CloudElasticsearch is the Schema for the CloudElasticsearchs API. Manages an Elasticsearch cluster in Elastic Cloud.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#CloudElasticsearch: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.elasticCloudEmailAddress) || (has(self.initProvider) && has(self.initProvider.elasticCloudEmailAddress))",message="spec.forProvider.elasticCloudEmailAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.skuName) || (has(self.initProvider) && has(self.initProvider.skuName))",message="spec.forProvider.skuName is a required parameter"
	spec:    #CloudElasticsearchSpec   @go(Spec)
	status?: #CloudElasticsearchStatus @go(Status)
}

// CloudElasticsearchList contains a list of CloudElasticsearchs
#CloudElasticsearchList: {
	items: [...#CloudElasticsearch] @go(Items,[]CloudElasticsearch)
}
