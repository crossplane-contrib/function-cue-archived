// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dbforpostgresql/v1beta1

package v1beta1

#FlexibleServerFirewallRuleObservation: {
	// The End IP Address associated with this PostgreSQL Flexible Server Firewall Rule.
	endIpAddress?: null | string @go(EndIPAddress,*string)

	// The ID of the PostgreSQL Flexible Server Firewall Rule.
	id?: null | string @go(ID,*string)

	// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Firewall Rule. Changing this forces a new PostgreSQL Flexible Server Firewall Rule to be created.
	serverId?: null | string @go(ServerID,*string)

	// The Start IP Address associated with this PostgreSQL Flexible Server Firewall Rule.
	startIpAddress?: null | string @go(StartIPAddress,*string)
}

#FlexibleServerFirewallRuleParameters: {
	// The End IP Address associated with this PostgreSQL Flexible Server Firewall Rule.
	// +kubebuilder:validation:Optional
	endIpAddress?: null | string @go(EndIPAddress,*string)

	// The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Firewall Rule. Changing this forces a new PostgreSQL Flexible Server Firewall Rule to be created.
	// +crossplane:generate:reference:type=FlexibleServer
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serverId?: null | string @go(ServerID,*string)

	// The Start IP Address associated with this PostgreSQL Flexible Server Firewall Rule.
	// +kubebuilder:validation:Optional
	startIpAddress?: null | string @go(StartIPAddress,*string)
}

// FlexibleServerFirewallRuleSpec defines the desired state of FlexibleServerFirewallRule
#FlexibleServerFirewallRuleSpec: {
	forProvider: #FlexibleServerFirewallRuleParameters @go(ForProvider)
}

// FlexibleServerFirewallRuleStatus defines the observed state of FlexibleServerFirewallRule.
#FlexibleServerFirewallRuleStatus: {
	atProvider?: #FlexibleServerFirewallRuleObservation @go(AtProvider)
}

// FlexibleServerFirewallRule is the Schema for the FlexibleServerFirewallRules API. Manages a PostgreSQL Flexible Server Firewall Rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FlexibleServerFirewallRule: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.endIpAddress)",message="endIpAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.startIpAddress)",message="startIpAddress is a required parameter"
	spec:    #FlexibleServerFirewallRuleSpec   @go(Spec)
	status?: #FlexibleServerFirewallRuleStatus @go(Status)
}

// FlexibleServerFirewallRuleList contains a list of FlexibleServerFirewallRules
#FlexibleServerFirewallRuleList: {
	items: [...#FlexibleServerFirewallRule] @go(Items,[]FlexibleServerFirewallRule)
}
