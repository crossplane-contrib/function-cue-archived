// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dbforpostgresql/v1beta1

package v1beta1

#AuthenticationInitParameters: {
	// Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server. Defaults to false.
	activeDirectoryAuthEnabled?: null | bool @go(ActiveDirectoryAuthEnabled,*bool)

	// Whether or not password authentication is allowed to access the PostgreSQL Flexible Server. Defaults to true.
	passwordAuthEnabled?: null | bool @go(PasswordAuthEnabled,*bool)

	// The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. active_directory_auth_enabled must be set to true.
	tenantId?: null | string @go(TenantID,*string)
}

#AuthenticationObservation: {
	// Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server. Defaults to false.
	activeDirectoryAuthEnabled?: null | bool @go(ActiveDirectoryAuthEnabled,*bool)

	// Whether or not password authentication is allowed to access the PostgreSQL Flexible Server. Defaults to true.
	passwordAuthEnabled?: null | bool @go(PasswordAuthEnabled,*bool)

	// The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. active_directory_auth_enabled must be set to true.
	tenantId?: null | string @go(TenantID,*string)
}

#AuthenticationParameters: {
	// Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server. Defaults to false.
	// +kubebuilder:validation:Optional
	activeDirectoryAuthEnabled?: null | bool @go(ActiveDirectoryAuthEnabled,*bool)

	// Whether or not password authentication is allowed to access the PostgreSQL Flexible Server. Defaults to true.
	// +kubebuilder:validation:Optional
	passwordAuthEnabled?: null | bool @go(PasswordAuthEnabled,*bool)

	// The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. active_directory_auth_enabled must be set to true.
	// +kubebuilder:validation:Optional
	tenantId?: null | string @go(TenantID,*string)
}

#CustomerManagedKeyInitParameters: {
	// The ID of the Key Vault Key.
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// Specifies the primary user managed identity id for a Customer Managed Key. Should be added with identity_ids.
	primaryUserAssignedIdentityId?: null | string @go(PrimaryUserAssignedIdentityID,*string)
}

#CustomerManagedKeyObservation: {
	// The ID of the Key Vault Key.
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// Specifies the primary user managed identity id for a Customer Managed Key. Should be added with identity_ids.
	primaryUserAssignedIdentityId?: null | string @go(PrimaryUserAssignedIdentityID,*string)
}

#CustomerManagedKeyParameters: {
	// The ID of the Key Vault Key.
	// +kubebuilder:validation:Optional
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// Specifies the primary user managed identity id for a Customer Managed Key. Should be added with identity_ids.
	// +kubebuilder:validation:Optional
	primaryUserAssignedIdentityId?: null | string @go(PrimaryUserAssignedIdentityID,*string)
}

#FlexibleServerInitParameters: {
	// The Administrator login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// An authentication block as defined below.
	authentication?: [...#AuthenticationInitParameters] @go(Authentication,[]AuthenticationInitParameters)

	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between 7 and 35 days.
	backupRetentionDays?: null | float64 @go(BackupRetentionDays,*float64)

	// The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, Replica and Update. Changing this forces a new PostgreSQL Flexible Server to be created.
	createMode?: null | string @go(CreateMode,*string)

	// A customer_managed_key block as defined below. Changing this forces a new resource to be created.
	customerManagedKey?: [...#CustomerManagedKeyInitParameters] @go(CustomerManagedKey,[]CustomerManagedKeyInitParameters)

	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to false. Changing this forces a new PostgreSQL Flexible Server to be created.
	geoRedundantBackupEnabled?: null | bool @go(GeoRedundantBackupEnabled,*bool)

	// A high_availability block as defined below.
	highAvailability?: [...#HighAvailabilityInitParameters] @go(HighAvailability,[]HighAvailabilityInitParameters)

	// An identity block as defined below.
	identity?: [...#IdentityInitParameters] @go(Identity,[]IdentityInitParameters)

	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	location?: null | string @go(Location,*string)

	// A maintenance_window block as defined below.
	maintenanceWindow?: [...#MaintenanceWindowInitParameters] @go(MaintenanceWindow,[]MaintenanceWindowInitParameters)

	// The point in time to restore from source_server_id when create_mode is PointInTimeRestore. Changing this forces a new PostgreSQL Flexible Server to be created.
	pointInTimeRestoreTimeInUtc?: null | string @go(PointInTimeRestoreTimeInUtc,*string)

	// The replication role for the PostgreSQL Flexible Server. Possible value is None.
	replicationRole?: null | string @go(ReplicationRole,*string)

	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the tier + name pattern (e.g. B_Standard_B1ms, GP_Standard_D2s_v3, MO_Standard_E4s_v3).
	skuName?: null | string @go(SkuName,*string)

	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore or Replica. Changing this forces a new PostgreSQL Flexible Server to be created.
	sourceServerId?: null | string @go(SourceServerID,*string)

	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, and 16777216.
	storageMb?: null | float64 @go(StorageMb,*float64)

	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The version of PostgreSQL Flexible Server to use. Possible values are 11,12, 13 and 14. Required when create_mode is Default. Changing this forces a new PostgreSQL Flexible Server to be created.
	version?: null | string @go(Version,*string)

	// Specifies the Availability Zone in which the PostgreSQL Flexible Server should be located.
	zone?: null | string @go(Zone,*string)
}

#FlexibleServerObservation: {
	// The Administrator login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// An authentication block as defined below.
	authentication?: [...#AuthenticationObservation] @go(Authentication,[]AuthenticationObservation)

	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between 7 and 35 days.
	backupRetentionDays?: null | float64 @go(BackupRetentionDays,*float64)

	// The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, Replica and Update. Changing this forces a new PostgreSQL Flexible Server to be created.
	createMode?: null | string @go(CreateMode,*string)

	// A customer_managed_key block as defined below. Changing this forces a new resource to be created.
	customerManagedKey?: [...#CustomerManagedKeyObservation] @go(CustomerManagedKey,[]CustomerManagedKeyObservation)

	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
	delegatedSubnetId?: null | string @go(DelegatedSubnetID,*string)

	// The FQDN of the PostgreSQL Flexible Server.
	fqdn?: null | string @go(Fqdn,*string)

	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to false. Changing this forces a new PostgreSQL Flexible Server to be created.
	geoRedundantBackupEnabled?: null | bool @go(GeoRedundantBackupEnabled,*bool)

	// A high_availability block as defined below.
	highAvailability?: [...#HighAvailabilityObservation] @go(HighAvailability,[]HighAvailabilityObservation)

	// The ID of the PostgreSQL Flexible Server.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	location?: null | string @go(Location,*string)

	// A maintenance_window block as defined below.
	maintenanceWindow?: [...#MaintenanceWindowObservation] @go(MaintenanceWindow,[]MaintenanceWindowObservation)

	// The point in time to restore from source_server_id when create_mode is PointInTimeRestore. Changing this forces a new PostgreSQL Flexible Server to be created.
	pointInTimeRestoreTimeInUtc?: null | string @go(PointInTimeRestoreTimeInUtc,*string)

	// The ID of the private DNS zone to create the PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
	privateDnsZoneId?: null | string @go(PrivateDNSZoneID,*string)

	// Is public network access enabled?
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The replication role for the PostgreSQL Flexible Server. Possible value is None.
	replicationRole?: null | string @go(ReplicationRole,*string)

	// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the tier + name pattern (e.g. B_Standard_B1ms, GP_Standard_D2s_v3, MO_Standard_E4s_v3).
	skuName?: null | string @go(SkuName,*string)

	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore or Replica. Changing this forces a new PostgreSQL Flexible Server to be created.
	sourceServerId?: null | string @go(SourceServerID,*string)

	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, and 16777216.
	storageMb?: null | float64 @go(StorageMb,*float64)

	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The version of PostgreSQL Flexible Server to use. Possible values are 11,12, 13 and 14. Required when create_mode is Default. Changing this forces a new PostgreSQL Flexible Server to be created.
	version?: null | string @go(Version,*string)

	// Specifies the Availability Zone in which the PostgreSQL Flexible Server should be located.
	zone?: null | string @go(Zone,*string)
}

#FlexibleServerParameters: {
	// The Administrator login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
	// +kubebuilder:validation:Optional
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// An authentication block as defined below.
	// +kubebuilder:validation:Optional
	authentication?: [...#AuthenticationParameters] @go(Authentication,[]AuthenticationParameters)

	// The backup retention days for the PostgreSQL Flexible Server. Possible values are between 7 and 35 days.
	// +kubebuilder:validation:Optional
	backupRetentionDays?: null | float64 @go(BackupRetentionDays,*float64)

	// The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, Replica and Update. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +kubebuilder:validation:Optional
	createMode?: null | string @go(CreateMode,*string)

	// A customer_managed_key block as defined below. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	customerManagedKey?: [...#CustomerManagedKeyParameters] @go(CustomerManagedKey,[]CustomerManagedKeyParameters)

	// The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	delegatedSubnetId?: null | string @go(DelegatedSubnetID,*string)

	// Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to false. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +kubebuilder:validation:Optional
	geoRedundantBackupEnabled?: null | bool @go(GeoRedundantBackupEnabled,*bool)

	// A high_availability block as defined below.
	// +kubebuilder:validation:Optional
	highAvailability?: [...#HighAvailabilityParameters] @go(HighAvailability,[]HighAvailabilityParameters)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// A maintenance_window block as defined below.
	// +kubebuilder:validation:Optional
	maintenanceWindow?: [...#MaintenanceWindowParameters] @go(MaintenanceWindow,[]MaintenanceWindowParameters)

	// The point in time to restore from source_server_id when create_mode is PointInTimeRestore. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +kubebuilder:validation:Optional
	pointInTimeRestoreTimeInUtc?: null | string @go(PointInTimeRestoreTimeInUtc,*string)

	// The ID of the private DNS zone to create the PostgreSQL Flexible Server. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.PrivateDNSZone
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	privateDnsZoneId?: null | string @go(PrivateDNSZoneID,*string)

	// The replication role for the PostgreSQL Flexible Server. Possible value is None.
	// +kubebuilder:validation:Optional
	replicationRole?: null | string @go(ReplicationRole,*string)

	// The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the tier + name pattern (e.g. B_Standard_B1ms, GP_Standard_D2s_v3, MO_Standard_E4s_v3).
	// +kubebuilder:validation:Optional
	skuName?: null | string @go(SkuName,*string)

	// The resource ID of the source PostgreSQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore or Replica. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +kubebuilder:validation:Optional
	sourceServerId?: null | string @go(SourceServerID,*string)

	// The max storage allowed for the PostgreSQL Flexible Server. Possible values are 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, and 16777216.
	// +kubebuilder:validation:Optional
	storageMb?: null | float64 @go(StorageMb,*float64)

	// A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The version of PostgreSQL Flexible Server to use. Possible values are 11,12, 13 and 14. Required when create_mode is Default. Changing this forces a new PostgreSQL Flexible Server to be created.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)

	// Specifies the Availability Zone in which the PostgreSQL Flexible Server should be located.
	// +kubebuilder:validation:Optional
	zone?: null | string @go(Zone,*string)
}

#HighAvailabilityInitParameters: {
	// The high availability mode for the PostgreSQL Flexible Server. Possible value are SameZone or ZoneRedundant.
	mode?: null | string @go(Mode,*string)

	// Specifies the Availability Zone in which the standby Flexible Server should be located.
	standbyAvailabilityZone?: null | string @go(StandbyAvailabilityZone,*string)
}

#HighAvailabilityObservation: {
	// The high availability mode for the PostgreSQL Flexible Server. Possible value are SameZone or ZoneRedundant.
	mode?: null | string @go(Mode,*string)

	// Specifies the Availability Zone in which the standby Flexible Server should be located.
	standbyAvailabilityZone?: null | string @go(StandbyAvailabilityZone,*string)
}

#HighAvailabilityParameters: {
	// The high availability mode for the PostgreSQL Flexible Server. Possible value are SameZone or ZoneRedundant.
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// Specifies the Availability Zone in which the standby Flexible Server should be located.
	// +kubebuilder:validation:Optional
	standbyAvailabilityZone?: null | string @go(StandbyAvailabilityZone,*string)
}

#IdentityInitParameters: {
	// A list of User Assigned Managed Identity IDs to be assigned to this PostgreSQL Flexible Server. Required if used together with customer_managed_key block.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this PostgreSQL Flexible Server. Should be set to UserAssigned, SystemAssigned, UserAssigned (to enable both).
	type?: null | string @go(Type,*string)
}

#IdentityObservation: {
	// A list of User Assigned Managed Identity IDs to be assigned to this PostgreSQL Flexible Server. Required if used together with customer_managed_key block.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The ID of the PostgreSQL Flexible Server.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. active_directory_auth_enabled must be set to true.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that should be configured on this PostgreSQL Flexible Server. Should be set to UserAssigned, SystemAssigned, UserAssigned (to enable both).
	type?: null | string @go(Type,*string)
}

#IdentityParameters: {
	// A list of User Assigned Managed Identity IDs to be assigned to this PostgreSQL Flexible Server. Required if used together with customer_managed_key block.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this PostgreSQL Flexible Server. Should be set to UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#MaintenanceWindowInitParameters: {
	// The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = 0, Monday = 1. Defaults to 0.
	dayOfWeek?: null | float64 @go(DayOfWeek,*float64)

	// The start hour for maintenance window. Defaults to 0.
	startHour?: null | float64 @go(StartHour,*float64)

	// The start minute for maintenance window. Defaults to 0.
	startMinute?: null | float64 @go(StartMinute,*float64)
}

#MaintenanceWindowObservation: {
	// The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = 0, Monday = 1. Defaults to 0.
	dayOfWeek?: null | float64 @go(DayOfWeek,*float64)

	// The start hour for maintenance window. Defaults to 0.
	startHour?: null | float64 @go(StartHour,*float64)

	// The start minute for maintenance window. Defaults to 0.
	startMinute?: null | float64 @go(StartMinute,*float64)
}

#MaintenanceWindowParameters: {
	// The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = 0, Monday = 1. Defaults to 0.
	// +kubebuilder:validation:Optional
	dayOfWeek?: null | float64 @go(DayOfWeek,*float64)

	// The start hour for maintenance window. Defaults to 0.
	// +kubebuilder:validation:Optional
	startHour?: null | float64 @go(StartHour,*float64)

	// The start minute for maintenance window. Defaults to 0.
	// +kubebuilder:validation:Optional
	startMinute?: null | float64 @go(StartMinute,*float64)
}

// FlexibleServerSpec defines the desired state of FlexibleServer
#FlexibleServerSpec: {
	forProvider: #FlexibleServerParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FlexibleServerInitParameters @go(InitProvider)
}

// FlexibleServerStatus defines the observed state of FlexibleServer.
#FlexibleServerStatus: {
	atProvider?: #FlexibleServerObservation @go(AtProvider)
}

// FlexibleServer is the Schema for the FlexibleServers API. Manages a PostgreSQL Flexible Server.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FlexibleServer: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #FlexibleServerSpec   @go(Spec)
	status?: #FlexibleServerStatus @go(Status)
}

// FlexibleServerList contains a list of FlexibleServers
#FlexibleServerList: {
	items: [...#FlexibleServer] @go(Items,[]FlexibleServer)
}
