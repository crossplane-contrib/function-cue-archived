// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dbforpostgresql/v1beta1

package v1beta1

#ServerKeyInitParameters: {
}

#ServerKeyObservation: {
	// The ID of the PostgreSQL Server Key.
	id?: null | string @go(ID,*string)

	// The URL to a Key Vault Key.
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// The ID of the PostgreSQL Server. Changing this forces a new resource to be created.
	serverId?: null | string @go(ServerID,*string)
}

#ServerKeyParameters: {
	// The URL to a Key Vault Key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/keyvault/v1beta1.Key
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	keyVaultKeyId?: null | string @go(KeyVaultKeyID,*string)

	// The ID of the PostgreSQL Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Server
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serverId?: null | string @go(ServerID,*string)
}

// ServerKeySpec defines the desired state of ServerKey
#ServerKeySpec: {
	forProvider: #ServerKeyParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ServerKeyInitParameters @go(InitProvider)
}

// ServerKeyStatus defines the observed state of ServerKey.
#ServerKeyStatus: {
	atProvider?: #ServerKeyObservation @go(AtProvider)
}

// ServerKey is the Schema for the ServerKeys API. Manages a PostgreSQL Server Key.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ServerKey: {
	spec:    #ServerKeySpec   @go(Spec)
	status?: #ServerKeyStatus @go(Status)
}

// ServerKeyList contains a list of ServerKeys
#ServerKeyList: {
	items: [...#ServerKey] @go(Items,[]ServerKey)
}
