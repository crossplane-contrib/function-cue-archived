// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dbforpostgresql/v1beta1

package v1beta1

#FlexibleServerDatabaseObservation: {
	// Specifies the Charset for the Azure PostgreSQL Flexible Server Database, which needs to be a valid PostgreSQL Charset. Defaults to UTF8. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.
	charset?: null | string @go(Charset,*string)

	// Specifies the Collation for the Azure PostgreSQL Flexible Server Database, which needs to be a valid PostgreSQL Collation. Defaults to en_US.utf8. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.
	collation?: null | string @go(Collation,*string)

	// The ID of the Azure PostgreSQL Flexible Server Database.
	id?: null | string @go(ID,*string)

	// The ID of the Azure PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Database. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.
	serverId?: null | string @go(ServerID,*string)
}

#FlexibleServerDatabaseParameters: {
	// Specifies the Charset for the Azure PostgreSQL Flexible Server Database, which needs to be a valid PostgreSQL Charset. Defaults to UTF8. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.
	// +kubebuilder:validation:Optional
	charset?: null | string @go(Charset,*string)

	// Specifies the Collation for the Azure PostgreSQL Flexible Server Database, which needs to be a valid PostgreSQL Collation. Defaults to en_US.utf8. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.
	// +kubebuilder:validation:Optional
	collation?: null | string @go(Collation,*string)

	// The ID of the Azure PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Database. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.
	// +crossplane:generate:reference:type=FlexibleServer
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serverId?: null | string @go(ServerID,*string)
}

// FlexibleServerDatabaseSpec defines the desired state of FlexibleServerDatabase
#FlexibleServerDatabaseSpec: {
	forProvider: #FlexibleServerDatabaseParameters @go(ForProvider)
}

// FlexibleServerDatabaseStatus defines the observed state of FlexibleServerDatabase.
#FlexibleServerDatabaseStatus: {
	atProvider?: #FlexibleServerDatabaseObservation @go(AtProvider)
}

// FlexibleServerDatabase is the Schema for the FlexibleServerDatabases API. Manages a PostgreSQL Flexible Server Database.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FlexibleServerDatabase: {
	spec:    #FlexibleServerDatabaseSpec   @go(Spec)
	status?: #FlexibleServerDatabaseStatus @go(Status)
}

// FlexibleServerDatabaseList contains a list of FlexibleServerDatabases
#FlexibleServerDatabaseList: {
	items: [...#FlexibleServerDatabase] @go(Items,[]FlexibleServerDatabase)
}
