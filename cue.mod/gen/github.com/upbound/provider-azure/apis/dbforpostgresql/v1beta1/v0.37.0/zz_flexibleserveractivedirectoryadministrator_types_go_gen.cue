// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dbforpostgresql/v1beta1

package v1beta1

#FlexibleServerActiveDirectoryAdministratorInitParameters: {
	// The name of Azure Active Directory principal. Changing this forces a new resource to be created.
	principalName?: null | string @go(PrincipalName,*string)

	// The type of Azure Active Directory principal. Possible values are Group, ServicePrincipal and User. Changing this forces a new resource to be created.
	principalType?: null | string @go(PrincipalType,*string)

	// The Azure Tenant ID. Changing this forces a new resource to be created.
	tenantId?: null | string @go(TenantID,*string)
}

#FlexibleServerActiveDirectoryAdministratorObservation: {
	// The ID of the PostgreSQL Flexible Server Active Directory Administrator.
	id?: null | string @go(ID,*string)

	// The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
	objectId?: null | string @go(ObjectID,*string)

	// The name of Azure Active Directory principal. Changing this forces a new resource to be created.
	principalName?: null | string @go(PrincipalName,*string)

	// The type of Azure Active Directory principal. Possible values are Group, ServicePrincipal and User. Changing this forces a new resource to be created.
	principalType?: null | string @go(PrincipalType,*string)

	// The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
	serverName?: null | string @go(ServerName,*string)

	// The Azure Tenant ID. Changing this forces a new resource to be created.
	tenantId?: null | string @go(TenantID,*string)
}

#FlexibleServerActiveDirectoryAdministratorParameters: {
	// The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	objectId?: null | string @go(ObjectID,*string)

	// The name of Azure Active Directory principal. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	principalName?: null | string @go(PrincipalName,*string)

	// The type of Azure Active Directory principal. Possible values are Group, ServicePrincipal and User. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	principalType?: null | string @go(PrincipalType,*string)

	// The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=FlexibleServer
	// +kubebuilder:validation:Optional
	serverName?: null | string @go(ServerName,*string)

	// The Azure Tenant ID. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	tenantId?: null | string @go(TenantID,*string)
}

// FlexibleServerActiveDirectoryAdministratorSpec defines the desired state of FlexibleServerActiveDirectoryAdministrator
#FlexibleServerActiveDirectoryAdministratorSpec: {
	forProvider: #FlexibleServerActiveDirectoryAdministratorParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #FlexibleServerActiveDirectoryAdministratorInitParameters @go(InitProvider)
}

// FlexibleServerActiveDirectoryAdministratorStatus defines the observed state of FlexibleServerActiveDirectoryAdministrator.
#FlexibleServerActiveDirectoryAdministratorStatus: {
	atProvider?: #FlexibleServerActiveDirectoryAdministratorObservation @go(AtProvider)
}

// FlexibleServerActiveDirectoryAdministrator is the Schema for the FlexibleServerActiveDirectoryAdministrators API. Manages an Active Directory administrator on a PostgreSQL Flexible server
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FlexibleServerActiveDirectoryAdministrator: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.principalName) || (has(self.initProvider) && has(self.initProvider.principalName))",message="spec.forProvider.principalName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.principalType) || (has(self.initProvider) && has(self.initProvider.principalType))",message="spec.forProvider.principalType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tenantId) || (has(self.initProvider) && has(self.initProvider.tenantId))",message="spec.forProvider.tenantId is a required parameter"
	spec:    #FlexibleServerActiveDirectoryAdministratorSpec   @go(Spec)
	status?: #FlexibleServerActiveDirectoryAdministratorStatus @go(Status)
}

// FlexibleServerActiveDirectoryAdministratorList contains a list of FlexibleServerActiveDirectoryAdministrators
#FlexibleServerActiveDirectoryAdministratorList: {
	items: [...#FlexibleServerActiveDirectoryAdministrator] @go(Items,[]FlexibleServerActiveDirectoryAdministrator)
}
