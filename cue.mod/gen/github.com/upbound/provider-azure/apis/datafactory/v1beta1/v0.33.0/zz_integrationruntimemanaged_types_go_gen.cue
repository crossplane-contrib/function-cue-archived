// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#IntegrationRuntimeManagedCatalogInfoObservation: {
	// Administrator login name for the SQL Server.
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: Basic, Standard, Premium and PremiumRS.
	pricingTier?: null | string @go(PricingTier,*string)

	// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
	serverEndpoint?: null | string @go(ServerEndpoint,*string)
}

#IntegrationRuntimeManagedCatalogInfoParameters: {
	// Administrator login name for the SQL Server.
	// +kubebuilder:validation:Optional
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// Pricing tier for the database that will be created for the SSIS catalog. Valid values are: Basic, Standard, Premium and PremiumRS.
	// +kubebuilder:validation:Optional
	pricingTier?: null | string @go(PricingTier,*string)

	// The endpoint of an Azure SQL Server that will be used to host the SSIS catalog.
	// +kubebuilder:validation:Required
	serverEndpoint?: null | string @go(ServerEndpoint,*string)
}

#IntegrationRuntimeManagedCustomSetupScriptObservation: {
	// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup for more information.
	blobContainerUri?: null | string @go(BlobContainerURI,*string)
}

#IntegrationRuntimeManagedCustomSetupScriptParameters: {
	// The blob endpoint for the container which contains a custom setup script that will be run on every node on startup. See https://docs.microsoft.com/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup for more information.
	// +kubebuilder:validation:Required
	blobContainerUri?: null | string @go(BlobContainerURI,*string)
}

#IntegrationRuntimeManagedObservation: {
	// A catalog_info block as defined below.
	catalogInfo?: [...#IntegrationRuntimeManagedCatalogInfoObservation] @go(CatalogInfo,[]IntegrationRuntimeManagedCatalogInfoObservation)

	// A custom_setup_script block as defined below.
	customSetupScript?: [...#IntegrationRuntimeManagedCustomSetupScriptObservation] @go(CustomSetupScript,[]IntegrationRuntimeManagedCustomSetupScriptObservation)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// Integration runtime description.
	description?: null | string @go(Description,*string)

	// The Managed Integration Runtime edition. Valid values are Standard and Enterprise. Defaults to Standard.
	edition?: null | string @go(Edition,*string)

	// The ID of the Data Factory Integration Managed Runtime.
	id?: null | string @go(ID,*string)

	// The type of the license that is used. Valid values are LicenseIncluded and BasePrice. Defaults to LicenseIncluded.
	licenseType?: null | string @go(LicenseType,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Defines the maximum parallel executions per node. Defaults to 1. Max is 16.
	maxParallelExecutionsPerNode?: null | float64 @go(MaxParallelExecutionsPerNode,*float64)

	// The size of the nodes on which the Managed Integration Runtime runs. Valid values are: Standard_D2_v3, Standard_D4_v3, Standard_D8_v3, Standard_D16_v3, Standard_D32_v3, Standard_D64_v3, Standard_E2_v3, Standard_E4_v3, Standard_E8_v3, Standard_E16_v3, Standard_E32_v3, Standard_E64_v3, Standard_D1_v2, Standard_D2_v2, Standard_D3_v2, Standard_D4_v2, Standard_A4_v2 and Standard_A8_v2
	nodeSize?: null | string @go(NodeSize,*string)

	// Number of nodes for the Managed Integration Runtime. Max is 10. Defaults to 1.
	numberOfNodes?: null | float64 @go(NumberOfNodes,*float64)

	// A vnet_integration block as defined below.
	vnetIntegration?: [...#IntegrationRuntimeManagedVnetIntegrationObservation] @go(VnetIntegration,[]IntegrationRuntimeManagedVnetIntegrationObservation)
}

#IntegrationRuntimeManagedParameters: {
	// A catalog_info block as defined below.
	// +kubebuilder:validation:Optional
	catalogInfo?: [...#IntegrationRuntimeManagedCatalogInfoParameters] @go(CatalogInfo,[]IntegrationRuntimeManagedCatalogInfoParameters)

	// A custom_setup_script block as defined below.
	// +kubebuilder:validation:Optional
	customSetupScript?: [...#IntegrationRuntimeManagedCustomSetupScriptParameters] @go(CustomSetupScript,[]IntegrationRuntimeManagedCustomSetupScriptParameters)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// Integration runtime description.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The Managed Integration Runtime edition. Valid values are Standard and Enterprise. Defaults to Standard.
	// +kubebuilder:validation:Optional
	edition?: null | string @go(Edition,*string)

	// The type of the license that is used. Valid values are LicenseIncluded and BasePrice. Defaults to LicenseIncluded.
	// +kubebuilder:validation:Optional
	licenseType?: null | string @go(LicenseType,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Defines the maximum parallel executions per node. Defaults to 1. Max is 16.
	// +kubebuilder:validation:Optional
	maxParallelExecutionsPerNode?: null | float64 @go(MaxParallelExecutionsPerNode,*float64)

	// The size of the nodes on which the Managed Integration Runtime runs. Valid values are: Standard_D2_v3, Standard_D4_v3, Standard_D8_v3, Standard_D16_v3, Standard_D32_v3, Standard_D64_v3, Standard_E2_v3, Standard_E4_v3, Standard_E8_v3, Standard_E16_v3, Standard_E32_v3, Standard_E64_v3, Standard_D1_v2, Standard_D2_v2, Standard_D3_v2, Standard_D4_v2, Standard_A4_v2 and Standard_A8_v2
	// +kubebuilder:validation:Optional
	nodeSize?: null | string @go(NodeSize,*string)

	// Number of nodes for the Managed Integration Runtime. Max is 10. Defaults to 1.
	// +kubebuilder:validation:Optional
	numberOfNodes?: null | float64 @go(NumberOfNodes,*float64)

	// A vnet_integration block as defined below.
	// +kubebuilder:validation:Optional
	vnetIntegration?: [...#IntegrationRuntimeManagedVnetIntegrationParameters] @go(VnetIntegration,[]IntegrationRuntimeManagedVnetIntegrationParameters)
}

#IntegrationRuntimeManagedVnetIntegrationObservation: {
	// Name of the subnet to which the nodes of the Managed Integration Runtime will be added.
	subnetName?: null | string @go(SubnetName,*string)

	// ID of the virtual network to which the nodes of the Managed Integration Runtime will be added.
	vnetId?: null | string @go(VnetID,*string)
}

#IntegrationRuntimeManagedVnetIntegrationParameters: {
	// Name of the subnet to which the nodes of the Managed Integration Runtime will be added.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	subnetName?: null | string @go(SubnetName,*string)

	// ID of the virtual network to which the nodes of the Managed Integration Runtime will be added.
	// +kubebuilder:validation:Required
	vnetId?: null | string @go(VnetID,*string)
}

// IntegrationRuntimeManagedSpec defines the desired state of IntegrationRuntimeManaged
#IntegrationRuntimeManagedSpec: {
	forProvider: #IntegrationRuntimeManagedParameters @go(ForProvider)
}

// IntegrationRuntimeManagedStatus defines the observed state of IntegrationRuntimeManaged.
#IntegrationRuntimeManagedStatus: {
	atProvider?: #IntegrationRuntimeManagedObservation @go(AtProvider)
}

// IntegrationRuntimeManaged is the Schema for the IntegrationRuntimeManageds API. Manages an Azure Data Factory Managed Integration Runtime.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IntegrationRuntimeManaged: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.nodeSize)",message="nodeSize is a required parameter"
	spec:    #IntegrationRuntimeManagedSpec   @go(Spec)
	status?: #IntegrationRuntimeManagedStatus @go(Status)
}

// IntegrationRuntimeManagedList contains a list of IntegrationRuntimeManageds
#IntegrationRuntimeManagedList: {
	items: [...#IntegrationRuntimeManaged] @go(Items,[]IntegrationRuntimeManaged)
}
