// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#CustomDataSetObservation: {
	// A map of additional properties to associate with the Data Factory Dataset.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Dataset.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The Data Factory ID in which to associate the Dataset with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Dataset.
	description?: null | string @go(Description,*string)

	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	folder?: null | string @go(Folder,*string)

	// The ID of the Data Factory Dataset.
	id?: null | string @go(ID,*string)

	// A linked_service block as defined below.
	linkedService?: [...#LinkedServiceObservation] @go(LinkedService,[]LinkedServiceObservation)

	// A map of parameters to associate with the Data Factory Dataset.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// A JSON object that contains the schema of the Data Factory Dataset.
	schemaJson?: null | string @go(SchemaJSON,*string)

	// The type of dataset that will be associated with Data Factory. Changing this forces a new resource to be created.
	type?: null | string @go(Type,*string)

	// A JSON object that contains the properties of the Data Factory Dataset.
	typePropertiesJson?: null | string @go(TypePropertiesJSON,*string)
}

#CustomDataSetParameters: {
	// A map of additional properties to associate with the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The Data Factory ID in which to associate the Dataset with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	// +kubebuilder:validation:Optional
	folder?: null | string @go(Folder,*string)

	// A linked_service block as defined below.
	// +kubebuilder:validation:Optional
	linkedService?: [...#LinkedServiceParameters] @go(LinkedService,[]LinkedServiceParameters)

	// A map of parameters to associate with the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// A JSON object that contains the schema of the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	schemaJson?: null | string @go(SchemaJSON,*string)

	// The type of dataset that will be associated with Data Factory. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// A JSON object that contains the properties of the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	typePropertiesJson?: null | string @go(TypePropertiesJSON,*string)
}

#LinkedServiceObservation: {
	// The name of the Data Factory Linked Service.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#LinkedServiceParameters: {
	// The name of the Data Factory Linked Service.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.LinkedCustomService
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

// CustomDataSetSpec defines the desired state of CustomDataSet
#CustomDataSetSpec: {
	forProvider: #CustomDataSetParameters @go(ForProvider)
}

// CustomDataSetStatus defines the observed state of CustomDataSet.
#CustomDataSetStatus: {
	atProvider?: #CustomDataSetObservation @go(AtProvider)
}

// CustomDataSet is the Schema for the CustomDataSets API. Manages a Dataset inside an Azure Data Factory. This is a generic resource that supports all different Dataset Types.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#CustomDataSet: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.linkedService)",message="linkedService is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.type)",message="type is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.typePropertiesJson)",message="typePropertiesJson is a required parameter"
	spec:    #CustomDataSetSpec   @go(Spec)
	status?: #CustomDataSetStatus @go(Status)
}

// CustomDataSetList contains a list of CustomDataSets
#CustomDataSetList: {
	items: [...#CustomDataSet] @go(Items,[]CustomDataSet)
}
