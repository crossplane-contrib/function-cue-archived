// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#PipelineInitParameters: {
	// A JSON object that contains the activities that will be associated with the Data Factory Pipeline.
	activitiesJson?: null | string @go(ActivitiesJSON,*string)

	// List of tags that can be used for describing the Data Factory Pipeline.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The max number of concurrent runs for the Data Factory Pipeline. Must be between 1 and 50.
	concurrency?: null | float64 @go(Concurrency,*float64)

	// The description for the Data Factory Pipeline.
	description?: null | string @go(Description,*string)

	// The folder that this Pipeline is in. If not specified, the Pipeline will appear at the root level.
	folder?: null | string @go(Folder,*string)

	// The TimeSpan value after which an Azure Monitoring Metric is fired.
	moniterMetricsAfterDuration?: null | string @go(MoniterMetricsAfterDuration,*string)

	// A map of parameters to associate with the Data Factory Pipeline.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// A map of variables to associate with the Data Factory Pipeline.
	variables?: {[string]: null | string} @go(Variables,map[string]*string)
}

#PipelineObservation: {
	// A JSON object that contains the activities that will be associated with the Data Factory Pipeline.
	activitiesJson?: null | string @go(ActivitiesJSON,*string)

	// List of tags that can be used for describing the Data Factory Pipeline.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The max number of concurrent runs for the Data Factory Pipeline. Must be between 1 and 50.
	concurrency?: null | float64 @go(Concurrency,*float64)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Pipeline.
	description?: null | string @go(Description,*string)

	// The folder that this Pipeline is in. If not specified, the Pipeline will appear at the root level.
	folder?: null | string @go(Folder,*string)

	// The ID of the Data Factory Pipeline.
	id?: null | string @go(ID,*string)

	// The TimeSpan value after which an Azure Monitoring Metric is fired.
	moniterMetricsAfterDuration?: null | string @go(MoniterMetricsAfterDuration,*string)

	// A map of parameters to associate with the Data Factory Pipeline.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// A map of variables to associate with the Data Factory Pipeline.
	variables?: {[string]: null | string} @go(Variables,map[string]*string)
}

#PipelineParameters: {
	// A JSON object that contains the activities that will be associated with the Data Factory Pipeline.
	// +kubebuilder:validation:Optional
	activitiesJson?: null | string @go(ActivitiesJSON,*string)

	// List of tags that can be used for describing the Data Factory Pipeline.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The max number of concurrent runs for the Data Factory Pipeline. Must be between 1 and 50.
	// +kubebuilder:validation:Optional
	concurrency?: null | float64 @go(Concurrency,*float64)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Pipeline.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The folder that this Pipeline is in. If not specified, the Pipeline will appear at the root level.
	// +kubebuilder:validation:Optional
	folder?: null | string @go(Folder,*string)

	// The TimeSpan value after which an Azure Monitoring Metric is fired.
	// +kubebuilder:validation:Optional
	moniterMetricsAfterDuration?: null | string @go(MoniterMetricsAfterDuration,*string)

	// A map of parameters to associate with the Data Factory Pipeline.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// A map of variables to associate with the Data Factory Pipeline.
	// +kubebuilder:validation:Optional
	variables?: {[string]: null | string} @go(Variables,map[string]*string)
}

// PipelineSpec defines the desired state of Pipeline
#PipelineSpec: {
	forProvider: #PipelineParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PipelineInitParameters @go(InitProvider)
}

// PipelineStatus defines the observed state of Pipeline.
#PipelineStatus: {
	atProvider?: #PipelineObservation @go(AtProvider)
}

// Pipeline is the Schema for the Pipelines API. Manages a Pipeline inside a Azure Data Factory.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Pipeline: {
	spec:    #PipelineSpec   @go(Spec)
	status?: #PipelineStatus @go(Status)
}

// PipelineList contains a list of Pipelines
#PipelineList: {
	items: [...#Pipeline] @go(Items,[]Pipeline)
}
