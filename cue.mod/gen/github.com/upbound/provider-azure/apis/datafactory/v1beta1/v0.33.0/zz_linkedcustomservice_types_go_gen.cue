// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#IntegrationRuntimeObservation: {
	// The integration runtime reference to associate with the Data Factory Linked Service.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the integration runtime.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#IntegrationRuntimeParameters: {
	// The integration runtime reference to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the integration runtime.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#LinkedCustomServiceObservation: {
	// A map of additional properties to associate with the Data Factory Linked Service.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service.
	description?: null | string @go(Description,*string)

	// The ID of the Data Factory Linked Service.
	id?: null | string @go(ID,*string)

	// An integration_runtime block as defined below.
	integrationRuntime?: [...#IntegrationRuntimeObservation] @go(IntegrationRuntime,[]IntegrationRuntimeObservation)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The type of data stores that will be connected to Data Factory. For full list of supported data stores, please refer to Azure Data Factory connector. Changing this forces a new resource to be created.
	type?: null | string @go(Type,*string)

	// A JSON object that contains the properties of the Data Factory Linked Service.
	typePropertiesJson?: null | string @go(TypePropertiesJSON,*string)
}

#LinkedCustomServiceParameters: {
	// A map of additional properties to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// An integration_runtime block as defined below.
	// +kubebuilder:validation:Optional
	integrationRuntime?: [...#IntegrationRuntimeParameters] @go(IntegrationRuntime,[]IntegrationRuntimeParameters)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The type of data stores that will be connected to Data Factory. For full list of supported data stores, please refer to Azure Data Factory connector. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// A JSON object that contains the properties of the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	typePropertiesJson?: null | string @go(TypePropertiesJSON,*string)
}

// LinkedCustomServiceSpec defines the desired state of LinkedCustomService
#LinkedCustomServiceSpec: {
	forProvider: #LinkedCustomServiceParameters @go(ForProvider)
}

// LinkedCustomServiceStatus defines the observed state of LinkedCustomService.
#LinkedCustomServiceStatus: {
	atProvider?: #LinkedCustomServiceObservation @go(AtProvider)
}

// LinkedCustomService is the Schema for the LinkedCustomServices API. Manages a Linked Service (connection) between a resource and Azure Data Factory. This is a generic resource that supports all different Linked Service Types.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LinkedCustomService: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.type)",message="type is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.typePropertiesJson)",message="typePropertiesJson is a required parameter"
	spec:    #LinkedCustomServiceSpec   @go(Spec)
	status?: #LinkedCustomServiceStatus @go(Status)
}

// LinkedCustomServiceList contains a list of LinkedCustomServices
#LinkedCustomServiceList: {
	items: [...#LinkedCustomService] @go(Items,[]LinkedCustomService)
}
