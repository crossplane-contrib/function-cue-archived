// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#BasicAuthenticationInitParameters: {
	// The username which can be used to authenticate to the OData endpoint.
	username?: null | string @go(Username,*string)
}

#BasicAuthenticationObservation: {
	// The username which can be used to authenticate to the OData endpoint.
	username?: null | string @go(Username,*string)
}

#BasicAuthenticationParameters: {
	// The username which can be used to authenticate to the OData endpoint.
	// +kubebuilder:validation:Optional
	username?: null | string @go(Username,*string)
}

#LinkedServiceODataInitParameters: {
	// A map of additional properties to associate with the Data Factory Linked Service OData.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service OData.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// A basic_authentication block as defined below.
	basicAuthentication?: [...#BasicAuthenticationInitParameters] @go(BasicAuthentication,[]BasicAuthenticationInitParameters)

	// The description for the Data Factory Linked Service OData.
	description?: null | string @go(Description,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service OData.
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// A map of parameters to associate with the Data Factory Linked Service OData.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The URL of the OData service endpoint.
	url?: null | string @go(URL,*string)
}

#LinkedServiceODataObservation: {
	// A map of additional properties to associate with the Data Factory Linked Service OData.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service OData.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// A basic_authentication block as defined below.
	basicAuthentication?: [...#BasicAuthenticationObservation] @go(BasicAuthentication,[]BasicAuthenticationObservation)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service OData.
	description?: null | string @go(Description,*string)

	// The ID of the Data Factory OData Linked Service.
	id?: null | string @go(ID,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service OData.
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// A map of parameters to associate with the Data Factory Linked Service OData.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The URL of the OData service endpoint.
	url?: null | string @go(URL,*string)
}

#LinkedServiceODataParameters: {
	// A map of additional properties to associate with the Data Factory Linked Service OData.
	// +kubebuilder:validation:Optional
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service OData.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// A basic_authentication block as defined below.
	// +kubebuilder:validation:Optional
	basicAuthentication?: [...#BasicAuthenticationParameters] @go(BasicAuthentication,[]BasicAuthenticationParameters)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service OData.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service OData.
	// +kubebuilder:validation:Optional
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// A map of parameters to associate with the Data Factory Linked Service OData.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The URL of the OData service endpoint.
	// +kubebuilder:validation:Optional
	url?: null | string @go(URL,*string)
}

// LinkedServiceODataSpec defines the desired state of LinkedServiceOData
#LinkedServiceODataSpec: {
	forProvider: #LinkedServiceODataParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #LinkedServiceODataInitParameters @go(InitProvider)
}

// LinkedServiceODataStatus defines the observed state of LinkedServiceOData.
#LinkedServiceODataStatus: {
	atProvider?: #LinkedServiceODataObservation @go(AtProvider)
}

// LinkedServiceOData is the Schema for the LinkedServiceODatas API. Manages a Linked Service (connection) between a Database and Azure Data Factory through OData protocol.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LinkedServiceOData: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) && has(self.initProvider.url))",message="spec.forProvider.url is a required parameter"
	spec:    #LinkedServiceODataSpec   @go(Spec)
	status?: #LinkedServiceODataStatus @go(Status)
}

// LinkedServiceODataList contains a list of LinkedServiceODatas
#LinkedServiceODataList: {
	items: [...#LinkedServiceOData] @go(Items,[]LinkedServiceOData)
}
