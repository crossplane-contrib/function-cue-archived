// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#AzureBlobFsLocationInitParameters: {
	// The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
	fileSystem?: null | string @go(FileSystem,*string)

	// The filename of the file.
	filename?: null | string @go(Filename,*string)

	// The folder path to the file.
	path?: null | string @go(Path,*string)
}

#AzureBlobFsLocationObservation: {
	// The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
	fileSystem?: null | string @go(FileSystem,*string)

	// The filename of the file.
	filename?: null | string @go(Filename,*string)

	// The folder path to the file.
	path?: null | string @go(Path,*string)
}

#AzureBlobFsLocationParameters: {
	// The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
	// +kubebuilder:validation:Optional
	fileSystem?: null | string @go(FileSystem,*string)

	// The filename of the file.
	// +kubebuilder:validation:Optional
	filename?: null | string @go(Filename,*string)

	// The folder path to the file.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)
}

#DataSetDelimitedTextAzureBlobStorageLocationInitParameters: {
	// The container on the Azure Blob Storage Account hosting the file.
	container?: null | string @go(Container,*string)

	// Is the container using dynamic expression, function or system variables? Defaults to false.
	dynamicContainerEnabled?: null | bool @go(DynamicContainerEnabled,*bool)

	// Is the filename using dynamic expression, function or system variables? Defaults to false.
	dynamicFilenameEnabled?: null | bool @go(DynamicFilenameEnabled,*bool)

	// Is the path using dynamic expression, function or system variables? Defaults to false.
	dynamicPathEnabled?: null | bool @go(DynamicPathEnabled,*bool)

	// The filename of the file.
	filename?: null | string @go(Filename,*string)

	// The folder path to the file. This can be an empty string.
	path?: null | string @go(Path,*string)
}

#DataSetDelimitedTextAzureBlobStorageLocationObservation: {
	// The container on the Azure Blob Storage Account hosting the file.
	container?: null | string @go(Container,*string)

	// Is the container using dynamic expression, function or system variables? Defaults to false.
	dynamicContainerEnabled?: null | bool @go(DynamicContainerEnabled,*bool)

	// Is the filename using dynamic expression, function or system variables? Defaults to false.
	dynamicFilenameEnabled?: null | bool @go(DynamicFilenameEnabled,*bool)

	// Is the path using dynamic expression, function or system variables? Defaults to false.
	dynamicPathEnabled?: null | bool @go(DynamicPathEnabled,*bool)

	// The filename of the file.
	filename?: null | string @go(Filename,*string)

	// The folder path to the file. This can be an empty string.
	path?: null | string @go(Path,*string)
}

#DataSetDelimitedTextAzureBlobStorageLocationParameters: {
	// The container on the Azure Blob Storage Account hosting the file.
	// +kubebuilder:validation:Optional
	container?: null | string @go(Container,*string)

	// Is the container using dynamic expression, function or system variables? Defaults to false.
	// +kubebuilder:validation:Optional
	dynamicContainerEnabled?: null | bool @go(DynamicContainerEnabled,*bool)

	// Is the filename using dynamic expression, function or system variables? Defaults to false.
	// +kubebuilder:validation:Optional
	dynamicFilenameEnabled?: null | bool @go(DynamicFilenameEnabled,*bool)

	// Is the path using dynamic expression, function or system variables? Defaults to false.
	// +kubebuilder:validation:Optional
	dynamicPathEnabled?: null | bool @go(DynamicPathEnabled,*bool)

	// The filename of the file.
	// +kubebuilder:validation:Optional
	filename?: null | string @go(Filename,*string)

	// The folder path to the file. This can be an empty string.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)
}

#DataSetDelimitedTextHTTPServerLocationInitParameters: {
	// Is the filename using dynamic expression, function or system variables? Defaults to false.
	dynamicFilenameEnabled?: null | bool @go(DynamicFilenameEnabled,*bool)

	// Is the path using dynamic expression, function or system variables? Defaults to false.
	dynamicPathEnabled?: null | bool @go(DynamicPathEnabled,*bool)

	// The filename of the file on the web server.
	filename?: null | string @go(Filename,*string)

	// The folder path to the file on the web server.
	path?: null | string @go(Path,*string)

	// The base URL to the web server hosting the file.
	relativeUrl?: null | string @go(RelativeURL,*string)
}

#DataSetDelimitedTextHTTPServerLocationObservation: {
	// Is the filename using dynamic expression, function or system variables? Defaults to false.
	dynamicFilenameEnabled?: null | bool @go(DynamicFilenameEnabled,*bool)

	// Is the path using dynamic expression, function or system variables? Defaults to false.
	dynamicPathEnabled?: null | bool @go(DynamicPathEnabled,*bool)

	// The filename of the file on the web server.
	filename?: null | string @go(Filename,*string)

	// The folder path to the file on the web server.
	path?: null | string @go(Path,*string)

	// The base URL to the web server hosting the file.
	relativeUrl?: null | string @go(RelativeURL,*string)
}

#DataSetDelimitedTextHTTPServerLocationParameters: {
	// Is the filename using dynamic expression, function or system variables? Defaults to false.
	// +kubebuilder:validation:Optional
	dynamicFilenameEnabled?: null | bool @go(DynamicFilenameEnabled,*bool)

	// Is the path using dynamic expression, function or system variables? Defaults to false.
	// +kubebuilder:validation:Optional
	dynamicPathEnabled?: null | bool @go(DynamicPathEnabled,*bool)

	// The filename of the file on the web server.
	// +kubebuilder:validation:Optional
	filename?: null | string @go(Filename,*string)

	// The folder path to the file on the web server.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// The base URL to the web server hosting the file.
	// +kubebuilder:validation:Optional
	relativeUrl?: null | string @go(RelativeURL,*string)
}

#DataSetDelimitedTextInitParameters: {
	// A map of additional properties to associate with the Data Factory Dataset.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Dataset.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// An azure_blob_fs_location block as defined below.
	azureBlobFsLocation?: [...#AzureBlobFsLocationInitParameters] @go(AzureBlobFsLocation,[]AzureBlobFsLocationInitParameters)

	// An azure_blob_storage_location block as defined below.
	azureBlobStorageLocation?: [...#DataSetDelimitedTextAzureBlobStorageLocationInitParameters] @go(AzureBlobStorageLocation,[]DataSetDelimitedTextAzureBlobStorageLocationInitParameters)

	// The column delimiter. Defaults to ,.
	columnDelimiter?: null | string @go(ColumnDelimiter,*string)

	// The compression codec used to read/write text files. Valid values are None, bzip2, gzip, deflate, ZipDeflate, TarGzip, Tar, snappy and lz4. Please note these values are case sensitive.
	compressionCodec?: null | string @go(CompressionCodec,*string)

	// The compression ratio for the Data Factory Dataset. Valid values are Fastest or Optimal. Please note these values are case sensitive.
	compressionLevel?: null | string @go(CompressionLevel,*string)

	// The description for the Data Factory Dataset.
	description?: null | string @go(Description,*string)

	// The encoding format for the file.
	encoding?: null | string @go(Encoding,*string)

	// The escape character. Defaults to \.
	escapeCharacter?: null | string @go(EscapeCharacter,*string)

	// When used as input, treat the first row of data as headers. When used as output, write the headers into the output as the first row of data. Defaults to false.
	firstRowAsHeader?: null | bool @go(FirstRowAsHeader,*bool)

	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	folder?: null | string @go(Folder,*string)

	// A http_server_location block as defined below.
	httpServerLocation?: [...#DataSetDelimitedTextHTTPServerLocationInitParameters] @go(HTTPServerLocation,[]DataSetDelimitedTextHTTPServerLocationInitParameters)

	// The null value string. Defaults to an empty string. Defaults to "".
	nullValue?: null | string @go(NullValue,*string)

	// A map of parameters to associate with the Data Factory Dataset.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The quote character. Defaults to ".
	quoteCharacter?: null | string @go(QuoteCharacter,*string)

	// The row delimiter. Defaults to any of the following values on read: \r\n, \r, \n, and \n or \r\n on write by mapping data flow and Copy activity respectively.
	rowDelimiter?: null | string @go(RowDelimiter,*string)

	// A schema_column block as defined below.
	schemaColumn?: [...#DataSetDelimitedTextSchemaColumnInitParameters] @go(SchemaColumn,[]DataSetDelimitedTextSchemaColumnInitParameters)
}

#DataSetDelimitedTextObservation: {
	// A map of additional properties to associate with the Data Factory Dataset.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Dataset.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// An azure_blob_fs_location block as defined below.
	azureBlobFsLocation?: [...#AzureBlobFsLocationObservation] @go(AzureBlobFsLocation,[]AzureBlobFsLocationObservation)

	// An azure_blob_storage_location block as defined below.
	azureBlobStorageLocation?: [...#DataSetDelimitedTextAzureBlobStorageLocationObservation] @go(AzureBlobStorageLocation,[]DataSetDelimitedTextAzureBlobStorageLocationObservation)

	// The column delimiter. Defaults to ,.
	columnDelimiter?: null | string @go(ColumnDelimiter,*string)

	// The compression codec used to read/write text files. Valid values are None, bzip2, gzip, deflate, ZipDeflate, TarGzip, Tar, snappy and lz4. Please note these values are case sensitive.
	compressionCodec?: null | string @go(CompressionCodec,*string)

	// The compression ratio for the Data Factory Dataset. Valid values are Fastest or Optimal. Please note these values are case sensitive.
	compressionLevel?: null | string @go(CompressionLevel,*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Dataset.
	description?: null | string @go(Description,*string)

	// The encoding format for the file.
	encoding?: null | string @go(Encoding,*string)

	// The escape character. Defaults to \.
	escapeCharacter?: null | string @go(EscapeCharacter,*string)

	// When used as input, treat the first row of data as headers. When used as output, write the headers into the output as the first row of data. Defaults to false.
	firstRowAsHeader?: null | bool @go(FirstRowAsHeader,*bool)

	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	folder?: null | string @go(Folder,*string)

	// A http_server_location block as defined below.
	httpServerLocation?: [...#DataSetDelimitedTextHTTPServerLocationObservation] @go(HTTPServerLocation,[]DataSetDelimitedTextHTTPServerLocationObservation)

	// The ID of the Data Factory Dataset.
	id?: null | string @go(ID,*string)

	// The Data Factory Linked Service name in which to associate the Dataset with.
	linkedServiceName?: null | string @go(LinkedServiceName,*string)

	// The null value string. Defaults to an empty string. Defaults to "".
	nullValue?: null | string @go(NullValue,*string)

	// A map of parameters to associate with the Data Factory Dataset.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The quote character. Defaults to ".
	quoteCharacter?: null | string @go(QuoteCharacter,*string)

	// The row delimiter. Defaults to any of the following values on read: \r\n, \r, \n, and \n or \r\n on write by mapping data flow and Copy activity respectively.
	rowDelimiter?: null | string @go(RowDelimiter,*string)

	// A schema_column block as defined below.
	schemaColumn?: [...#DataSetDelimitedTextSchemaColumnObservation] @go(SchemaColumn,[]DataSetDelimitedTextSchemaColumnObservation)
}

#DataSetDelimitedTextParameters: {
	// A map of additional properties to associate with the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// An azure_blob_fs_location block as defined below.
	// +kubebuilder:validation:Optional
	azureBlobFsLocation?: [...#AzureBlobFsLocationParameters] @go(AzureBlobFsLocation,[]AzureBlobFsLocationParameters)

	// An azure_blob_storage_location block as defined below.
	// +kubebuilder:validation:Optional
	azureBlobStorageLocation?: [...#DataSetDelimitedTextAzureBlobStorageLocationParameters] @go(AzureBlobStorageLocation,[]DataSetDelimitedTextAzureBlobStorageLocationParameters)

	// The column delimiter. Defaults to ,.
	// +kubebuilder:validation:Optional
	columnDelimiter?: null | string @go(ColumnDelimiter,*string)

	// The compression codec used to read/write text files. Valid values are None, bzip2, gzip, deflate, ZipDeflate, TarGzip, Tar, snappy and lz4. Please note these values are case sensitive.
	// +kubebuilder:validation:Optional
	compressionCodec?: null | string @go(CompressionCodec,*string)

	// The compression ratio for the Data Factory Dataset. Valid values are Fastest or Optimal. Please note these values are case sensitive.
	// +kubebuilder:validation:Optional
	compressionLevel?: null | string @go(CompressionLevel,*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The encoding format for the file.
	// +kubebuilder:validation:Optional
	encoding?: null | string @go(Encoding,*string)

	// The escape character. Defaults to \.
	// +kubebuilder:validation:Optional
	escapeCharacter?: null | string @go(EscapeCharacter,*string)

	// When used as input, treat the first row of data as headers. When used as output, write the headers into the output as the first row of data. Defaults to false.
	// +kubebuilder:validation:Optional
	firstRowAsHeader?: null | bool @go(FirstRowAsHeader,*bool)

	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	// +kubebuilder:validation:Optional
	folder?: null | string @go(Folder,*string)

	// A http_server_location block as defined below.
	// +kubebuilder:validation:Optional
	httpServerLocation?: [...#DataSetDelimitedTextHTTPServerLocationParameters] @go(HTTPServerLocation,[]DataSetDelimitedTextHTTPServerLocationParameters)

	// The Data Factory Linked Service name in which to associate the Dataset with.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.LinkedServiceWeb
	// +kubebuilder:validation:Optional
	linkedServiceName?: null | string @go(LinkedServiceName,*string)

	// The null value string. Defaults to an empty string. Defaults to "".
	// +kubebuilder:validation:Optional
	nullValue?: null | string @go(NullValue,*string)

	// A map of parameters to associate with the Data Factory Dataset.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The quote character. Defaults to ".
	// +kubebuilder:validation:Optional
	quoteCharacter?: null | string @go(QuoteCharacter,*string)

	// The row delimiter. Defaults to any of the following values on read: \r\n, \r, \n, and \n or \r\n on write by mapping data flow and Copy activity respectively.
	// +kubebuilder:validation:Optional
	rowDelimiter?: null | string @go(RowDelimiter,*string)

	// A schema_column block as defined below.
	// +kubebuilder:validation:Optional
	schemaColumn?: [...#DataSetDelimitedTextSchemaColumnParameters] @go(SchemaColumn,[]DataSetDelimitedTextSchemaColumnParameters)
}

#DataSetDelimitedTextSchemaColumnInitParameters: {
	// The description of the column.
	description?: null | string @go(Description,*string)

	// The name of the column.
	name?: null | string @go(Name,*string)

	// Type of the column. Valid values are Byte, Byte[], Boolean, Date, DateTime,DateTimeOffset, Decimal, Double, Guid, Int16, Int32, Int64, Single, String, TimeSpan. Please note these values are case sensitive.
	type?: null | string @go(Type,*string)
}

#DataSetDelimitedTextSchemaColumnObservation: {
	// The description of the column.
	description?: null | string @go(Description,*string)

	// The name of the column.
	name?: null | string @go(Name,*string)

	// Type of the column. Valid values are Byte, Byte[], Boolean, Date, DateTime,DateTimeOffset, Decimal, Double, Guid, Int16, Int32, Int64, Single, String, TimeSpan. Please note these values are case sensitive.
	type?: null | string @go(Type,*string)
}

#DataSetDelimitedTextSchemaColumnParameters: {
	// The description of the column.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The name of the column.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Type of the column. Valid values are Byte, Byte[], Boolean, Date, DateTime,DateTimeOffset, Decimal, Double, Guid, Int16, Int32, Int64, Single, String, TimeSpan. Please note these values are case sensitive.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// DataSetDelimitedTextSpec defines the desired state of DataSetDelimitedText
#DataSetDelimitedTextSpec: {
	forProvider: #DataSetDelimitedTextParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #DataSetDelimitedTextInitParameters @go(InitProvider)
}

// DataSetDelimitedTextStatus defines the observed state of DataSetDelimitedText.
#DataSetDelimitedTextStatus: {
	atProvider?: #DataSetDelimitedTextObservation @go(AtProvider)
}

// DataSetDelimitedText is the Schema for the DataSetDelimitedTexts API. Manages an Azure Delimited Text Dataset inside an Azure Data Factory.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#DataSetDelimitedText: {
	spec:    #DataSetDelimitedTextSpec   @go(Spec)
	status?: #DataSetDelimitedTextStatus @go(Status)
}

// DataSetDelimitedTextList contains a list of DataSetDelimitedTexts
#DataSetDelimitedTextList: {
	items: [...#DataSetDelimitedText] @go(Items,[]DataSetDelimitedText)
}
