// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#LinkedServiceSFTPObservation: {
	// A map of additional properties to associate with the Data Factory Linked Service.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The type of authentication used to connect to the web table source. Valid options are Anonymous, Basic and ClientCertificate.
	authenticationType?: null | string @go(AuthenticationType,*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service.
	description?: null | string @go(Description,*string)

	// The SFTP server hostname.
	host?: null | string @go(Host,*string)

	// The host key fingerprint of the SFTP server.
	hostKeyFingerprint?: null | string @go(HostKeyFingerprint,*string)

	// The ID of the Data Factory Linked Service.
	id?: null | string @go(ID,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service.
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The TCP port number that the SFTP server uses to listen for client connection. Default value is 22.
	port?: null | float64 @go(Port,*float64)

	// Whether to validate host key fingerprint while connecting. If set to false, host_key_fingerprint must also be set.
	skipHostKeyValidation?: null | bool @go(SkipHostKeyValidation,*bool)

	// The username used to log on to the SFTP server.
	username?: null | string @go(Username,*string)
}

#LinkedServiceSFTPParameters: {
	// A map of additional properties to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The type of authentication used to connect to the web table source. Valid options are Anonymous, Basic and ClientCertificate.
	// +kubebuilder:validation:Optional
	authenticationType?: null | string @go(AuthenticationType,*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The SFTP server hostname.
	// +kubebuilder:validation:Optional
	host?: null | string @go(Host,*string)

	// The host key fingerprint of the SFTP server.
	// +kubebuilder:validation:Optional
	hostKeyFingerprint?: null | string @go(HostKeyFingerprint,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The TCP port number that the SFTP server uses to listen for client connection. Default value is 22.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// Whether to validate host key fingerprint while connecting. If set to false, host_key_fingerprint must also be set.
	// +kubebuilder:validation:Optional
	skipHostKeyValidation?: null | bool @go(SkipHostKeyValidation,*bool)

	// The username used to log on to the SFTP server.
	// +kubebuilder:validation:Optional
	username?: null | string @go(Username,*string)
}

// LinkedServiceSFTPSpec defines the desired state of LinkedServiceSFTP
#LinkedServiceSFTPSpec: {
	forProvider: #LinkedServiceSFTPParameters @go(ForProvider)
}

// LinkedServiceSFTPStatus defines the observed state of LinkedServiceSFTP.
#LinkedServiceSFTPStatus: {
	atProvider?: #LinkedServiceSFTPObservation @go(AtProvider)
}

// LinkedServiceSFTP is the Schema for the LinkedServiceSFTPs API. Manages a Linked Service (connection) between an SFTP Server and Azure Data Factory.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LinkedServiceSFTP: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.authenticationType)",message="authenticationType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.host)",message="host is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.passwordSecretRef)",message="passwordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.port)",message="port is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.username)",message="username is a required parameter"
	spec:    #LinkedServiceSFTPSpec   @go(Spec)
	status?: #LinkedServiceSFTPStatus @go(Status)
}

// LinkedServiceSFTPList contains a list of LinkedServiceSFTPs
#LinkedServiceSFTPList: {
	items: [...#LinkedServiceSFTP] @go(Items,[]LinkedServiceSFTP)
}
