// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#DataFlowInitParameters: {
	// List of tags that can be used for describing the Data Factory Data Flow.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The description for the Data Factory Data Flow.
	description?: null | string @go(Description,*string)

	// The folder that this Data Flow is in. If not specified, the Data Flow will appear at the root level.
	folder?: null | string @go(Folder,*string)

	// The script for the Data Factory Data Flow.
	script?: null | string @go(Script,*string)

	// The script lines for the Data Factory Data Flow.
	scriptLines?: [...null | string] @go(ScriptLines,[]*string)

	// One or more sink blocks as defined below.
	sink?: [...#SinkInitParameters] @go(Sink,[]SinkInitParameters)

	// One or more source blocks as defined below.
	source?: [...#SourceInitParameters] @go(Source,[]SourceInitParameters)

	// One or more transformation blocks as defined below.
	transformation?: [...#TransformationInitParameters] @go(Transformation,[]TransformationInitParameters)
}

#DataFlowObservation: {
	// List of tags that can be used for describing the Data Factory Data Flow.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The ID of Data Factory in which to associate the Data Flow with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Data Flow.
	description?: null | string @go(Description,*string)

	// The folder that this Data Flow is in. If not specified, the Data Flow will appear at the root level.
	folder?: null | string @go(Folder,*string)

	// The ID of the Data Factory Data Flow.
	id?: null | string @go(ID,*string)

	// The script for the Data Factory Data Flow.
	script?: null | string @go(Script,*string)

	// The script lines for the Data Factory Data Flow.
	scriptLines?: [...null | string] @go(ScriptLines,[]*string)

	// One or more sink blocks as defined below.
	sink?: [...#SinkObservation] @go(Sink,[]SinkObservation)

	// One or more source blocks as defined below.
	source?: [...#SourceObservation] @go(Source,[]SourceObservation)

	// One or more transformation blocks as defined below.
	transformation?: [...#TransformationObservation] @go(Transformation,[]TransformationObservation)
}

#DataFlowParameters: {
	// List of tags that can be used for describing the Data Factory Data Flow.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The ID of Data Factory in which to associate the Data Flow with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Data Flow.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The folder that this Data Flow is in. If not specified, the Data Flow will appear at the root level.
	// +kubebuilder:validation:Optional
	folder?: null | string @go(Folder,*string)

	// The script for the Data Factory Data Flow.
	// +kubebuilder:validation:Optional
	script?: null | string @go(Script,*string)

	// The script lines for the Data Factory Data Flow.
	// +kubebuilder:validation:Optional
	scriptLines?: [...null | string] @go(ScriptLines,[]*string)

	// One or more sink blocks as defined below.
	// +kubebuilder:validation:Optional
	sink?: [...#SinkParameters] @go(Sink,[]SinkParameters)

	// One or more source blocks as defined below.
	// +kubebuilder:validation:Optional
	source?: [...#SourceParameters] @go(Source,[]SourceParameters)

	// One or more transformation blocks as defined below.
	// +kubebuilder:validation:Optional
	transformation?: [...#TransformationParameters] @go(Transformation,[]TransformationParameters)
}

#DataSetInitParameters: {
	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#DataSetObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#DataSetParameters: {
	// The name for the Data Flow transformation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.DataSetJSON
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#FlowletInitParameters: {
	// Specifies the reference data flow parameters from dataset.
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#FlowletObservation: {
	// Specifies the reference data flow parameters from dataset.
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#FlowletParameters: {
	// Specifies the reference data flow parameters from dataset.
	// +kubebuilder:validation:Optional
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#RejectedLinkedServiceInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#RejectedLinkedServiceObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#RejectedLinkedServiceParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SchemaLinkedServiceInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SchemaLinkedServiceObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SchemaLinkedServiceParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SinkInitParameters: {
	// A dataset block as defined below.
	dataset?: [...#DataSetInitParameters] @go(DataSet,[]DataSetInitParameters)

	// The description for the Data Flow Source.
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	flowlet?: [...#FlowletInitParameters] @go(Flowlet,[]FlowletInitParameters)

	// A linked_service block as defined below.
	linkedService?: [...#SinkLinkedServiceInitParameters] @go(LinkedService,[]SinkLinkedServiceInitParameters)

	// The name for the Data Flow Source.
	name?: null | string @go(Name,*string)

	// A rejected_linked_service block as defined below.
	rejectedLinkedService?: [...#RejectedLinkedServiceInitParameters] @go(RejectedLinkedService,[]RejectedLinkedServiceInitParameters)

	// A schema_linked_service block as defined below.
	schemaLinkedService?: [...#SchemaLinkedServiceInitParameters] @go(SchemaLinkedService,[]SchemaLinkedServiceInitParameters)
}

#SinkLinkedServiceInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SinkLinkedServiceObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SinkLinkedServiceParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SinkObservation: {
	// A dataset block as defined below.
	dataset?: [...#DataSetObservation] @go(DataSet,[]DataSetObservation)

	// The description for the Data Flow Source.
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	flowlet?: [...#FlowletObservation] @go(Flowlet,[]FlowletObservation)

	// A linked_service block as defined below.
	linkedService?: [...#SinkLinkedServiceObservation] @go(LinkedService,[]SinkLinkedServiceObservation)

	// The name for the Data Flow Source.
	name?: null | string @go(Name,*string)

	// A rejected_linked_service block as defined below.
	rejectedLinkedService?: [...#RejectedLinkedServiceObservation] @go(RejectedLinkedService,[]RejectedLinkedServiceObservation)

	// A schema_linked_service block as defined below.
	schemaLinkedService?: [...#SchemaLinkedServiceObservation] @go(SchemaLinkedService,[]SchemaLinkedServiceObservation)
}

#SinkParameters: {
	// A dataset block as defined below.
	// +kubebuilder:validation:Optional
	dataset?: [...#DataSetParameters] @go(DataSet,[]DataSetParameters)

	// The description for the Data Flow Source.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	// +kubebuilder:validation:Optional
	flowlet?: [...#FlowletParameters] @go(Flowlet,[]FlowletParameters)

	// A linked_service block as defined below.
	// +kubebuilder:validation:Optional
	linkedService?: [...#SinkLinkedServiceParameters] @go(LinkedService,[]SinkLinkedServiceParameters)

	// The name for the Data Flow Source.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A rejected_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	rejectedLinkedService?: [...#RejectedLinkedServiceParameters] @go(RejectedLinkedService,[]RejectedLinkedServiceParameters)

	// A schema_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	schemaLinkedService?: [...#SchemaLinkedServiceParameters] @go(SchemaLinkedService,[]SchemaLinkedServiceParameters)
}

#SourceDataSetInitParameters: {
	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceDataSetObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceDataSetParameters: {
	// The name for the Data Flow transformation.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.DataSetJSON
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceFlowletInitParameters: {
	// Specifies the reference data flow parameters from dataset.
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceFlowletObservation: {
	// Specifies the reference data flow parameters from dataset.
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceFlowletParameters: {
	// Specifies the reference data flow parameters from dataset.
	// +kubebuilder:validation:Optional
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceInitParameters: {
	// A dataset block as defined below.
	dataset?: [...#SourceDataSetInitParameters] @go(DataSet,[]SourceDataSetInitParameters)

	// The description for the Data Flow Source.
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	flowlet?: [...#SourceFlowletInitParameters] @go(Flowlet,[]SourceFlowletInitParameters)

	// A linked_service block as defined below.
	linkedService?: [...#SourceLinkedServiceInitParameters] @go(LinkedService,[]SourceLinkedServiceInitParameters)

	// The name for the Data Flow Source.
	name?: null | string @go(Name,*string)

	// A rejected_linked_service block as defined below.
	rejectedLinkedService?: [...#SourceRejectedLinkedServiceInitParameters] @go(RejectedLinkedService,[]SourceRejectedLinkedServiceInitParameters)

	// A schema_linked_service block as defined below.
	schemaLinkedService?: [...#SourceSchemaLinkedServiceInitParameters] @go(SchemaLinkedService,[]SourceSchemaLinkedServiceInitParameters)
}

#SourceLinkedServiceInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceLinkedServiceObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceLinkedServiceParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceObservation: {
	// A dataset block as defined below.
	dataset?: [...#SourceDataSetObservation] @go(DataSet,[]SourceDataSetObservation)

	// The description for the Data Flow Source.
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	flowlet?: [...#SourceFlowletObservation] @go(Flowlet,[]SourceFlowletObservation)

	// A linked_service block as defined below.
	linkedService?: [...#SourceLinkedServiceObservation] @go(LinkedService,[]SourceLinkedServiceObservation)

	// The name for the Data Flow Source.
	name?: null | string @go(Name,*string)

	// A rejected_linked_service block as defined below.
	rejectedLinkedService?: [...#SourceRejectedLinkedServiceObservation] @go(RejectedLinkedService,[]SourceRejectedLinkedServiceObservation)

	// A schema_linked_service block as defined below.
	schemaLinkedService?: [...#SourceSchemaLinkedServiceObservation] @go(SchemaLinkedService,[]SourceSchemaLinkedServiceObservation)
}

#SourceParameters: {
	// A dataset block as defined below.
	// +kubebuilder:validation:Optional
	dataset?: [...#SourceDataSetParameters] @go(DataSet,[]SourceDataSetParameters)

	// The description for the Data Flow Source.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	// +kubebuilder:validation:Optional
	flowlet?: [...#SourceFlowletParameters] @go(Flowlet,[]SourceFlowletParameters)

	// A linked_service block as defined below.
	// +kubebuilder:validation:Optional
	linkedService?: [...#SourceLinkedServiceParameters] @go(LinkedService,[]SourceLinkedServiceParameters)

	// The name for the Data Flow Source.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A rejected_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	rejectedLinkedService?: [...#SourceRejectedLinkedServiceParameters] @go(RejectedLinkedService,[]SourceRejectedLinkedServiceParameters)

	// A schema_linked_service block as defined below.
	// +kubebuilder:validation:Optional
	schemaLinkedService?: [...#SourceSchemaLinkedServiceParameters] @go(SchemaLinkedService,[]SourceSchemaLinkedServiceParameters)
}

#SourceRejectedLinkedServiceInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceRejectedLinkedServiceObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceRejectedLinkedServiceParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceSchemaLinkedServiceInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceSchemaLinkedServiceObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#SourceSchemaLinkedServiceParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationDataSetInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationDataSetObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationDataSetParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationFlowletInitParameters: {
	// Specifies the reference data flow parameters from dataset.
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationFlowletObservation: {
	// Specifies the reference data flow parameters from dataset.
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationFlowletParameters: {
	// Specifies the reference data flow parameters from dataset.
	// +kubebuilder:validation:Optional
	datasetParameters?: null | string @go(DataSetParameters,*string)

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationInitParameters: {
	// A dataset block as defined below.
	dataset?: [...#TransformationDataSetInitParameters] @go(DataSet,[]TransformationDataSetInitParameters)

	// The description for the Data Flow transformation.
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	flowlet?: [...#TransformationFlowletInitParameters] @go(Flowlet,[]TransformationFlowletInitParameters)

	// A linked_service block as defined below.
	linkedService?: [...#TransformationLinkedServiceInitParameters] @go(LinkedService,[]TransformationLinkedServiceInitParameters)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)
}

#TransformationLinkedServiceInitParameters: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationLinkedServiceObservation: {
	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationLinkedServiceParameters: {
	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TransformationObservation: {
	// A dataset block as defined below.
	dataset?: [...#TransformationDataSetObservation] @go(DataSet,[]TransformationDataSetObservation)

	// The description for the Data Flow transformation.
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	flowlet?: [...#TransformationFlowletObservation] @go(Flowlet,[]TransformationFlowletObservation)

	// A linked_service block as defined below.
	linkedService?: [...#TransformationLinkedServiceObservation] @go(LinkedService,[]TransformationLinkedServiceObservation)

	// The name for the Data Flow transformation.
	name?: null | string @go(Name,*string)
}

#TransformationParameters: {
	// A dataset block as defined below.
	// +kubebuilder:validation:Optional
	dataset?: [...#TransformationDataSetParameters] @go(DataSet,[]TransformationDataSetParameters)

	// The description for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A flowlet block as defined below.
	// +kubebuilder:validation:Optional
	flowlet?: [...#TransformationFlowletParameters] @go(Flowlet,[]TransformationFlowletParameters)

	// A linked_service block as defined below.
	// +kubebuilder:validation:Optional
	linkedService?: [...#TransformationLinkedServiceParameters] @go(LinkedService,[]TransformationLinkedServiceParameters)

	// The name for the Data Flow transformation.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)
}

// DataFlowSpec defines the desired state of DataFlow
#DataFlowSpec: {
	forProvider: #DataFlowParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #DataFlowInitParameters @go(InitProvider)
}

// DataFlowStatus defines the observed state of DataFlow.
#DataFlowStatus: {
	atProvider?: #DataFlowObservation @go(AtProvider)
}

// DataFlow is the Schema for the DataFlows API. Manages a Data Flow inside an Azure Data Factory.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#DataFlow: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sink) || has(self.initProvider.sink)",message="sink is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.source) || has(self.initProvider.source)",message="source is a required parameter"
	spec:    #DataFlowSpec   @go(Spec)
	status?: #DataFlowStatus @go(Status)
}

// DataFlowList contains a list of DataFlows
#DataFlowList: {
	items: [...#DataFlow] @go(Items,[]DataFlow)
}
