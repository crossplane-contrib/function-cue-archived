// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#LinkedServiceKustoInitParameters: {
	// A map of additional properties to associate with the Data Factory Linked Service.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The description for the Data Factory Linked Service.
	description?: null | string @go(Description,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service.
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The service principal id in which to authenticate against the Kusto Database.
	servicePrincipalId?: null | string @go(ServicePrincipalID,*string)

	// The service principal tenant id or name in which to authenticate against the Kusto Database.
	tenant?: null | string @go(Tenant,*string)

	// Whether to use the Data Factory's managed identity to authenticate against the Kusto Database.
	useManagedIdentity?: null | bool @go(UseManagedIdentity,*bool)
}

#LinkedServiceKustoObservation: {
	// A map of additional properties to associate with the Data Factory Linked Service.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service.
	description?: null | string @go(Description,*string)

	// The ID of the Data Factory Linked Service.
	id?: null | string @go(ID,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service.
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// The Kusto Database Name.
	kustoDatabaseName?: null | string @go(KustoDatabaseName,*string)

	// The URI of the Kusto Cluster endpoint.
	kustoEndpoint?: null | string @go(KustoEndpoint,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The service principal id in which to authenticate against the Kusto Database.
	servicePrincipalId?: null | string @go(ServicePrincipalID,*string)

	// The service principal tenant id or name in which to authenticate against the Kusto Database.
	tenant?: null | string @go(Tenant,*string)

	// Whether to use the Data Factory's managed identity to authenticate against the Kusto Database.
	useManagedIdentity?: null | bool @go(UseManagedIdentity,*bool)
}

#LinkedServiceKustoParameters: {
	// A map of additional properties to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The integration runtime reference to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	integrationRuntimeName?: null | string @go(IntegrationRuntimeName,*string)

	// The Kusto Database Name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/kusto/v1beta1.Database
	// +kubebuilder:validation:Optional
	kustoDatabaseName?: null | string @go(KustoDatabaseName,*string)

	// The URI of the Kusto Cluster endpoint.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/kusto/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("uri",true)
	// +kubebuilder:validation:Optional
	kustoEndpoint?: null | string @go(KustoEndpoint,*string)

	// A map of parameters to associate with the Data Factory Linked Service.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// The service principal id in which to authenticate against the Kusto Database.
	// +kubebuilder:validation:Optional
	servicePrincipalId?: null | string @go(ServicePrincipalID,*string)

	// The service principal tenant id or name in which to authenticate against the Kusto Database.
	// +kubebuilder:validation:Optional
	tenant?: null | string @go(Tenant,*string)

	// Whether to use the Data Factory's managed identity to authenticate against the Kusto Database.
	// +kubebuilder:validation:Optional
	useManagedIdentity?: null | bool @go(UseManagedIdentity,*bool)
}

// LinkedServiceKustoSpec defines the desired state of LinkedServiceKusto
#LinkedServiceKustoSpec: {
	forProvider: #LinkedServiceKustoParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #LinkedServiceKustoInitParameters @go(InitProvider)
}

// LinkedServiceKustoStatus defines the observed state of LinkedServiceKusto.
#LinkedServiceKustoStatus: {
	atProvider?: #LinkedServiceKustoObservation @go(AtProvider)
}

// LinkedServiceKusto is the Schema for the LinkedServiceKustos API. Manages a Linked Service (connection) between a Kusto Cluster and Azure Data Factory.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure},path=linkedservicekustoes
#LinkedServiceKusto: {
	spec:    #LinkedServiceKustoSpec   @go(Spec)
	status?: #LinkedServiceKustoStatus @go(Status)
}

// LinkedServiceKustoList contains a list of LinkedServiceKustos
#LinkedServiceKustoList: {
	items: [...#LinkedServiceKusto] @go(Items,[]LinkedServiceKusto)
}
