// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/datafactory/v1beta1

package v1beta1

#TriggerCustomEventObservation: {
	// Specifies if the Data Factory Custom Event Trigger is activated. Defaults to true.
	activated?: null | bool @go(Activated,*bool)

	// A map of additional properties to associate with the Data Factory Custom Event Trigger.
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Custom Event Trigger.
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Custom Event Trigger.
	description?: null | string @go(Description,*string)

	// The ID of Event Grid Topic in which event will be listened. Changing this forces a new resource.
	eventgridTopicId?: null | string @go(EventGridTopicID,*string)

	// List of events that will fire this trigger. At least one event must be specified.
	events?: [...null | string] @go(Events,[]*string)

	// The ID of the Data Factory Custom Event Trigger.
	id?: null | string @go(ID,*string)

	// One or more pipeline blocks as defined below.
	pipeline?: [...#TriggerCustomEventPipelineObservation] @go(Pipeline,[]TriggerCustomEventPipelineObservation)

	// The pattern that event subject starts with for trigger to fire.
	subjectBeginsWith?: null | string @go(SubjectBeginsWith,*string)

	// The pattern that event subject ends with for trigger to fire.
	subjectEndsWith?: null | string @go(SubjectEndsWith,*string)
}

#TriggerCustomEventParameters: {
	// Specifies if the Data Factory Custom Event Trigger is activated. Defaults to true.
	// +kubebuilder:validation:Optional
	activated?: null | bool @go(Activated,*bool)

	// A map of additional properties to associate with the Data Factory Custom Event Trigger.
	// +kubebuilder:validation:Optional
	additionalProperties?: {[string]: null | string} @go(AdditionalProperties,map[string]*string)

	// List of tags that can be used for describing the Data Factory Custom Event Trigger.
	// +kubebuilder:validation:Optional
	annotations?: [...null | string] @go(Annotations,[]*string)

	// The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Factory
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataFactoryId?: null | string @go(DataFactoryID,*string)

	// The description for the Data Factory Custom Event Trigger.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The ID of Event Grid Topic in which event will be listened. Changing this forces a new resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/eventgrid/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	eventgridTopicId?: null | string @go(EventGridTopicID,*string)

	// List of events that will fire this trigger. At least one event must be specified.
	// +kubebuilder:validation:Optional
	events?: [...null | string] @go(Events,[]*string)

	// One or more pipeline blocks as defined below.
	// +kubebuilder:validation:Optional
	pipeline?: [...#TriggerCustomEventPipelineParameters] @go(Pipeline,[]TriggerCustomEventPipelineParameters)

	// The pattern that event subject starts with for trigger to fire.
	// +kubebuilder:validation:Optional
	subjectBeginsWith?: null | string @go(SubjectBeginsWith,*string)

	// The pattern that event subject ends with for trigger to fire.
	// +kubebuilder:validation:Optional
	subjectEndsWith?: null | string @go(SubjectEndsWith,*string)
}

#TriggerCustomEventPipelineObservation: {
	// The Data Factory Pipeline name that the trigger will act on.
	name?: null | string @go(Name,*string)

	// The Data Factory Pipeline parameters that the trigger will act on.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

#TriggerCustomEventPipelineParameters: {
	// The Data Factory Pipeline name that the trigger will act on.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/datafactory/v1beta1.Pipeline
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Data Factory Pipeline parameters that the trigger will act on.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)
}

// TriggerCustomEventSpec defines the desired state of TriggerCustomEvent
#TriggerCustomEventSpec: {
	forProvider: #TriggerCustomEventParameters @go(ForProvider)
}

// TriggerCustomEventStatus defines the observed state of TriggerCustomEvent.
#TriggerCustomEventStatus: {
	atProvider?: #TriggerCustomEventObservation @go(AtProvider)
}

// TriggerCustomEvent is the Schema for the TriggerCustomEvents API. Manages a Custom Event Trigger inside an Azure Data Factory.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#TriggerCustomEvent: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.events)",message="events is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.pipeline)",message="pipeline is a required parameter"
	spec:    #TriggerCustomEventSpec   @go(Spec)
	status?: #TriggerCustomEventStatus @go(Status)
}

// TriggerCustomEventList contains a list of TriggerCustomEvents
#TriggerCustomEventList: {
	items: [...#TriggerCustomEvent] @go(Items,[]TriggerCustomEvent)
}
