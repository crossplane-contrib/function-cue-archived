// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#NamedValueObservation: {
	// The name of the API Management Service in which the API Management Named Value should exist. Changing this forces a new resource to be created.
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The display name of this API Management Named Value.
	displayName?: null | string @go(DisplayName,*string)

	// The ID of the API Management Named Value.
	id?: null | string @go(ID,*string)

	// The name of the Resource Group in which the API Management Named Value should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies whether the API Management Named Value is secret. Valid values are true or false. The default value is false.
	secret?: null | bool @go(Secret,*bool)

	// A list of tags to be applied to the API Management Named Value.
	tags?: [...null | string] @go(Tags,[]*string)

	// A value_from_key_vault block as defined below.
	valueFromKeyVault?: [...#ValueFromKeyVaultObservation] @go(ValueFromKeyVault,[]ValueFromKeyVaultObservation)
}

#NamedValueParameters: {
	// The name of the API Management Service in which the API Management Named Value should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/apimanagement/v1beta1.Management
	// +kubebuilder:validation:Optional
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The display name of this API Management Named Value.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The name of the Resource Group in which the API Management Named Value should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies whether the API Management Named Value is secret. Valid values are true or false. The default value is false.
	// +kubebuilder:validation:Optional
	secret?: null | bool @go(Secret,*bool)

	// A list of tags to be applied to the API Management Named Value.
	// +kubebuilder:validation:Optional
	tags?: [...null | string] @go(Tags,[]*string)

	// A value_from_key_vault block as defined below.
	// +kubebuilder:validation:Optional
	valueFromKeyVault?: [...#ValueFromKeyVaultParameters] @go(ValueFromKeyVault,[]ValueFromKeyVaultParameters)
}

#ValueFromKeyVaultObservation: {
	// The client ID of User Assigned Identity, for the API Management Service, which will be used to access the key vault secret. The System Assigned Identity will be used in absence.
	identityClientId?: null | string @go(IdentityClientID,*string)

	// The resource ID of the Key Vault Secret.
	secretId?: null | string @go(SecretID,*string)
}

#ValueFromKeyVaultParameters: {
	// The client ID of User Assigned Identity, for the API Management Service, which will be used to access the key vault secret. The System Assigned Identity will be used in absence.
	// +kubebuilder:validation:Optional
	identityClientId?: null | string @go(IdentityClientID,*string)

	// The resource ID of the Key Vault Secret.
	// +kubebuilder:validation:Required
	secretId?: null | string @go(SecretID,*string)
}

// NamedValueSpec defines the desired state of NamedValue
#NamedValueSpec: {
	forProvider: #NamedValueParameters @go(ForProvider)
}

// NamedValueStatus defines the observed state of NamedValue.
#NamedValueStatus: {
	atProvider?: #NamedValueObservation @go(AtProvider)
}

// NamedValue is the Schema for the NamedValues API. Manages an API Management Named Value.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#NamedValue: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.displayName)",message="displayName is a required parameter"
	spec:    #NamedValueSpec   @go(Spec)
	status?: #NamedValueStatus @go(Status)
}

// NamedValueList contains a list of NamedValues
#NamedValueList: {
	items: [...#NamedValue] @go(Items,[]NamedValue)
}
