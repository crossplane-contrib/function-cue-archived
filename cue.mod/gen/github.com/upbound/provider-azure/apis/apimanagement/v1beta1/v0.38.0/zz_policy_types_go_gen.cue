// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#PolicyInitParameters_2: {
	// The XML Content for this Policy as a string.
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to a Policy XML Document, which must be publicly available.
	xmlLink?: null | string @go(XMLLink,*string)
}

#PolicyObservation_2: {
	// The ID of the API Management service. Changing this forces a new API Management service Policy to be created.
	apiManagementId?: null | string @go(APIManagementID,*string)

	// The ID of the API Management service Policy.
	id?: null | string @go(ID,*string)

	// The XML Content for this Policy as a string.
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to a Policy XML Document, which must be publicly available.
	xmlLink?: null | string @go(XMLLink,*string)
}

#PolicyParameters_2: {
	// The ID of the API Management service. Changing this forces a new API Management service Policy to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/apimanagement/v1beta1.Management
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	apiManagementId?: null | string @go(APIManagementID,*string)

	// The XML Content for this Policy as a string.
	// +kubebuilder:validation:Optional
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to a Policy XML Document, which must be publicly available.
	// +kubebuilder:validation:Optional
	xmlLink?: null | string @go(XMLLink,*string)
}

// PolicySpec defines the desired state of Policy
#PolicySpec: {
	forProvider: #PolicyParameters_2 @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #PolicyInitParameters_2 @go(InitProvider)
}

// PolicyStatus defines the observed state of Policy.
#PolicyStatus: {
	atProvider?: #PolicyObservation_2 @go(AtProvider)
}

// Policy is the Schema for the Policys API. Manages a API Management service Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Policy: {
	spec:    #PolicySpec   @go(Spec)
	status?: #PolicyStatus @go(Status)
}

// PolicyList contains a list of Policys
#PolicyList: {
	items: [...#Policy] @go(Items,[]Policy)
}
