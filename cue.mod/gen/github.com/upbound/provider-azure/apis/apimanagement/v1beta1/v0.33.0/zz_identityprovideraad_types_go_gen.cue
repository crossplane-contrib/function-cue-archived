// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#IdentityProviderAADObservation: {
	// The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
	apiManagementName?: null | string @go(APIManagementName,*string)

	// List of allowed AAD Tenants.
	allowedTenants?: [...null | string] @go(AllowedTenants,[]*string)

	// Client Id of the Application in the AAD Identity Provider.
	clientId?: null | string @go(ClientID,*string)

	// The ID of the API Management AAD Identity Provider.
	id?: null | string @go(ID,*string)

	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The AAD Tenant to use instead of Common when logging into Active Directory
	signinTenant?: null | string @go(SigninTenant,*string)
}

#IdentityProviderAADParameters: {
	// The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/apimanagement/v1beta1.Management
	// +kubebuilder:validation:Optional
	apiManagementName?: null | string @go(APIManagementName,*string)

	// List of allowed AAD Tenants.
	// +kubebuilder:validation:Optional
	allowedTenants?: [...null | string] @go(AllowedTenants,[]*string)

	// Client Id of the Application in the AAD Identity Provider.
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The AAD Tenant to use instead of Common when logging into Active Directory
	// +kubebuilder:validation:Optional
	signinTenant?: null | string @go(SigninTenant,*string)
}

// IdentityProviderAADSpec defines the desired state of IdentityProviderAAD
#IdentityProviderAADSpec: {
	forProvider: #IdentityProviderAADParameters @go(ForProvider)
}

// IdentityProviderAADStatus defines the observed state of IdentityProviderAAD.
#IdentityProviderAADStatus: {
	atProvider?: #IdentityProviderAADObservation @go(AtProvider)
}

// IdentityProviderAAD is the Schema for the IdentityProviderAADs API. Manages an API Management AAD Identity Provider.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IdentityProviderAAD: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.allowedTenants)",message="allowedTenants is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.clientId)",message="clientId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.clientSecretSecretRef)",message="clientSecretSecretRef is a required parameter"
	spec:    #IdentityProviderAADSpec   @go(Spec)
	status?: #IdentityProviderAADStatus @go(Status)
}

// IdentityProviderAADList contains a list of IdentityProviderAADs
#IdentityProviderAADList: {
	items: [...#IdentityProviderAAD] @go(Items,[]IdentityProviderAAD)
}
