// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#AdditionalLocationInitParameters: {
	// The number of compute units in this region. Defaults to the capacity of the main region.
	capacity?: null | float64 @go(Capacity,*float64)

	// Only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	gatewayDisabled?: null | bool @go(GatewayDisabled,*bool)

	// The name of the Azure Region in which the API Management Service should be expanded to.
	location?: null | string @go(Location,*string)

	// ID of a standard SKU IPv4 Public IP.
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// A virtual_network_configuration block as defined below. Required when virtual_network_type is External or Internal.
	virtualNetworkConfiguration?: [...#VirtualNetworkConfigurationInitParameters] @go(VirtualNetworkConfiguration,[]VirtualNetworkConfigurationInitParameters)

	// A list of availability zones. Changing this forces a new resource to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#AdditionalLocationObservation: {
	// The number of compute units in this region. Defaults to the capacity of the main region.
	capacity?: null | float64 @go(Capacity,*float64)

	// Only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	gatewayDisabled?: null | bool @go(GatewayDisabled,*bool)

	// The URL of the Regional Gateway for the API Management Service in the specified region.
	gatewayRegionalUrl?: null | string @go(GatewayRegionalURL,*string)

	// The name of the Azure Region in which the API Management Service should be expanded to.
	location?: null | string @go(Location,*string)

	// The Private IP addresses of the API Management Service. Available only when the API Manager instance is using Virtual Network mode.
	privateIpAddresses?: [...null | string] @go(PrivateIPAddresses,[]*string)

	// ID of a standard SKU IPv4 Public IP.
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	publicIpAddresses?: [...null | string] @go(PublicIPAddresses,[]*string)

	// A virtual_network_configuration block as defined below. Required when virtual_network_type is External or Internal.
	virtualNetworkConfiguration?: [...#VirtualNetworkConfigurationObservation] @go(VirtualNetworkConfiguration,[]VirtualNetworkConfigurationObservation)

	// A list of availability zones. Changing this forces a new resource to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#AdditionalLocationParameters: {
	// The number of compute units in this region. Defaults to the capacity of the main region.
	// +kubebuilder:validation:Optional
	capacity?: null | float64 @go(Capacity,*float64)

	// Only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	// +kubebuilder:validation:Optional
	gatewayDisabled?: null | bool @go(GatewayDisabled,*bool)

	// The name of the Azure Region in which the API Management Service should be expanded to.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// ID of a standard SKU IPv4 Public IP.
	// +kubebuilder:validation:Optional
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// A virtual_network_configuration block as defined below. Required when virtual_network_type is External or Internal.
	// +kubebuilder:validation:Optional
	virtualNetworkConfiguration?: [...#VirtualNetworkConfigurationParameters] @go(VirtualNetworkConfiguration,[]VirtualNetworkConfigurationParameters)

	// A list of availability zones. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	zones?: [...null | string] @go(Zones,[]*string)
}

#CertificateInitParameters: {
	// The name of the Certificate Store where this certificate should be stored. Possible values are CertificateAuthority and Root.
	storeName?: null | string @go(StoreName,*string)
}

#CertificateObservation: {
	// The expiration date of the certificate in RFC3339 format: 2000-01-02T03:04:05Z.
	expiry?: null | string @go(Expiry,*string)

	// The name of the Certificate Store where this certificate should be stored. Possible values are CertificateAuthority and Root.
	storeName?: null | string @go(StoreName,*string)

	// The subject of the certificate.
	subject?: null | string @go(Subject,*string)

	// The thumbprint of the certificate.
	thumbprint?: null | string @go(Thumbprint,*string)
}

#CertificateParameters: {
	// The name of the Certificate Store where this certificate should be stored. Possible values are CertificateAuthority and Root.
	// +kubebuilder:validation:Optional
	storeName?: null | string @go(StoreName,*string)
}

#DelegationInitParameters: {
	// Should subscription requests be delegated to an external url? Defaults to false.
	subscriptionsEnabled?: null | bool @go(SubscriptionsEnabled,*bool)

	// The delegation URL.
	url?: null | string @go(URL,*string)

	// Should user registration requests be delegated to an external url? Defaults to false.
	userRegistrationEnabled?: null | bool @go(UserRegistrationEnabled,*bool)
}

#DelegationObservation: {
	// Should subscription requests be delegated to an external url? Defaults to false.
	subscriptionsEnabled?: null | bool @go(SubscriptionsEnabled,*bool)

	// The delegation URL.
	url?: null | string @go(URL,*string)

	// Should user registration requests be delegated to an external url? Defaults to false.
	userRegistrationEnabled?: null | bool @go(UserRegistrationEnabled,*bool)
}

#DelegationParameters: {
	// Should subscription requests be delegated to an external url? Defaults to false.
	// +kubebuilder:validation:Optional
	subscriptionsEnabled?: null | bool @go(SubscriptionsEnabled,*bool)

	// The delegation URL.
	// +kubebuilder:validation:Optional
	url?: null | string @go(URL,*string)

	// Should user registration requests be delegated to an external url? Defaults to false.
	// +kubebuilder:validation:Optional
	userRegistrationEnabled?: null | bool @go(UserRegistrationEnabled,*bool)
}

#DeveloperPortalInitParameters: {
}

#DeveloperPortalObservation: {
	// The source of the certificate.
	certificateSource?: null | string @go(CertificateSource,*string)

	// The status of the certificate.
	certificateStatus?: null | string @go(CertificateStatus,*string)

	// The expiration date of the certificate in RFC3339 format: 2000-01-02T03:04:05Z.
	expiry?: null | string @go(Expiry,*string)

	// The Hostname to use for the Management API.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	keyVaultId?: null | string @go(KeyVaultID,*string)

	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to false.
	negotiateClientCertificate?: null | bool @go(NegotiateClientCertificate,*bool)

	// System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate.
	sslKeyvaultIdentityClientId?: null | string @go(SSLKeyvaultIdentityClientID,*string)

	// The subject of the certificate.
	subject?: null | string @go(Subject,*string)

	// The thumbprint of the certificate.
	thumbprint?: null | string @go(Thumbprint,*string)
}

#DeveloperPortalParameters: {
}

#HostNameConfigurationInitParameters: {
}

#HostNameConfigurationManagementInitParameters: {
}

#HostNameConfigurationManagementObservation: {
	// The source of the certificate.
	certificateSource?: null | string @go(CertificateSource,*string)

	// The status of the certificate.
	certificateStatus?: null | string @go(CertificateStatus,*string)

	// The expiration date of the certificate in RFC3339 format: 2000-01-02T03:04:05Z.
	expiry?: null | string @go(Expiry,*string)

	// The Hostname to use for the Management API.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	keyVaultId?: null | string @go(KeyVaultID,*string)

	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to false.
	negotiateClientCertificate?: null | bool @go(NegotiateClientCertificate,*bool)

	// System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate.
	sslKeyvaultIdentityClientId?: null | string @go(SSLKeyvaultIdentityClientID,*string)

	// The subject of the certificate.
	subject?: null | string @go(Subject,*string)

	// The thumbprint of the certificate.
	thumbprint?: null | string @go(Thumbprint,*string)
}

#HostNameConfigurationManagementParameters: {
}

#HostNameConfigurationObservation: {
	// One or more developer_portal blocks as documented below.
	developerPortal?: [...#DeveloperPortalObservation] @go(DeveloperPortal,[]DeveloperPortalObservation)

	// One or more management blocks as documented below.
	management?: [...#HostNameConfigurationManagementObservation] @go(Management,[]HostNameConfigurationManagementObservation)

	// One or more portal blocks as documented below.
	portal?: [...#PortalObservation] @go(Portal,[]PortalObservation)

	// One or more proxy blocks as documented below.
	proxy?: [...#ProxyObservation] @go(Proxy,[]ProxyObservation)

	// One or more scm blocks as documented below.
	scm?: [...#ScmObservation] @go(Scm,[]ScmObservation)
}

#HostNameConfigurationParameters: {
}

#IdentityInitParameters: {
	// A list of User Assigned Managed Identity IDs to be assigned to this API Management Service.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	type?: null | string @go(Type,*string)
}

#IdentityObservation: {
	// A list of User Assigned Managed Identity IDs to be assigned to this API Management Service.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID associated with this Managed Service Identity.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID associated with this Managed Service Identity.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	type?: null | string @go(Type,*string)
}

#IdentityParameters: {
	// A list of User Assigned Managed Identity IDs to be assigned to this API Management Service.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#ManagementInitParameters: {
	// One or more additional_location blocks as defined below.
	additionalLocation?: [...#AdditionalLocationInitParameters] @go(AdditionalLocation,[]AdditionalLocationInitParameters)

	// One or more (up to 10) certificate blocks as defined below.
	certificate?: [...#CertificateInitParameters] @go(Certificate,[]CertificateInitParameters)

	// Enforce a client certificate to be presented on each request to the gateway? This is only supported when SKU type is Consumption.
	clientCertificateEnabled?: null | bool @go(ClientCertificateEnabled,*bool)

	// A delegation block as defined below.
	delegation?: [...#DelegationInitParameters] @go(Delegation,[]DelegationInitParameters)

	// Disable the gateway in main region? This is only supported when additional_location is set.
	gatewayDisabled?: null | bool @go(GatewayDisabled,*bool)

	// An identity block as defined below.
	identity?: [...#IdentityInitParameters] @go(Identity,[]IdentityInitParameters)

	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The version which the control plane API calls to API Management service are limited with version equal to or newer than.
	minApiVersion?: null | string @go(MinAPIVersion,*string)

	// Email address from which the notification will be sent.
	notificationSenderEmail?: null | string @go(NotificationSenderEmail,*string)

	// A policy block as defined below.
	policy?: [...#PolicyInitParameters] @go(Policy,[]PolicyInitParameters)

	// A protocols block as defined below.
	protocols?: [...#ProtocolsInitParameters] @go(Protocols,[]ProtocolsInitParameters)

	// ID of a standard SKU IPv4 Public IP.
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// Is public access to the service allowed?. Defaults to true
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The email of publisher/company.
	publisherEmail?: null | string @go(PublisherEmail,*string)

	// The name of publisher/company.
	publisherName?: null | string @go(PublisherName,*string)

	// A security block as defined below.
	security?: [...#SecurityInitParameters] @go(Security,[]SecurityInitParameters)

	// A sign_in block as defined below.
	signIn?: [...#SignInInitParameters] @go(SignIn,[]SignInInitParameters)

	// A sign_up block as defined below.
	signUp?: [...#SignUpInitParameters] @go(SignUp,[]SignUpInitParameters)

	// sku_name is a string consisting of two parts separated by an underscore(_). The first part is the name, valid values include: Consumption, Developer, Basic, Standard and Premium. The second part is the capacity (e.g. the number of deployed units of the sku), which must be a positive integer (e.g. Developer_1).
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags assigned to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A tenant_access block as defined below.
	tenantAccess?: [...#TenantAccessInitParameters] @go(TenantAccess,[]TenantAccessInitParameters)

	// A virtual_network_configuration block as defined below. Required when virtual_network_type is External or Internal.
	virtualNetworkConfiguration?: [...#ManagementVirtualNetworkConfigurationInitParameters] @go(VirtualNetworkConfiguration,[]ManagementVirtualNetworkConfigurationInitParameters)

	// The type of virtual network you want to use, valid values include: None, External, Internal.
	virtualNetworkType?: null | string @go(VirtualNetworkType,*string)

	// Specifies a list of Availability Zones in which this API Management service should be located. Changing this forces a new API Management service to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#ManagementObservation: {
	// One or more additional_location blocks as defined below.
	additionalLocation?: [...#AdditionalLocationObservation] @go(AdditionalLocation,[]AdditionalLocationObservation)

	// One or more (up to 10) certificate blocks as defined below.
	certificate?: [...#CertificateObservation] @go(Certificate,[]CertificateObservation)

	// Enforce a client certificate to be presented on each request to the gateway? This is only supported when SKU type is Consumption.
	clientCertificateEnabled?: null | bool @go(ClientCertificateEnabled,*bool)

	// A delegation block as defined below.
	delegation?: [...#DelegationObservation] @go(Delegation,[]DelegationObservation)

	// The URL for the Developer Portal associated with this API Management service.
	developerPortalUrl?: null | string @go(DeveloperPortalURL,*string)

	// Disable the gateway in main region? This is only supported when additional_location is set.
	gatewayDisabled?: null | bool @go(GatewayDisabled,*bool)

	// The Region URL for the Gateway of the API Management Service.
	gatewayRegionalUrl?: null | string @go(GatewayRegionalURL,*string)

	// The URL of the Gateway for the API Management Service.
	gatewayUrl?: null | string @go(GatewayURL,*string)

	// A hostname_configuration block as defined below.
	hostnameConfiguration?: [...#HostNameConfigurationObservation] @go(HostNameConfiguration,[]HostNameConfigurationObservation)

	// The ID of the API Management Service.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The URL for the Management API associated with this API Management service.
	managementApiUrl?: null | string @go(ManagementAPIURL,*string)

	// The version which the control plane API calls to API Management service are limited with version equal to or newer than.
	minApiVersion?: null | string @go(MinAPIVersion,*string)

	// Email address from which the notification will be sent.
	notificationSenderEmail?: null | string @go(NotificationSenderEmail,*string)

	// A policy block as defined below.
	policy?: [...#PolicyObservation] @go(Policy,[]PolicyObservation)

	// The URL for the Publisher Portal associated with this API Management service.
	portalUrl?: null | string @go(PortalURL,*string)

	// The Private IP addresses of the API Management Service.
	privateIpAddresses?: [...null | string] @go(PrivateIPAddresses,[]*string)

	// A protocols block as defined below.
	protocols?: [...#ProtocolsObservation] @go(Protocols,[]ProtocolsObservation)

	// ID of a standard SKU IPv4 Public IP.
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// The Public IP addresses of the API Management Service.
	publicIpAddresses?: [...null | string] @go(PublicIPAddresses,[]*string)

	// Is public access to the service allowed?. Defaults to true
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The email of publisher/company.
	publisherEmail?: null | string @go(PublisherEmail,*string)

	// The name of publisher/company.
	publisherName?: null | string @go(PublisherName,*string)

	// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The URL for the SCM (Source Code Management) Endpoint associated with this API Management service.
	scmUrl?: null | string @go(ScmURL,*string)

	// A security block as defined below.
	security?: [...#SecurityObservation] @go(Security,[]SecurityObservation)

	// A sign_in block as defined below.
	signIn?: [...#SignInObservation] @go(SignIn,[]SignInObservation)

	// A sign_up block as defined below.
	signUp?: [...#SignUpObservation] @go(SignUp,[]SignUpObservation)

	// sku_name is a string consisting of two parts separated by an underscore(_). The first part is the name, valid values include: Consumption, Developer, Basic, Standard and Premium. The second part is the capacity (e.g. the number of deployed units of the sku), which must be a positive integer (e.g. Developer_1).
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags assigned to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A tenant_access block as defined below.
	tenantAccess?: [...#TenantAccessObservation] @go(TenantAccess,[]TenantAccessObservation)

	// A virtual_network_configuration block as defined below. Required when virtual_network_type is External or Internal.
	virtualNetworkConfiguration?: [...#ManagementVirtualNetworkConfigurationObservation] @go(VirtualNetworkConfiguration,[]ManagementVirtualNetworkConfigurationObservation)

	// The type of virtual network you want to use, valid values include: None, External, Internal.
	virtualNetworkType?: null | string @go(VirtualNetworkType,*string)

	// Specifies a list of Availability Zones in which this API Management service should be located. Changing this forces a new API Management service to be created.
	zones?: [...null | string] @go(Zones,[]*string)
}

#ManagementParameters: {
	// One or more additional_location blocks as defined below.
	// +kubebuilder:validation:Optional
	additionalLocation?: [...#AdditionalLocationParameters] @go(AdditionalLocation,[]AdditionalLocationParameters)

	// One or more (up to 10) certificate blocks as defined below.
	// +kubebuilder:validation:Optional
	certificate?: [...#CertificateParameters] @go(Certificate,[]CertificateParameters)

	// Enforce a client certificate to be presented on each request to the gateway? This is only supported when SKU type is Consumption.
	// +kubebuilder:validation:Optional
	clientCertificateEnabled?: null | bool @go(ClientCertificateEnabled,*bool)

	// A delegation block as defined below.
	// +kubebuilder:validation:Optional
	delegation?: [...#DelegationParameters] @go(Delegation,[]DelegationParameters)

	// Disable the gateway in main region? This is only supported when additional_location is set.
	// +kubebuilder:validation:Optional
	gatewayDisabled?: null | bool @go(GatewayDisabled,*bool)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The version which the control plane API calls to API Management service are limited with version equal to or newer than.
	// +kubebuilder:validation:Optional
	minApiVersion?: null | string @go(MinAPIVersion,*string)

	// Email address from which the notification will be sent.
	// +kubebuilder:validation:Optional
	notificationSenderEmail?: null | string @go(NotificationSenderEmail,*string)

	// A policy block as defined below.
	// +kubebuilder:validation:Optional
	policy?: [...#PolicyParameters] @go(Policy,[]PolicyParameters)

	// A protocols block as defined below.
	// +kubebuilder:validation:Optional
	protocols?: [...#ProtocolsParameters] @go(Protocols,[]ProtocolsParameters)

	// ID of a standard SKU IPv4 Public IP.
	// +kubebuilder:validation:Optional
	publicIpAddressId?: null | string @go(PublicIPAddressID,*string)

	// Is public access to the service allowed?. Defaults to true
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The email of publisher/company.
	// +kubebuilder:validation:Optional
	publisherEmail?: null | string @go(PublisherEmail,*string)

	// The name of publisher/company.
	// +kubebuilder:validation:Optional
	publisherName?: null | string @go(PublisherName,*string)

	// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A security block as defined below.
	// +kubebuilder:validation:Optional
	security?: [...#SecurityParameters] @go(Security,[]SecurityParameters)

	// A sign_in block as defined below.
	// +kubebuilder:validation:Optional
	signIn?: [...#SignInParameters] @go(SignIn,[]SignInParameters)

	// A sign_up block as defined below.
	// +kubebuilder:validation:Optional
	signUp?: [...#SignUpParameters] @go(SignUp,[]SignUpParameters)

	// sku_name is a string consisting of two parts separated by an underscore(_). The first part is the name, valid values include: Consumption, Developer, Basic, Standard and Premium. The second part is the capacity (e.g. the number of deployed units of the sku), which must be a positive integer (e.g. Developer_1).
	// +kubebuilder:validation:Optional
	skuName?: null | string @go(SkuName,*string)

	// A mapping of tags assigned to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A tenant_access block as defined below.
	// +kubebuilder:validation:Optional
	tenantAccess?: [...#TenantAccessParameters] @go(TenantAccess,[]TenantAccessParameters)

	// A virtual_network_configuration block as defined below. Required when virtual_network_type is External or Internal.
	// +kubebuilder:validation:Optional
	virtualNetworkConfiguration?: [...#ManagementVirtualNetworkConfigurationParameters] @go(VirtualNetworkConfiguration,[]ManagementVirtualNetworkConfigurationParameters)

	// The type of virtual network you want to use, valid values include: None, External, Internal.
	// +kubebuilder:validation:Optional
	virtualNetworkType?: null | string @go(VirtualNetworkType,*string)

	// Specifies a list of Availability Zones in which this API Management service should be located. Changing this forces a new API Management service to be created.
	// +kubebuilder:validation:Optional
	zones?: [...null | string] @go(Zones,[]*string)
}

#ManagementVirtualNetworkConfigurationInitParameters: {
}

#ManagementVirtualNetworkConfigurationObservation: {
	// The id of the subnet that will be used for the API Management.
	subnetId?: null | string @go(SubnetID,*string)
}

#ManagementVirtualNetworkConfigurationParameters: {
	// The id of the subnet that will be used for the API Management.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

#PolicyInitParameters: {
	// The XML Content for this Policy.
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to an API Management Policy XML Document, which must be publicly available.
	xmlLink?: null | string @go(XMLLink,*string)
}

#PolicyObservation: {
	// The XML Content for this Policy.
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to an API Management Policy XML Document, which must be publicly available.
	xmlLink?: null | string @go(XMLLink,*string)
}

#PolicyParameters: {
	// The XML Content for this Policy.
	// +kubebuilder:validation:Optional
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to an API Management Policy XML Document, which must be publicly available.
	// +kubebuilder:validation:Optional
	xmlLink?: null | string @go(XMLLink,*string)
}

#PortalInitParameters: {
}

#PortalObservation: {
	// The source of the certificate.
	certificateSource?: null | string @go(CertificateSource,*string)

	// The status of the certificate.
	certificateStatus?: null | string @go(CertificateStatus,*string)

	// The expiration date of the certificate in RFC3339 format: 2000-01-02T03:04:05Z.
	expiry?: null | string @go(Expiry,*string)

	// The Hostname to use for the Management API.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	keyVaultId?: null | string @go(KeyVaultID,*string)

	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to false.
	negotiateClientCertificate?: null | bool @go(NegotiateClientCertificate,*bool)

	// System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate.
	sslKeyvaultIdentityClientId?: null | string @go(SSLKeyvaultIdentityClientID,*string)

	// The subject of the certificate.
	subject?: null | string @go(Subject,*string)

	// The thumbprint of the certificate.
	thumbprint?: null | string @go(Thumbprint,*string)
}

#PortalParameters: {
}

#ProtocolsInitParameters: {
	// Should HTTP/2 be supported by the API Management Service? Defaults to false.
	enableHttp2?: null | bool @go(EnableHttp2,*bool)
}

#ProtocolsObservation: {
	// Should HTTP/2 be supported by the API Management Service? Defaults to false.
	enableHttp2?: null | bool @go(EnableHttp2,*bool)
}

#ProtocolsParameters: {
	// Should HTTP/2 be supported by the API Management Service? Defaults to false.
	// +kubebuilder:validation:Optional
	enableHttp2?: null | bool @go(EnableHttp2,*bool)
}

#ProxyInitParameters: {
}

#ProxyObservation: {
	// The source of the certificate.
	certificateSource?: null | string @go(CertificateSource,*string)

	// The status of the certificate.
	certificateStatus?: null | string @go(CertificateStatus,*string)

	// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to false.
	defaultSslBinding?: null | bool @go(DefaultSSLBinding,*bool)

	// The expiration date of the certificate in RFC3339 format: 2000-01-02T03:04:05Z.
	expiry?: null | string @go(Expiry,*string)

	// The Hostname to use for the Management API.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	keyVaultId?: null | string @go(KeyVaultID,*string)

	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to false.
	negotiateClientCertificate?: null | bool @go(NegotiateClientCertificate,*bool)

	// System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate.
	sslKeyvaultIdentityClientId?: null | string @go(SSLKeyvaultIdentityClientID,*string)

	// The subject of the certificate.
	subject?: null | string @go(Subject,*string)

	// The thumbprint of the certificate.
	thumbprint?: null | string @go(Thumbprint,*string)
}

#ProxyParameters: {
}

#ScmInitParameters: {
}

#ScmObservation: {
	// The source of the certificate.
	certificateSource?: null | string @go(CertificateSource,*string)

	// The status of the certificate.
	certificateStatus?: null | string @go(CertificateStatus,*string)

	// The expiration date of the certificate in RFC3339 format: 2000-01-02T03:04:05Z.
	expiry?: null | string @go(Expiry,*string)

	// The Hostname to use for the Management API.
	hostName?: null | string @go(HostName,*string)

	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	keyVaultId?: null | string @go(KeyVaultID,*string)

	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to false.
	negotiateClientCertificate?: null | bool @go(NegotiateClientCertificate,*bool)

	// System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate.
	sslKeyvaultIdentityClientId?: null | string @go(SSLKeyvaultIdentityClientID,*string)

	// The subject of the certificate.
	subject?: null | string @go(Subject,*string)

	// The thumbprint of the certificate.
	thumbprint?: null | string @go(Thumbprint,*string)
}

#ScmParameters: {
}

#SecurityInitParameters: {
	// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to false.
	enableBackendSsl30?: null | bool @go(EnableBackendSsl30,*bool)

	// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to false.
	enableBackendTls10?: null | bool @go(EnableBackendTls10,*bool)

	// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to false.
	enableBackendTls11?: null | bool @go(EnableBackendTls11,*bool)

	// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to false.
	enableFrontendSsl30?: null | bool @go(EnableFrontendSsl30,*bool)

	// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to false.
	enableFrontendTls10?: null | bool @go(EnableFrontendTls10,*bool)

	// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to false.
	enableFrontendTls11?: null | bool @go(EnableFrontendTls11,*bool)

	// Should the TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSEcdheEcdsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSEcdheEcdsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheRsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSEcdheRsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheRsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSEcdheRsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_CBC_SHA256 cipher be enabled? Defaults to false.
	tlsRsaWithAes128CbcSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes128CbcSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	tlsRsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSRsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_GCM_SHA256 cipher be enabled? Defaults to false.
	tlsRsaWithAes128GcmSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes128GCMSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_CBC_SHA256 cipher be enabled? Defaults to false.
	tlsRsaWithAes256CbcSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes256CbcSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	tlsRsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSRsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_GCM_SHA384 cipher be enabled? Defaults to false.
	tlsRsaWithAes256GcmSha384CiphersEnabled?: null | bool @go(TLSRsaWithAes256GCMSha384CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_3DES_EDE_CBC_SHA cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)?
	tripleDesCiphersEnabled?: null | bool @go(TripleDesCiphersEnabled,*bool)
}

#SecurityObservation: {
	// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to false.
	enableBackendSsl30?: null | bool @go(EnableBackendSsl30,*bool)

	// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to false.
	enableBackendTls10?: null | bool @go(EnableBackendTls10,*bool)

	// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to false.
	enableBackendTls11?: null | bool @go(EnableBackendTls11,*bool)

	// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to false.
	enableFrontendSsl30?: null | bool @go(EnableFrontendSsl30,*bool)

	// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to false.
	enableFrontendTls10?: null | bool @go(EnableFrontendTls10,*bool)

	// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to false.
	enableFrontendTls11?: null | bool @go(EnableFrontendTls11,*bool)

	// Should the TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSEcdheEcdsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSEcdheEcdsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheRsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSEcdheRsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	tlsEcdheRsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSEcdheRsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_CBC_SHA256 cipher be enabled? Defaults to false.
	tlsRsaWithAes128CbcSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes128CbcSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	tlsRsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSRsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_GCM_SHA256 cipher be enabled? Defaults to false.
	tlsRsaWithAes128GcmSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes128GCMSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_CBC_SHA256 cipher be enabled? Defaults to false.
	tlsRsaWithAes256CbcSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes256CbcSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	tlsRsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSRsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_GCM_SHA384 cipher be enabled? Defaults to false.
	tlsRsaWithAes256GcmSha384CiphersEnabled?: null | bool @go(TLSRsaWithAes256GCMSha384CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_3DES_EDE_CBC_SHA cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)?
	tripleDesCiphersEnabled?: null | bool @go(TripleDesCiphersEnabled,*bool)
}

#SecurityParameters: {
	// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to false.
	// +kubebuilder:validation:Optional
	enableBackendSsl30?: null | bool @go(EnableBackendSsl30,*bool)

	// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to false.
	// +kubebuilder:validation:Optional
	enableBackendTls10?: null | bool @go(EnableBackendTls10,*bool)

	// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to false.
	// +kubebuilder:validation:Optional
	enableBackendTls11?: null | bool @go(EnableBackendTls11,*bool)

	// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to false.
	// +kubebuilder:validation:Optional
	enableFrontendSsl30?: null | bool @go(EnableFrontendSsl30,*bool)

	// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to false.
	// +kubebuilder:validation:Optional
	enableFrontendTls10?: null | bool @go(EnableFrontendTls10,*bool)

	// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to false.
	// +kubebuilder:validation:Optional
	enableFrontendTls11?: null | bool @go(EnableFrontendTls11,*bool)

	// Should the TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSEcdheEcdsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSEcdheEcdsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsEcdheRsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSEcdheRsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsEcdheRsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSEcdheRsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_CBC_SHA256 cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsRsaWithAes128CbcSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes128CbcSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_CBC_SHA cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsRsaWithAes128CbcShaCiphersEnabled?: null | bool @go(TLSRsaWithAes128CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_128_GCM_SHA256 cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsRsaWithAes128GcmSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes128GCMSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_CBC_SHA256 cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsRsaWithAes256CbcSha256CiphersEnabled?: null | bool @go(TLSRsaWithAes256CbcSha256CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_CBC_SHA cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsRsaWithAes256CbcShaCiphersEnabled?: null | bool @go(TLSRsaWithAes256CbcShaCiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_AES_256_GCM_SHA384 cipher be enabled? Defaults to false.
	// +kubebuilder:validation:Optional
	tlsRsaWithAes256GcmSha384CiphersEnabled?: null | bool @go(TLSRsaWithAes256GCMSha384CiphersEnabled,*bool)

	// Should the TLS_RSA_WITH_3DES_EDE_CBC_SHA cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)?
	// +kubebuilder:validation:Optional
	tripleDesCiphersEnabled?: null | bool @go(TripleDesCiphersEnabled,*bool)
}

#SignInInitParameters: {
	// Should anonymous users be redirected to the sign in page?
	enabled?: null | bool @go(Enabled,*bool)
}

#SignInObservation: {
	// Should anonymous users be redirected to the sign in page?
	enabled?: null | bool @go(Enabled,*bool)
}

#SignInParameters: {
	// Should anonymous users be redirected to the sign in page?
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)
}

#SignUpInitParameters: {
	// Can users sign up on the development portal?
	enabled?: null | bool @go(Enabled,*bool)

	// A terms_of_service block as defined below.
	termsOfService?: [...#TermsOfServiceInitParameters] @go(TermsOfService,[]TermsOfServiceInitParameters)
}

#SignUpObservation: {
	// Can users sign up on the development portal?
	enabled?: null | bool @go(Enabled,*bool)

	// A terms_of_service block as defined below.
	termsOfService?: [...#TermsOfServiceObservation] @go(TermsOfService,[]TermsOfServiceObservation)
}

#SignUpParameters: {
	// Can users sign up on the development portal?
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// A terms_of_service block as defined below.
	// +kubebuilder:validation:Optional
	termsOfService: [...#TermsOfServiceParameters] @go(TermsOfService,[]TermsOfServiceParameters)
}

#TenantAccessInitParameters: {
	// Should the access to the management API be enabled?
	enabled?: null | bool @go(Enabled,*bool)
}

#TenantAccessObservation: {
	// Should the access to the management API be enabled?
	enabled?: null | bool @go(Enabled,*bool)

	// The identifier for the tenant access information contract.
	tenantId?: null | string @go(TenantID,*string)
}

#TenantAccessParameters: {
	// Should the access to the management API be enabled?
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)
}

#TermsOfServiceInitParameters: {
	// Should the user be asked for consent during sign up?
	consentRequired?: null | bool @go(ConsentRequired,*bool)

	// Should Terms of Service be displayed during sign up?.
	enabled?: null | bool @go(Enabled,*bool)

	// The Terms of Service which users are required to agree to in order to sign up.
	text?: null | string @go(Text,*string)
}

#TermsOfServiceObservation: {
	// Should the user be asked for consent during sign up?
	consentRequired?: null | bool @go(ConsentRequired,*bool)

	// Should Terms of Service be displayed during sign up?.
	enabled?: null | bool @go(Enabled,*bool)

	// The Terms of Service which users are required to agree to in order to sign up.
	text?: null | string @go(Text,*string)
}

#TermsOfServiceParameters: {
	// Should the user be asked for consent during sign up?
	// +kubebuilder:validation:Optional
	consentRequired?: null | bool @go(ConsentRequired,*bool)

	// Should Terms of Service be displayed during sign up?.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The Terms of Service which users are required to agree to in order to sign up.
	// +kubebuilder:validation:Optional
	text?: null | string @go(Text,*string)
}

#VirtualNetworkConfigurationInitParameters: {
}

#VirtualNetworkConfigurationObservation: {
	// The id of the subnet that will be used for the API Management.
	subnetId?: null | string @go(SubnetID,*string)
}

#VirtualNetworkConfigurationParameters: {
	// The id of the subnet that will be used for the API Management.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

// ManagementSpec defines the desired state of Management
#ManagementSpec: {
	forProvider: #ManagementParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ManagementInitParameters @go(InitProvider)
}

// ManagementStatus defines the observed state of Management.
#ManagementStatus: {
	atProvider?: #ManagementObservation @go(AtProvider)
}

// Management is the Schema for the Managements API. Manages an API Management Service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Management: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.publisherEmail) || (has(self.initProvider) && has(self.initProvider.publisherEmail))",message="spec.forProvider.publisherEmail is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.publisherName) || (has(self.initProvider) && has(self.initProvider.publisherName))",message="spec.forProvider.publisherName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.skuName) || (has(self.initProvider) && has(self.initProvider.skuName))",message="spec.forProvider.skuName is a required parameter"
	spec:    #ManagementSpec   @go(Spec)
	status?: #ManagementStatus @go(Status)
}

// ManagementList contains a list of Managements
#ManagementList: {
	items: [...#Management] @go(Items,[]Management)
}
