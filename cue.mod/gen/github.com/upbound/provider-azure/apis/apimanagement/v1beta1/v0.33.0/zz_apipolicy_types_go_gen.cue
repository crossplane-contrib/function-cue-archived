// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#APIPolicyObservation: {
	// The name of the API Management Service. Changing this forces a new resource to be created.
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The ID of the API Management API within the API Management Service. Changing this forces a new resource to be created.
	apiName?: null | string @go(APIName,*string)

	// The ID of the API Management API Policy.
	id?: null | string @go(ID,*string)

	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The XML Content for this Policy as a string.
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to a Policy XML Document, which must be publicly available.
	xmlLink?: null | string @go(XMLLink,*string)
}

#APIPolicyParameters: {
	// The name of the API Management Service. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Management
	// +kubebuilder:validation:Optional
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The ID of the API Management API within the API Management Service. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=API
	// +kubebuilder:validation:Optional
	apiName?: null | string @go(APIName,*string)

	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The XML Content for this Policy as a string.
	// +kubebuilder:validation:Optional
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to a Policy XML Document, which must be publicly available.
	// +kubebuilder:validation:Optional
	xmlLink?: null | string @go(XMLLink,*string)
}

// APIPolicySpec defines the desired state of APIPolicy
#APIPolicySpec: {
	forProvider: #APIPolicyParameters @go(ForProvider)
}

// APIPolicyStatus defines the observed state of APIPolicy.
#APIPolicyStatus: {
	atProvider?: #APIPolicyObservation @go(AtProvider)
}

// APIPolicy is the Schema for the APIPolicys API. Manages an API Management API Policy
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#APIPolicy: {
	spec:    #APIPolicySpec   @go(Spec)
	status?: #APIPolicyStatus @go(Status)
}

// APIPolicyList contains a list of APIPolicys
#APIPolicyList: {
	items: [...#APIPolicy] @go(Items,[]APIPolicy)
}
