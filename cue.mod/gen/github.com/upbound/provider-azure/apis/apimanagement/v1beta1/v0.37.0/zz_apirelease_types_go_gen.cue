// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#APIReleaseInitParameters: {
	// The Release Notes.
	notes?: null | string @go(Notes,*string)
}

#APIReleaseObservation: {
	// The ID of the API Management API. Changing this forces a new API Management API Release to be created.
	apiId?: null | string @go(APIID,*string)

	// The ID of the API Management API Release.
	id?: null | string @go(ID,*string)

	// The Release Notes.
	notes?: null | string @go(Notes,*string)
}

#APIReleaseParameters: {
	// The ID of the API Management API. Changing this forces a new API Management API Release to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/apimanagement/v1beta1.API
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	apiId?: null | string @go(APIID,*string)

	// The Release Notes.
	// +kubebuilder:validation:Optional
	notes?: null | string @go(Notes,*string)
}

// APIReleaseSpec defines the desired state of APIRelease
#APIReleaseSpec: {
	forProvider: #APIReleaseParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #APIReleaseInitParameters @go(InitProvider)
}

// APIReleaseStatus defines the observed state of APIRelease.
#APIReleaseStatus: {
	atProvider?: #APIReleaseObservation @go(AtProvider)
}

// APIRelease is the Schema for the APIReleases API. Manages a API Management API Release.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#APIRelease: {
	spec:    #APIReleaseSpec   @go(Spec)
	status?: #APIReleaseStatus @go(Status)
}

// APIReleaseList contains a list of APIReleases
#APIReleaseList: {
	items: [...#APIRelease] @go(Items,[]APIRelease)
}
