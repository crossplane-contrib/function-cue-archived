// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#IdentityProviderTwitterObservation: {
	// The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The ID of the API Management Twitter Identity Provider.
	id?: null | string @go(ID,*string)

	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#IdentityProviderTwitterParameters: {
	// The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/apimanagement/v1beta1.Management
	// +kubebuilder:validation:Optional
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

// IdentityProviderTwitterSpec defines the desired state of IdentityProviderTwitter
#IdentityProviderTwitterSpec: {
	forProvider: #IdentityProviderTwitterParameters @go(ForProvider)
}

// IdentityProviderTwitterStatus defines the observed state of IdentityProviderTwitter.
#IdentityProviderTwitterStatus: {
	atProvider?: #IdentityProviderTwitterObservation @go(AtProvider)
}

// IdentityProviderTwitter is the Schema for the IdentityProviderTwitters API. Manages an API Management Twitter Identity Provider.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IdentityProviderTwitter: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.apiKeySecretRef)",message="apiKeySecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.apiSecretKeySecretRef)",message="apiSecretKeySecretRef is a required parameter"
	spec:    #IdentityProviderTwitterSpec   @go(Spec)
	status?: #IdentityProviderTwitterStatus @go(Status)
}

// IdentityProviderTwitterList contains a list of IdentityProviderTwitters
#IdentityProviderTwitterList: {
	items: [...#IdentityProviderTwitter] @go(Items,[]IdentityProviderTwitter)
}
