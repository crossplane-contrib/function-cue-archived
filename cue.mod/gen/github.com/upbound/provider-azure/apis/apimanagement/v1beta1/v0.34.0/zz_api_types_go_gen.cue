// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#APIObservation: {
	// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
	apiManagementName?: null | string @go(APIManagementName,*string)

	// Type of API. Possible values are graphql, http, soap, and websocket. Defaults to http.
	apiType?: null | string @go(APIType,*string)

	// A contact block as documented below.
	contact?: [...#ContactObservation] @go(Contact,[]ContactObservation)

	// A description of the API Management API, which may include HTML formatting tags.
	description?: null | string @go(Description,*string)

	// The display name of the API.
	displayName?: null | string @go(DisplayName,*string)

	// The ID of the API Management API.
	id?: null | string @go(ID,*string)

	// A import block as documented below.
	import?: [...#ImportObservation] @go(Import,[]ImportObservation)

	// Is this the current API Revision?
	isCurrent?: null | bool @go(IsCurrent,*bool)

	// Is this API Revision online/accessible via the Gateway?
	isOnline?: null | bool @go(IsOnline,*bool)

	// A license block as documented below.
	license?: [...#LicenseObservation] @go(License,[]LicenseObservation)

	// An oauth2_authorization block as documented below.
	oauth2Authorization?: [...#Oauth2AuthorizationObservation] @go(Oauth2Authorization,[]Oauth2AuthorizationObservation)

	// An openid_authentication block as documented below.
	openidAuthentication?: [...#OpenIDAuthenticationObservation] @go(OpenIDAuthentication,[]OpenIDAuthenticationObservation)

	// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
	path?: null | string @go(Path,*string)

	// A list of protocols the operations in this API can be invoked. Possible values are http, https, ws, and wss.
	protocols?: [...null | string] @go(Protocols,[]*string)

	// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The Revision which used for this API. Changing this forces a new resource to be created.
	revision?: null | string @go(Revision,*string)

	// The description of the API Revision of the API Management API.
	revisionDescription?: null | string @go(RevisionDescription,*string)

	// Absolute URL of the backend service implementing this API.
	serviceUrl?: null | string @go(ServiceURL,*string)

	// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to false.
	soapPassThrough?: null | bool @go(SoapPassThrough,*bool)

	// The API id of the source API, which could be in format azurerm_api_management_api.example.id or in format azurerm_api_management_api.example.id;rev=1
	sourceApiId?: null | string @go(SourceAPIID,*string)

	// A subscription_key_parameter_names block as documented below.
	subscriptionKeyParameterNames?: [...#SubscriptionKeyParameterNamesObservation] @go(SubscriptionKeyParameterNames,[]SubscriptionKeyParameterNamesObservation)

	// Should this API require a subscription key? Defaults to true.
	subscriptionRequired?: null | bool @go(SubscriptionRequired,*bool)

	// Absolute URL of the Terms of Service for the API.
	termsOfServiceUrl?: null | string @go(TermsOfServiceURL,*string)

	// The Version number of this API, if this API is versioned.
	version?: null | string @go(Version,*string)

	// The description of the API Version of the API Management API.
	versionDescription?: null | string @go(VersionDescription,*string)

	// The ID of the Version Set which this API is associated with.
	versionSetId?: null | string @go(VersionSetID,*string)
}

#APIParameters: {
	// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/apimanagement/v1beta1.Management
	// +kubebuilder:validation:Optional
	apiManagementName?: null | string @go(APIManagementName,*string)

	// Type of API. Possible values are graphql, http, soap, and websocket. Defaults to http.
	// +kubebuilder:validation:Optional
	apiType?: null | string @go(APIType,*string)

	// A contact block as documented below.
	// +kubebuilder:validation:Optional
	contact?: [...#ContactParameters] @go(Contact,[]ContactParameters)

	// A description of the API Management API, which may include HTML formatting tags.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The display name of the API.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// A import block as documented below.
	// +kubebuilder:validation:Optional
	import?: [...#ImportParameters] @go(Import,[]ImportParameters)

	// A license block as documented below.
	// +kubebuilder:validation:Optional
	license?: [...#LicenseParameters] @go(License,[]LicenseParameters)

	// An oauth2_authorization block as documented below.
	// +kubebuilder:validation:Optional
	oauth2Authorization?: [...#Oauth2AuthorizationParameters] @go(Oauth2Authorization,[]Oauth2AuthorizationParameters)

	// An openid_authentication block as documented below.
	// +kubebuilder:validation:Optional
	openidAuthentication?: [...#OpenIDAuthenticationParameters] @go(OpenIDAuthentication,[]OpenIDAuthenticationParameters)

	// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// A list of protocols the operations in this API can be invoked. Possible values are http, https, ws, and wss.
	// +kubebuilder:validation:Optional
	protocols?: [...null | string] @go(Protocols,[]*string)

	// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The Revision which used for this API. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	revision?: null | string @go(Revision,*string)

	// The description of the API Revision of the API Management API.
	// +kubebuilder:validation:Optional
	revisionDescription?: null | string @go(RevisionDescription,*string)

	// Absolute URL of the backend service implementing this API.
	// +kubebuilder:validation:Optional
	serviceUrl?: null | string @go(ServiceURL,*string)

	// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to false.
	// +kubebuilder:validation:Optional
	soapPassThrough?: null | bool @go(SoapPassThrough,*bool)

	// The API id of the source API, which could be in format azurerm_api_management_api.example.id or in format azurerm_api_management_api.example.id;rev=1
	// +kubebuilder:validation:Optional
	sourceApiId?: null | string @go(SourceAPIID,*string)

	// A subscription_key_parameter_names block as documented below.
	// +kubebuilder:validation:Optional
	subscriptionKeyParameterNames?: [...#SubscriptionKeyParameterNamesParameters] @go(SubscriptionKeyParameterNames,[]SubscriptionKeyParameterNamesParameters)

	// Should this API require a subscription key? Defaults to true.
	// +kubebuilder:validation:Optional
	subscriptionRequired?: null | bool @go(SubscriptionRequired,*bool)

	// Absolute URL of the Terms of Service for the API.
	// +kubebuilder:validation:Optional
	termsOfServiceUrl?: null | string @go(TermsOfServiceURL,*string)

	// The Version number of this API, if this API is versioned.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)

	// The description of the API Version of the API Management API.
	// +kubebuilder:validation:Optional
	versionDescription?: null | string @go(VersionDescription,*string)

	// The ID of the Version Set which this API is associated with.
	// +kubebuilder:validation:Optional
	versionSetId?: null | string @go(VersionSetID,*string)
}

#ContactObservation: {
	// The email address of the contact person/organization.
	email?: null | string @go(Email,*string)

	// The name of the contact person/organization.
	name?: null | string @go(Name,*string)

	// Absolute URL of the contact information.
	url?: null | string @go(URL,*string)
}

#ContactParameters: {
	// The email address of the contact person/organization.
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// The name of the contact person/organization.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Absolute URL of the contact information.
	// +kubebuilder:validation:Optional
	url?: null | string @go(URL,*string)
}

#ImportObservation: {
	// The format of the content from which the API Definition should be imported. Possible values are: openapi, openapi+json, openapi+json-link, openapi-link, swagger-json, swagger-link-json, wadl-link-json, wadl-xml, wsdl and wsdl-link.
	contentFormat?: null | string @go(ContentFormat,*string)

	// The Content from which the API Definition should be imported. When a content_format of *-link-* is specified this must be a URL, otherwise this must be defined inline.
	contentValue?: null | string @go(ContentValue,*string)

	// A wsdl_selector block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when content_format is wsdl or wsdl-link.
	wsdlSelector?: [...#WsdlSelectorObservation] @go(WsdlSelector,[]WsdlSelectorObservation)
}

#ImportParameters: {
	// The format of the content from which the API Definition should be imported. Possible values are: openapi, openapi+json, openapi+json-link, openapi-link, swagger-json, swagger-link-json, wadl-link-json, wadl-xml, wsdl and wsdl-link.
	// +kubebuilder:validation:Required
	contentFormat?: null | string @go(ContentFormat,*string)

	// The Content from which the API Definition should be imported. When a content_format of *-link-* is specified this must be a URL, otherwise this must be defined inline.
	// +kubebuilder:validation:Required
	contentValue?: null | string @go(ContentValue,*string)

	// A wsdl_selector block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when content_format is wsdl or wsdl-link.
	// +kubebuilder:validation:Optional
	wsdlSelector?: [...#WsdlSelectorParameters] @go(WsdlSelector,[]WsdlSelectorParameters)
}

#LicenseObservation: {
	// The name of the license .
	name?: null | string @go(Name,*string)

	// Absolute URL of the license.
	url?: null | string @go(URL,*string)
}

#LicenseParameters: {
	// The name of the license .
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Absolute URL of the license.
	// +kubebuilder:validation:Optional
	url?: null | string @go(URL,*string)
}

#Oauth2AuthorizationObservation: {
	// OAuth authorization server identifier. The name of an OAuth2 Authorization Server.
	authorizationServerName?: null | string @go(AuthorizationServerName,*string)

	// Operations scope.
	scope?: null | string @go(Scope,*string)
}

#Oauth2AuthorizationParameters: {
	// OAuth authorization server identifier. The name of an OAuth2 Authorization Server.
	// +kubebuilder:validation:Required
	authorizationServerName?: null | string @go(AuthorizationServerName,*string)

	// Operations scope.
	// +kubebuilder:validation:Optional
	scope?: null | string @go(Scope,*string)
}

#OpenIDAuthenticationObservation: {
	// How to send token to the server. A list of zero or more methods. Valid values are authorizationHeader and query.
	bearerTokenSendingMethods?: [...null | string] @go(BearerTokenSendingMethods,[]*string)

	// OpenID Connect provider identifier. The name of an OpenID Connect Provider.
	openidProviderName?: null | string @go(OpenIDProviderName,*string)
}

#OpenIDAuthenticationParameters: {
	// How to send token to the server. A list of zero or more methods. Valid values are authorizationHeader and query.
	// +kubebuilder:validation:Optional
	bearerTokenSendingMethods?: [...null | string] @go(BearerTokenSendingMethods,[]*string)

	// OpenID Connect provider identifier. The name of an OpenID Connect Provider.
	// +kubebuilder:validation:Required
	openidProviderName?: null | string @go(OpenIDProviderName,*string)
}

#SubscriptionKeyParameterNamesObservation: {
	// The name of the HTTP Header which should be used for the Subscription Key.
	header?: null | string @go(Header,*string)

	// The name of the QueryString parameter which should be used for the Subscription Key.
	query?: null | string @go(Query,*string)
}

#SubscriptionKeyParameterNamesParameters: {
	// The name of the HTTP Header which should be used for the Subscription Key.
	// +kubebuilder:validation:Required
	header?: null | string @go(Header,*string)

	// The name of the QueryString parameter which should be used for the Subscription Key.
	// +kubebuilder:validation:Required
	query?: null | string @go(Query,*string)
}

#WsdlSelectorObservation: {
	// The name of endpoint (port) to import from WSDL.
	endpointName?: null | string @go(EndpointName,*string)

	// The name of service to import from WSDL.
	serviceName?: null | string @go(ServiceName,*string)
}

#WsdlSelectorParameters: {
	// The name of endpoint (port) to import from WSDL.
	// +kubebuilder:validation:Required
	endpointName?: null | string @go(EndpointName,*string)

	// The name of service to import from WSDL.
	// +kubebuilder:validation:Required
	serviceName?: null | string @go(ServiceName,*string)
}

// APISpec defines the desired state of API
#APISpec: {
	forProvider: #APIParameters @go(ForProvider)
}

// APIStatus defines the observed state of API.
#APIStatus: {
	atProvider?: #APIObservation @go(AtProvider)
}

// API is the Schema for the APIs API. Manages an API within an API Management Service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#API: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.revision)",message="revision is a required parameter"
	spec:    #APISpec   @go(Spec)
	status?: #APIStatus @go(Status)
}

// APIList contains a list of APIs
#APIList: {
	items: [...#API] @go(Items,[]API)
}
