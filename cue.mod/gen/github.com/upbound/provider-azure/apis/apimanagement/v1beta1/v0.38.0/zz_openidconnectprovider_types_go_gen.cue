// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#OpenIDConnectProviderInitParameters: {
	// A description of this OpenID Connect Provider.
	description?: null | string @go(Description,*string)

	// A user-friendly name for this OpenID Connect Provider.
	displayName?: null | string @go(DisplayName,*string)

	// The URI of the Metadata endpoint.
	metadataEndpoint?: null | string @go(MetadataEndpoint,*string)
}

#OpenIDConnectProviderObservation: {
	// The name of the API Management Service in which this OpenID Connect Provider should be created. Changing this forces a new resource to be created.
	apiManagementName?: null | string @go(APIManagementName,*string)

	// A description of this OpenID Connect Provider.
	description?: null | string @go(Description,*string)

	// A user-friendly name for this OpenID Connect Provider.
	displayName?: null | string @go(DisplayName,*string)

	// The ID of the API Management OpenID Connect Provider.
	id?: null | string @go(ID,*string)

	// The URI of the Metadata endpoint.
	metadataEndpoint?: null | string @go(MetadataEndpoint,*string)

	// The name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#OpenIDConnectProviderParameters: {
	// The name of the API Management Service in which this OpenID Connect Provider should be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/apimanagement/v1beta1.Management
	// +kubebuilder:validation:Optional
	apiManagementName?: null | string @go(APIManagementName,*string)

	// A description of this OpenID Connect Provider.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A user-friendly name for this OpenID Connect Provider.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The URI of the Metadata endpoint.
	// +kubebuilder:validation:Optional
	metadataEndpoint?: null | string @go(MetadataEndpoint,*string)

	// The name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

// OpenIDConnectProviderSpec defines the desired state of OpenIDConnectProvider
#OpenIDConnectProviderSpec: {
	forProvider: #OpenIDConnectProviderParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #OpenIDConnectProviderInitParameters @go(InitProvider)
}

// OpenIDConnectProviderStatus defines the observed state of OpenIDConnectProvider.
#OpenIDConnectProviderStatus: {
	atProvider?: #OpenIDConnectProviderObservation @go(AtProvider)
}

// OpenIDConnectProvider is the Schema for the OpenIDConnectProviders API. Manages an OpenID Connect Provider within a API Management Service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#OpenIDConnectProvider: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clientIdSecretRef)",message="spec.forProvider.clientIdSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clientSecretSecretRef)",message="spec.forProvider.clientSecretSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) && has(self.initProvider.displayName))",message="spec.forProvider.displayName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.metadataEndpoint) || (has(self.initProvider) && has(self.initProvider.metadataEndpoint))",message="spec.forProvider.metadataEndpoint is a required parameter"
	spec:    #OpenIDConnectProviderSpec   @go(Spec)
	status?: #OpenIDConnectProviderStatus @go(Status)
}

// OpenIDConnectProviderList contains a list of OpenIDConnectProviders
#OpenIDConnectProviderList: {
	items: [...#OpenIDConnectProvider] @go(Items,[]OpenIDConnectProvider)
}
