// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/apimanagement/v1beta1

package v1beta1

#ProductPolicyObservation: {
	// The name of the API Management Service. Changing this forces a new resource to be created.
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The ID of the API Management Product Policy.
	id?: null | string @go(ID,*string)

	// The ID of the API Management Product within the API Management Service. Changing this forces a new resource to be created.
	productId?: null | string @go(ProductID,*string)

	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The XML Content for this Policy.
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to a Policy XML Document, which must be publicly available.
	xmlLink?: null | string @go(XMLLink,*string)
}

#ProductPolicyParameters: {
	// The name of the API Management Service. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Management
	// +kubebuilder:validation:Optional
	apiManagementName?: null | string @go(APIManagementName,*string)

	// The ID of the API Management Product within the API Management Service. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Product
	// +kubebuilder:validation:Optional
	productId?: null | string @go(ProductID,*string)

	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The XML Content for this Policy.
	// +kubebuilder:validation:Optional
	xmlContent?: null | string @go(XMLContent,*string)

	// A link to a Policy XML Document, which must be publicly available.
	// +kubebuilder:validation:Optional
	xmlLink?: null | string @go(XMLLink,*string)
}

// ProductPolicySpec defines the desired state of ProductPolicy
#ProductPolicySpec: {
	forProvider: #ProductPolicyParameters @go(ForProvider)
}

// ProductPolicyStatus defines the observed state of ProductPolicy.
#ProductPolicyStatus: {
	atProvider?: #ProductPolicyObservation @go(AtProvider)
}

// ProductPolicy is the Schema for the ProductPolicys API. Manages an API Management Product Policy
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#ProductPolicy: {
	spec:    #ProductPolicySpec   @go(Spec)
	status?: #ProductPolicyStatus @go(Status)
}

// ProductPolicyList contains a list of ProductPolicys
#ProductPolicyList: {
	items: [...#ProductPolicy] @go(Items,[]ProductPolicy)
}
