// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dbformysql/v1beta1

package v1beta1

#FlexibleServerConfigurationObservation: {
	// The ID of the MySQL Flexible Server Configuration.
	id?: null | string @go(ID,*string)

	// The name of the resource group in which the MySQL Flexible Server exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the name of the MySQL Flexible Server. Changing this forces a new resource to be created.
	serverName?: null | string @go(ServerName,*string)

	// Specifies the value of the MySQL Flexible Server Configuration. See the MySQL documentation for valid values. Changing this forces a new resource to be created.
	value?: null | string @go(Value,*string)
}

#FlexibleServerConfigurationParameters: {
	// The name of the resource group in which the MySQL Flexible Server exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the name of the MySQL Flexible Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=FlexibleServer
	// +kubebuilder:validation:Optional
	serverName?: null | string @go(ServerName,*string)

	// Specifies the value of the MySQL Flexible Server Configuration. See the MySQL documentation for valid values. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

// FlexibleServerConfigurationSpec defines the desired state of FlexibleServerConfiguration
#FlexibleServerConfigurationSpec: {
	forProvider: #FlexibleServerConfigurationParameters @go(ForProvider)
}

// FlexibleServerConfigurationStatus defines the observed state of FlexibleServerConfiguration.
#FlexibleServerConfigurationStatus: {
	atProvider?: #FlexibleServerConfigurationObservation @go(AtProvider)
}

// FlexibleServerConfiguration is the Schema for the FlexibleServerConfigurations API. Sets a MySQL Flexible Server Configuration value on a MySQL Flexible Server.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FlexibleServerConfiguration: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.value)",message="value is a required parameter"
	spec:    #FlexibleServerConfigurationSpec   @go(Spec)
	status?: #FlexibleServerConfigurationStatus @go(Status)
}

// FlexibleServerConfigurationList contains a list of FlexibleServerConfigurations
#FlexibleServerConfigurationList: {
	items: [...#FlexibleServerConfiguration] @go(Items,[]FlexibleServerConfiguration)
}
