// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dbformariadb/v1beta1

package v1beta1

#FirewallRuleObservation: {
	// Specifies the End IP Address associated with this Firewall Rule.
	endIpAddress?: null | string @go(EndIPAddress,*string)

	// The ID of the MariaDB Firewall Rule.
	id?: null | string @go(ID,*string)

	// The name of the resource group in which the MariaDB Server exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the name of the MariaDB Server. Changing this forces a new resource to be created.
	serverName?: null | string @go(ServerName,*string)

	// Specifies the Start IP Address associated with this Firewall Rule.
	startIpAddress?: null | string @go(StartIPAddress,*string)
}

#FirewallRuleParameters: {
	// Specifies the End IP Address associated with this Firewall Rule.
	// +kubebuilder:validation:Optional
	endIpAddress?: null | string @go(EndIPAddress,*string)

	// The name of the resource group in which the MariaDB Server exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the name of the MariaDB Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Server
	// +kubebuilder:validation:Optional
	serverName?: null | string @go(ServerName,*string)

	// Specifies the Start IP Address associated with this Firewall Rule.
	// +kubebuilder:validation:Optional
	startIpAddress?: null | string @go(StartIPAddress,*string)
}

// FirewallRuleSpec defines the desired state of FirewallRule
#FirewallRuleSpec: {
	forProvider: #FirewallRuleParameters @go(ForProvider)
}

// FirewallRuleStatus defines the observed state of FirewallRule.
#FirewallRuleStatus: {
	atProvider?: #FirewallRuleObservation @go(AtProvider)
}

// FirewallRule is the Schema for the FirewallRules API. Manages a Firewall Rule for a MariaDB Server.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#FirewallRule: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.endIpAddress)",message="endIpAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.startIpAddress)",message="startIpAddress is a required parameter"
	spec:    #FirewallRuleSpec   @go(Spec)
	status?: #FirewallRuleStatus @go(Status)
}

// FirewallRuleList contains a list of FirewallRules
#FirewallRuleList: {
	items: [...#FirewallRule] @go(Items,[]FirewallRule)
}
