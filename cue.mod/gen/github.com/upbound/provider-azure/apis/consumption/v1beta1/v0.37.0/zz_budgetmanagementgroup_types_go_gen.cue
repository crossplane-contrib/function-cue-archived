// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/consumption/v1beta1

package v1beta1

#BudgetManagementGroupInitParameters: {
	// The total amount of cost to track with the budget.
	amount?: null | float64 @go(Amount,*float64)

	// The ETag of the Management Group Consumption Budget.
	etag?: null | string @go(Etag,*string)

	// A filter block as defined below.
	filter?: [...#FilterInitParameters] @go(Filter,[]FilterInitParameters)

	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// One or more notification blocks as defined below.
	notification?: [...#NotificationInitParameters] @go(Notification,[]NotificationInitParameters)

	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of BillingAnnual, BillingMonth, BillingQuarter, Annually, Monthly and Quarterly. Defaults to Monthly. Changing this forces a new resource to be created.
	timeGrain?: null | string @go(TimeGrain,*string)

	// A time_period block as defined below.
	timePeriod?: [...#TimePeriodInitParameters] @go(TimePeriod,[]TimePeriodInitParameters)
}

#BudgetManagementGroupObservation: {
	// The total amount of cost to track with the budget.
	amount?: null | float64 @go(Amount,*float64)

	// The ETag of the Management Group Consumption Budget.
	etag?: null | string @go(Etag,*string)

	// A filter block as defined below.
	filter?: [...#FilterObservation] @go(Filter,[]FilterObservation)

	// The ID of the Management Group Consumption Budget.
	id?: null | string @go(ID,*string)

	// The ID of the Management Group. Changing this forces a new resource to be created.
	managementGroupId?: null | string @go(ManagementGroupID,*string)

	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// One or more notification blocks as defined below.
	notification?: [...#NotificationObservation] @go(Notification,[]NotificationObservation)

	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of BillingAnnual, BillingMonth, BillingQuarter, Annually, Monthly and Quarterly. Defaults to Monthly. Changing this forces a new resource to be created.
	timeGrain?: null | string @go(TimeGrain,*string)

	// A time_period block as defined below.
	timePeriod?: [...#TimePeriodObservation] @go(TimePeriod,[]TimePeriodObservation)
}

#BudgetManagementGroupParameters: {
	// The total amount of cost to track with the budget.
	// +kubebuilder:validation:Optional
	amount?: null | float64 @go(Amount,*float64)

	// The ETag of the Management Group Consumption Budget.
	// +kubebuilder:validation:Optional
	etag?: null | string @go(Etag,*string)

	// A filter block as defined below.
	// +kubebuilder:validation:Optional
	filter?: [...#FilterParameters] @go(Filter,[]FilterParameters)

	// The ID of the Management Group. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/management/v1beta1.ManagementGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	managementGroupId?: null | string @go(ManagementGroupID,*string)

	// The name which should be used for this Management Group Consumption Budget. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// One or more notification blocks as defined below.
	// +kubebuilder:validation:Optional
	notification?: [...#NotificationParameters] @go(Notification,[]NotificationParameters)

	// The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of BillingAnnual, BillingMonth, BillingQuarter, Annually, Monthly and Quarterly. Defaults to Monthly. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	timeGrain?: null | string @go(TimeGrain,*string)

	// A time_period block as defined below.
	// +kubebuilder:validation:Optional
	timePeriod?: [...#TimePeriodParameters] @go(TimePeriod,[]TimePeriodParameters)
}

#DimensionInitParameters: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#DimensionObservation: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#DimensionParameters: {
	// The name of the tag to use for the filter.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#FilterInitParameters: {
	// One or more dimension blocks as defined below to filter the budget on.
	dimension?: [...#DimensionInitParameters] @go(Dimension,[]DimensionInitParameters)

	// A not block as defined below to filter the budget on. This is deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
	not?: [...#NotInitParameters] @go(Not,[]NotInitParameters)

	// One or more tag blocks as defined below to filter the budget on.
	tag?: [...#FilterTagInitParameters] @go(Tag,[]FilterTagInitParameters)
}

#FilterObservation: {
	// One or more dimension blocks as defined below to filter the budget on.
	dimension?: [...#DimensionObservation] @go(Dimension,[]DimensionObservation)

	// A not block as defined below to filter the budget on. This is deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
	not?: [...#NotObservation] @go(Not,[]NotObservation)

	// One or more tag blocks as defined below to filter the budget on.
	tag?: [...#FilterTagObservation] @go(Tag,[]FilterTagObservation)
}

#FilterParameters: {
	// One or more dimension blocks as defined below to filter the budget on.
	// +kubebuilder:validation:Optional
	dimension?: [...#DimensionParameters] @go(Dimension,[]DimensionParameters)

	// A not block as defined below to filter the budget on. This is deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
	// +kubebuilder:validation:Optional
	not?: [...#NotParameters] @go(Not,[]NotParameters)

	// One or more tag blocks as defined below to filter the budget on.
	// +kubebuilder:validation:Optional
	tag?: [...#FilterTagParameters] @go(Tag,[]FilterTagParameters)
}

#FilterTagInitParameters: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#FilterTagObservation: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#FilterTagParameters: {
	// The name of the tag to use for the filter.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#NotDimensionInitParameters: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#NotDimensionObservation: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#NotDimensionParameters: {
	// The name of the tag to use for the filter.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#NotInitParameters: {
	// One dimension block as defined below to filter the budget on. Conflicts with tag.
	dimension?: [...#NotDimensionInitParameters] @go(Dimension,[]NotDimensionInitParameters)

	// One tag block as defined below to filter the budget on. Conflicts with dimension.
	tag?: [...#TagInitParameters] @go(Tag,[]TagInitParameters)
}

#NotObservation: {
	// One dimension block as defined below to filter the budget on. Conflicts with tag.
	dimension?: [...#NotDimensionObservation] @go(Dimension,[]NotDimensionObservation)

	// One tag block as defined below to filter the budget on. Conflicts with dimension.
	tag?: [...#TagObservation] @go(Tag,[]TagObservation)
}

#NotParameters: {
	// One dimension block as defined below to filter the budget on. Conflicts with tag.
	// +kubebuilder:validation:Optional
	dimension?: [...#NotDimensionParameters] @go(Dimension,[]NotDimensionParameters)

	// One tag block as defined below to filter the budget on. Conflicts with dimension.
	// +kubebuilder:validation:Optional
	tag?: [...#TagParameters] @go(Tag,[]TagParameters)
}

#NotificationInitParameters: {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	contactEmails?: [...null | string] @go(ContactEmails,[]*string)

	// Should the notification be enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The comparison operator for the notification. Must be one of EqualTo, GreaterThan, or GreaterThanOrEqualTo.
	operator?: null | string @go(Operator,*string)

	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	threshold?: null | float64 @go(Threshold,*float64)

	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are Actual and Forecasted. Default is Actual. Changing this forces a new resource to be created.
	thresholdType?: null | string @go(ThresholdType,*string)
}

#NotificationObservation: {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	contactEmails?: [...null | string] @go(ContactEmails,[]*string)

	// Should the notification be enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The comparison operator for the notification. Must be one of EqualTo, GreaterThan, or GreaterThanOrEqualTo.
	operator?: null | string @go(Operator,*string)

	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	threshold?: null | float64 @go(Threshold,*float64)

	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are Actual and Forecasted. Default is Actual. Changing this forces a new resource to be created.
	thresholdType?: null | string @go(ThresholdType,*string)
}

#NotificationParameters: {
	// Specifies a list of email addresses to send the budget notification to when the threshold is exceeded.
	// +kubebuilder:validation:Optional
	contactEmails: [...null | string] @go(ContactEmails,[]*string)

	// Should the notification be enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The comparison operator for the notification. Must be one of EqualTo, GreaterThan, or GreaterThanOrEqualTo.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.
	// +kubebuilder:validation:Optional
	threshold?: null | float64 @go(Threshold,*float64)

	// The type of threshold for the notification. This determines whether the notification is triggered by forecasted costs or actual costs. The allowed values are Actual and Forecasted. Default is Actual. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	thresholdType?: null | string @go(ThresholdType,*string)
}

#TagInitParameters: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#TagObservation: {
	// The name of the tag to use for the filter.
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	values?: [...null | string] @go(Values,[]*string)
}

#TagParameters: {
	// The name of the tag to use for the filter.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The operator to use for comparison. The allowed values are In.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Specifies a list of values for the tag.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#TimePeriodInitParameters: {
	// The end date for the budget. If not set this will be 10 years after the start date.
	endDate?: null | string @go(EndDate,*string)

	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new resource to be created.
	startDate?: null | string @go(StartDate,*string)
}

#TimePeriodObservation: {
	// The end date for the budget. If not set this will be 10 years after the start date.
	endDate?: null | string @go(EndDate,*string)

	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new resource to be created.
	startDate?: null | string @go(StartDate,*string)
}

#TimePeriodParameters: {
	// The end date for the budget. If not set this will be 10 years after the start date.
	// +kubebuilder:validation:Optional
	endDate?: null | string @go(EndDate,*string)

	// The start date for the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should be selected within the timegrain period. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	startDate?: null | string @go(StartDate,*string)
}

// BudgetManagementGroupSpec defines the desired state of BudgetManagementGroup
#BudgetManagementGroupSpec: {
	forProvider: #BudgetManagementGroupParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BudgetManagementGroupInitParameters @go(InitProvider)
}

// BudgetManagementGroupStatus defines the observed state of BudgetManagementGroup.
#BudgetManagementGroupStatus: {
	atProvider?: #BudgetManagementGroupObservation @go(AtProvider)
}

// BudgetManagementGroup is the Schema for the BudgetManagementGroups API. Manages a Consumption Budget for a Management Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#BudgetManagementGroup: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.amount) || (has(self.initProvider) && has(self.initProvider.amount))",message="spec.forProvider.amount is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.notification) || (has(self.initProvider) && has(self.initProvider.notification))",message="spec.forProvider.notification is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.timePeriod) || (has(self.initProvider) && has(self.initProvider.timePeriod))",message="spec.forProvider.timePeriod is a required parameter"
	spec:    #BudgetManagementGroupSpec   @go(Spec)
	status?: #BudgetManagementGroupStatus @go(Status)
}

// BudgetManagementGroupList contains a list of BudgetManagementGroups
#BudgetManagementGroupList: {
	items: [...#BudgetManagementGroup] @go(Items,[]BudgetManagementGroup)
}
