// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/sql/v1beta1

package v1beta1

#BaselineResultObservation: {
	// A list representing a result of the baseline.
	result?: [...null | string] @go(Result,[]*string)
}

#BaselineResultParameters: {
	// A list representing a result of the baseline.
	// +kubebuilder:validation:Required
	result: [...null | string] @go(Result,[]*string)
}

#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineObservation: {
	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	baselineName?: null | string @go(BaselineName,*string)

	// A baseline_result block as documented below. Multiple blocks can be defined.
	baselineResult?: [...#BaselineResultObservation] @go(BaselineResult,[]BaselineResultObservation)

	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	databaseName?: null | string @go(DatabaseName,*string)

	// The ID of the Database Vulnerability Assessment Rule Baseline.
	id?: null | string @go(ID,*string)

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	ruleId?: null | string @go(RuleID,*string)

	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	serverVulnerabilityAssessmentId?: null | string @go(ServerVulnerabilityAssessmentID,*string)
}

#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineParameters: {
	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	baselineName?: null | string @go(BaselineName,*string)

	// A baseline_result block as documented below. Multiple blocks can be defined.
	// +kubebuilder:validation:Optional
	baselineResult?: [...#BaselineResultParameters] @go(BaselineResult,[]BaselineResultParameters)

	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=MSSQLDatabase
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ruleId?: null | string @go(RuleID,*string)

	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/sql/v1beta1.MSSQLServerVulnerabilityAssessment
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serverVulnerabilityAssessmentId?: null | string @go(ServerVulnerabilityAssessmentID,*string)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec defines the desired state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline
#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec: {
	forProvider: #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineParameters @go(ForProvider)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus defines the observed state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline.
#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus: {
	atProvider?: #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineObservation @go(AtProvider)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaseline is the Schema for the MSSQLDatabaseVulnerabilityAssessmentRuleBaselines API. Manages a Database Vulnerability Assessment Rule Baseline.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MSSQLDatabaseVulnerabilityAssessmentRuleBaseline: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.baselineResult)",message="baselineResult is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.ruleId)",message="ruleId is a required parameter"
	spec:    #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec   @go(Spec)
	status?: #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus @go(Status)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList contains a list of MSSQLDatabaseVulnerabilityAssessmentRuleBaselines
#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList: {
	items: [...#MSSQLDatabaseVulnerabilityAssessmentRuleBaseline] @go(Items,[]MSSQLDatabaseVulnerabilityAssessmentRuleBaseline)
}
