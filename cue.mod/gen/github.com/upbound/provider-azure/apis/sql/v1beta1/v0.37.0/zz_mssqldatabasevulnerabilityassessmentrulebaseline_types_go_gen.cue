// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/sql/v1beta1

package v1beta1

#BaselineResultInitParameters: {
	// A list representing a result of the baseline.
	result?: [...null | string] @go(Result,[]*string)
}

#BaselineResultObservation: {
	// A list representing a result of the baseline.
	result?: [...null | string] @go(Result,[]*string)
}

#BaselineResultParameters: {
	// A list representing a result of the baseline.
	// +kubebuilder:validation:Optional
	result: [...null | string] @go(Result,[]*string)
}

#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineInitParameters: {
	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	baselineName?: null | string @go(BaselineName,*string)

	// A baseline_result block as documented below. Multiple blocks can be defined.
	baselineResult?: [...#BaselineResultInitParameters] @go(BaselineResult,[]BaselineResultInitParameters)

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	ruleId?: null | string @go(RuleID,*string)
}

#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineObservation: {
	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	baselineName?: null | string @go(BaselineName,*string)

	// A baseline_result block as documented below. Multiple blocks can be defined.
	baselineResult?: [...#BaselineResultObservation] @go(BaselineResult,[]BaselineResultObservation)

	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	databaseName?: null | string @go(DatabaseName,*string)

	// The ID of the Database Vulnerability Assessment Rule Baseline.
	id?: null | string @go(ID,*string)

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	ruleId?: null | string @go(RuleID,*string)

	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	serverVulnerabilityAssessmentId?: null | string @go(ServerVulnerabilityAssessmentID,*string)
}

#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineParameters: {
	// The name of the vulnerability assessment rule baseline. Valid options are default and master. default implies a baseline on a database level rule and master for server level rule. Defaults to default. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	baselineName?: null | string @go(BaselineName,*string)

	// A baseline_result block as documented below. Multiple blocks can be defined.
	// +kubebuilder:validation:Optional
	baselineResult?: [...#BaselineResultParameters] @go(BaselineResult,[]BaselineResultParameters)

	// Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=MSSQLDatabase
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// The vulnerability assessment rule ID. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ruleId?: null | string @go(RuleID,*string)

	// The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/sql/v1beta1.MSSQLServerVulnerabilityAssessment
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serverVulnerabilityAssessmentId?: null | string @go(ServerVulnerabilityAssessmentID,*string)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec defines the desired state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline
#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec: {
	forProvider: #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineInitParameters @go(InitProvider)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus defines the observed state of MSSQLDatabaseVulnerabilityAssessmentRuleBaseline.
#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus: {
	atProvider?: #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineObservation @go(AtProvider)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaseline is the Schema for the MSSQLDatabaseVulnerabilityAssessmentRuleBaselines API. Manages a Database Vulnerability Assessment Rule Baseline.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MSSQLDatabaseVulnerabilityAssessmentRuleBaseline: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.baselineResult) || (has(self.initProvider) && has(self.initProvider.baselineResult))",message="spec.forProvider.baselineResult is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.ruleId) || (has(self.initProvider) && has(self.initProvider.ruleId))",message="spec.forProvider.ruleId is a required parameter"
	spec:    #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineSpec   @go(Spec)
	status?: #MSSQLDatabaseVulnerabilityAssessmentRuleBaselineStatus @go(Status)
}

// MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList contains a list of MSSQLDatabaseVulnerabilityAssessmentRuleBaselines
#MSSQLDatabaseVulnerabilityAssessmentRuleBaselineList: {
	items: [...#MSSQLDatabaseVulnerabilityAssessmentRuleBaseline] @go(Items,[]MSSQLDatabaseVulnerabilityAssessmentRuleBaseline)
}
