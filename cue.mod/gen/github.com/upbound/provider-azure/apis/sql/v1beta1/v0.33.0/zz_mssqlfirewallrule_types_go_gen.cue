// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/sql/v1beta1

package v1beta1

#MSSQLFirewallRuleObservation: {
	// The ending IP address to allow through the firewall for this rule.
	endIpAddress?: null | string @go(EndIPAddress,*string)

	// The SQL Firewall Rule ID.
	id?: null | string @go(ID,*string)

	// The resource ID of the SQL Server on which to create the Firewall Rule. Changing this forces a new resource to be created.
	serverId?: null | string @go(ServerID,*string)

	// The starting IP address to allow through the firewall for this rule.
	startIpAddress?: null | string @go(StartIPAddress,*string)
}

#MSSQLFirewallRuleParameters: {
	// The ending IP address to allow through the firewall for this rule.
	// +kubebuilder:validation:Optional
	endIpAddress?: null | string @go(EndIPAddress,*string)

	// The resource ID of the SQL Server on which to create the Firewall Rule. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/sql/v1beta1.MSSQLServer
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serverId?: null | string @go(ServerID,*string)

	// The starting IP address to allow through the firewall for this rule.
	// +kubebuilder:validation:Optional
	startIpAddress?: null | string @go(StartIPAddress,*string)
}

// MSSQLFirewallRuleSpec defines the desired state of MSSQLFirewallRule
#MSSQLFirewallRuleSpec: {
	forProvider: #MSSQLFirewallRuleParameters @go(ForProvider)
}

// MSSQLFirewallRuleStatus defines the observed state of MSSQLFirewallRule.
#MSSQLFirewallRuleStatus: {
	atProvider?: #MSSQLFirewallRuleObservation @go(AtProvider)
}

// MSSQLFirewallRule is the Schema for the MSSQLFirewallRules API. Manages an Azure SQL Firewall Rule.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MSSQLFirewallRule: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.endIpAddress)",message="endIpAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.startIpAddress)",message="startIpAddress is a required parameter"
	spec:    #MSSQLFirewallRuleSpec   @go(Spec)
	status?: #MSSQLFirewallRuleStatus @go(Status)
}

// MSSQLFirewallRuleList contains a list of MSSQLFirewallRules
#MSSQLFirewallRuleList: {
	items: [...#MSSQLFirewallRule] @go(Items,[]MSSQLFirewallRule)
}
