// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/sql/v1beta1

package v1beta1

#MSSQLManagedInstanceFailoverGroupObservation: {
	// The ID of the Managed Instance Failover Group.
	id?: null | string @go(ID,*string)

	// The Azure Region where the Managed Instance Failover Group should exist. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The ID of the Azure SQL Managed Instance which will be replicated using a Managed Instance Failover Group. Changing this forces a new resource to be created.
	managedInstanceId?: null | string @go(ManagedInstanceID,*string)

	// The ID of the Azure SQL Managed Instance which will be replicated to. Changing this forces a new resource to be created.
	partnerManagedInstanceId?: null | string @go(PartnerManagedInstanceID,*string)

	// A partner_region block as defined below.
	partnerRegion?: [...#PartnerRegionObservation] @go(PartnerRegion,[]PartnerRegionObservation)

	// A read_write_endpoint_failover_policy block as defined below.
	readWriteEndpointFailoverPolicy?: [...#MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation] @go(ReadWriteEndpointFailoverPolicy,[]MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation)

	// Failover policy for the read-only endpoint. Defaults to true.
	readonlyEndpointFailoverPolicyEnabled?: null | bool @go(ReadonlyEndpointFailoverPolicyEnabled,*bool)

	// The local replication role of the Managed Instance Failover Group.
	role?: null | string @go(Role,*string)
}

#MSSQLManagedInstanceFailoverGroupParameters: {
	// The Azure Region where the Managed Instance Failover Group should exist. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Required
	location?: null | string @go(Location,*string)

	// The ID of the Azure SQL Managed Instance which will be replicated using a Managed Instance Failover Group. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=MSSQLManagedInstance
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	managedInstanceId?: null | string @go(ManagedInstanceID,*string)

	// The ID of the Azure SQL Managed Instance which will be replicated to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=MSSQLManagedInstance
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	partnerManagedInstanceId?: null | string @go(PartnerManagedInstanceID,*string)

	// A read_write_endpoint_failover_policy block as defined below.
	// +kubebuilder:validation:Optional
	readWriteEndpointFailoverPolicy?: [...#MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters] @go(ReadWriteEndpointFailoverPolicy,[]MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters)

	// Failover policy for the read-only endpoint. Defaults to true.
	// +kubebuilder:validation:Optional
	readonlyEndpointFailoverPolicyEnabled?: null | bool @go(ReadonlyEndpointFailoverPolicyEnabled,*bool)
}

#MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyObservation: {
	// Applies only if mode is Automatic. The grace period in minutes before failover with data loss is attempted.
	graceMinutes?: null | float64 @go(GraceMinutes,*float64)

	// The failover mode. Possible values are Automatic or Manual.
	mode?: null | string @go(Mode,*string)
}

#MSSQLManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyParameters: {
	// Applies only if mode is Automatic. The grace period in minutes before failover with data loss is attempted.
	// +kubebuilder:validation:Optional
	graceMinutes?: null | float64 @go(GraceMinutes,*float64)

	// The failover mode. Possible values are Automatic or Manual.
	// +kubebuilder:validation:Required
	mode?: null | string @go(Mode,*string)
}

#PartnerRegionObservation: {
	// The Azure Region where the Managed Instance Failover Group partner exists.
	location?: null | string @go(Location,*string)

	// The partner replication role of the Managed Instance Failover Group.
	role?: null | string @go(Role,*string)
}

#PartnerRegionParameters: {
}

// MSSQLManagedInstanceFailoverGroupSpec defines the desired state of MSSQLManagedInstanceFailoverGroup
#MSSQLManagedInstanceFailoverGroupSpec: {
	forProvider: #MSSQLManagedInstanceFailoverGroupParameters @go(ForProvider)
}

// MSSQLManagedInstanceFailoverGroupStatus defines the observed state of MSSQLManagedInstanceFailoverGroup.
#MSSQLManagedInstanceFailoverGroupStatus: {
	atProvider?: #MSSQLManagedInstanceFailoverGroupObservation @go(AtProvider)
}

// MSSQLManagedInstanceFailoverGroup is the Schema for the MSSQLManagedInstanceFailoverGroups API. Manages an Azure SQL Managed Instance Failover Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MSSQLManagedInstanceFailoverGroup: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.readWriteEndpointFailoverPolicy)",message="readWriteEndpointFailoverPolicy is a required parameter"
	spec:    #MSSQLManagedInstanceFailoverGroupSpec   @go(Spec)
	status?: #MSSQLManagedInstanceFailoverGroupStatus @go(Status)
}

// MSSQLManagedInstanceFailoverGroupList contains a list of MSSQLManagedInstanceFailoverGroups
#MSSQLManagedInstanceFailoverGroupList: {
	items: [...#MSSQLManagedInstanceFailoverGroup] @go(Items,[]MSSQLManagedInstanceFailoverGroup)
}
