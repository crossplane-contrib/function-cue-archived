// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/sql/v1beta1

package v1beta1

#MSSQLManagedInstanceActiveDirectoryAdministratorObservation: {
	// When true, only permit logins from AAD users and administrators. When false, also allow local database users.
	azureadAuthenticationOnly?: null | bool @go(AzureadAuthenticationOnly,*bool)

	// The ID of the SQL Managed Instance Active Directory Administrator.
	id?: null | string @go(ID,*string)

	// The login name of the principal to set as the Managed Instance Administrator.
	loginUsername?: null | string @go(LoginUsername,*string)

	// The ID of the Azure SQL Managed Instance for which to set the administrator. Changing this forces a new resource to be created.
	managedInstanceId?: null | string @go(ManagedInstanceID,*string)

	// The Object ID of the principal to set as the Managed Instance Administrator.
	objectId?: null | string @go(ObjectID,*string)

	// The Azure Active Directory Tenant ID.
	tenantId?: null | string @go(TenantID,*string)
}

#MSSQLManagedInstanceActiveDirectoryAdministratorParameters: {
	// When true, only permit logins from AAD users and administrators. When false, also allow local database users.
	// +kubebuilder:validation:Optional
	azureadAuthenticationOnly?: null | bool @go(AzureadAuthenticationOnly,*bool)

	// The login name of the principal to set as the Managed Instance Administrator.
	// +kubebuilder:validation:Optional
	loginUsername?: null | string @go(LoginUsername,*string)

	// The ID of the Azure SQL Managed Instance for which to set the administrator. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=MSSQLManagedInstance
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	managedInstanceId?: null | string @go(ManagedInstanceID,*string)

	// The Object ID of the principal to set as the Managed Instance Administrator.
	// +kubebuilder:validation:Optional
	objectId?: null | string @go(ObjectID,*string)

	// The Azure Active Directory Tenant ID.
	// +kubebuilder:validation:Optional
	tenantId?: null | string @go(TenantID,*string)
}

// MSSQLManagedInstanceActiveDirectoryAdministratorSpec defines the desired state of MSSQLManagedInstanceActiveDirectoryAdministrator
#MSSQLManagedInstanceActiveDirectoryAdministratorSpec: {
	forProvider: #MSSQLManagedInstanceActiveDirectoryAdministratorParameters @go(ForProvider)
}

// MSSQLManagedInstanceActiveDirectoryAdministratorStatus defines the observed state of MSSQLManagedInstanceActiveDirectoryAdministrator.
#MSSQLManagedInstanceActiveDirectoryAdministratorStatus: {
	atProvider?: #MSSQLManagedInstanceActiveDirectoryAdministratorObservation @go(AtProvider)
}

// MSSQLManagedInstanceActiveDirectoryAdministrator is the Schema for the MSSQLManagedInstanceActiveDirectoryAdministrators API. Manages an Active Directory Administrator on a Microsoft Azure SQL Managed Instance
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MSSQLManagedInstanceActiveDirectoryAdministrator: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.loginUsername)",message="loginUsername is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.objectId)",message="objectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.tenantId)",message="tenantId is a required parameter"
	spec:    #MSSQLManagedInstanceActiveDirectoryAdministratorSpec   @go(Spec)
	status?: #MSSQLManagedInstanceActiveDirectoryAdministratorStatus @go(Status)
}

// MSSQLManagedInstanceActiveDirectoryAdministratorList contains a list of MSSQLManagedInstanceActiveDirectoryAdministrators
#MSSQLManagedInstanceActiveDirectoryAdministratorList: {
	items: [...#MSSQLManagedInstanceActiveDirectoryAdministrator] @go(Items,[]MSSQLManagedInstanceActiveDirectoryAdministrator)
}
