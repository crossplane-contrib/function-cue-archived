// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/sql/v1beta1

package v1beta1

#IdentityInitParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Managed Instance. Required when type is set to UserAssigned.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this SQL Managed Instance. Possible values are SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#IdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Managed Instance. Required when type is set to UserAssigned.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID for the Service Principal associated with the Identity of this SQL Managed Instance.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that should be configured on this SQL Managed Instance. Possible values are SystemAssigned, UserAssigned.
	type?: null | string @go(Type,*string)
}

#IdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this SQL Managed Instance. Required when type is set to UserAssigned.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this SQL Managed Instance. Possible values are SystemAssigned, UserAssigned.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#MSSQLManagedInstanceInitParameters: {
	// The administrator login name for the new SQL Managed Instance. Changing this forces a new resource to be created.
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// Specifies how the SQL Managed Instance will be collated. Default value is SQL_Latin1_General_CP1_CI_AS. Changing this forces a new resource to be created.
	collation?: null | string @go(Collation,*string)

	// An identity block as defined below.
	identity?: [...#IdentityInitParameters] @go(Identity,[]IdentityInitParameters)

	// What type of license the Managed Instance will use. Possible values are LicenseIncluded and BasePrice.
	licenseType?: null | string @go(LicenseType,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the Public Maintenance Configuration window to apply to the SQL Managed Instance. Valid values include SQL_Default or an Azure Location in the format SQL_{Location}_MI_{Size}(for example SQL_EastUS_MI_1). Defaults to SQL_Default.
	maintenanceConfigurationName?: null | string @go(MaintenanceConfigurationName,*string)

	// The Minimum TLS Version. Default value is 1.2 Valid values include 1.0, 1.1, 1.2.
	minimumTlsVersion?: null | string @go(MinimumTLSVersion,*string)

	// Specifies how the SQL Managed Instance will be accessed. Default value is Default. Valid values include Default, Proxy, and Redirect.
	proxyOverride?: null | string @go(ProxyOverride,*string)

	// Is the public data endpoint enabled? Default value is false.
	publicDataEndpointEnabled?: null | bool @go(PublicDataEndpointEnabled,*bool)

	// Specifies the SKU Name for the SQL Managed Instance. Valid values include GP_Gen4, GP_Gen5, GP_Gen8IM, GP_Gen8IH, BC_Gen4, BC_Gen5, BC_Gen8IM or BC_Gen8IH.
	skuName?: null | string @go(SkuName,*string)

	// Specifies the storage account type used to store backups for this database. Changing this forces a new resource to be created. Possible values are GRS, LRS and ZRS. The default value is GRS.
	storageAccountType?: null | string @go(StorageAccountType,*string)

	// Maximum storage space for the SQL Managed instance. This should be a multiple of 32 (GB).
	storageSizeInGb?: null | float64 @go(StorageSizeInGb,*float64)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The TimeZone ID that the SQL Managed Instance will be operating in. Default value is UTC. Changing this forces a new resource to be created.
	timezoneId?: null | string @go(TimezoneID,*string)

	// Number of cores that should be assigned to the SQL Managed Instance. Values can be 8, 16, or 24 for Gen4 SKUs, or 4, 8, 16, 24, 32, 40, 64, or 80 for Gen5 SKUs.
	vcores?: null | float64 @go(Vcores,*float64)
}

#MSSQLManagedInstanceObservation: {
	// The administrator login name for the new SQL Managed Instance. Changing this forces a new resource to be created.
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// Specifies how the SQL Managed Instance will be collated. Default value is SQL_Latin1_General_CP1_CI_AS. Changing this forces a new resource to be created.
	collation?: null | string @go(Collation,*string)

	// The ID of the SQL Managed Instance which will share the DNS zone. This is a prerequisite for creating an azurerm_sql_managed_instance_failover_group. Setting this after creation forces a new resource to be created.
	dnsZonePartnerId?: null | string @go(DNSZonePartnerID,*string)

	// The fully qualified domain name of the Azure Managed SQL Instance
	fqdn?: null | string @go(Fqdn,*string)

	// The SQL Managed Instance ID.
	id?: null | string @go(ID,*string)

	// An identity block as defined below.
	identity?: [...#IdentityObservation] @go(Identity,[]IdentityObservation)

	// What type of license the Managed Instance will use. Possible values are LicenseIncluded and BasePrice.
	licenseType?: null | string @go(LicenseType,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the Public Maintenance Configuration window to apply to the SQL Managed Instance. Valid values include SQL_Default or an Azure Location in the format SQL_{Location}_MI_{Size}(for example SQL_EastUS_MI_1). Defaults to SQL_Default.
	maintenanceConfigurationName?: null | string @go(MaintenanceConfigurationName,*string)

	// The Minimum TLS Version. Default value is 1.2 Valid values include 1.0, 1.1, 1.2.
	minimumTlsVersion?: null | string @go(MinimumTLSVersion,*string)

	// Specifies how the SQL Managed Instance will be accessed. Default value is Default. Valid values include Default, Proxy, and Redirect.
	proxyOverride?: null | string @go(ProxyOverride,*string)

	// Is the public data endpoint enabled? Default value is false.
	publicDataEndpointEnabled?: null | bool @go(PublicDataEndpointEnabled,*bool)

	// The name of the resource group in which to create the SQL Managed Instance. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the SKU Name for the SQL Managed Instance. Valid values include GP_Gen4, GP_Gen5, GP_Gen8IM, GP_Gen8IH, BC_Gen4, BC_Gen5, BC_Gen8IM or BC_Gen8IH.
	skuName?: null | string @go(SkuName,*string)

	// Specifies the storage account type used to store backups for this database. Changing this forces a new resource to be created. Possible values are GRS, LRS and ZRS. The default value is GRS.
	storageAccountType?: null | string @go(StorageAccountType,*string)

	// Maximum storage space for the SQL Managed instance. This should be a multiple of 32 (GB).
	storageSizeInGb?: null | float64 @go(StorageSizeInGb,*float64)

	// The subnet resource id that the SQL Managed Instance will be associated with. Changing this forces a new resource to be created.
	subnetId?: null | string @go(SubnetID,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The TimeZone ID that the SQL Managed Instance will be operating in. Default value is UTC. Changing this forces a new resource to be created.
	timezoneId?: null | string @go(TimezoneID,*string)

	// Number of cores that should be assigned to the SQL Managed Instance. Values can be 8, 16, or 24 for Gen4 SKUs, or 4, 8, 16, 24, 32, 40, 64, or 80 for Gen5 SKUs.
	vcores?: null | float64 @go(Vcores,*float64)
}

#MSSQLManagedInstanceParameters: {
	// The administrator login name for the new SQL Managed Instance. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	administratorLogin?: null | string @go(AdministratorLogin,*string)

	// Specifies how the SQL Managed Instance will be collated. Default value is SQL_Latin1_General_CP1_CI_AS. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	collation?: null | string @go(Collation,*string)

	// The ID of the SQL Managed Instance which will share the DNS zone. This is a prerequisite for creating an azurerm_sql_managed_instance_failover_group. Setting this after creation forces a new resource to be created.
	// +crossplane:generate:reference:type=MSSQLManagedInstance
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dnsZonePartnerId?: null | string @go(DNSZonePartnerID,*string)

	// An identity block as defined below.
	// +kubebuilder:validation:Optional
	identity?: [...#IdentityParameters] @go(Identity,[]IdentityParameters)

	// What type of license the Managed Instance will use. Possible values are LicenseIncluded and BasePrice.
	// +kubebuilder:validation:Optional
	licenseType?: null | string @go(LicenseType,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the Public Maintenance Configuration window to apply to the SQL Managed Instance. Valid values include SQL_Default or an Azure Location in the format SQL_{Location}_MI_{Size}(for example SQL_EastUS_MI_1). Defaults to SQL_Default.
	// +kubebuilder:validation:Optional
	maintenanceConfigurationName?: null | string @go(MaintenanceConfigurationName,*string)

	// The Minimum TLS Version. Default value is 1.2 Valid values include 1.0, 1.1, 1.2.
	// +kubebuilder:validation:Optional
	minimumTlsVersion?: null | string @go(MinimumTLSVersion,*string)

	// Specifies how the SQL Managed Instance will be accessed. Default value is Default. Valid values include Default, Proxy, and Redirect.
	// +kubebuilder:validation:Optional
	proxyOverride?: null | string @go(ProxyOverride,*string)

	// Is the public data endpoint enabled? Default value is false.
	// +kubebuilder:validation:Optional
	publicDataEndpointEnabled?: null | bool @go(PublicDataEndpointEnabled,*bool)

	// The name of the resource group in which to create the SQL Managed Instance. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// Specifies the SKU Name for the SQL Managed Instance. Valid values include GP_Gen4, GP_Gen5, GP_Gen8IM, GP_Gen8IH, BC_Gen4, BC_Gen5, BC_Gen8IM or BC_Gen8IH.
	// +kubebuilder:validation:Optional
	skuName?: null | string @go(SkuName,*string)

	// Specifies the storage account type used to store backups for this database. Changing this forces a new resource to be created. Possible values are GRS, LRS and ZRS. The default value is GRS.
	// +kubebuilder:validation:Optional
	storageAccountType?: null | string @go(StorageAccountType,*string)

	// Maximum storage space for the SQL Managed instance. This should be a multiple of 32 (GB).
	// +kubebuilder:validation:Optional
	storageSizeInGb?: null | float64 @go(StorageSizeInGb,*float64)

	// The subnet resource id that the SQL Managed Instance will be associated with. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/network/v1beta1.Subnet
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The TimeZone ID that the SQL Managed Instance will be operating in. Default value is UTC. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	timezoneId?: null | string @go(TimezoneID,*string)

	// Number of cores that should be assigned to the SQL Managed Instance. Values can be 8, 16, or 24 for Gen4 SKUs, or 4, 8, 16, 24, 32, 40, 64, or 80 for Gen5 SKUs.
	// +kubebuilder:validation:Optional
	vcores?: null | float64 @go(Vcores,*float64)
}

// MSSQLManagedInstanceSpec defines the desired state of MSSQLManagedInstance
#MSSQLManagedInstanceSpec: {
	forProvider: #MSSQLManagedInstanceParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MSSQLManagedInstanceInitParameters @go(InitProvider)
}

// MSSQLManagedInstanceStatus defines the observed state of MSSQLManagedInstance.
#MSSQLManagedInstanceStatus: {
	atProvider?: #MSSQLManagedInstanceObservation @go(AtProvider)
}

// MSSQLManagedInstance is the Schema for the MSSQLManagedInstances API. Manages a Microsoft SQL Azure Managed Instance.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MSSQLManagedInstance: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.administratorLogin) || has(self.initProvider.administratorLogin)",message="administratorLogin is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.administratorLoginPasswordSecretRef)",message="administratorLoginPasswordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.licenseType) || has(self.initProvider.licenseType)",message="licenseType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.skuName) || has(self.initProvider.skuName)",message="skuName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageSizeInGb) || has(self.initProvider.storageSizeInGb)",message="storageSizeInGb is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vcores) || has(self.initProvider.vcores)",message="vcores is a required parameter"
	spec:    #MSSQLManagedInstanceSpec   @go(Spec)
	status?: #MSSQLManagedInstanceStatus @go(Status)
}

// MSSQLManagedInstanceList contains a list of MSSQLManagedInstances
#MSSQLManagedInstanceList: {
	items: [...#MSSQLManagedInstance] @go(Items,[]MSSQLManagedInstance)
}
