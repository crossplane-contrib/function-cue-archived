// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/marketplaceordering/v1beta1

package v1beta1

#MarketplaceAgreementObservation: {
	// The ID of the Marketplace Agreement.
	id?:              null | string @go(ID,*string)
	licenseTextLink?: null | string @go(LicenseTextLink,*string)

	// The Offer of the Marketplace Image. Changing this forces a new resource to be created.
	offer?: null | string @go(Offer,*string)

	// The Plan of the Marketplace Image. Changing this forces a new resource to be created.
	plan?:              null | string @go(Plan,*string)
	privacyPolicyLink?: null | string @go(PrivacyPolicyLink,*string)

	// The Publisher of the Marketplace Image. Changing this forces a new resource to be created.
	publisher?: null | string @go(Publisher,*string)
}

#MarketplaceAgreementParameters: {
	// The Offer of the Marketplace Image. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	offer?: null | string @go(Offer,*string)

	// The Plan of the Marketplace Image. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	plan?: null | string @go(Plan,*string)

	// The Publisher of the Marketplace Image. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	publisher?: null | string @go(Publisher,*string)
}

// MarketplaceAgreementSpec defines the desired state of MarketplaceAgreement
#MarketplaceAgreementSpec: {
	forProvider: #MarketplaceAgreementParameters @go(ForProvider)
}

// MarketplaceAgreementStatus defines the observed state of MarketplaceAgreement.
#MarketplaceAgreementStatus: {
	atProvider?: #MarketplaceAgreementObservation @go(AtProvider)
}

// MarketplaceAgreement is the Schema for the MarketplaceAgreements API. Allows accepting the Legal Terms for a Marketplace Image.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MarketplaceAgreement: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.offer)",message="offer is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.plan)",message="plan is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.publisher)",message="publisher is a required parameter"
	spec:    #MarketplaceAgreementSpec   @go(Spec)
	status?: #MarketplaceAgreementStatus @go(Status)
}

// MarketplaceAgreementList contains a list of MarketplaceAgreements
#MarketplaceAgreementList: {
	items: [...#MarketplaceAgreement] @go(Items,[]MarketplaceAgreement)
}
