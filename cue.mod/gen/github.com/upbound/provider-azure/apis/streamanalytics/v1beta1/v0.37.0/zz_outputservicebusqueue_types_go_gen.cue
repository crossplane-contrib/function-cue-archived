// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/streamanalytics/v1beta1

package v1beta1

#OutputServiceBusQueueInitParameters: {
	// The authentication mode for the Stream Output. Possible values are Msi and ConnectionString. Defaults to ConnectionString.
	authenticationMode?: null | string @go(AuthenticationMode,*string)

	// The name of the Stream Output. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// A list of property columns to add to the Service Bus Queue output.
	propertyColumns?: [...null | string] @go(PropertyColumns,[]*string)

	// A serialization block as defined below.
	serialization?: [...#OutputServiceBusQueueSerializationInitParameters] @go(Serialization,[]OutputServiceBusQueueSerializationInitParameters)

	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if authentication_mode is ConnectionString.
	sharedAccessPolicyName?: null | string @go(SharedAccessPolicyName,*string)

	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	systemPropertyColumns?: {[string]: null | string} @go(SystemPropertyColumns,map[string]*string)
}

#OutputServiceBusQueueObservation: {
	// The authentication mode for the Stream Output. Possible values are Msi and ConnectionString. Defaults to ConnectionString.
	authenticationMode?: null | string @go(AuthenticationMode,*string)

	// The ID of the Stream Analytics Output ServiceBus Queue.
	id?: null | string @go(ID,*string)

	// The name of the Stream Output. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// A list of property columns to add to the Service Bus Queue output.
	propertyColumns?: [...null | string] @go(PropertyColumns,[]*string)

	// The name of the Service Bus Queue.
	queueName?: null | string @go(QueueName,*string)

	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A serialization block as defined below.
	serialization?: [...#OutputServiceBusQueueSerializationObservation] @go(Serialization,[]OutputServiceBusQueueSerializationObservation)

	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	servicebusNamespace?: null | string @go(ServiceBusNamespace,*string)

	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if authentication_mode is ConnectionString.
	sharedAccessPolicyName?: null | string @go(SharedAccessPolicyName,*string)

	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	streamAnalyticsJobName?: null | string @go(StreamAnalyticsJobName,*string)

	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	systemPropertyColumns?: {[string]: null | string} @go(SystemPropertyColumns,map[string]*string)
}

#OutputServiceBusQueueParameters: {
	// The authentication mode for the Stream Output. Possible values are Msi and ConnectionString. Defaults to ConnectionString.
	// +kubebuilder:validation:Optional
	authenticationMode?: null | string @go(AuthenticationMode,*string)

	// The name of the Stream Output. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A list of property columns to add to the Service Bus Queue output.
	// +kubebuilder:validation:Optional
	propertyColumns?: [...null | string] @go(PropertyColumns,[]*string)

	// The name of the Service Bus Queue.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/servicebus/v1beta1.Queue
	// +kubebuilder:validation:Optional
	queueName?: null | string @go(QueueName,*string)

	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A serialization block as defined below.
	// +kubebuilder:validation:Optional
	serialization?: [...#OutputServiceBusQueueSerializationParameters] @go(Serialization,[]OutputServiceBusQueueSerializationParameters)

	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/servicebus/v1beta1.ServiceBusNamespace
	// +kubebuilder:validation:Optional
	servicebusNamespace?: null | string @go(ServiceBusNamespace,*string)

	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if authentication_mode is ConnectionString.
	// +kubebuilder:validation:Optional
	sharedAccessPolicyName?: null | string @go(SharedAccessPolicyName,*string)

	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Job
	// +kubebuilder:validation:Optional
	streamAnalyticsJobName?: null | string @go(StreamAnalyticsJobName,*string)

	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Queue Output.
	// +kubebuilder:validation:Optional
	systemPropertyColumns?: {[string]: null | string} @go(SystemPropertyColumns,map[string]*string)
}

#OutputServiceBusQueueSerializationInitParameters: {
	// The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to UTF8.
	encoding?: null | string @go(Encoding,*string)

	// The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are   (space), , (comma), 	 (tab), | (pipe) and ;.
	fieldDelimiter?: null | string @go(FieldDelimiter,*string)

	// Specifies the format of the JSON the output will be written in. Possible values are Array and LineSeparated.
	format?: null | string @go(Format,*string)

	// The serialization format used for outgoing data streams. Possible values are Avro, Csv, Json and Parquet.
	type?: null | string @go(Type,*string)
}

#OutputServiceBusQueueSerializationObservation: {
	// The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to UTF8.
	encoding?: null | string @go(Encoding,*string)

	// The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are   (space), , (comma), 	 (tab), | (pipe) and ;.
	fieldDelimiter?: null | string @go(FieldDelimiter,*string)

	// Specifies the format of the JSON the output will be written in. Possible values are Array and LineSeparated.
	format?: null | string @go(Format,*string)

	// The serialization format used for outgoing data streams. Possible values are Avro, Csv, Json and Parquet.
	type?: null | string @go(Type,*string)
}

#OutputServiceBusQueueSerializationParameters: {
	// The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to UTF8.
	// +kubebuilder:validation:Optional
	encoding?: null | string @go(Encoding,*string)

	// The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are   (space), , (comma), 	 (tab), | (pipe) and ;.
	// +kubebuilder:validation:Optional
	fieldDelimiter?: null | string @go(FieldDelimiter,*string)

	// Specifies the format of the JSON the output will be written in. Possible values are Array and LineSeparated.
	// +kubebuilder:validation:Optional
	format?: null | string @go(Format,*string)

	// The serialization format used for outgoing data streams. Possible values are Avro, Csv, Json and Parquet.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// OutputServiceBusQueueSpec defines the desired state of OutputServiceBusQueue
#OutputServiceBusQueueSpec: {
	forProvider: #OutputServiceBusQueueParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #OutputServiceBusQueueInitParameters @go(InitProvider)
}

// OutputServiceBusQueueStatus defines the observed state of OutputServiceBusQueue.
#OutputServiceBusQueueStatus: {
	atProvider?: #OutputServiceBusQueueObservation @go(AtProvider)
}

// OutputServiceBusQueue is the Schema for the OutputServiceBusQueues API. Manages a Stream Analytics Output to a ServiceBus Queue.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#OutputServiceBusQueue: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serialization) || (has(self.initProvider) && has(self.initProvider.serialization))",message="spec.forProvider.serialization is a required parameter"
	spec:    #OutputServiceBusQueueSpec   @go(Spec)
	status?: #OutputServiceBusQueueStatus @go(Status)
}

// OutputServiceBusQueueList contains a list of OutputServiceBusQueues
#OutputServiceBusQueueList: {
	items: [...#OutputServiceBusQueue] @go(Items,[]OutputServiceBusQueue)
}
