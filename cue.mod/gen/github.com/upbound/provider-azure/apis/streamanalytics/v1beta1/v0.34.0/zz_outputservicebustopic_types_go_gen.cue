// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/streamanalytics/v1beta1

package v1beta1

#OutputServiceBusTopicObservation: {
	// The authentication mode for the Stream Output. Possible values are Msi and ConnectionString. Defaults to ConnectionString.
	authenticationMode?: null | string @go(AuthenticationMode,*string)

	// The ID of the Stream Analytics Output ServiceBus Topic.
	id?: null | string @go(ID,*string)

	// The name of the Stream Output. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// A list of property columns to add to the Service Bus Topic output.
	propertyColumns?: [...null | string] @go(PropertyColumns,[]*string)

	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A serialization block as defined below.
	serialization?: [...#OutputServiceBusTopicSerializationObservation] @go(Serialization,[]OutputServiceBusTopicSerializationObservation)

	// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
	servicebusNamespace?: null | string @go(ServiceBusNamespace,*string)

	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if authentication_mode is ConnectionString.
	sharedAccessPolicyName?: null | string @go(SharedAccessPolicyName,*string)

	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	streamAnalyticsJobName?: null | string @go(StreamAnalyticsJobName,*string)

	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
	systemPropertyColumns?: {[string]: null | string} @go(SystemPropertyColumns,map[string]*string)

	// The name of the Service Bus Topic.
	topicName?: null | string @go(TopicName,*string)
}

#OutputServiceBusTopicParameters: {
	// The authentication mode for the Stream Output. Possible values are Msi and ConnectionString. Defaults to ConnectionString.
	// +kubebuilder:validation:Optional
	authenticationMode?: null | string @go(AuthenticationMode,*string)

	// The name of the Stream Output. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A list of property columns to add to the Service Bus Topic output.
	// +kubebuilder:validation:Optional
	propertyColumns?: [...null | string] @go(PropertyColumns,[]*string)

	// The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A serialization block as defined below.
	// +kubebuilder:validation:Optional
	serialization?: [...#OutputServiceBusTopicSerializationParameters] @go(Serialization,[]OutputServiceBusTopicSerializationParameters)

	// The namespace that is associated with the desired Event Hub, Service Bus Topic, Service Bus Topic, etc.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/servicebus/v1beta1.ServiceBusNamespace
	// +kubebuilder:validation:Optional
	servicebusNamespace?: null | string @go(ServiceBusNamespace,*string)

	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required if authentication_mode is ConnectionString.
	// +kubebuilder:validation:Optional
	sharedAccessPolicyName?: null | string @go(SharedAccessPolicyName,*string)

	// The name of the Stream Analytics Job. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=Job
	// +kubebuilder:validation:Optional
	streamAnalyticsJobName?: null | string @go(StreamAnalyticsJobName,*string)

	// A key-value pair of system property columns that will be attached to the outgoing messages for the Service Bus Topic Output.
	// +kubebuilder:validation:Optional
	systemPropertyColumns?: {[string]: null | string} @go(SystemPropertyColumns,map[string]*string)

	// The name of the Service Bus Topic.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/servicebus/v1beta1.Topic
	// +kubebuilder:validation:Optional
	topicName?: null | string @go(TopicName,*string)
}

#OutputServiceBusTopicSerializationObservation: {
	// The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to UTF8.
	encoding?: null | string @go(Encoding,*string)

	// The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are   (space), , (comma), 	 (tab), | (pipe) and ;.
	fieldDelimiter?: null | string @go(FieldDelimiter,*string)

	// Specifies the format of the JSON the output will be written in. Possible values are Array and LineSeparated.
	format?: null | string @go(Format,*string)

	// The serialization format used for outgoing data streams. Possible values are Avro, Csv, Json and Parquet.
	type?: null | string @go(Type,*string)
}

#OutputServiceBusTopicSerializationParameters: {
	// The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to UTF8.
	// +kubebuilder:validation:Optional
	encoding?: null | string @go(Encoding,*string)

	// The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are   (space), , (comma), 	 (tab), | (pipe) and ;.
	// +kubebuilder:validation:Optional
	fieldDelimiter?: null | string @go(FieldDelimiter,*string)

	// Specifies the format of the JSON the output will be written in. Possible values are Array and LineSeparated.
	// +kubebuilder:validation:Optional
	format?: null | string @go(Format,*string)

	// The serialization format used for outgoing data streams. Possible values are Avro, Csv, Json and Parquet.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

// OutputServiceBusTopicSpec defines the desired state of OutputServiceBusTopic
#OutputServiceBusTopicSpec: {
	forProvider: #OutputServiceBusTopicParameters @go(ForProvider)
}

// OutputServiceBusTopicStatus defines the observed state of OutputServiceBusTopic.
#OutputServiceBusTopicStatus: {
	atProvider?: #OutputServiceBusTopicObservation @go(AtProvider)
}

// OutputServiceBusTopic is the Schema for the OutputServiceBusTopics API. Manages a Stream Analytics Output to a ServiceBus Topic.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#OutputServiceBusTopic: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.serialization)",message="serialization is a required parameter"
	spec:    #OutputServiceBusTopicSpec   @go(Spec)
	status?: #OutputServiceBusTopicStatus @go(Status)
}

// OutputServiceBusTopicList contains a list of OutputServiceBusTopics
#OutputServiceBusTopicList: {
	items: [...#OutputServiceBusTopic] @go(Items,[]OutputServiceBusTopic)
}
