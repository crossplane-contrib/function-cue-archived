// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/operationalinsights/v1beta1

package v1beta1

#LogAnalyticsLinkedStorageAccountObservation: {
	// The data source type which should be used for this Log Analytics Linked Storage Account. Possible values are CustomLogs, AzureWatson, Query, Ingestion and Alerts. Changing this forces a new Log Analytics Linked Storage Account to be created.
	dataSourceType?: null | string @go(DataSourceType,*string)

	// The ID of the Log Analytics Linked Storage Account.
	id?: null | string @go(ID,*string)

	// The name of the Resource Group where the Log Analytics Linked Storage Account should exist. Changing this forces a new Log Analytics Linked Storage Account to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The storage account resource ids to be linked.
	storageAccountIds?: [...null | string] @go(StorageAccountIds,[]*string)

	// The resource ID of the Log Analytics Workspace. Changing this forces a new Log Analytics Linked Storage Account to be created.
	workspaceResourceId?: null | string @go(WorkspaceResourceID,*string)
}

#LogAnalyticsLinkedStorageAccountParameters: {
	// The data source type which should be used for this Log Analytics Linked Storage Account. Possible values are CustomLogs, AzureWatson, Query, Ingestion and Alerts. Changing this forces a new Log Analytics Linked Storage Account to be created.
	// +kubebuilder:validation:Optional
	dataSourceType?: null | string @go(DataSourceType,*string)

	// The name of the Resource Group where the Log Analytics Linked Storage Account should exist. Changing this forces a new Log Analytics Linked Storage Account to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The storage account resource ids to be linked.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	storageAccountIds?: [...null | string] @go(StorageAccountIds,[]*string)

	// The resource ID of the Log Analytics Workspace. Changing this forces a new Log Analytics Linked Storage Account to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/operationalinsights/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	workspaceResourceId?: null | string @go(WorkspaceResourceID,*string)
}

// LogAnalyticsLinkedStorageAccountSpec defines the desired state of LogAnalyticsLinkedStorageAccount
#LogAnalyticsLinkedStorageAccountSpec: {
	forProvider: #LogAnalyticsLinkedStorageAccountParameters @go(ForProvider)
}

// LogAnalyticsLinkedStorageAccountStatus defines the observed state of LogAnalyticsLinkedStorageAccount.
#LogAnalyticsLinkedStorageAccountStatus: {
	atProvider?: #LogAnalyticsLinkedStorageAccountObservation @go(AtProvider)
}

// LogAnalyticsLinkedStorageAccount is the Schema for the LogAnalyticsLinkedStorageAccounts API. Manages a Log Analytics Linked Storage Account.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#LogAnalyticsLinkedStorageAccount: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.dataSourceType)",message="dataSourceType is a required parameter"
	spec:    #LogAnalyticsLinkedStorageAccountSpec   @go(Spec)
	status?: #LogAnalyticsLinkedStorageAccountStatus @go(Status)
}

// LogAnalyticsLinkedStorageAccountList contains a list of LogAnalyticsLinkedStorageAccounts
#LogAnalyticsLinkedStorageAccountList: {
	items: [...#LogAnalyticsLinkedStorageAccount] @go(Items,[]LogAnalyticsLinkedStorageAccount)
}
