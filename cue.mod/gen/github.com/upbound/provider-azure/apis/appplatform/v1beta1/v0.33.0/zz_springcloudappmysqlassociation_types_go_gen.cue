// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#SpringCloudAppMySQLAssociationObservation: {
	// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
	databaseName?: null | string @go(DatabaseName,*string)

	// The ID of the Spring Cloud Application MySQL Association.
	id?: null | string @go(ID,*string)

	// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
	mysqlServerId?: null | string @go(MySQLServerID,*string)

	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)

	// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
	username?: null | string @go(Username,*string)
}

#SpringCloudAppMySQLAssociationParameters: {
	// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dbformysql/v1beta1.Database
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dbformysql/v1beta1.Server
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	mysqlServerId?: null | string @go(MySQLServerID,*string)

	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudApp
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)

	// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dbformysql/v1beta1.Server
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("administrator_login",false)
	// +kubebuilder:validation:Optional
	username?: null | string @go(Username,*string)
}

// SpringCloudAppMySQLAssociationSpec defines the desired state of SpringCloudAppMySQLAssociation
#SpringCloudAppMySQLAssociationSpec: {
	forProvider: #SpringCloudAppMySQLAssociationParameters @go(ForProvider)
}

// SpringCloudAppMySQLAssociationStatus defines the observed state of SpringCloudAppMySQLAssociation.
#SpringCloudAppMySQLAssociationStatus: {
	atProvider?: #SpringCloudAppMySQLAssociationObservation @go(AtProvider)
}

// SpringCloudAppMySQLAssociation is the Schema for the SpringCloudAppMySQLAssociations API. Associates a
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudAppMySQLAssociation: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.passwordSecretRef)",message="passwordSecretRef is a required parameter"
	spec:    #SpringCloudAppMySQLAssociationSpec   @go(Spec)
	status?: #SpringCloudAppMySQLAssociationStatus @go(Status)
}

// SpringCloudAppMySQLAssociationList contains a list of SpringCloudAppMySQLAssociations
#SpringCloudAppMySQLAssociationList: {
	items: [...#SpringCloudAppMySQLAssociation] @go(Items,[]SpringCloudAppMySQLAssociation)
}
