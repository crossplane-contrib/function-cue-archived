// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#SpringCloudAcceleratorObservation: {
	// The ID of the Spring Cloud Accelerator.
	id?: null | string @go(ID,*string)

	// The name which should be used for this Spring Cloud Accelerator. Changing this forces a new Spring Cloud Accelerator to be created. The only possible value is default.
	name?: null | string @go(Name,*string)

	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Accelerator to be created.
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)
}

#SpringCloudAcceleratorParameters: {
	// The name which should be used for this Spring Cloud Accelerator. Changing this forces a new Spring Cloud Accelerator to be created. The only possible value is default.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Accelerator to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudService
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)
}

// SpringCloudAcceleratorSpec defines the desired state of SpringCloudAccelerator
#SpringCloudAcceleratorSpec: {
	forProvider: #SpringCloudAcceleratorParameters @go(ForProvider)
}

// SpringCloudAcceleratorStatus defines the observed state of SpringCloudAccelerator.
#SpringCloudAcceleratorStatus: {
	atProvider?: #SpringCloudAcceleratorObservation @go(AtProvider)
}

// SpringCloudAccelerator is the Schema for the SpringCloudAccelerators API. Manages a Spring Cloud Accelerator.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudAccelerator: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #SpringCloudAcceleratorSpec   @go(Spec)
	status?: #SpringCloudAcceleratorStatus @go(Status)
}

// SpringCloudAcceleratorList contains a list of SpringCloudAccelerators
#SpringCloudAcceleratorList: {
	items: [...#SpringCloudAccelerator] @go(Items,[]SpringCloudAccelerator)
}
