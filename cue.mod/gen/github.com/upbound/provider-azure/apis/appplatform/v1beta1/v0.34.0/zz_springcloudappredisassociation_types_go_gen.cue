// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#SpringCloudAppRedisAssociationObservation: {
	// The ID of the Spring Cloud Application Redis Association.
	id?: null | string @go(ID,*string)

	// Specifies the Redis Cache access key.
	redisAccessKey?: null | string @go(RedisAccessKey,*string)

	// Specifies the Redis Cache resource ID. Changing this forces a new resource to be created.
	redisCacheId?: null | string @go(RedisCacheID,*string)

	// Should SSL be used when connecting to Redis? Defaults to true.
	sslEnabled?: null | bool @go(SSLEnabled,*bool)

	// Specifies the Spring Cloud Application resource ID in which the Association is created. Changing this forces a new resource to be created.
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)
}

#SpringCloudAppRedisAssociationParameters: {
	// Specifies the Redis Cache access key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cache/v1beta1.RedisCache
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("primary_access_key",true)
	// +kubebuilder:validation:Optional
	redisAccessKey?: null | string @go(RedisAccessKey,*string)

	// Specifies the Redis Cache resource ID. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cache/v1beta1.RedisCache
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	redisCacheId?: null | string @go(RedisCacheID,*string)

	// Should SSL be used when connecting to Redis? Defaults to true.
	// +kubebuilder:validation:Optional
	sslEnabled?: null | bool @go(SSLEnabled,*bool)

	// Specifies the Spring Cloud Application resource ID in which the Association is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudApp
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)
}

// SpringCloudAppRedisAssociationSpec defines the desired state of SpringCloudAppRedisAssociation
#SpringCloudAppRedisAssociationSpec: {
	forProvider: #SpringCloudAppRedisAssociationParameters @go(ForProvider)
}

// SpringCloudAppRedisAssociationStatus defines the observed state of SpringCloudAppRedisAssociation.
#SpringCloudAppRedisAssociationStatus: {
	atProvider?: #SpringCloudAppRedisAssociationObservation @go(AtProvider)
}

// SpringCloudAppRedisAssociation is the Schema for the SpringCloudAppRedisAssociations API. Associates a
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudAppRedisAssociation: {
	spec:    #SpringCloudAppRedisAssociationSpec   @go(Spec)
	status?: #SpringCloudAppRedisAssociationStatus @go(Status)
}

// SpringCloudAppRedisAssociationList contains a list of SpringCloudAppRedisAssociations
#SpringCloudAppRedisAssociationList: {
	items: [...#SpringCloudAppRedisAssociation] @go(Items,[]SpringCloudAppRedisAssociation)
}
