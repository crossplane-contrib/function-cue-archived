// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#SpringCloudStorageObservation: {
	// The ID of the Spring Cloud Storage.
	id?: null | string @go(ID,*string)

	// The ID of the Spring Cloud Service where the Spring Cloud Storage should exist. Changing this forces a new Spring Cloud Storage to be created.
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)

	// The access key of the Azure Storage Account.
	storageAccountKey?: null | string @go(StorageAccountKey,*string)

	// The account name of the Azure Storage Account.
	storageAccountName?: null | string @go(StorageAccountName,*string)
}

#SpringCloudStorageParameters: {
	// The ID of the Spring Cloud Service where the Spring Cloud Storage should exist. Changing this forces a new Spring Cloud Storage to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudService
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)

	// The access key of the Azure Storage Account.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("primary_access_key",true)
	// +kubebuilder:validation:Optional
	storageAccountKey?: null | string @go(StorageAccountKey,*string)

	// The account name of the Azure Storage Account.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +kubebuilder:validation:Optional
	storageAccountName?: null | string @go(StorageAccountName,*string)
}

// SpringCloudStorageSpec defines the desired state of SpringCloudStorage
#SpringCloudStorageSpec: {
	forProvider: #SpringCloudStorageParameters @go(ForProvider)
}

// SpringCloudStorageStatus defines the observed state of SpringCloudStorage.
#SpringCloudStorageStatus: {
	atProvider?: #SpringCloudStorageObservation @go(AtProvider)
}

// SpringCloudStorage is the Schema for the SpringCloudStorages API. Manages a Spring Cloud Storage.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudStorage: {
	spec:    #SpringCloudStorageSpec   @go(Spec)
	status?: #SpringCloudStorageStatus @go(Status)
}

// SpringCloudStorageList contains a list of SpringCloudStorages
#SpringCloudStorageList: {
	items: [...#SpringCloudStorage] @go(Items,[]SpringCloudStorage)
}
