// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#LaunchInitParameters: {
	// Specifies a map of non-sensitive properties for launchProperties.
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// Specifies a map of sensitive properties for launchProperties.
	secrets?: {[string]: null | string} @go(Secrets,map[string]*string)
}

#LaunchObservation: {
	// Specifies a map of non-sensitive properties for launchProperties.
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// Specifies a map of sensitive properties for launchProperties.
	secrets?: {[string]: null | string} @go(Secrets,map[string]*string)
}

#LaunchParameters: {
	// Specifies a map of non-sensitive properties for launchProperties.
	// +kubebuilder:validation:Optional
	properties?: {[string]: null | string} @go(Properties,map[string]*string)

	// Specifies a map of sensitive properties for launchProperties.
	// +kubebuilder:validation:Optional
	secrets?: {[string]: null | string} @go(Secrets,map[string]*string)
}

#SpringCloudBuildPackBindingInitParameters: {
	// Specifies the Build Pack Binding Type. Allowed values are ApacheSkyWalking, AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.
	bindingType?: null | string @go(BindingType,*string)

	// A launch block as defined below.
	launch?: [...#LaunchInitParameters] @go(Launch,[]LaunchInitParameters)
}

#SpringCloudBuildPackBindingObservation: {
	// Specifies the Build Pack Binding Type. Allowed values are ApacheSkyWalking, AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.
	bindingType?: null | string @go(BindingType,*string)

	// The ID of the Spring Cloud Build Pack Binding.
	id?: null | string @go(ID,*string)

	// A launch block as defined below.
	launch?: [...#LaunchObservation] @go(Launch,[]LaunchObservation)

	// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	springCloudBuilderId?: null | string @go(SpringCloudBuilderID,*string)
}

#SpringCloudBuildPackBindingParameters: {
	// Specifies the Build Pack Binding Type. Allowed values are ApacheSkyWalking, AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.
	// +kubebuilder:validation:Optional
	bindingType?: null | string @go(BindingType,*string)

	// A launch block as defined below.
	// +kubebuilder:validation:Optional
	launch?: [...#LaunchParameters] @go(Launch,[]LaunchParameters)

	// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudBuilder
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudBuilderId?: null | string @go(SpringCloudBuilderID,*string)
}

// SpringCloudBuildPackBindingSpec defines the desired state of SpringCloudBuildPackBinding
#SpringCloudBuildPackBindingSpec: {
	forProvider: #SpringCloudBuildPackBindingParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SpringCloudBuildPackBindingInitParameters @go(InitProvider)
}

// SpringCloudBuildPackBindingStatus defines the observed state of SpringCloudBuildPackBinding.
#SpringCloudBuildPackBindingStatus: {
	atProvider?: #SpringCloudBuildPackBindingObservation @go(AtProvider)
}

// SpringCloudBuildPackBinding is the Schema for the SpringCloudBuildPackBindings API. Manages a Spring Cloud Build Pack Binding.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudBuildPackBinding: {
	spec:    #SpringCloudBuildPackBindingSpec   @go(Spec)
	status?: #SpringCloudBuildPackBindingStatus @go(Status)
}

// SpringCloudBuildPackBindingList contains a list of SpringCloudBuildPackBindings
#SpringCloudBuildPackBindingList: {
	items: [...#SpringCloudBuildPackBinding] @go(Items,[]SpringCloudBuildPackBinding)
}
