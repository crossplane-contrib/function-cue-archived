// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#SpringCloudAppCosmosDBAssociationInitParameters: {
	// Specifies the API type which should be used when connecting to the CosmosDB Account. Possible values are cassandra, gremlin, mongo, sql or table. Changing this forces a new resource to be created.
	apiType?: null | string @go(APIType,*string)

	// Specifies the name of the Cassandra Keyspace which the Spring Cloud App should be associated with. Should only be set when api_type is cassandra.
	cosmosdbCassandraKeyspaceName?: null | string @go(CosmosDBCassandraKeySpaceName,*string)

	// Specifies the name of the Gremlin Database which the Spring Cloud App should be associated with. Should only be set when api_type is gremlin.
	cosmosdbGremlinDatabaseName?: null | string @go(CosmosDBGremlinDatabaseName,*string)

	// Specifies the name of the Gremlin Graph which the Spring Cloud App should be associated with. Should only be set when api_type is gremlin.
	cosmosdbGremlinGraphName?: null | string @go(CosmosDBGremlinGraphName,*string)

	// Specifies the name of the Mongo Database which the Spring Cloud App should be associated with. Should only be set when api_type is mongo.
	cosmosdbMongoDatabaseName?: null | string @go(CosmosDBMongoDatabaseName,*string)

	// Specifies the name of the SQL Database which the Spring Cloud App should be associated with. Should only be set when api_type is sql.
	cosmosdbSqlDatabaseName?: null | string @go(CosmosDBSQLDatabaseName,*string)
}

#SpringCloudAppCosmosDBAssociationObservation: {
	// Specifies the API type which should be used when connecting to the CosmosDB Account. Possible values are cassandra, gremlin, mongo, sql or table. Changing this forces a new resource to be created.
	apiType?: null | string @go(APIType,*string)

	// Specifies the CosmosDB Account access key.
	cosmosdbAccessKey?: null | string @go(CosmosDBAccessKey,*string)

	// Specifies the ID of the CosmosDB Account. Changing this forces a new resource to be created.
	cosmosdbAccountId?: null | string @go(CosmosDBAccountID,*string)

	// Specifies the name of the Cassandra Keyspace which the Spring Cloud App should be associated with. Should only be set when api_type is cassandra.
	cosmosdbCassandraKeyspaceName?: null | string @go(CosmosDBCassandraKeySpaceName,*string)

	// Specifies the name of the Gremlin Database which the Spring Cloud App should be associated with. Should only be set when api_type is gremlin.
	cosmosdbGremlinDatabaseName?: null | string @go(CosmosDBGremlinDatabaseName,*string)

	// Specifies the name of the Gremlin Graph which the Spring Cloud App should be associated with. Should only be set when api_type is gremlin.
	cosmosdbGremlinGraphName?: null | string @go(CosmosDBGremlinGraphName,*string)

	// Specifies the name of the Mongo Database which the Spring Cloud App should be associated with. Should only be set when api_type is mongo.
	cosmosdbMongoDatabaseName?: null | string @go(CosmosDBMongoDatabaseName,*string)

	// Specifies the name of the SQL Database which the Spring Cloud App should be associated with. Should only be set when api_type is sql.
	cosmosdbSqlDatabaseName?: null | string @go(CosmosDBSQLDatabaseName,*string)

	// The ID of the Spring Cloud Application CosmosDB Association.
	id?: null | string @go(ID,*string)

	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)
}

#SpringCloudAppCosmosDBAssociationParameters: {
	// Specifies the API type which should be used when connecting to the CosmosDB Account. Possible values are cassandra, gremlin, mongo, sql or table. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	apiType?: null | string @go(APIType,*string)

	// Specifies the CosmosDB Account access key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cosmosdb/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("primary_key",true)
	// +kubebuilder:validation:Optional
	cosmosdbAccessKey?: null | string @go(CosmosDBAccessKey,*string)

	// Specifies the ID of the CosmosDB Account. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/cosmosdb/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	cosmosdbAccountId?: null | string @go(CosmosDBAccountID,*string)

	// Specifies the name of the Cassandra Keyspace which the Spring Cloud App should be associated with. Should only be set when api_type is cassandra.
	// +kubebuilder:validation:Optional
	cosmosdbCassandraKeyspaceName?: null | string @go(CosmosDBCassandraKeySpaceName,*string)

	// Specifies the name of the Gremlin Database which the Spring Cloud App should be associated with. Should only be set when api_type is gremlin.
	// +kubebuilder:validation:Optional
	cosmosdbGremlinDatabaseName?: null | string @go(CosmosDBGremlinDatabaseName,*string)

	// Specifies the name of the Gremlin Graph which the Spring Cloud App should be associated with. Should only be set when api_type is gremlin.
	// +kubebuilder:validation:Optional
	cosmosdbGremlinGraphName?: null | string @go(CosmosDBGremlinGraphName,*string)

	// Specifies the name of the Mongo Database which the Spring Cloud App should be associated with. Should only be set when api_type is mongo.
	// +kubebuilder:validation:Optional
	cosmosdbMongoDatabaseName?: null | string @go(CosmosDBMongoDatabaseName,*string)

	// Specifies the name of the SQL Database which the Spring Cloud App should be associated with. Should only be set when api_type is sql.
	// +kubebuilder:validation:Optional
	cosmosdbSqlDatabaseName?: null | string @go(CosmosDBSQLDatabaseName,*string)

	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudApp
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)
}

// SpringCloudAppCosmosDBAssociationSpec defines the desired state of SpringCloudAppCosmosDBAssociation
#SpringCloudAppCosmosDBAssociationSpec: {
	forProvider: #SpringCloudAppCosmosDBAssociationParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SpringCloudAppCosmosDBAssociationInitParameters @go(InitProvider)
}

// SpringCloudAppCosmosDBAssociationStatus defines the observed state of SpringCloudAppCosmosDBAssociation.
#SpringCloudAppCosmosDBAssociationStatus: {
	atProvider?: #SpringCloudAppCosmosDBAssociationObservation @go(AtProvider)
}

// SpringCloudAppCosmosDBAssociation is the Schema for the SpringCloudAppCosmosDBAssociations API. Associates a
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudAppCosmosDBAssociation: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.apiType) || has(self.initProvider.apiType)",message="apiType is a required parameter"
	spec:    #SpringCloudAppCosmosDBAssociationSpec   @go(Spec)
	status?: #SpringCloudAppCosmosDBAssociationStatus @go(Status)
}

// SpringCloudAppCosmosDBAssociationList contains a list of SpringCloudAppCosmosDBAssociations
#SpringCloudAppCosmosDBAssociationList: {
	items: [...#SpringCloudAppCosmosDBAssociation] @go(Items,[]SpringCloudAppCosmosDBAssociation)
}
