// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#APIMetadataInitParameters: {
	// Detailed description of the APIs available on the Gateway instance.
	description?: null | string @go(Description,*string)

	// Location of additional documentation for the APIs available on the Gateway instance.
	documentationUrl?: null | string @go(DocumentationURL,*string)

	// Base URL that API consumers will use to access APIs on the Gateway instance.
	serverUrl?: null | string @go(ServerURL,*string)

	// Specifies the title describing the context of the APIs available on the Gateway instance.
	title?: null | string @go(Title,*string)

	// Specifies the version of APIs available on this Gateway instance.
	version?: null | string @go(Version,*string)
}

#APIMetadataObservation: {
	// Detailed description of the APIs available on the Gateway instance.
	description?: null | string @go(Description,*string)

	// Location of additional documentation for the APIs available on the Gateway instance.
	documentationUrl?: null | string @go(DocumentationURL,*string)

	// Base URL that API consumers will use to access APIs on the Gateway instance.
	serverUrl?: null | string @go(ServerURL,*string)

	// Specifies the title describing the context of the APIs available on the Gateway instance.
	title?: null | string @go(Title,*string)

	// Specifies the version of APIs available on this Gateway instance.
	version?: null | string @go(Version,*string)
}

#APIMetadataParameters: {
	// Detailed description of the APIs available on the Gateway instance.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Location of additional documentation for the APIs available on the Gateway instance.
	// +kubebuilder:validation:Optional
	documentationUrl?: null | string @go(DocumentationURL,*string)

	// Base URL that API consumers will use to access APIs on the Gateway instance.
	// +kubebuilder:validation:Optional
	serverUrl?: null | string @go(ServerURL,*string)

	// Specifies the title describing the context of the APIs available on the Gateway instance.
	// +kubebuilder:validation:Optional
	title?: null | string @go(Title,*string)

	// Specifies the version of APIs available on this Gateway instance.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#CorsInitParameters: {
	// Allowed headers in cross-site requests. The special value * allows actual requests to send any header.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// Allowed HTTP methods on cross-site requests. The special value * allows all methods. If not set, GET and HEAD are allowed by default. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS and PUT.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// Allowed origins to make cross-site requests. The special value * allows all domains.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// is user credentials are supported on cross-site requests?
	credentialsAllowed?: null | bool @go(CredentialsAllowed,*bool)

	// HTTP response headers to expose for cross-site requests.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// How long, in seconds, the response from a pre-flight request can be cached by clients.
	maxAgeSeconds?: null | float64 @go(MaxAgeSeconds,*float64)
}

#CorsObservation: {
	// Allowed headers in cross-site requests. The special value * allows actual requests to send any header.
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// Allowed HTTP methods on cross-site requests. The special value * allows all methods. If not set, GET and HEAD are allowed by default. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS and PUT.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// Allowed origins to make cross-site requests. The special value * allows all domains.
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// is user credentials are supported on cross-site requests?
	credentialsAllowed?: null | bool @go(CredentialsAllowed,*bool)

	// HTTP response headers to expose for cross-site requests.
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// How long, in seconds, the response from a pre-flight request can be cached by clients.
	maxAgeSeconds?: null | float64 @go(MaxAgeSeconds,*float64)
}

#CorsParameters: {
	// Allowed headers in cross-site requests. The special value * allows actual requests to send any header.
	// +kubebuilder:validation:Optional
	allowedHeaders?: [...null | string] @go(AllowedHeaders,[]*string)

	// Allowed HTTP methods on cross-site requests. The special value * allows all methods. If not set, GET and HEAD are allowed by default. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS and PUT.
	// +kubebuilder:validation:Optional
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// Allowed origins to make cross-site requests. The special value * allows all domains.
	// +kubebuilder:validation:Optional
	allowedOrigins?: [...null | string] @go(AllowedOrigins,[]*string)

	// is user credentials are supported on cross-site requests?
	// +kubebuilder:validation:Optional
	credentialsAllowed?: null | bool @go(CredentialsAllowed,*bool)

	// HTTP response headers to expose for cross-site requests.
	// +kubebuilder:validation:Optional
	exposedHeaders?: [...null | string] @go(ExposedHeaders,[]*string)

	// How long, in seconds, the response from a pre-flight request can be cached by clients.
	// +kubebuilder:validation:Optional
	maxAgeSeconds?: null | float64 @go(MaxAgeSeconds,*float64)
}

#SpringCloudGatewayInitParameters: {
	// A api_metadata block as defined below.
	apiMetadata?: [...#APIMetadataInitParameters] @go(APIMetadata,[]APIMetadataInitParameters)

	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.
	applicationPerformanceMonitoringTypes?: [...null | string] @go(ApplicationPerformanceMonitoringTypes,[]*string)

	// A cors block as defined below.
	cors?: [...#CorsInitParameters] @go(Cors,[]CorsInitParameters)

	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	environmentVariables?: {[string]: null | string} @go(EnvironmentVariables,map[string]*string)

	// is only https is allowed?
	httpsOnly?: null | bool @go(HTTPSOnly,*bool)

	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between 1 and 500. Defaults to 1 if not specified.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// A quota block as defined below.
	quota?: [...#SpringCloudGatewayQuotaInitParameters] @go(Quota,[]SpringCloudGatewayQuotaInitParameters)

	// A sso block as defined below.
	sso?: [...#SpringCloudGatewaySsoInitParameters] @go(Sso,[]SpringCloudGatewaySsoInitParameters)
}

#SpringCloudGatewayObservation: {
	// A api_metadata block as defined below.
	apiMetadata?: [...#APIMetadataObservation] @go(APIMetadata,[]APIMetadataObservation)

	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.
	applicationPerformanceMonitoringTypes?: [...null | string] @go(ApplicationPerformanceMonitoringTypes,[]*string)

	// A cors block as defined below.
	cors?: [...#CorsObservation] @go(Cors,[]CorsObservation)

	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	environmentVariables?: {[string]: null | string} @go(EnvironmentVariables,map[string]*string)

	// is only https is allowed?
	httpsOnly?: null | bool @go(HTTPSOnly,*bool)

	// The ID of the Spring Cloud Gateway.
	id?: null | string @go(ID,*string)

	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between 1 and 500. Defaults to 1 if not specified.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// A quota block as defined below.
	quota?: [...#SpringCloudGatewayQuotaObservation] @go(Quota,[]SpringCloudGatewayQuotaObservation)

	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)

	// A sso block as defined below.
	sso?: [...#SpringCloudGatewaySsoObservation] @go(Sso,[]SpringCloudGatewaySsoObservation)

	// URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
	url?: null | string @go(URL,*string)
}

#SpringCloudGatewayParameters: {
	// A api_metadata block as defined below.
	// +kubebuilder:validation:Optional
	apiMetadata?: [...#APIMetadataParameters] @go(APIMetadata,[]APIMetadataParameters)

	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.
	// +kubebuilder:validation:Optional
	applicationPerformanceMonitoringTypes?: [...null | string] @go(ApplicationPerformanceMonitoringTypes,[]*string)

	// A cors block as defined below.
	// +kubebuilder:validation:Optional
	cors?: [...#CorsParameters] @go(Cors,[]CorsParameters)

	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	environmentVariables?: {[string]: null | string} @go(EnvironmentVariables,map[string]*string)

	// is only https is allowed?
	// +kubebuilder:validation:Optional
	httpsOnly?: null | bool @go(HTTPSOnly,*bool)

	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between 1 and 500. Defaults to 1 if not specified.
	// +kubebuilder:validation:Optional
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// A quota block as defined below.
	// +kubebuilder:validation:Optional
	quota?: [...#SpringCloudGatewayQuotaParameters] @go(Quota,[]SpringCloudGatewayQuotaParameters)

	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudService
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)

	// A sso block as defined below.
	// +kubebuilder:validation:Optional
	sso?: [...#SpringCloudGatewaySsoParameters] @go(Sso,[]SpringCloudGatewaySsoParameters)
}

#SpringCloudGatewayQuotaInitParameters: {
	// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.
	cpu?: null | string @go(CPU,*string)

	// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 1Gi if not specified.
	memory?: null | string @go(Memory,*string)
}

#SpringCloudGatewayQuotaObservation: {
	// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.
	cpu?: null | string @go(CPU,*string)

	// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 1Gi if not specified.
	memory?: null | string @go(Memory,*string)
}

#SpringCloudGatewayQuotaParameters: {
	// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.
	// +kubebuilder:validation:Optional
	cpu?: null | string @go(CPU,*string)

	// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 1Gi if not specified.
	// +kubebuilder:validation:Optional
	memory?: null | string @go(Memory,*string)
}

#SpringCloudGatewaySsoInitParameters: {
	// The public identifier for the application.
	clientId?: null | string @go(ClientID,*string)

	// The secret known only to the application and the authorization server.
	clientSecret?: null | string @go(ClientSecret,*string)

	// The URI of Issuer Identifier.
	issuerUri?: null | string @go(IssuerURI,*string)

	// It defines the specific actions applications can be allowed to do on a user's behalf.
	scope?: [...null | string] @go(Scope,[]*string)
}

#SpringCloudGatewaySsoObservation: {
	// The public identifier for the application.
	clientId?: null | string @go(ClientID,*string)

	// The secret known only to the application and the authorization server.
	clientSecret?: null | string @go(ClientSecret,*string)

	// The URI of Issuer Identifier.
	issuerUri?: null | string @go(IssuerURI,*string)

	// It defines the specific actions applications can be allowed to do on a user's behalf.
	scope?: [...null | string] @go(Scope,[]*string)
}

#SpringCloudGatewaySsoParameters: {
	// The public identifier for the application.
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// The secret known only to the application and the authorization server.
	// +kubebuilder:validation:Optional
	clientSecret?: null | string @go(ClientSecret,*string)

	// The URI of Issuer Identifier.
	// +kubebuilder:validation:Optional
	issuerUri?: null | string @go(IssuerURI,*string)

	// It defines the specific actions applications can be allowed to do on a user's behalf.
	// +kubebuilder:validation:Optional
	scope?: [...null | string] @go(Scope,[]*string)
}

// SpringCloudGatewaySpec defines the desired state of SpringCloudGateway
#SpringCloudGatewaySpec: {
	forProvider: #SpringCloudGatewayParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SpringCloudGatewayInitParameters @go(InitProvider)
}

// SpringCloudGatewayStatus defines the observed state of SpringCloudGateway.
#SpringCloudGatewayStatus: {
	atProvider?: #SpringCloudGatewayObservation @go(AtProvider)
}

// SpringCloudGateway is the Schema for the SpringCloudGateways API. Manages a Spring Cloud Gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudGateway: {
	spec:    #SpringCloudGatewaySpec   @go(Spec)
	status?: #SpringCloudGatewayStatus @go(Status)
}

// SpringCloudGatewayList contains a list of SpringCloudGateways
#SpringCloudGatewayList: {
	items: [...#SpringCloudGateway] @go(Items,[]SpringCloudGateway)
}
