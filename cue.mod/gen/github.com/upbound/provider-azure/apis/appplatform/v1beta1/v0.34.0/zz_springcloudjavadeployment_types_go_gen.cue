// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#SpringCloudJavaDeploymentObservation: {
	// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
	environmentVariables?: {[string]: null | string} @go(EnvironmentVariables,map[string]*string)

	// The ID of the Spring Cloud Deployment.
	id?: null | string @go(ID,*string)

	// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between 1 and 500. Defaults to 1 if not specified.
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// Specifies the jvm option of the Spring Cloud Deployment.
	jvmOptions?: null | string @go(JvmOptions,*string)

	// A quota block as defined below.
	quota?: [...#SpringCloudJavaDeploymentQuotaObservation] @go(Quota,[]SpringCloudJavaDeploymentQuotaObservation)

	// Specifies the runtime version of the Spring Cloud Deployment. Possible Values are Java_8, Java_11 and Java_17. Defaults to Java_8.
	runtimeVersion?: null | string @go(RuntimeVersion,*string)

	// Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)
}

#SpringCloudJavaDeploymentParameters: {
	// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
	// +kubebuilder:validation:Optional
	environmentVariables?: {[string]: null | string} @go(EnvironmentVariables,map[string]*string)

	// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between 1 and 500. Defaults to 1 if not specified.
	// +kubebuilder:validation:Optional
	instanceCount?: null | float64 @go(InstanceCount,*float64)

	// Specifies the jvm option of the Spring Cloud Deployment.
	// +kubebuilder:validation:Optional
	jvmOptions?: null | string @go(JvmOptions,*string)

	// A quota block as defined below.
	// +kubebuilder:validation:Optional
	quota?: [...#SpringCloudJavaDeploymentQuotaParameters] @go(Quota,[]SpringCloudJavaDeploymentQuotaParameters)

	// Specifies the runtime version of the Spring Cloud Deployment. Possible Values are Java_8, Java_11 and Java_17. Defaults to Java_8.
	// +kubebuilder:validation:Optional
	runtimeVersion?: null | string @go(RuntimeVersion,*string)

	// Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudApp
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudAppId?: null | string @go(SpringCloudAppID,*string)
}

#SpringCloudJavaDeploymentQuotaObservation: {
	// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.
	cpu?: null | string @go(CPU,*string)

	// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 1Gi if not specified.
	memory?: null | string @go(Memory,*string)
}

#SpringCloudJavaDeploymentQuotaParameters: {
	// Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.
	// +kubebuilder:validation:Optional
	cpu?: null | string @go(CPU,*string)

	// Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 1Gi if not specified.
	// +kubebuilder:validation:Optional
	memory?: null | string @go(Memory,*string)
}

// SpringCloudJavaDeploymentSpec defines the desired state of SpringCloudJavaDeployment
#SpringCloudJavaDeploymentSpec: {
	forProvider: #SpringCloudJavaDeploymentParameters @go(ForProvider)
}

// SpringCloudJavaDeploymentStatus defines the observed state of SpringCloudJavaDeployment.
#SpringCloudJavaDeploymentStatus: {
	atProvider?: #SpringCloudJavaDeploymentObservation @go(AtProvider)
}

// SpringCloudJavaDeployment is the Schema for the SpringCloudJavaDeployments API. Manages an Azure Spring Cloud Deployment with a Java runtime.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudJavaDeployment: {
	spec:    #SpringCloudJavaDeploymentSpec   @go(Spec)
	status?: #SpringCloudJavaDeploymentStatus @go(Status)
}

// SpringCloudJavaDeploymentList contains a list of SpringCloudJavaDeployments
#SpringCloudJavaDeploymentList: {
	items: [...#SpringCloudJavaDeployment] @go(Items,[]SpringCloudJavaDeployment)
}
