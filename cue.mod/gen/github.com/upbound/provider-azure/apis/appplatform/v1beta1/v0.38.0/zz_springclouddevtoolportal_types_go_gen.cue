// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/appplatform/v1beta1

package v1beta1

#SpringCloudDevToolPortalInitParameters: {
	// Should the Accelerator plugin be enabled?
	applicationAcceleratorEnabled?: null | bool @go(ApplicationAcceleratorEnabled,*bool)

	// Should the Application Live View be enabled?
	applicationLiveViewEnabled?: null | bool @go(ApplicationLiveViewEnabled,*bool)

	// The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is default. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
	name?: null | string @go(Name,*string)

	// Is public network access enabled?
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// A sso block as defined below.
	sso?: [...#SpringCloudDevToolPortalSsoInitParameters] @go(Sso,[]SpringCloudDevToolPortalSsoInitParameters)
}

#SpringCloudDevToolPortalObservation: {
	// Should the Accelerator plugin be enabled?
	applicationAcceleratorEnabled?: null | bool @go(ApplicationAcceleratorEnabled,*bool)

	// Should the Application Live View be enabled?
	applicationLiveViewEnabled?: null | bool @go(ApplicationLiveViewEnabled,*bool)

	// The ID of the Spring Cloud Dev Tool Portal.
	id?: null | string @go(ID,*string)

	// The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is default. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
	name?: null | string @go(Name,*string)

	// Is public network access enabled?
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)

	// A sso block as defined below.
	sso?: [...#SpringCloudDevToolPortalSsoObservation] @go(Sso,[]SpringCloudDevToolPortalSsoObservation)
}

#SpringCloudDevToolPortalParameters: {
	// Should the Accelerator plugin be enabled?
	// +kubebuilder:validation:Optional
	applicationAcceleratorEnabled?: null | bool @go(ApplicationAcceleratorEnabled,*bool)

	// Should the Application Live View be enabled?
	// +kubebuilder:validation:Optional
	applicationLiveViewEnabled?: null | bool @go(ApplicationLiveViewEnabled,*bool)

	// The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is default. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Is public network access enabled?
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/appplatform/v1beta1.SpringCloudService
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	springCloudServiceId?: null | string @go(SpringCloudServiceID,*string)

	// A sso block as defined below.
	// +kubebuilder:validation:Optional
	sso?: [...#SpringCloudDevToolPortalSsoParameters] @go(Sso,[]SpringCloudDevToolPortalSsoParameters)
}

#SpringCloudDevToolPortalSsoInitParameters: {
	// Specifies the public identifier for the application.
	clientId?: null | string @go(ClientID,*string)

	// Specifies the secret known only to the application and the authorization server.
	clientSecret?: null | string @go(ClientSecret,*string)

	// Specifies the URI of a JSON file with generic OIDC provider configuration.
	metadataUrl?: null | string @go(MetadataURL,*string)

	// Specifies a list of specific actions applications can be allowed to do on a user's behalf.
	scope?: [...null | string] @go(Scope,[]*string)
}

#SpringCloudDevToolPortalSsoObservation: {
	// Specifies the public identifier for the application.
	clientId?: null | string @go(ClientID,*string)

	// Specifies the secret known only to the application and the authorization server.
	clientSecret?: null | string @go(ClientSecret,*string)

	// Specifies the URI of a JSON file with generic OIDC provider configuration.
	metadataUrl?: null | string @go(MetadataURL,*string)

	// Specifies a list of specific actions applications can be allowed to do on a user's behalf.
	scope?: [...null | string] @go(Scope,[]*string)
}

#SpringCloudDevToolPortalSsoParameters: {
	// Specifies the public identifier for the application.
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// Specifies the secret known only to the application and the authorization server.
	// +kubebuilder:validation:Optional
	clientSecret?: null | string @go(ClientSecret,*string)

	// Specifies the URI of a JSON file with generic OIDC provider configuration.
	// +kubebuilder:validation:Optional
	metadataUrl?: null | string @go(MetadataURL,*string)

	// Specifies a list of specific actions applications can be allowed to do on a user's behalf.
	// +kubebuilder:validation:Optional
	scope?: [...null | string] @go(Scope,[]*string)
}

// SpringCloudDevToolPortalSpec defines the desired state of SpringCloudDevToolPortal
#SpringCloudDevToolPortalSpec: {
	forProvider: #SpringCloudDevToolPortalParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SpringCloudDevToolPortalInitParameters @go(InitProvider)
}

// SpringCloudDevToolPortalStatus defines the observed state of SpringCloudDevToolPortal.
#SpringCloudDevToolPortalStatus: {
	atProvider?: #SpringCloudDevToolPortalObservation @go(AtProvider)
}

// SpringCloudDevToolPortal is the Schema for the SpringCloudDevToolPortals API. Manages a Spring Cloud Dev Tool Portal.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SpringCloudDevToolPortal: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	spec:    #SpringCloudDevToolPortalSpec   @go(Spec)
	status?: #SpringCloudDevToolPortalStatus @go(Status)
}

// SpringCloudDevToolPortalList contains a list of SpringCloudDevToolPortals
#SpringCloudDevToolPortalList: {
	items: [...#SpringCloudDevToolPortal] @go(Items,[]SpringCloudDevToolPortal)
}
