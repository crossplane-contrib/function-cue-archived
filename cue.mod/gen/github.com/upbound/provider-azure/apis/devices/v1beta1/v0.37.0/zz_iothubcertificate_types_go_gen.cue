// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devices/v1beta1

package v1beta1

#IOTHubCertificateInitParameters: {
	// Is the certificate verified? Defaults to false.
	isVerified?: null | bool @go(IsVerified,*bool)
}

#IOTHubCertificateObservation: {
	// The ID of the IoTHub Certificate.
	id?: null | string @go(ID,*string)

	// The name of the IoTHub that this certificate will be attached to. Changing this forces a new resource to be created.
	iothubName?: null | string @go(IOTHubName,*string)

	// Is the certificate verified? Defaults to false.
	isVerified?: null | bool @go(IsVerified,*bool)

	// The name of the resource group under which the IotHub Certificate resource has to be created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#IOTHubCertificateParameters: {
	// The name of the IoTHub that this certificate will be attached to. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devices/v1beta1.IOTHub
	// +kubebuilder:validation:Optional
	iothubName?: null | string @go(IOTHubName,*string)

	// Is the certificate verified? Defaults to false.
	// +kubebuilder:validation:Optional
	isVerified?: null | bool @go(IsVerified,*bool)

	// The name of the resource group under which the IotHub Certificate resource has to be created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

// IOTHubCertificateSpec defines the desired state of IOTHubCertificate
#IOTHubCertificateSpec: {
	forProvider: #IOTHubCertificateParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #IOTHubCertificateInitParameters @go(InitProvider)
}

// IOTHubCertificateStatus defines the observed state of IOTHubCertificate.
#IOTHubCertificateStatus: {
	atProvider?: #IOTHubCertificateObservation @go(AtProvider)
}

// IOTHubCertificate is the Schema for the IOTHubCertificates API. Manages an IoTHub Certificate.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IOTHubCertificate: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.certificateContentSecretRef)",message="spec.forProvider.certificateContentSecretRef is a required parameter"
	spec:    #IOTHubCertificateSpec   @go(Spec)
	status?: #IOTHubCertificateStatus @go(Status)
}

// IOTHubCertificateList contains a list of IOTHubCertificates
#IOTHubCertificateList: {
	items: [...#IOTHubCertificate] @go(Items,[]IOTHubCertificate)
}
