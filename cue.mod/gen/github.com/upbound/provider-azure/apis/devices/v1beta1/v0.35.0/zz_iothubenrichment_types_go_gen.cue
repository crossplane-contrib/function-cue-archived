// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devices/v1beta1

package v1beta1

#IOTHubEnrichmentInitParameters: {
	// The list of endpoints which will be enriched.
	endpointNames?: [...null | string] @go(EndpointNames,[]*string)

	// The key of the enrichment. Changing this forces a new resource to be created.
	key?: null | string @go(Key,*string)

	// The value of the enrichment. Value can be any static string, the name of the IoT hub sending the message (use $iothubname) or information from the device twin (ex: $twin.tags.latitude)
	value?: null | string @go(Value,*string)
}

#IOTHubEnrichmentObservation: {
	// The list of endpoints which will be enriched.
	endpointNames?: [...null | string] @go(EndpointNames,[]*string)

	// The ID of the IoTHub Enrichment.
	id?: null | string @go(ID,*string)

	// The IoTHub name of the enrichment. Changing this forces a new resource to be created.
	iothubName?: null | string @go(IOTHubName,*string)

	// The key of the enrichment. Changing this forces a new resource to be created.
	key?: null | string @go(Key,*string)

	// The name of the resource group under which the IoTHub resource is created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The value of the enrichment. Value can be any static string, the name of the IoT hub sending the message (use $iothubname) or information from the device twin (ex: $twin.tags.latitude)
	value?: null | string @go(Value,*string)
}

#IOTHubEnrichmentParameters: {
	// The list of endpoints which will be enriched.
	// +kubebuilder:validation:Optional
	endpointNames?: [...null | string] @go(EndpointNames,[]*string)

	// The IoTHub name of the enrichment. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devices/v1beta1.IOTHub
	// +kubebuilder:validation:Optional
	iothubName?: null | string @go(IOTHubName,*string)

	// The key of the enrichment. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// The name of the resource group under which the IoTHub resource is created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The value of the enrichment. Value can be any static string, the name of the IoT hub sending the message (use $iothubname) or information from the device twin (ex: $twin.tags.latitude)
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

// IOTHubEnrichmentSpec defines the desired state of IOTHubEnrichment
#IOTHubEnrichmentSpec: {
	forProvider: #IOTHubEnrichmentParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #IOTHubEnrichmentInitParameters @go(InitProvider)
}

// IOTHubEnrichmentStatus defines the observed state of IOTHubEnrichment.
#IOTHubEnrichmentStatus: {
	atProvider?: #IOTHubEnrichmentObservation @go(AtProvider)
}

// IOTHubEnrichment is the Schema for the IOTHubEnrichments API. Manages an IotHub Enrichment
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IOTHubEnrichment: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.endpointNames) || has(self.initProvider.endpointNames)",message="endpointNames is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.key) || has(self.initProvider.key)",message="key is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.value) || has(self.initProvider.value)",message="value is a required parameter"
	spec:    #IOTHubEnrichmentSpec   @go(Spec)
	status?: #IOTHubEnrichmentStatus @go(Status)
}

// IOTHubEnrichmentList contains a list of IOTHubEnrichments
#IOTHubEnrichmentList: {
	items: [...#IOTHubEnrichment] @go(Items,[]IOTHubEnrichment)
}
