// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devices/v1beta1

package v1beta1

#IOTHubEndpointStorageContainerObservation: {
	// Type used to authenticate against the storage endpoint. Possible values are keyBased and identityBased. Defaults to keyBased.
	authenticationType?: null | string @go(AuthenticationType,*string)

	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	batchFrequencyInSeconds?: null | float64 @go(BatchFrequencyInSeconds,*float64)

	// The name of storage container in the storage account.
	containerName?: null | string @go(ContainerName,*string)

	// Encoding that is used to serialize messages to blobs. Supported values are Avro, AvroDeflate and JSON. Default value is Avro. Changing this forces a new resource to be created.
	encoding?: null | string @go(Encoding,*string)

	// URI of the Storage Container endpoint. This corresponds to the primary_blob_endpoint of the parent storage account. This attribute can only be specified and is mandatory when authentication_type is identityBased.
	endpointUri?: null | string @go(EndpointURI,*string)

	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	fileNameFormat?: null | string @go(FileNameFormat,*string)

	// The ID of the IoTHub Storage Container Endpoint.
	id?: null | string @go(ID,*string)

	// The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
	iothubId?: null | string @go(IOTHubID,*string)

	// ID of the User Managed Identity used to authenticate against the storage endpoint.
	identityId?: null | string @go(IdentityID,*string)

	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	maxChunkSizeInBytes?: null | float64 @go(MaxChunkSizeInBytes,*float64)

	// The name of the resource group under which the Storage Container has been created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#IOTHubEndpointStorageContainerParameters: {
	// Type used to authenticate against the storage endpoint. Possible values are keyBased and identityBased. Defaults to keyBased.
	// +kubebuilder:validation:Optional
	authenticationType?: null | string @go(AuthenticationType,*string)

	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	// +kubebuilder:validation:Optional
	batchFrequencyInSeconds?: null | float64 @go(BatchFrequencyInSeconds,*float64)

	// The name of storage container in the storage account.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Container
	// +kubebuilder:validation:Optional
	containerName?: null | string @go(ContainerName,*string)

	// Encoding that is used to serialize messages to blobs. Supported values are Avro, AvroDeflate and JSON. Default value is Avro. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	encoding?: null | string @go(Encoding,*string)

	// URI of the Storage Container endpoint. This corresponds to the primary_blob_endpoint of the parent storage account. This attribute can only be specified and is mandatory when authentication_type is identityBased.
	// +kubebuilder:validation:Optional
	endpointUri?: null | string @go(EndpointURI,*string)

	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	// +kubebuilder:validation:Optional
	fileNameFormat?: null | string @go(FileNameFormat,*string)

	// The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devices/v1beta1.IOTHub
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	iothubId?: null | string @go(IOTHubID,*string)

	// ID of the User Managed Identity used to authenticate against the storage endpoint.
	// +kubebuilder:validation:Optional
	identityId?: null | string @go(IdentityID,*string)

	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	// +kubebuilder:validation:Optional
	maxChunkSizeInBytes?: null | float64 @go(MaxChunkSizeInBytes,*float64)

	// The name of the resource group under which the Storage Container has been created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

// IOTHubEndpointStorageContainerSpec defines the desired state of IOTHubEndpointStorageContainer
#IOTHubEndpointStorageContainerSpec: {
	forProvider: #IOTHubEndpointStorageContainerParameters @go(ForProvider)
}

// IOTHubEndpointStorageContainerStatus defines the observed state of IOTHubEndpointStorageContainer.
#IOTHubEndpointStorageContainerStatus: {
	atProvider?: #IOTHubEndpointStorageContainerObservation @go(AtProvider)
}

// IOTHubEndpointStorageContainer is the Schema for the IOTHubEndpointStorageContainers API. Manages an IotHub Storage Container Endpoint
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IOTHubEndpointStorageContainer: {
	spec:    #IOTHubEndpointStorageContainerSpec   @go(Spec)
	status?: #IOTHubEndpointStorageContainerStatus @go(Status)
}

// IOTHubEndpointStorageContainerList contains a list of IOTHubEndpointStorageContainers
#IOTHubEndpointStorageContainerList: {
	items: [...#IOTHubEndpointStorageContainer] @go(Items,[]IOTHubEndpointStorageContainer)
}
