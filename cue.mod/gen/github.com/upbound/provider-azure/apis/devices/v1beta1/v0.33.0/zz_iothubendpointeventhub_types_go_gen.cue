// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/devices/v1beta1

package v1beta1

#IOTHubEndpointEventHubObservation: {
	// Type used to authenticate against the Event Hub endpoint. Possible values are keyBased and identityBased. Defaults to keyBased.
	authenticationType?: null | string @go(AuthenticationType,*string)

	// URI of the Event Hubs Namespace endpoint. This attribute can only be specified and is mandatory when authentication_type is identityBased.
	endpointUri?: null | string @go(EndpointURI,*string)

	// Name of the Event Hub. This attribute can only be specified and is mandatory when authentication_type is identityBased.
	entityPath?: null | string @go(EntityPath,*string)

	// The ID of the IoTHub EventHub Endpoint.
	id?: null | string @go(ID,*string)

	// The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
	iothubId?: null | string @go(IOTHubID,*string)

	// ID of the User Managed Identity used to authenticate against the Event Hub endpoint.
	identityId?: null | string @go(IdentityID,*string)

	// The name of the resource group under which the Event Hub has been created. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

#IOTHubEndpointEventHubParameters: {
	// Type used to authenticate against the Event Hub endpoint. Possible values are keyBased and identityBased. Defaults to keyBased.
	// +kubebuilder:validation:Optional
	authenticationType?: null | string @go(AuthenticationType,*string)

	// URI of the Event Hubs Namespace endpoint. This attribute can only be specified and is mandatory when authentication_type is identityBased.
	// +kubebuilder:validation:Optional
	endpointUri?: null | string @go(EndpointURI,*string)

	// Name of the Event Hub. This attribute can only be specified and is mandatory when authentication_type is identityBased.
	// +kubebuilder:validation:Optional
	entityPath?: null | string @go(EntityPath,*string)

	// The IoTHub ID for the endpoint. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/devices/v1beta1.IOTHub
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	iothubId?: null | string @go(IOTHubID,*string)

	// ID of the User Managed Identity used to authenticate against the Event Hub endpoint.
	// +kubebuilder:validation:Optional
	identityId?: null | string @go(IdentityID,*string)

	// The name of the resource group under which the Event Hub has been created. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)
}

// IOTHubEndpointEventHubSpec defines the desired state of IOTHubEndpointEventHub
#IOTHubEndpointEventHubSpec: {
	forProvider: #IOTHubEndpointEventHubParameters @go(ForProvider)
}

// IOTHubEndpointEventHubStatus defines the observed state of IOTHubEndpointEventHub.
#IOTHubEndpointEventHubStatus: {
	atProvider?: #IOTHubEndpointEventHubObservation @go(AtProvider)
}

// IOTHubEndpointEventHub is the Schema for the IOTHubEndpointEventHubs API. Manages an IotHub EventHub Endpoint
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#IOTHubEndpointEventHub: {
	spec:    #IOTHubEndpointEventHubSpec   @go(Spec)
	status?: #IOTHubEndpointEventHubStatus @go(Status)
}

// IOTHubEndpointEventHubList contains a list of IOTHubEndpointEventHubs
#IOTHubEndpointEventHubList: {
	items: [...#IOTHubEndpointEventHub] @go(Items,[]IOTHubEndpointEventHub)
}
