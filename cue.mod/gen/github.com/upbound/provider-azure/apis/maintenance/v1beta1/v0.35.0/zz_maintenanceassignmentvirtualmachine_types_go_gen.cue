// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/maintenance/v1beta1

package v1beta1

#MaintenanceAssignmentVirtualMachineInitParameters: {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)
}

#MaintenanceAssignmentVirtualMachineObservation: {
	// The ID of the Maintenance Assignment.
	id?: null | string @go(ID,*string)

	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	maintenanceConfigurationId?: null | string @go(MaintenanceConfigurationID,*string)

	// Specifies the Virtual Machine ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	virtualMachineId?: null | string @go(VirtualMachineID,*string)
}

#MaintenanceAssignmentVirtualMachineParameters: {
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/maintenance/v1beta1.MaintenanceConfiguration
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	maintenanceConfigurationId?: null | string @go(MaintenanceConfigurationID,*string)

	// Specifies the Virtual Machine ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.LinuxVirtualMachine
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualMachineId?: null | string @go(VirtualMachineID,*string)
}

// MaintenanceAssignmentVirtualMachineSpec defines the desired state of MaintenanceAssignmentVirtualMachine
#MaintenanceAssignmentVirtualMachineSpec: {
	forProvider: #MaintenanceAssignmentVirtualMachineParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MaintenanceAssignmentVirtualMachineInitParameters @go(InitProvider)
}

// MaintenanceAssignmentVirtualMachineStatus defines the observed state of MaintenanceAssignmentVirtualMachine.
#MaintenanceAssignmentVirtualMachineStatus: {
	atProvider?: #MaintenanceAssignmentVirtualMachineObservation @go(AtProvider)
}

// MaintenanceAssignmentVirtualMachine is the Schema for the MaintenanceAssignmentVirtualMachines API. Manages a Maintenance Assignment.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MaintenanceAssignmentVirtualMachine: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	spec:    #MaintenanceAssignmentVirtualMachineSpec   @go(Spec)
	status?: #MaintenanceAssignmentVirtualMachineStatus @go(Status)
}

// MaintenanceAssignmentVirtualMachineList contains a list of MaintenanceAssignmentVirtualMachines
#MaintenanceAssignmentVirtualMachineList: {
	items: [...#MaintenanceAssignmentVirtualMachine] @go(Items,[]MaintenanceAssignmentVirtualMachine)
}
