// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/storagesync/v1beta1

package v1beta1

#StorageSyncObservation: {
	// The ID of the Storage Sync.
	id?: null | string @go(ID,*string)

	// Incoming traffic policy. Possible values are AllowAllTraffic and AllowVirtualNetworksOnly.
	incomingTrafficPolicy?: null | string @go(IncomingTrafficPolicy,*string)

	// The Azure Region where the Storage Sync should exist. Changing this forces a new Storage Sync to be created.
	location?: null | string @go(Location,*string)

	// The name of the Resource Group where the Storage Sync should exist. Changing this forces a new Storage Sync to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Storage Sync.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#StorageSyncParameters: {
	// Incoming traffic policy. Possible values are AllowAllTraffic and AllowVirtualNetworksOnly.
	// +kubebuilder:validation:Optional
	incomingTrafficPolicy?: null | string @go(IncomingTrafficPolicy,*string)

	// The Azure Region where the Storage Sync should exist. Changing this forces a new Storage Sync to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the Resource Group where the Storage Sync should exist. Changing this forces a new Storage Sync to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Storage Sync.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// StorageSyncSpec defines the desired state of StorageSync
#StorageSyncSpec: {
	forProvider: #StorageSyncParameters @go(ForProvider)
}

// StorageSyncStatus defines the observed state of StorageSync.
#StorageSyncStatus: {
	atProvider?: #StorageSyncObservation @go(AtProvider)
}

// StorageSync is the Schema for the StorageSyncs API. Manages a Storage Sync.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#StorageSync: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	spec:    #StorageSyncSpec   @go(Spec)
	status?: #StorageSyncStatus @go(Status)
}

// StorageSyncList contains a list of StorageSyncs
#StorageSyncList: {
	items: [...#StorageSync] @go(Items,[]StorageSync)
}
