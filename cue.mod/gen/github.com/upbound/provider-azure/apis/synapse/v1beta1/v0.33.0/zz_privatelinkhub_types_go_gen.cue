// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/synapse/v1beta1

package v1beta1

#PrivateLinkHubObservation: {
	// The ID of the Synapse Private Link Hub.
	id?: null | string @go(ID,*string)

	// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Synapse Private Link Hub.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#PrivateLinkHubParameters: {
	// Specifies the Azure location where the Synapse Private Link Hub exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the resource group in which to create the Synapse Private Link Hub. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A mapping of tags which should be assigned to the Synapse Private Link Hub.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// PrivateLinkHubSpec defines the desired state of PrivateLinkHub
#PrivateLinkHubSpec: {
	forProvider: #PrivateLinkHubParameters @go(ForProvider)
}

// PrivateLinkHubStatus defines the observed state of PrivateLinkHub.
#PrivateLinkHubStatus: {
	atProvider?: #PrivateLinkHubObservation @go(AtProvider)
}

// PrivateLinkHub is the Schema for the PrivateLinkHubs API. Manages a Synapse Private Link Hub.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#PrivateLinkHub: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	spec:    #PrivateLinkHubSpec   @go(Spec)
	status?: #PrivateLinkHubStatus @go(Status)
}

// PrivateLinkHubList contains a list of PrivateLinkHubs
#PrivateLinkHubList: {
	items: [...#PrivateLinkHub] @go(Items,[]PrivateLinkHub)
}
