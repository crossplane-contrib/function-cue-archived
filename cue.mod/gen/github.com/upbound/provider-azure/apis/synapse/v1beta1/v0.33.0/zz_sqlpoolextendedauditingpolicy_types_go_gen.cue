// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/synapse/v1beta1

package v1beta1

#SQLPoolExtendedAuditingPolicyObservation: {
	// The ID of the Synapse SQL Pool Extended Auditing Policy.
	id?: null | string @go(ID,*string)

	// Enable audit events to Azure Monitor? To enable server audit events to Azure Monitor, please enable its master database audit events to Azure Monitor. Defaults to true.
	logMonitoringEnabled?: null | bool @go(LogMonitoringEnabled,*bool)

	// The number of days to retain logs for in the storage account. Defaults to 0.
	retentionInDays?: null | float64 @go(RetentionInDays,*float64)

	// The ID of the Synapse SQL pool to set the extended auditing policy. Changing this forces a new resource to be created.
	sqlPoolId?: null | string @go(SQLPoolID,*string)

	// Is storage_account_access_key value the storage's secondary key?
	storageAccountAccessKeyIsSecondary?: null | bool @go(StorageAccountAccessKeyIsSecondary,*bool)

	// The blob storage endpoint (e.g. https://example.blob.core.windows.net). This blob storage will hold all extended auditing logs.
	storageEndpoint?: null | string @go(StorageEndpoint,*string)
}

#SQLPoolExtendedAuditingPolicyParameters: {
	// Enable audit events to Azure Monitor? To enable server audit events to Azure Monitor, please enable its master database audit events to Azure Monitor. Defaults to true.
	// +kubebuilder:validation:Optional
	logMonitoringEnabled?: null | bool @go(LogMonitoringEnabled,*bool)

	// The number of days to retain logs for in the storage account. Defaults to 0.
	// +kubebuilder:validation:Optional
	retentionInDays?: null | float64 @go(RetentionInDays,*float64)

	// The ID of the Synapse SQL pool to set the extended auditing policy. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/synapse/v1beta1.SQLPool
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	sqlPoolId?: null | string @go(SQLPoolID,*string)

	// Is storage_account_access_key value the storage's secondary key?
	// +kubebuilder:validation:Optional
	storageAccountAccessKeyIsSecondary?: null | bool @go(StorageAccountAccessKeyIsSecondary,*bool)

	// The blob storage endpoint (e.g. https://example.blob.core.windows.net). This blob storage will hold all extended auditing logs.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("primary_blob_endpoint",true)
	// +kubebuilder:validation:Optional
	storageEndpoint?: null | string @go(StorageEndpoint,*string)
}

// SQLPoolExtendedAuditingPolicySpec defines the desired state of SQLPoolExtendedAuditingPolicy
#SQLPoolExtendedAuditingPolicySpec: {
	forProvider: #SQLPoolExtendedAuditingPolicyParameters @go(ForProvider)
}

// SQLPoolExtendedAuditingPolicyStatus defines the observed state of SQLPoolExtendedAuditingPolicy.
#SQLPoolExtendedAuditingPolicyStatus: {
	atProvider?: #SQLPoolExtendedAuditingPolicyObservation @go(AtProvider)
}

// SQLPoolExtendedAuditingPolicy is the Schema for the SQLPoolExtendedAuditingPolicys API. Manages a Synapse SQL Pool Extended Auditing Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SQLPoolExtendedAuditingPolicy: {
	spec:    #SQLPoolExtendedAuditingPolicySpec   @go(Spec)
	status?: #SQLPoolExtendedAuditingPolicyStatus @go(Status)
}

// SQLPoolExtendedAuditingPolicyList contains a list of SQLPoolExtendedAuditingPolicys
#SQLPoolExtendedAuditingPolicyList: {
	items: [...#SQLPoolExtendedAuditingPolicy] @go(Items,[]SQLPoolExtendedAuditingPolicy)
}
