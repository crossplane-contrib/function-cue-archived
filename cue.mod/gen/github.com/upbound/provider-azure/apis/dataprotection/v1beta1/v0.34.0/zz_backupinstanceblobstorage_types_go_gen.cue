// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dataprotection/v1beta1

package v1beta1

#BackupInstanceBlobStorageObservation: {
	// The ID of the Backup Policy.
	backupPolicyId?: null | string @go(BackupPolicyID,*string)

	// The ID of the Backup Instance Blob Storage.
	id?: null | string @go(ID,*string)

	// The location of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.
	location?: null | string @go(Location,*string)

	// The ID of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// The ID of the Backup Vault within which the Backup Instance Blob Storage should exist. Changing this forces a new Backup Instance Blob Storage to be created.
	vaultId?: null | string @go(VaultID,*string)
}

#BackupInstanceBlobStorageParameters: {
	// The ID of the Backup Policy.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dataprotection/v1beta1.BackupPolicyBlobStorage
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	backupPolicyId?: null | string @go(BackupPolicyID,*string)

	// The location of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/storage/v1beta1.Account
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	storageAccountId?: null | string @go(StorageAccountID,*string)

	// The ID of the Backup Vault within which the Backup Instance Blob Storage should exist. Changing this forces a new Backup Instance Blob Storage to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/dataprotection/v1beta1.BackupVault
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vaultId?: null | string @go(VaultID,*string)
}

// BackupInstanceBlobStorageSpec defines the desired state of BackupInstanceBlobStorage
#BackupInstanceBlobStorageSpec: {
	forProvider: #BackupInstanceBlobStorageParameters @go(ForProvider)
}

// BackupInstanceBlobStorageStatus defines the observed state of BackupInstanceBlobStorage.
#BackupInstanceBlobStorageStatus: {
	atProvider?: #BackupInstanceBlobStorageObservation @go(AtProvider)
}

// BackupInstanceBlobStorage is the Schema for the BackupInstanceBlobStorages API. Manages a Backup Instance Blob Storage.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#BackupInstanceBlobStorage: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	spec:    #BackupInstanceBlobStorageSpec   @go(Spec)
	status?: #BackupInstanceBlobStorageStatus @go(Status)
}

// BackupInstanceBlobStorageList contains a list of BackupInstanceBlobStorages
#BackupInstanceBlobStorageList: {
	items: [...#BackupInstanceBlobStorage] @go(Items,[]BackupInstanceBlobStorage)
}
