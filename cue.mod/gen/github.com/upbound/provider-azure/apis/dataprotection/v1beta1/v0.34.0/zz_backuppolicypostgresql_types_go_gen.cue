// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dataprotection/v1beta1

package v1beta1

#BackupPolicyPostgreSQLObservation: {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow ISO 8601 repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
	backupRepeatingTimeIntervals?: [...null | string] @go(BackupRepeatingTimeIntervals,[]*string)

	// The duration of default retention rule. It should follow ISO 8601 duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
	defaultRetentionDuration?: null | string @go(DefaultRetentionDuration,*string)

	// The ID of the Backup Policy PostgreSQL.
	id?: null | string @go(ID,*string)

	// The name of the Resource Group where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more retention_rule blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
	retentionRule?: [...#BackupPolicyPostgreSQLRetentionRuleObservation] @go(RetentionRule,[]BackupPolicyPostgreSQLRetentionRuleObservation)

	// The name of the Backup Vault where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
	vaultName?: null | string @go(VaultName,*string)
}

#BackupPolicyPostgreSQLParameters: {
	// Specifies a list of repeating time interval. It supports weekly back. It should follow ISO 8601 repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	backupRepeatingTimeIntervals?: [...null | string] @go(BackupRepeatingTimeIntervals,[]*string)

	// The duration of default retention rule. It should follow ISO 8601 duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	defaultRetentionDuration?: null | string @go(DefaultRetentionDuration,*string)

	// The name of the Resource Group where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// One or more retention_rule blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	retentionRule?: [...#BackupPolicyPostgreSQLRetentionRuleParameters] @go(RetentionRule,[]BackupPolicyPostgreSQLRetentionRuleParameters)

	// The name of the Backup Vault where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +crossplane:generate:reference:type=BackupVault
	// +kubebuilder:validation:Optional
	vaultName?: null | string @go(VaultName,*string)
}

#BackupPolicyPostgreSQLRetentionRuleObservation: {
	// A criteria block as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
	criteria?: [...#RetentionRuleCriteriaObservation] @go(Criteria,[]RetentionRuleCriteriaObservation)

	// Duration after which the backup is deleted. It should follow ISO 8601 duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
	duration?: null | string @go(Duration,*string)

	// The name which should be used for this retention rule. Changing this forces a new Backup Policy PostgreSQL to be created.
	name?: null | string @go(Name,*string)

	// Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new Backup Policy PostgreSQL to be created.
	priority?: null | float64 @go(Priority,*float64)
}

#BackupPolicyPostgreSQLRetentionRuleParameters: {
	// A criteria block as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Required
	criteria: [...#RetentionRuleCriteriaParameters] @go(Criteria,[]RetentionRuleCriteriaParameters)

	// Duration after which the backup is deleted. It should follow ISO 8601 duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Required
	duration?: null | string @go(Duration,*string)

	// The name which should be used for this retention rule. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Required
	priority?: null | float64 @go(Priority,*float64)
}

#RetentionRuleCriteriaObservation: {
	// Possible values are AllBackup, FirstOfDay, FirstOfWeek, FirstOfMonth and FirstOfYear. These values mean the first successful backup of the day/week/month/year. Changing this forces a new Backup Policy PostgreSQL to be created.
	absoluteCriteria?: null | string @go(AbsoluteCriteria,*string)

	// Possible values are Monday, Tuesday, Thursday, Friday, Saturday and Sunday. Changing this forces a new Backup Policy PostgreSQL to be created.
	daysOfWeek?: [...null | string] @go(DaysOfWeek,[]*string)

	// Possible values are January, February, March, April, May, June, July, August, September, October, November and December. Changing this forces a new Backup Policy PostgreSQL to be created.
	monthsOfYear?: [...null | string] @go(MonthsOfYear,[]*string)

	// Specifies a list of backup times for backup in the RFC3339 format. Changing this forces a new Backup Policy PostgreSQL to be created.
	scheduledBackupTimes?: [...null | string] @go(ScheduledBackupTimes,[]*string)

	// Possible values are First, Second, Third, Fourth and Last. Changing this forces a new Backup Policy PostgreSQL to be created.
	weeksOfMonth?: [...null | string] @go(WeeksOfMonth,[]*string)
}

#RetentionRuleCriteriaParameters: {
	// Possible values are AllBackup, FirstOfDay, FirstOfWeek, FirstOfMonth and FirstOfYear. These values mean the first successful backup of the day/week/month/year. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	absoluteCriteria?: null | string @go(AbsoluteCriteria,*string)

	// Possible values are Monday, Tuesday, Thursday, Friday, Saturday and Sunday. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	daysOfWeek?: [...null | string] @go(DaysOfWeek,[]*string)

	// Possible values are January, February, March, April, May, June, July, August, September, October, November and December. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	monthsOfYear?: [...null | string] @go(MonthsOfYear,[]*string)

	// Specifies a list of backup times for backup in the RFC3339 format. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	scheduledBackupTimes?: [...null | string] @go(ScheduledBackupTimes,[]*string)

	// Possible values are First, Second, Third, Fourth and Last. Changing this forces a new Backup Policy PostgreSQL to be created.
	// +kubebuilder:validation:Optional
	weeksOfMonth?: [...null | string] @go(WeeksOfMonth,[]*string)
}

// BackupPolicyPostgreSQLSpec defines the desired state of BackupPolicyPostgreSQL
#BackupPolicyPostgreSQLSpec: {
	forProvider: #BackupPolicyPostgreSQLParameters @go(ForProvider)
}

// BackupPolicyPostgreSQLStatus defines the observed state of BackupPolicyPostgreSQL.
#BackupPolicyPostgreSQLStatus: {
	atProvider?: #BackupPolicyPostgreSQLObservation @go(AtProvider)
}

// BackupPolicyPostgreSQL is the Schema for the BackupPolicyPostgreSQLs API. Manages a Backup Policy to back up PostgreSQL.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#BackupPolicyPostgreSQL: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.backupRepeatingTimeIntervals)",message="backupRepeatingTimeIntervals is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.defaultRetentionDuration)",message="defaultRetentionDuration is a required parameter"
	spec:    #BackupPolicyPostgreSQLSpec   @go(Spec)
	status?: #BackupPolicyPostgreSQLStatus @go(Status)
}

// BackupPolicyPostgreSQLList contains a list of BackupPolicyPostgreSQLs
#BackupPolicyPostgreSQLList: {
	items: [...#BackupPolicyPostgreSQL] @go(Items,[]BackupPolicyPostgreSQL)
}
