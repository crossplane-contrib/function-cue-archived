// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/dataprotection/v1beta1

package v1beta1

#BackupPolicyBlobStorageInitParameters: {
	// Duration of deletion after given timespan. It should follow ISO 8601 duration format. Changing this forces a new Backup Policy Blob Storage to be created.
	retentionDuration?: null | string @go(RetentionDuration,*string)
}

#BackupPolicyBlobStorageObservation: {
	// The ID of the Backup Policy Blob Storage.
	id?: null | string @go(ID,*string)

	// Duration of deletion after given timespan. It should follow ISO 8601 duration format. Changing this forces a new Backup Policy Blob Storage to be created.
	retentionDuration?: null | string @go(RetentionDuration,*string)

	// The ID of the Backup Vault within which the Backup Policy Blob Storage should exist. Changing this forces a new Backup Policy Blob Storage to be created.
	vaultId?: null | string @go(VaultID,*string)
}

#BackupPolicyBlobStorageParameters: {
	// Duration of deletion after given timespan. It should follow ISO 8601 duration format. Changing this forces a new Backup Policy Blob Storage to be created.
	// +kubebuilder:validation:Optional
	retentionDuration?: null | string @go(RetentionDuration,*string)

	// The ID of the Backup Vault within which the Backup Policy Blob Storage should exist. Changing this forces a new Backup Policy Blob Storage to be created.
	// +crossplane:generate:reference:type=BackupVault
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-azure/apis/rconfig.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vaultId?: null | string @go(VaultID,*string)
}

// BackupPolicyBlobStorageSpec defines the desired state of BackupPolicyBlobStorage
#BackupPolicyBlobStorageSpec: {
	forProvider: #BackupPolicyBlobStorageParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BackupPolicyBlobStorageInitParameters @go(InitProvider)
}

// BackupPolicyBlobStorageStatus defines the observed state of BackupPolicyBlobStorage.
#BackupPolicyBlobStorageStatus: {
	atProvider?: #BackupPolicyBlobStorageObservation @go(AtProvider)
}

// BackupPolicyBlobStorage is the Schema for the BackupPolicyBlobStorages API. Manages a Backup Policy Blob Storage.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#BackupPolicyBlobStorage: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.retentionDuration) || has(self.initProvider.retentionDuration)",message="retentionDuration is a required parameter"
	spec:    #BackupPolicyBlobStorageSpec   @go(Spec)
	status?: #BackupPolicyBlobStorageStatus @go(Status)
}

// BackupPolicyBlobStorageList contains a list of BackupPolicyBlobStorages
#BackupPolicyBlobStorageList: {
	items: [...#BackupPolicyBlobStorage] @go(Items,[]BackupPolicyBlobStorage)
}
