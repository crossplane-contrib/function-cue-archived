// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/analysisservices/v1beta1

package v1beta1

#IPv4FirewallRuleInitParameters: {
	// Specifies the name of the firewall rule.
	name?: null | string @go(Name,*string)

	// End of the firewall rule range as IPv4 address.
	rangeEnd?: null | string @go(RangeEnd,*string)

	// Start of the firewall rule range as IPv4 address.
	rangeStart?: null | string @go(RangeStart,*string)
}

#IPv4FirewallRuleObservation: {
	// Specifies the name of the firewall rule.
	name?: null | string @go(Name,*string)

	// End of the firewall rule range as IPv4 address.
	rangeEnd?: null | string @go(RangeEnd,*string)

	// Start of the firewall rule range as IPv4 address.
	rangeStart?: null | string @go(RangeStart,*string)
}

#IPv4FirewallRuleParameters: {
	// Specifies the name of the firewall rule.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// End of the firewall rule range as IPv4 address.
	// +kubebuilder:validation:Optional
	rangeEnd?: null | string @go(RangeEnd,*string)

	// Start of the firewall rule range as IPv4 address.
	// +kubebuilder:validation:Optional
	rangeStart?: null | string @go(RangeStart,*string)
}

#ServerInitParameters: {
	// List of email addresses of admin users.
	adminUsers?: [...null | string] @go(AdminUsers,[]*string)

	// Indicates if the Power BI service is allowed to access or not.
	enablePowerBiService?: null | bool @go(EnablePowerBiService,*bool)

	// One or more ipv4_firewall_rule block(s) as defined below.
	ipv4FirewallRule?: [...#IPv4FirewallRuleInitParameters] @go(IPv4FirewallRule,[]IPv4FirewallRuleInitParameters)

	// The Azure location where the Analysis Services Server exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the Analysis Services Server. Only lowercase Alphanumeric characters allowed, starting with a letter. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Controls how the read-write server is used in the query pool. If this value is set to All then read-write servers are also used for queries. Otherwise with ReadOnly these servers do not participate in query operations.
	querypoolConnectionMode?: null | string @go(QuerypoolConnectionMode,*string)

	// SKU for the Analysis Services Server. Possible values are: D1, B1, B2, S0, S1, S2, S4, S8, S9, S8v2 and S9v2.
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ServerObservation: {
	// List of email addresses of admin users.
	adminUsers?: [...null | string] @go(AdminUsers,[]*string)

	// Indicates if the Power BI service is allowed to access or not.
	enablePowerBiService?: null | bool @go(EnablePowerBiService,*bool)

	// The ID of the Analysis Services Server.
	id?: null | string @go(ID,*string)

	// One or more ipv4_firewall_rule block(s) as defined below.
	ipv4FirewallRule?: [...#IPv4FirewallRuleObservation] @go(IPv4FirewallRule,[]IPv4FirewallRuleObservation)

	// The Azure location where the Analysis Services Server exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The name of the Analysis Services Server. Only lowercase Alphanumeric characters allowed, starting with a letter. Changing this forces a new resource to be created.
	name?: null | string @go(Name,*string)

	// Controls how the read-write server is used in the query pool. If this value is set to All then read-write servers are also used for queries. Otherwise with ReadOnly these servers do not participate in query operations.
	querypoolConnectionMode?: null | string @go(QuerypoolConnectionMode,*string)

	// The name of the Resource Group in which the Analysis Services Server should be exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The full name of the Analysis Services Server.
	serverFullName?: null | string @go(ServerFullName,*string)

	// SKU for the Analysis Services Server. Possible values are: D1, B1, B2, S0, S1, S2, S4, S8, S9, S8v2 and S9v2.
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ServerParameters: {
	// List of email addresses of admin users.
	// +kubebuilder:validation:Optional
	adminUsers?: [...null | string] @go(AdminUsers,[]*string)

	// Indicates if the Power BI service is allowed to access or not.
	// +kubebuilder:validation:Optional
	enablePowerBiService?: null | bool @go(EnablePowerBiService,*bool)

	// One or more ipv4_firewall_rule block(s) as defined below.
	// +kubebuilder:validation:Optional
	ipv4FirewallRule?: [...#IPv4FirewallRuleParameters] @go(IPv4FirewallRule,[]IPv4FirewallRuleParameters)

	// The Azure location where the Analysis Services Server exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The name of the Analysis Services Server. Only lowercase Alphanumeric characters allowed, starting with a letter. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Controls how the read-write server is used in the query pool. If this value is set to All then read-write servers are also used for queries. Otherwise with ReadOnly these servers do not participate in query operations.
	// +kubebuilder:validation:Optional
	querypoolConnectionMode?: null | string @go(QuerypoolConnectionMode,*string)

	// The name of the Resource Group in which the Analysis Services Server should be exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// SKU for the Analysis Services Server. Possible values are: D1, B1, B2, S0, S1, S2, S4, S8, S9, S8v2 and S9v2.
	// +kubebuilder:validation:Optional
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ServerSpec defines the desired state of Server
#ServerSpec: {
	forProvider: #ServerParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ServerInitParameters @go(InitProvider)
}

// ServerStatus defines the observed state of Server.
#ServerStatus: {
	atProvider?: #ServerObservation @go(AtProvider)
}

// Server is the Schema for the Servers API. Manages an Analysis Services Server.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#Server: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || has(self.initProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sku) || has(self.initProvider.sku)",message="sku is a required parameter"
	spec:    #ServerSpec   @go(Spec)
	status?: #ServerStatus @go(Status)
}

// ServerList contains a list of Servers
#ServerList: {
	items: [...#Server] @go(Items,[]Server)
}
