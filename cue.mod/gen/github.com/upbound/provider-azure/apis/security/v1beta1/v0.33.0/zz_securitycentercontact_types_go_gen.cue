// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/security/v1beta1

package v1beta1

#SecurityCenterContactObservation: {
	// Whether to send security alerts notifications to the security contact.
	alertNotifications?: null | bool @go(AlertNotifications,*bool)

	// Whether to send security alerts notifications to subscription admins.
	alertsToAdmins?: null | bool @go(AlertsToAdmins,*bool)

	// The email of the Security Center Contact.
	email?: null | string @go(Email,*string)

	// The Security Center Contact ID.
	id?: null | string @go(ID,*string)

	// The name of the Security Center Contact. Defaults to default1.
	name?: null | string @go(Name,*string)

	// The phone number of the Security Center Contact.
	phone?: null | string @go(Phone,*string)
}

#SecurityCenterContactParameters: {
	// Whether to send security alerts notifications to the security contact.
	// +kubebuilder:validation:Optional
	alertNotifications?: null | bool @go(AlertNotifications,*bool)

	// Whether to send security alerts notifications to subscription admins.
	// +kubebuilder:validation:Optional
	alertsToAdmins?: null | bool @go(AlertsToAdmins,*bool)

	// The email of the Security Center Contact.
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// The name of the Security Center Contact. Defaults to default1.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The phone number of the Security Center Contact.
	// +kubebuilder:validation:Optional
	phone?: null | string @go(Phone,*string)
}

// SecurityCenterContactSpec defines the desired state of SecurityCenterContact
#SecurityCenterContactSpec: {
	forProvider: #SecurityCenterContactParameters @go(ForProvider)
}

// SecurityCenterContactStatus defines the observed state of SecurityCenterContact.
#SecurityCenterContactStatus: {
	atProvider?: #SecurityCenterContactObservation @go(AtProvider)
}

// SecurityCenterContact is the Schema for the SecurityCenterContacts API. Manages the subscription's Security Center Contact.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SecurityCenterContact: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.alertNotifications)",message="alertNotifications is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.alertsToAdmins)",message="alertsToAdmins is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.email)",message="email is a required parameter"
	spec:    #SecurityCenterContactSpec   @go(Spec)
	status?: #SecurityCenterContactStatus @go(Status)
}

// SecurityCenterContactList contains a list of SecurityCenterContacts
#SecurityCenterContactList: {
	items: [...#SecurityCenterContact] @go(Items,[]SecurityCenterContact)
}
