// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/security/v1beta1

package v1beta1

#SecurityCenterServerVulnerabilityAssessmentVirtualMachineInitParameters: {
}

#SecurityCenterServerVulnerabilityAssessmentVirtualMachineObservation: {
	// The ID of the Vulnerability Assessment resource.
	id?: null | string @go(ID,*string)

	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	virtualMachineId?: null | string @go(VirtualMachineID,*string)
}

#SecurityCenterServerVulnerabilityAssessmentVirtualMachineParameters: {
	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/compute/v1beta1.LinuxVirtualMachine
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	virtualMachineId?: null | string @go(VirtualMachineID,*string)
}

// SecurityCenterServerVulnerabilityAssessmentVirtualMachineSpec defines the desired state of SecurityCenterServerVulnerabilityAssessmentVirtualMachine
#SecurityCenterServerVulnerabilityAssessmentVirtualMachineSpec: {
	forProvider: #SecurityCenterServerVulnerabilityAssessmentVirtualMachineParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SecurityCenterServerVulnerabilityAssessmentVirtualMachineInitParameters @go(InitProvider)
}

// SecurityCenterServerVulnerabilityAssessmentVirtualMachineStatus defines the observed state of SecurityCenterServerVulnerabilityAssessmentVirtualMachine.
#SecurityCenterServerVulnerabilityAssessmentVirtualMachineStatus: {
	atProvider?: #SecurityCenterServerVulnerabilityAssessmentVirtualMachineObservation @go(AtProvider)
}

// SecurityCenterServerVulnerabilityAssessmentVirtualMachine is the Schema for the SecurityCenterServerVulnerabilityAssessmentVirtualMachines API. Manages an Azure Vulnerability Assessment (Qualys) to a VM.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SecurityCenterServerVulnerabilityAssessmentVirtualMachine: {
	spec:    #SecurityCenterServerVulnerabilityAssessmentVirtualMachineSpec   @go(Spec)
	status?: #SecurityCenterServerVulnerabilityAssessmentVirtualMachineStatus @go(Status)
}

// SecurityCenterServerVulnerabilityAssessmentVirtualMachineList contains a list of SecurityCenterServerVulnerabilityAssessmentVirtualMachines
#SecurityCenterServerVulnerabilityAssessmentVirtualMachineList: {
	items: [...#SecurityCenterServerVulnerabilityAssessmentVirtualMachine] @go(Items,[]SecurityCenterServerVulnerabilityAssessmentVirtualMachine)
}
