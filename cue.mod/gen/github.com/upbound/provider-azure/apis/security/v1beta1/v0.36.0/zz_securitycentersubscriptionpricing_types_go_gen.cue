// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/security/v1beta1

package v1beta1

#SecurityCenterSubscriptionPricingInitParameters: {
	// The resource type this setting affects. Possible values are AppServices, ContainerRegistry, KeyVaults, KubernetesService, SqlServers, SqlServerVirtualMachines, StorageAccounts, VirtualMachines, Arm, Dns, OpenSourceRelationalDatabases, Containers, CosmosDbs and CloudPosture. Defaults to VirtualMachines
	resourceType?: null | string @go(ResourceType,*string)

	// Resource type pricing subplan. Contact your MSFT representative for possible values.
	subplan?: null | string @go(Subplan,*string)

	// The pricing tier to use. Possible values are Free and Standard.
	tier?: null | string @go(Tier,*string)
}

#SecurityCenterSubscriptionPricingObservation: {
	// The subscription pricing ID.
	id?: null | string @go(ID,*string)

	// The resource type this setting affects. Possible values are AppServices, ContainerRegistry, KeyVaults, KubernetesService, SqlServers, SqlServerVirtualMachines, StorageAccounts, VirtualMachines, Arm, Dns, OpenSourceRelationalDatabases, Containers, CosmosDbs and CloudPosture. Defaults to VirtualMachines
	resourceType?: null | string @go(ResourceType,*string)

	// Resource type pricing subplan. Contact your MSFT representative for possible values.
	subplan?: null | string @go(Subplan,*string)

	// The pricing tier to use. Possible values are Free and Standard.
	tier?: null | string @go(Tier,*string)
}

#SecurityCenterSubscriptionPricingParameters: {
	// The resource type this setting affects. Possible values are AppServices, ContainerRegistry, KeyVaults, KubernetesService, SqlServers, SqlServerVirtualMachines, StorageAccounts, VirtualMachines, Arm, Dns, OpenSourceRelationalDatabases, Containers, CosmosDbs and CloudPosture. Defaults to VirtualMachines
	// +kubebuilder:validation:Optional
	resourceType?: null | string @go(ResourceType,*string)

	// Resource type pricing subplan. Contact your MSFT representative for possible values.
	// +kubebuilder:validation:Optional
	subplan?: null | string @go(Subplan,*string)

	// The pricing tier to use. Possible values are Free and Standard.
	// +kubebuilder:validation:Optional
	tier?: null | string @go(Tier,*string)
}

// SecurityCenterSubscriptionPricingSpec defines the desired state of SecurityCenterSubscriptionPricing
#SecurityCenterSubscriptionPricingSpec: {
	forProvider: #SecurityCenterSubscriptionPricingParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SecurityCenterSubscriptionPricingInitParameters @go(InitProvider)
}

// SecurityCenterSubscriptionPricingStatus defines the observed state of SecurityCenterSubscriptionPricing.
#SecurityCenterSubscriptionPricingStatus: {
	atProvider?: #SecurityCenterSubscriptionPricingObservation @go(AtProvider)
}

// SecurityCenterSubscriptionPricing is the Schema for the SecurityCenterSubscriptionPricings API. Manages the Pricing Tier for Azure Security Center in the current subscription.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SecurityCenterSubscriptionPricing: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tier) || has(self.initProvider.tier)",message="tier is a required parameter"
	spec:    #SecurityCenterSubscriptionPricingSpec   @go(Spec)
	status?: #SecurityCenterSubscriptionPricingStatus @go(Status)
}

// SecurityCenterSubscriptionPricingList contains a list of SecurityCenterSubscriptionPricings
#SecurityCenterSubscriptionPricingList: {
	items: [...#SecurityCenterSubscriptionPricing] @go(Items,[]SecurityCenterSubscriptionPricing)
}
