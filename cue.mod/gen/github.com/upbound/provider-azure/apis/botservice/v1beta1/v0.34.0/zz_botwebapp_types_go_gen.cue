// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/botservice/v1beta1

package v1beta1

#BotWebAppObservation: {
	// The Application Insights Application ID to associate with the Web App Bot.
	developerAppInsightsApplicationId?: null | string @go(DeveloperAppInsightsApplicationID,*string)

	// The Application Insights Key to associate with the Web App Bot.
	developerAppInsightsKey?: null | string @go(DeveloperAppInsightsKey,*string)

	// The name of the Web App Bot will be displayed as. This defaults to name if not specified.
	displayName?: null | string @go(DisplayName,*string)

	// The Web App Bot endpoint.
	endpoint?: null | string @go(Endpoint,*string)

	// The ID of the Bot Web App.
	id?: null | string @go(ID,*string)

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// A list of LUIS App IDs to associate with the Web App Bot.
	luisAppIds?: [...null | string] @go(LuisAppIds,[]*string)

	// The Microsoft Application ID for the Web App Bot. Changing this forces a new resource to be created.
	microsoftAppId?: null | string @go(MicrosoftAppID,*string)

	// The name of the resource group in which to create the Web App Bot. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU of the Web App Bot. Valid values include F0 or S1. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#BotWebAppParameters: {
	// The Application Insights Application ID to associate with the Web App Bot.
	// +kubebuilder:validation:Optional
	developerAppInsightsApplicationId?: null | string @go(DeveloperAppInsightsApplicationID,*string)

	// The Application Insights Key to associate with the Web App Bot.
	// +kubebuilder:validation:Optional
	developerAppInsightsKey?: null | string @go(DeveloperAppInsightsKey,*string)

	// The name of the Web App Bot will be displayed as. This defaults to name if not specified.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The Web App Bot endpoint.
	// +kubebuilder:validation:Optional
	endpoint?: null | string @go(Endpoint,*string)

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// A list of LUIS App IDs to associate with the Web App Bot.
	// +kubebuilder:validation:Optional
	luisAppIds?: [...null | string] @go(LuisAppIds,[]*string)

	// The Microsoft Application ID for the Web App Bot. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	microsoftAppId?: null | string @go(MicrosoftAppID,*string)

	// The name of the resource group in which to create the Web App Bot. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU of the Web App Bot. Valid values include F0 or S1. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sku?: null | string @go(Sku,*string)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// BotWebAppSpec defines the desired state of BotWebApp
#BotWebAppSpec: {
	forProvider: #BotWebAppParameters @go(ForProvider)
}

// BotWebAppStatus defines the observed state of BotWebApp.
#BotWebAppStatus: {
	atProvider?: #BotWebAppObservation @go(AtProvider)
}

// BotWebApp is the Schema for the BotWebApps API. Manages a Web App Bot.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#BotWebApp: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",message="location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.microsoftAppId)",message="microsoftAppId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.sku)",message="sku is a required parameter"
	spec:    #BotWebAppSpec   @go(Spec)
	status?: #BotWebAppStatus @go(Status)
}

// BotWebAppList contains a list of BotWebApps
#BotWebAppList: {
	items: [...#BotWebApp] @go(Items,[]BotWebApp)
}
