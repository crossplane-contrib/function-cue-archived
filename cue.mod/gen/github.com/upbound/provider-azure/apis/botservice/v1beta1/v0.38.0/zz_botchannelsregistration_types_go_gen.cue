// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/botservice/v1beta1

package v1beta1

#BotChannelsRegistrationInitParameters: {
	// The CMK Key Vault Key URL to encrypt the Bot Channels Registration with the Customer Managed Encryption Key.
	cmkKeyVaultUrl?: null | string @go(CmkKeyVaultURL,*string)

	// The description of the Bot Channels Registration.
	description?: null | string @go(Description,*string)

	// The Application Insights Application ID to associate with the Bot Channels Registration.
	developerAppInsightsApplicationId?: null | string @go(DeveloperAppInsightsApplicationID,*string)

	// The Application Insights Key to associate with the Bot Channels Registration.
	developerAppInsightsKey?: null | string @go(DeveloperAppInsightsKey,*string)

	// The name of the Bot Channels Registration will be displayed as. This defaults to name if not specified.
	displayName?: null | string @go(DisplayName,*string)

	// The Bot Channels Registration endpoint.
	endpoint?: null | string @go(Endpoint,*string)

	// The icon URL to visually identify the Bot Channels Registration.
	iconUrl?: null | string @go(IconURL,*string)

	// Is the Bot Channels Registration in an isolated network?
	isolatedNetworkEnabled?: null | bool @go(IsolatedNetworkEnabled,*bool)

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.
	microsoftAppId?: null | string @go(MicrosoftAppID,*string)

	// Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
	name?: null | string @go(Name,*string)

	// Is the Bot Channels Registration in an isolated network?
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The SKU of the Bot Channels Registration. Valid values include F0 or S1. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// Is the streaming endpoint enabled for the Bot Channels Registration. Defaults to false.
	streamingEndpointEnabled?: null | bool @go(StreamingEndpointEnabled,*bool)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#BotChannelsRegistrationObservation: {
	// The CMK Key Vault Key URL to encrypt the Bot Channels Registration with the Customer Managed Encryption Key.
	cmkKeyVaultUrl?: null | string @go(CmkKeyVaultURL,*string)

	// The description of the Bot Channels Registration.
	description?: null | string @go(Description,*string)

	// The Application Insights Application ID to associate with the Bot Channels Registration.
	developerAppInsightsApplicationId?: null | string @go(DeveloperAppInsightsApplicationID,*string)

	// The Application Insights Key to associate with the Bot Channels Registration.
	developerAppInsightsKey?: null | string @go(DeveloperAppInsightsKey,*string)

	// The name of the Bot Channels Registration will be displayed as. This defaults to name if not specified.
	displayName?: null | string @go(DisplayName,*string)

	// The Bot Channels Registration endpoint.
	endpoint?: null | string @go(Endpoint,*string)

	// The ID of the Bot Channels Registration.
	id?: null | string @go(ID,*string)

	// The icon URL to visually identify the Bot Channels Registration.
	iconUrl?: null | string @go(IconURL,*string)

	// Is the Bot Channels Registration in an isolated network?
	isolatedNetworkEnabled?: null | bool @go(IsolatedNetworkEnabled,*bool)

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	location?: null | string @go(Location,*string)

	// The Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.
	microsoftAppId?: null | string @go(MicrosoftAppID,*string)

	// Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
	name?: null | string @go(Name,*string)

	// Is the Bot Channels Registration in an isolated network?
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The name of the resource group in which to create the Bot Channels Registration. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU of the Bot Channels Registration. Valid values include F0 or S1. Changing this forces a new resource to be created.
	sku?: null | string @go(Sku,*string)

	// Is the streaming endpoint enabled for the Bot Channels Registration. Defaults to false.
	streamingEndpointEnabled?: null | bool @go(StreamingEndpointEnabled,*bool)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#BotChannelsRegistrationParameters: {
	// The CMK Key Vault Key URL to encrypt the Bot Channels Registration with the Customer Managed Encryption Key.
	// +kubebuilder:validation:Optional
	cmkKeyVaultUrl?: null | string @go(CmkKeyVaultURL,*string)

	// The description of the Bot Channels Registration.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The Application Insights Application ID to associate with the Bot Channels Registration.
	// +kubebuilder:validation:Optional
	developerAppInsightsApplicationId?: null | string @go(DeveloperAppInsightsApplicationID,*string)

	// The Application Insights Key to associate with the Bot Channels Registration.
	// +kubebuilder:validation:Optional
	developerAppInsightsKey?: null | string @go(DeveloperAppInsightsKey,*string)

	// The name of the Bot Channels Registration will be displayed as. This defaults to name if not specified.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// The Bot Channels Registration endpoint.
	// +kubebuilder:validation:Optional
	endpoint?: null | string @go(Endpoint,*string)

	// The icon URL to visually identify the Bot Channels Registration.
	// +kubebuilder:validation:Optional
	iconUrl?: null | string @go(IconURL,*string)

	// Is the Bot Channels Registration in an isolated network?
	// +kubebuilder:validation:Optional
	isolatedNetworkEnabled?: null | bool @go(IsolatedNetworkEnabled,*bool)

	// The supported Azure location where the resource exists. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The Microsoft Application ID for the Bot Channels Registration. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	microsoftAppId?: null | string @go(MicrosoftAppID,*string)

	// Specifies the name of the Bot Channels Registration. Changing this forces a new resource to be created. Must be globally unique.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Is the Bot Channels Registration in an isolated network?
	// +kubebuilder:validation:Optional
	publicNetworkAccessEnabled?: null | bool @go(PublicNetworkAccessEnabled,*bool)

	// The name of the resource group in which to create the Bot Channels Registration. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// The SKU of the Bot Channels Registration. Valid values include F0 or S1. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	sku?: null | string @go(Sku,*string)

	// Is the streaming endpoint enabled for the Bot Channels Registration. Defaults to false.
	// +kubebuilder:validation:Optional
	streamingEndpointEnabled?: null | bool @go(StreamingEndpointEnabled,*bool)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// BotChannelsRegistrationSpec defines the desired state of BotChannelsRegistration
#BotChannelsRegistrationSpec: {
	forProvider: #BotChannelsRegistrationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BotChannelsRegistrationInitParameters @go(InitProvider)
}

// BotChannelsRegistrationStatus defines the observed state of BotChannelsRegistration.
#BotChannelsRegistrationStatus: {
	atProvider?: #BotChannelsRegistrationObservation @go(AtProvider)
}

// BotChannelsRegistration is the Schema for the BotChannelsRegistrations API. Manages a Bot Channels Registration.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#BotChannelsRegistration: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.microsoftAppId) || (has(self.initProvider) && has(self.initProvider.microsoftAppId))",message="spec.forProvider.microsoftAppId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sku) || (has(self.initProvider) && has(self.initProvider.sku))",message="spec.forProvider.sku is a required parameter"
	spec:    #BotChannelsRegistrationSpec   @go(Spec)
	status?: #BotChannelsRegistrationStatus @go(Status)
}

// BotChannelsRegistrationList contains a list of BotChannelsRegistrations
#BotChannelsRegistrationList: {
	items: [...#BotChannelsRegistration] @go(Items,[]BotChannelsRegistration)
}
