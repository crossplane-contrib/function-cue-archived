// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/machinelearningservices/v1beta1

package v1beta1

#SynapseSparkIdentityInitParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Machine Learning Synapse Spark. Changing this forces a new resource to be created.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Machine Learning Synapse Spark. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both). Changing this forces a new resource to be created.
	type?: null | string @go(Type,*string)
}

#SynapseSparkIdentityObservation: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Machine Learning Synapse Spark. Changing this forces a new resource to be created.
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Machine Learning Synapse Spark.
	principalId?: null | string @go(PrincipalID,*string)

	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Machine Learning Synapse Spark.
	tenantId?: null | string @go(TenantID,*string)

	// Specifies the type of Managed Service Identity that should be configured on this Machine Learning Synapse Spark. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both). Changing this forces a new resource to be created.
	type?: null | string @go(Type,*string)
}

#SynapseSparkIdentityParameters: {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Machine Learning Synapse Spark. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	identityIds?: [...null | string] @go(IdentityIds,[]*string)

	// Specifies the type of Managed Service Identity that should be configured on this Machine Learning Synapse Spark. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both). Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#SynapseSparkInitParameters: {
	// The description of the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
	description?: null | string @go(Description,*string)

	// An identity block as defined below. Changing this forces a new Machine Learning Synapse Spark to be created.
	identity?: [...#SynapseSparkIdentityInitParameters] @go(Identity,[]SynapseSparkIdentityInitParameters)

	// Whether local authentication methods is enabled. Defaults to true. Changing this forces a new Machine Learning Synapse Spark to be created.
	localAuthEnabled?: null | bool @go(LocalAuthEnabled,*bool)

	// The Azure Region where the Machine Learning Synapse Spark should exist. Changing this forces a new Machine Learning Synapse Spark to be created.
	location?: null | string @go(Location,*string)

	// A mapping of tags which should be assigned to the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SynapseSparkObservation: {
	// The description of the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
	description?: null | string @go(Description,*string)

	// The ID of the Machine Learning Synapse Spark.
	id?: null | string @go(ID,*string)

	// An identity block as defined below. Changing this forces a new Machine Learning Synapse Spark to be created.
	identity?: [...#SynapseSparkIdentityObservation] @go(Identity,[]SynapseSparkIdentityObservation)

	// Whether local authentication methods is enabled. Defaults to true. Changing this forces a new Machine Learning Synapse Spark to be created.
	localAuthEnabled?: null | bool @go(LocalAuthEnabled,*bool)

	// The Azure Region where the Machine Learning Synapse Spark should exist. Changing this forces a new Machine Learning Synapse Spark to be created.
	location?: null | string @go(Location,*string)

	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Synapse Spark to be created.
	machineLearningWorkspaceId?: null | string @go(MachineLearningWorkspaceID,*string)

	// The ID of the linked Synapse Spark Pool. Changing this forces a new Machine Learning Synapse Spark to be created.
	synapseSparkPoolId?: null | string @go(SynapseSparkPoolID,*string)

	// A mapping of tags which should be assigned to the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SynapseSparkParameters: {
	// The description of the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// An identity block as defined below. Changing this forces a new Machine Learning Synapse Spark to be created.
	// +kubebuilder:validation:Optional
	identity?: [...#SynapseSparkIdentityParameters] @go(Identity,[]SynapseSparkIdentityParameters)

	// Whether local authentication methods is enabled. Defaults to true. Changing this forces a new Machine Learning Synapse Spark to be created.
	// +kubebuilder:validation:Optional
	localAuthEnabled?: null | bool @go(LocalAuthEnabled,*bool)

	// The Azure Region where the Machine Learning Synapse Spark should exist. Changing this forces a new Machine Learning Synapse Spark to be created.
	// +kubebuilder:validation:Optional
	location?: null | string @go(Location,*string)

	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Synapse Spark to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/machinelearningservices/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	machineLearningWorkspaceId?: null | string @go(MachineLearningWorkspaceID,*string)

	// The ID of the linked Synapse Spark Pool. Changing this forces a new Machine Learning Synapse Spark to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/synapse/v1beta1.SparkPool
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	synapseSparkPoolId?: null | string @go(SynapseSparkPoolID,*string)

	// A mapping of tags which should be assigned to the Machine Learning Synapse Spark. Changing this forces a new Machine Learning Synapse Spark to be created.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// SynapseSparkSpec defines the desired state of SynapseSpark
#SynapseSparkSpec: {
	forProvider: #SynapseSparkParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SynapseSparkInitParameters @go(InitProvider)
}

// SynapseSparkStatus defines the observed state of SynapseSpark.
#SynapseSparkStatus: {
	atProvider?: #SynapseSparkObservation @go(AtProvider)
}

// SynapseSpark is the Schema for the SynapseSparks API. Manages the linked service to link an Azure Machine learning workspace to an Azure Synapse workspace.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#SynapseSpark: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) && has(self.initProvider.location))",message="spec.forProvider.location is a required parameter"
	spec:    #SynapseSparkSpec   @go(Spec)
	status?: #SynapseSparkStatus @go(Status)
}

// SynapseSparkList contains a list of SynapseSparks
#SynapseSparkList: {
	items: [...#SynapseSpark] @go(Items,[]SynapseSpark)
}
