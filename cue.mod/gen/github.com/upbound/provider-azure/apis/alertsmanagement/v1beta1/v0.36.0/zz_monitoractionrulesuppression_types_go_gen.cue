// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-azure/apis/alertsmanagement/v1beta1

package v1beta1

#ConditionAlertContextInitParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionAlertContextObservation: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionAlertContextParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#ConditionAlertRuleIDInitParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionAlertRuleIDObservation: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionAlertRuleIDParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#ConditionDescriptionInitParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionDescriptionObservation: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionDescriptionParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#ConditionMonitorInitParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionMonitorObservation: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionMonitorParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#ConditionMonitorServiceInitParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionMonitorServiceObservation: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionMonitorServiceParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#ConditionSeverityInitParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionSeverityObservation: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionSeverityParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#ConditionTargetResourceTypeInitParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionTargetResourceTypeObservation: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	values?: [...null | string] @go(Values,[]*string)
}

#ConditionTargetResourceTypeParameters: {
	// The operator for a given condition. Possible values are Equals and NotEquals.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// A list of values to match for a given condition. The values should be valid resource types.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#MonitorActionRuleSuppressionConditionInitParameters: {
	// A alert_context block as defined below.
	alertContext?: [...#ConditionAlertContextInitParameters] @go(AlertContext,[]ConditionAlertContextInitParameters)

	// A alert_rule_id block as defined below.
	alertRuleId?: [...#ConditionAlertRuleIDInitParameters] @go(AlertRuleID,[]ConditionAlertRuleIDInitParameters)

	// A description block as defined below.
	description?: [...#ConditionDescriptionInitParameters] @go(Description,[]ConditionDescriptionInitParameters)

	// A monitor block as defined below.
	monitor?: [...#ConditionMonitorInitParameters] @go(Monitor,[]ConditionMonitorInitParameters)

	// A monitor_service as block defined below.
	monitorService?: [...#ConditionMonitorServiceInitParameters] @go(MonitorService,[]ConditionMonitorServiceInitParameters)

	// A severity block as defined below.
	severity?: [...#ConditionSeverityInitParameters] @go(Severity,[]ConditionSeverityInitParameters)

	// A target_resource_type block as defined below.
	targetResourceType?: [...#ConditionTargetResourceTypeInitParameters] @go(TargetResourceType,[]ConditionTargetResourceTypeInitParameters)
}

#MonitorActionRuleSuppressionConditionObservation: {
	// A alert_context block as defined below.
	alertContext?: [...#ConditionAlertContextObservation] @go(AlertContext,[]ConditionAlertContextObservation)

	// A alert_rule_id block as defined below.
	alertRuleId?: [...#ConditionAlertRuleIDObservation] @go(AlertRuleID,[]ConditionAlertRuleIDObservation)

	// A description block as defined below.
	description?: [...#ConditionDescriptionObservation] @go(Description,[]ConditionDescriptionObservation)

	// A monitor block as defined below.
	monitor?: [...#ConditionMonitorObservation] @go(Monitor,[]ConditionMonitorObservation)

	// A monitor_service as block defined below.
	monitorService?: [...#ConditionMonitorServiceObservation] @go(MonitorService,[]ConditionMonitorServiceObservation)

	// A severity block as defined below.
	severity?: [...#ConditionSeverityObservation] @go(Severity,[]ConditionSeverityObservation)

	// A target_resource_type block as defined below.
	targetResourceType?: [...#ConditionTargetResourceTypeObservation] @go(TargetResourceType,[]ConditionTargetResourceTypeObservation)
}

#MonitorActionRuleSuppressionConditionParameters: {
	// A alert_context block as defined below.
	// +kubebuilder:validation:Optional
	alertContext?: [...#ConditionAlertContextParameters] @go(AlertContext,[]ConditionAlertContextParameters)

	// A alert_rule_id block as defined below.
	// +kubebuilder:validation:Optional
	alertRuleId?: [...#ConditionAlertRuleIDParameters] @go(AlertRuleID,[]ConditionAlertRuleIDParameters)

	// A description block as defined below.
	// +kubebuilder:validation:Optional
	description?: [...#ConditionDescriptionParameters] @go(Description,[]ConditionDescriptionParameters)

	// A monitor block as defined below.
	// +kubebuilder:validation:Optional
	monitor?: [...#ConditionMonitorParameters] @go(Monitor,[]ConditionMonitorParameters)

	// A monitor_service as block defined below.
	// +kubebuilder:validation:Optional
	monitorService?: [...#ConditionMonitorServiceParameters] @go(MonitorService,[]ConditionMonitorServiceParameters)

	// A severity block as defined below.
	// +kubebuilder:validation:Optional
	severity?: [...#ConditionSeverityParameters] @go(Severity,[]ConditionSeverityParameters)

	// A target_resource_type block as defined below.
	// +kubebuilder:validation:Optional
	targetResourceType?: [...#ConditionTargetResourceTypeParameters] @go(TargetResourceType,[]ConditionTargetResourceTypeParameters)
}

#MonitorActionRuleSuppressionInitParameters: {
	// A condition block as defined below.
	condition?: [...#MonitorActionRuleSuppressionConditionInitParameters] @go(Condition,[]MonitorActionRuleSuppressionConditionInitParameters)

	// Specifies a description for the Action Rule.
	description?: null | string @go(Description,*string)

	// Is the Action Rule enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// A scope block as defined below.
	scope?: [...#MonitorActionRuleSuppressionScopeInitParameters] @go(Scope,[]MonitorActionRuleSuppressionScopeInitParameters)

	// A suppression block as defined below.
	suppression?: [...#SuppressionInitParameters] @go(Suppression,[]SuppressionInitParameters)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#MonitorActionRuleSuppressionObservation: {
	// A condition block as defined below.
	condition?: [...#MonitorActionRuleSuppressionConditionObservation] @go(Condition,[]MonitorActionRuleSuppressionConditionObservation)

	// Specifies a description for the Action Rule.
	description?: null | string @go(Description,*string)

	// Is the Action Rule enabled? Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// The ID of the Monitor Action Rule.
	id?: null | string @go(ID,*string)

	// Specifies the name of the resource group in which the Monitor Action Rule should exist. Changing this forces a new resource to be created.
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A scope block as defined below.
	scope?: [...#MonitorActionRuleSuppressionScopeObservation] @go(Scope,[]MonitorActionRuleSuppressionScopeObservation)

	// A suppression block as defined below.
	suppression?: [...#SuppressionObservation] @go(Suppression,[]SuppressionObservation)

	// A mapping of tags to assign to the resource.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#MonitorActionRuleSuppressionParameters: {
	// A condition block as defined below.
	// +kubebuilder:validation:Optional
	condition?: [...#MonitorActionRuleSuppressionConditionParameters] @go(Condition,[]MonitorActionRuleSuppressionConditionParameters)

	// Specifies a description for the Action Rule.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Is the Action Rule enabled? Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Specifies the name of the resource group in which the Monitor Action Rule should exist. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-azure/apis/azure/v1beta1.ResourceGroup
	// +kubebuilder:validation:Optional
	resourceGroupName?: null | string @go(ResourceGroupName,*string)

	// A scope block as defined below.
	// +kubebuilder:validation:Optional
	scope?: [...#MonitorActionRuleSuppressionScopeParameters] @go(Scope,[]MonitorActionRuleSuppressionScopeParameters)

	// A suppression block as defined below.
	// +kubebuilder:validation:Optional
	suppression?: [...#SuppressionParameters] @go(Suppression,[]SuppressionParameters)

	// A mapping of tags to assign to the resource.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#MonitorActionRuleSuppressionScopeInitParameters: {
	// A list of resource IDs of the given scope type which will be the target of action rule.
	resourceIds?: [...null | string] @go(ResourceIds,[]*string)

	// Specifies the type of target scope. Possible values are ResourceGroup and Resource.
	type?: null | string @go(Type,*string)
}

#MonitorActionRuleSuppressionScopeObservation: {
	// A list of resource IDs of the given scope type which will be the target of action rule.
	resourceIds?: [...null | string] @go(ResourceIds,[]*string)

	// Specifies the type of target scope. Possible values are ResourceGroup and Resource.
	type?: null | string @go(Type,*string)
}

#MonitorActionRuleSuppressionScopeParameters: {
	// A list of resource IDs of the given scope type which will be the target of action rule.
	// +kubebuilder:validation:Optional
	resourceIds: [...null | string] @go(ResourceIds,[]*string)

	// Specifies the type of target scope. Possible values are ResourceGroup and Resource.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#ScheduleInitParameters: {
	// specifies the recurrence UTC end datetime (Y-m-d'T'H:M:S'Z').
	endDateUtc?: null | string @go(EndDateUtc,*string)

	// specifies the list of dayOfMonth to recurrence. Possible values are between 1 - 31. Required if recurrence_type is Monthly.
	recurrenceMonthly?: [...null | float64] @go(RecurrenceMonthly,[]*float64)

	// specifies the list of dayOfWeek to recurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	recurrenceWeekly?: [...null | string] @go(RecurrenceWeekly,[]*string)

	// specifies the recurrence UTC start datetime (Y-m-d'T'H:M:S'Z').
	startDateUtc?: null | string @go(StartDateUtc,*string)
}

#ScheduleObservation: {
	// specifies the recurrence UTC end datetime (Y-m-d'T'H:M:S'Z').
	endDateUtc?: null | string @go(EndDateUtc,*string)

	// specifies the list of dayOfMonth to recurrence. Possible values are between 1 - 31. Required if recurrence_type is Monthly.
	recurrenceMonthly?: [...null | float64] @go(RecurrenceMonthly,[]*float64)

	// specifies the list of dayOfWeek to recurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	recurrenceWeekly?: [...null | string] @go(RecurrenceWeekly,[]*string)

	// specifies the recurrence UTC start datetime (Y-m-d'T'H:M:S'Z').
	startDateUtc?: null | string @go(StartDateUtc,*string)
}

#ScheduleParameters: {
	// specifies the recurrence UTC end datetime (Y-m-d'T'H:M:S'Z').
	// +kubebuilder:validation:Optional
	endDateUtc?: null | string @go(EndDateUtc,*string)

	// specifies the list of dayOfMonth to recurrence. Possible values are between 1 - 31. Required if recurrence_type is Monthly.
	// +kubebuilder:validation:Optional
	recurrenceMonthly?: [...null | float64] @go(RecurrenceMonthly,[]*float64)

	// specifies the list of dayOfWeek to recurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.
	// +kubebuilder:validation:Optional
	recurrenceWeekly?: [...null | string] @go(RecurrenceWeekly,[]*string)

	// specifies the recurrence UTC start datetime (Y-m-d'T'H:M:S'Z').
	// +kubebuilder:validation:Optional
	startDateUtc?: null | string @go(StartDateUtc,*string)
}

#SuppressionInitParameters: {
	// Specifies the type of suppression. Possible values are Always, Daily, Monthly, Once, and Weekly.
	recurrenceType?: null | string @go(RecurrenceType,*string)

	// A schedule block as defined below. Required if recurrence_type is Daily, Monthly, Once or Weekly.
	schedule?: [...#ScheduleInitParameters] @go(Schedule,[]ScheduleInitParameters)
}

#SuppressionObservation: {
	// Specifies the type of suppression. Possible values are Always, Daily, Monthly, Once, and Weekly.
	recurrenceType?: null | string @go(RecurrenceType,*string)

	// A schedule block as defined below. Required if recurrence_type is Daily, Monthly, Once or Weekly.
	schedule?: [...#ScheduleObservation] @go(Schedule,[]ScheduleObservation)
}

#SuppressionParameters: {
	// Specifies the type of suppression. Possible values are Always, Daily, Monthly, Once, and Weekly.
	// +kubebuilder:validation:Optional
	recurrenceType?: null | string @go(RecurrenceType,*string)

	// A schedule block as defined below. Required if recurrence_type is Daily, Monthly, Once or Weekly.
	// +kubebuilder:validation:Optional
	schedule?: [...#ScheduleParameters] @go(Schedule,[]ScheduleParameters)
}

// MonitorActionRuleSuppressionSpec defines the desired state of MonitorActionRuleSuppression
#MonitorActionRuleSuppressionSpec: {
	forProvider: #MonitorActionRuleSuppressionParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MonitorActionRuleSuppressionInitParameters @go(InitProvider)
}

// MonitorActionRuleSuppressionStatus defines the observed state of MonitorActionRuleSuppression.
#MonitorActionRuleSuppressionStatus: {
	atProvider?: #MonitorActionRuleSuppressionObservation @go(AtProvider)
}

// MonitorActionRuleSuppression is the Schema for the MonitorActionRuleSuppressions API. Manages an Monitor Action Rule which type is suppression.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
#MonitorActionRuleSuppression: {
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.suppression) || has(self.initProvider.suppression)",message="suppression is a required parameter"
	spec:    #MonitorActionRuleSuppressionSpec   @go(Spec)
	status?: #MonitorActionRuleSuppressionStatus @go(Status)
}

// MonitorActionRuleSuppressionList contains a list of MonitorActionRuleSuppressions
#MonitorActionRuleSuppressionList: {
	items: [...#MonitorActionRuleSuppression] @go(Items,[]MonitorActionRuleSuppression)
}
