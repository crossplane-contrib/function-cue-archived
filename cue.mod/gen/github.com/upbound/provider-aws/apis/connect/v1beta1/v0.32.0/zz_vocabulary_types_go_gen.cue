// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/connect/v1beta1

package v1beta1

#VocabularyObservation: {
	// The Amazon Resource Name (ARN) of the vocabulary.
	arn?: null | string @go(Arn,*string)

	// The reason why the custom vocabulary was not created.
	failureReason?: null | string @go(FailureReason,*string)

	// The identifier of the hosting Amazon Connect Instance and identifier of the vocabulary
	// separated by a colon (:).
	id?: null | string @go(ID,*string)

	// The timestamp when the custom vocabulary was last modified.
	lastModifiedTime?: null | string @go(LastModifiedTime,*string)

	// The current state of the custom vocabulary. Valid values are CREATION_IN_PROGRESS, ACTIVE, CREATION_FAILED, DELETE_IN_PROGRESS.
	state?: null | string @go(State,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The identifier of the custom vocabulary.
	vocabularyId?: null | string @go(VocabularyID,*string)
}

#VocabularyParameters: {
	// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see Create a custom vocabulary using a table. Minimum length of 1. Maximum length of 60000.
	// +kubebuilder:validation:Required
	content?: null | string @go(Content,*string)

	// Specifies the identifier of the hosting Amazon Connect Instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see What is Amazon Transcribe?. Valid Values are ar-AE, de-CH, de-DE, en-AB, en-AU, en-GB, en-IE, en-IN, en-US, en-WL, es-ES, es-US, fr-CA, fr-FR, hi-IN, it-IT, ja-JP, ko-KR, pt-BR, pt-PT, zh-CN.
	// +kubebuilder:validation:Required
	languageCode?: null | string @go(LanguageCode,*string)

	// A unique name of the custom vocabulary. Must not be more than 140 characters.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// VocabularySpec defines the desired state of Vocabulary
#VocabularySpec: {
	forProvider: #VocabularyParameters @go(ForProvider)
}

// VocabularyStatus defines the observed state of Vocabulary.
#VocabularyStatus: {
	atProvider?: #VocabularyObservation @go(AtProvider)
}

// Vocabulary is the Schema for the Vocabularys API. Provides details about a specific Amazon Connect Vocabulary
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Vocabulary: {
	spec:    #VocabularySpec   @go(Spec)
	status?: #VocabularyStatus @go(Status)
}

// VocabularyList contains a list of Vocabularys
#VocabularyList: {
	items: [...#Vocabulary] @go(Items,[]Vocabulary)
}
