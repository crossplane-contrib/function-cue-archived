// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/connect/v1beta1

package v1beta1

#EncryptionConfigObservation: {
}

#EncryptionConfigParameters: {
	// The type of encryption. Valid Values: KMS.
	// +kubebuilder:validation:Required
	encryptionType?: null | string @go(EncryptionType,*string)

	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	keyId?: null | string @go(KeyID,*string)
}

#InstanceStorageConfigObservation: {
	// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
	associationId?: null | string @go(AssociationID,*string)

	// The identifier of the hosting Amazon Connect Instance, association_id, and resource_type separated by a colon (:).
	id?: null | string @go(ID,*string)
}

#InstanceStorageConfigParameters: {
	// Specifies the identifier of the hosting Amazon Connect Instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// A valid resource type. Valid Values: CHAT_TRANSCRIPTS | CALL_RECORDINGS | SCHEDULED_REPORTS | MEDIA_STREAMS | CONTACT_TRACE_RECORDS | AGENT_EVENTS | REAL_TIME_CONTACT_ANALYSIS_SEGMENTS.
	// +kubebuilder:validation:Required
	resourceType?: null | string @go(ResourceType,*string)

	// Specifies the storage configuration options for the Connect Instance. Documented below.
	// +kubebuilder:validation:Required
	storageConfig: [...#StorageConfigParameters] @go(StorageConfig,[]StorageConfigParameters)
}

#KinesisFirehoseConfigObservation: {
}

#KinesisFirehoseConfigParameters: {
	// The Amazon Resource Name (ARN) of the delivery stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",false)
	// +kubebuilder:validation:Optional
	firehoseArn?: null | string @go(FirehoseArn,*string)
}

#KinesisStreamConfigObservation: {
}

#KinesisStreamConfigParameters: {
	// The Amazon Resource Name (ARN) of the data stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",false)
	// +kubebuilder:validation:Optional
	streamArn?: null | string @go(StreamArn,*string)
}

#KinesisVideoStreamConfigObservation: {
}

#KinesisVideoStreamConfigParameters: {
	// The encryption configuration. Documented below.
	// +kubebuilder:validation:Required
	encryptionConfig: [...#EncryptionConfigParameters] @go(EncryptionConfig,[]EncryptionConfigParameters)

	// The prefix of the video stream. Minimum length of 1. Maximum length of 128. When read from the state, the value returned is <prefix>-connect-<connect_instance_alias>-contact- since the API appends additional details to the prefix.
	// +kubebuilder:validation:Required
	prefix?: null | string @go(Prefix,*string)

	// The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of 0. Maximum value of 87600. A value of 0, indicates that the stream does not persist data.
	// +kubebuilder:validation:Required
	retentionPeriodHours?: null | float64 @go(RetentionPeriodHours,*float64)
}

#S3ConfigEncryptionConfigObservation: {
}

#S3ConfigEncryptionConfigParameters: {
	// The type of encryption. Valid Values: KMS.
	// +kubebuilder:validation:Required
	encryptionType?: null | string @go(EncryptionType,*string)

	// The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	keyId?: null | string @go(KeyID,*string)
}

#S3ConfigObservation: {
}

#S3ConfigParameters: {
	// The S3 bucket name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucketName?: null | string @go(BucketName,*string)

	// The S3 bucket prefix.
	// +kubebuilder:validation:Required
	bucketPrefix?: null | string @go(BucketPrefix,*string)

	// The encryption configuration. Documented below.
	// +kubebuilder:validation:Optional
	encryptionConfig?: [...#S3ConfigEncryptionConfigParameters] @go(EncryptionConfig,[]S3ConfigEncryptionConfigParameters)
}

#StorageConfigObservation: {
}

#StorageConfigParameters: {
	// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
	// +kubebuilder:validation:Optional
	kinesisFirehoseConfig?: [...#KinesisFirehoseConfigParameters] @go(KinesisFirehoseConfig,[]KinesisFirehoseConfigParameters)

	// A block that specifies the configuration of the Kinesis data stream. Documented below.
	// +kubebuilder:validation:Optional
	kinesisStreamConfig?: [...#KinesisStreamConfigParameters] @go(KinesisStreamConfig,[]KinesisStreamConfigParameters)

	// A block that specifies the configuration of the Kinesis video stream. Documented below.
	// +kubebuilder:validation:Optional
	kinesisVideoStreamConfig?: [...#KinesisVideoStreamConfigParameters] @go(KinesisVideoStreamConfig,[]KinesisVideoStreamConfigParameters)

	// A block that specifies the configuration of S3 Bucket. Documented below.
	// +kubebuilder:validation:Optional
	s3Config?: [...#S3ConfigParameters] @go(S3Config,[]S3ConfigParameters)

	// A valid storage type. Valid Values: S3 | KINESIS_VIDEO_STREAM | KINESIS_STREAM | KINESIS_FIREHOSE.
	// +kubebuilder:validation:Required
	storageType?: null | string @go(StorageType,*string)
}

// InstanceStorageConfigSpec defines the desired state of InstanceStorageConfig
#InstanceStorageConfigSpec: {
	forProvider: #InstanceStorageConfigParameters @go(ForProvider)
}

// InstanceStorageConfigStatus defines the observed state of InstanceStorageConfig.
#InstanceStorageConfigStatus: {
	atProvider?: #InstanceStorageConfigObservation @go(AtProvider)
}

// InstanceStorageConfig is the Schema for the InstanceStorageConfigs API. Provides details about a specific Amazon Connect Instance Storage Config.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#InstanceStorageConfig: {
	spec:    #InstanceStorageConfigSpec   @go(Spec)
	status?: #InstanceStorageConfigStatus @go(Status)
}

// InstanceStorageConfigList contains a list of InstanceStorageConfigs
#InstanceStorageConfigList: {
	items: [...#InstanceStorageConfig] @go(Items,[]InstanceStorageConfig)
}
