// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/connect/v1beta1

package v1beta1

#IdentityInfoObservation: {
}

#IdentityInfoParameters: {
	// The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the email is supported. From the UpdateUserIdentityInfo API documentation it is strongly recommended to limit who has the ability to invoke UpdateUserIdentityInfo. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
	// +kubebuilder:validation:Optional
	firstName?: null | string @go(FirstName,*string)

	// The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
	// +kubebuilder:validation:Optional
	lastName?: null | string @go(LastName,*string)
}

#UserObservation: {
	// The Amazon Resource Name (ARN) of the user.
	arn?: null | string @go(Arn,*string)

	// The identifier of the hosting Amazon Connect Instance and identifier of the user
	// separated by a colon (:).
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The identifier for the user.
	userId?: null | string @go(UserID,*string)
}

#UserParameters: {
	// The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
	// +kubebuilder:validation:Optional
	directoryUserId?: null | string @go(DirectoryUserID,*string)

	// The identifier of the hierarchy group for the user.
	// +kubebuilder:validation:Optional
	hierarchyGroupId?: null | string @go(HierarchyGroupID,*string)

	// A block that contains information about the identity of the user. Documented below.
	// +kubebuilder:validation:Optional
	identityInfo?: [...#IdentityInfoParameters] @go(IdentityInfo,[]IdentityInfoParameters)

	// Specifies the identifier of the hosting Amazon Connect Instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// A block that contains information about the phone settings for the user. Documented below.
	// +kubebuilder:validation:Required
	phoneConfig: [...#UserPhoneConfigParameters] @go(PhoneConfig,[]UserPhoneConfigParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The identifier of the routing profile for the user.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/connect/v1beta1.RoutingProfile
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("routing_profile_id",true)
	// +kubebuilder:validation:Optional
	routingProfileId?: null | string @go(RoutingProfileID,*string)

	// A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see Best Practices for Security Profiles in the Amazon Connect Administrator Guide.
	// +kubebuilder:validation:Required
	securityProfileIds: [...null | string] @go(SecurityProfileIds,[]*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#UserPhoneConfigObservation: {
}

#UserPhoneConfigParameters: {
	// The After Call Work (ACW) timeout setting, in seconds. Minimum value of 0.
	// +kubebuilder:validation:Optional
	afterContactWorkTimeLimit?: null | float64 @go(AfterContactWorkTimeLimit,*float64)

	// When Auto-Accept Call is enabled for an available agent, the agent connects to contacts automatically.
	// +kubebuilder:validation:Optional
	autoAccept?: null | bool @go(AutoAccept,*bool)

	// The phone number for the user's desk phone. Required if phone_type is set as DESK_PHONE.
	// +kubebuilder:validation:Optional
	deskPhoneNumber?: null | string @go(DeskPhoneNumber,*string)

	// The phone type. Valid values are DESK_PHONE and SOFT_PHONE.
	// +kubebuilder:validation:Required
	phoneType?: null | string @go(PhoneType,*string)
}

// UserSpec defines the desired state of User
#UserSpec: {
	forProvider: #UserParameters @go(ForProvider)
}

// UserStatus defines the observed state of User.
#UserStatus: {
	atProvider?: #UserObservation @go(AtProvider)
}

// User is the Schema for the Users API. Provides details about a specific Amazon Connect User
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#User: {
	spec:    #UserSpec   @go(Spec)
	status?: #UserStatus @go(Status)
}

// UserList contains a list of Users
#UserList: {
	items: [...#User] @go(Items,[]User)
}
