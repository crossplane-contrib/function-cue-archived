// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkmanager/v1beta1

package v1beta1

#CoreNetworkObservation: {
	// Core Network Amazon Resource Name (ARN).
	arn?: null | string @go(Arn,*string)

	// Timestamp when a core network was created.
	createdAt?: null | string @go(CreatedAt,*string)

	// One or more blocks detailing the edges within a core network. Detailed below.
	edges?: [...#EdgesObservation] @go(Edges,[]EdgesObservation)

	// Core Network ID.
	id?: null | string @go(ID,*string)

	// One or more blocks detailing the segments within a core network. Detailed below.
	segments?: [...#SegmentsObservation] @go(Segments,[]SegmentsObservation)

	// Current state of a core network.
	state?: null | string @go(State,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#CoreNetworkParameters: {
	// Description of the Core Network.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The ID of the global network that a core network will be a part of.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.GlobalNetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)

	// Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the LATEST and LIVE policy document. Refer to the Core network policies documentation for more information.
	// +kubebuilder:validation:Optional
	policyDocument?: null | string @go(PolicyDocument,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EdgesObservation: {
	// ASN of a core network edge.
	asn?: null | float64 @go(Asn,*float64)

	// Region where a core network edge is located.
	edgeLocation?: null | string @go(EdgeLocation,*string)

	// Inside IP addresses used for core network edges.
	insideCidrBlocks?: [...null | string] @go(InsideCidrBlocks,[]*string)
}

#EdgesParameters: {
}

#SegmentsObservation: {
	// Regions where the edges are located.
	edgeLocations?: [...null | string] @go(EdgeLocations,[]*string)

	// Name of a core network segment.
	name?: null | string @go(Name,*string)

	// Shared segments of a core network.
	sharedSegments?: [...null | string] @go(SharedSegments,[]*string)
}

#SegmentsParameters: {
}

// CoreNetworkSpec defines the desired state of CoreNetwork
#CoreNetworkSpec: {
	forProvider: #CoreNetworkParameters @go(ForProvider)
}

// CoreNetworkStatus defines the observed state of CoreNetwork.
#CoreNetworkStatus: {
	atProvider?: #CoreNetworkObservation @go(AtProvider)
}

// CoreNetwork is the Schema for the CoreNetworks API. Provides a core network resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CoreNetwork: {
	spec:    #CoreNetworkSpec   @go(Spec)
	status?: #CoreNetworkStatus @go(Status)
}

// CoreNetworkList contains a list of CoreNetworks
#CoreNetworkList: {
	items: [...#CoreNetwork] @go(Items,[]CoreNetwork)
}
