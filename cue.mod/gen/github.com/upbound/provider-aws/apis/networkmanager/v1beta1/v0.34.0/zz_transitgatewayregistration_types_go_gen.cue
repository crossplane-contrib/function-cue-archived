// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkmanager/v1beta1

package v1beta1

#TransitGatewayRegistrationObservation: {
	// The ID of the Global Network to register to.
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)
	id?:              null | string @go(ID,*string)

	// The ARN of the Transit Gateway to register.
	transitGatewayArn?: null | string @go(TransitGatewayArn,*string)
}

#TransitGatewayRegistrationParameters: {
	// The ID of the Global Network to register to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.GlobalNetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN of the Transit Gateway to register.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.TransitGateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	transitGatewayArn?: null | string @go(TransitGatewayArn,*string)
}

// TransitGatewayRegistrationSpec defines the desired state of TransitGatewayRegistration
#TransitGatewayRegistrationSpec: {
	forProvider: #TransitGatewayRegistrationParameters @go(ForProvider)
}

// TransitGatewayRegistrationStatus defines the observed state of TransitGatewayRegistration.
#TransitGatewayRegistrationStatus: {
	atProvider?: #TransitGatewayRegistrationObservation @go(AtProvider)
}

// TransitGatewayRegistration is the Schema for the TransitGatewayRegistrations API. Registers a transit gateway to a global network.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayRegistration: {
	spec:    #TransitGatewayRegistrationSpec   @go(Spec)
	status?: #TransitGatewayRegistrationStatus @go(Status)
}

// TransitGatewayRegistrationList contains a list of TransitGatewayRegistrations
#TransitGatewayRegistrationList: {
	items: [...#TransitGatewayRegistration] @go(Items,[]TransitGatewayRegistration)
}
