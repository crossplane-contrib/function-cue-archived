// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkmanager/v1beta1

package v1beta1

#TransitGatewayConnectPeerAssociationObservation: {
	// The ID of the device.
	deviceId?: null | string @go(DeviceID,*string)

	// The ID of the global network.
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)
	id?:              null | string @go(ID,*string)

	// The ID of the link.
	linkId?: null | string @go(LinkID,*string)

	// The Amazon Resource Name (ARN) of the Connect peer.
	transitGatewayConnectPeerArn?: null | string @go(TransitGatewayConnectPeerArn,*string)
}

#TransitGatewayConnectPeerAssociationParameters: {
	// The ID of the device.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.Device
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	deviceId?: null | string @go(DeviceID,*string)

	// The ID of the global network.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.GlobalNetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)

	// The ID of the link.
	// +kubebuilder:validation:Optional
	linkId?: null | string @go(LinkID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) of the Connect peer.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.TransitGatewayConnectPeer
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	transitGatewayConnectPeerArn?: null | string @go(TransitGatewayConnectPeerArn,*string)
}

// TransitGatewayConnectPeerAssociationSpec defines the desired state of TransitGatewayConnectPeerAssociation
#TransitGatewayConnectPeerAssociationSpec: {
	forProvider: #TransitGatewayConnectPeerAssociationParameters @go(ForProvider)
}

// TransitGatewayConnectPeerAssociationStatus defines the observed state of TransitGatewayConnectPeerAssociation.
#TransitGatewayConnectPeerAssociationStatus: {
	atProvider?: #TransitGatewayConnectPeerAssociationObservation @go(AtProvider)
}

// TransitGatewayConnectPeerAssociation is the Schema for the TransitGatewayConnectPeerAssociations API. Associates a transit gateway Connect peer with a device, and optionally, with a link.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayConnectPeerAssociation: {
	spec:    #TransitGatewayConnectPeerAssociationSpec   @go(Spec)
	status?: #TransitGatewayConnectPeerAssociationStatus @go(Status)
}

// TransitGatewayConnectPeerAssociationList contains a list of TransitGatewayConnectPeerAssociations
#TransitGatewayConnectPeerAssociationList: {
	items: [...#TransitGatewayConnectPeerAssociation] @go(Items,[]TransitGatewayConnectPeerAssociation)
}
