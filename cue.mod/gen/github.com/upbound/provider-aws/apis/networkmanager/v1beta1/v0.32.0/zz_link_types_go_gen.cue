// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkmanager/v1beta1

package v1beta1

#BandwidthObservation: {
}

#BandwidthParameters: {
	// Download speed in Mbps.
	// +kubebuilder:validation:Optional
	downloadSpeed?: null | float64 @go(DownloadSpeed,*float64)

	// Upload speed in Mbps.
	// +kubebuilder:validation:Optional
	uploadSpeed?: null | float64 @go(UploadSpeed,*float64)
}

#LinkObservation: {
	// Link Amazon Resource Name (ARN).
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#LinkParameters: {
	// The upload speed and download speed in Mbps. Documented below.
	// +kubebuilder:validation:Required
	bandwidth: [...#BandwidthParameters] @go(Bandwidth,[]BandwidthParameters)

	// A description of the link.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The ID of the global network.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkmanager/v1beta1.GlobalNetwork
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	globalNetworkId?: null | string @go(GlobalNetworkID,*string)

	// The provider of the link.
	// +kubebuilder:validation:Optional
	providerName?: null | string @go(ProviderName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the site.
	// +crossplane:generate:reference:type=Site
	// +kubebuilder:validation:Optional
	siteId?: null | string @go(SiteID,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The type of the link.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// LinkSpec defines the desired state of Link
#LinkSpec: {
	forProvider: #LinkParameters @go(ForProvider)
}

// LinkStatus defines the observed state of Link.
#LinkStatus: {
	atProvider?: #LinkObservation @go(AtProvider)
}

// Link is the Schema for the Links API. Creates a link for a site.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Link: {
	spec:    #LinkSpec   @go(Spec)
	status?: #LinkStatus @go(Status)
}

// LinkList contains a list of Links
#LinkList: {
	items: [...#Link] @go(Items,[]Link)
}
