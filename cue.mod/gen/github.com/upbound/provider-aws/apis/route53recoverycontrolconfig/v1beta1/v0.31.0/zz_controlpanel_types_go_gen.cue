// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/route53recoverycontrolconfig/v1beta1

package v1beta1

#ControlPanelObservation: {
	// ARN of the control panel.
	arn?: null | string @go(Arn,*string)

	// Whether a control panel is default.
	defaultControlPanel?: null | bool   @go(DefaultControlPanel,*bool)
	id?:                  null | string @go(ID,*string)

	// Number routing controls in a control panel.
	routingControlCount?: null | float64 @go(RoutingControlCount,*float64)

	// Status of control panel: PENDING when it is being created/updated, PENDING_DELETION when it is being deleted, and DEPLOYED otherwise.
	status?: null | string @go(Status,*string)
}

#ControlPanelParameters: {
	// ARN of the cluster in which this control panel will reside.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/route53recoverycontrolconfig/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.TerraformID()
	// +kubebuilder:validation:Optional
	clusterArn?: null | string @go(ClusterArn,*string)

	// Name describing the control panel.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ControlPanelSpec defines the desired state of ControlPanel
#ControlPanelSpec: {
	forProvider: #ControlPanelParameters @go(ForProvider)
}

// ControlPanelStatus defines the observed state of ControlPanel.
#ControlPanelStatus: {
	atProvider?: #ControlPanelObservation @go(AtProvider)
}

// ControlPanel is the Schema for the ControlPanels API. Provides an AWS Route 53 Recovery Control Config Control Panel
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ControlPanel: {
	spec:    #ControlPanelSpec   @go(Spec)
	status?: #ControlPanelStatus @go(Status)
}

// ControlPanelList contains a list of ControlPanels
#ControlPanelList: {
	items: [...#ControlPanel] @go(Items,[]ControlPanel)
}
