// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/elb/v1beta1

package v1beta1

#ProxyProtocolPolicyObservation: {
	// The ID of the policy.
	id?: null | string @go(ID,*string)

	// List of instance ports to which the policy
	// should be applied. This can be specified if the protocol is SSL or TCP.
	instancePorts?: [...null | string] @go(InstancePorts,[]*string)

	// The load balancer to which the policy
	// should be attached.
	loadBalancer?: null | string @go(LoadBalancer,*string)
}

#ProxyProtocolPolicyParameters: {
	// List of instance ports to which the policy
	// should be applied. This can be specified if the protocol is SSL or TCP.
	// +kubebuilder:validation:Optional
	instancePorts?: [...null | string] @go(InstancePorts,[]*string)

	// The load balancer to which the policy
	// should be attached.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/elb/v1beta1.ELB
	// +kubebuilder:validation:Optional
	loadBalancer?: null | string @go(LoadBalancer,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ProxyProtocolPolicySpec defines the desired state of ProxyProtocolPolicy
#ProxyProtocolPolicySpec: {
	forProvider: #ProxyProtocolPolicyParameters @go(ForProvider)
}

// ProxyProtocolPolicyStatus defines the observed state of ProxyProtocolPolicy.
#ProxyProtocolPolicyStatus: {
	atProvider?: #ProxyProtocolPolicyObservation @go(AtProvider)
}

// ProxyProtocolPolicy is the Schema for the ProxyProtocolPolicys API. Provides a proxy protocol policy, which allows an ELB to carry a client connection information to a backend.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ProxyProtocolPolicy: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.instancePorts)",message="instancePorts is a required parameter"
	spec:    #ProxyProtocolPolicySpec   @go(Spec)
	status?: #ProxyProtocolPolicyStatus @go(Status)
}

// ProxyProtocolPolicyList contains a list of ProxyProtocolPolicys
#ProxyProtocolPolicyList: {
	items: [...#ProxyProtocolPolicy] @go(Items,[]ProxyProtocolPolicy)
}
