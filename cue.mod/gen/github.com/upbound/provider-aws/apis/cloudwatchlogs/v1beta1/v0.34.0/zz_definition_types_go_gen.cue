// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1

package v1beta1

#DefinitionObservation: {
	id?: null | string @go(ID,*string)

	// Specific log groups to use with the query.
	logGroupNames?: [...null | string] @go(LogGroupNames,[]*string)

	// The name of the query.
	name?: null | string @go(Name,*string)

	// The query definition ID.
	queryDefinitionId?: null | string @go(QueryDefinitionID,*string)

	// The query to save. You can read more about CloudWatch Logs Query Syntax in the documentation.
	queryString?: null | string @go(QueryString,*string)
}

#DefinitionParameters: {
	// Specific log groups to use with the query.
	// +kubebuilder:validation:Optional
	logGroupNames?: [...null | string] @go(LogGroupNames,[]*string)

	// The name of the query.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The query to save. You can read more about CloudWatch Logs Query Syntax in the documentation.
	// +kubebuilder:validation:Optional
	queryString?: null | string @go(QueryString,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// DefinitionSpec defines the desired state of Definition
#DefinitionSpec: {
	forProvider: #DefinitionParameters @go(ForProvider)
}

// DefinitionStatus defines the observed state of Definition.
#DefinitionStatus: {
	atProvider?: #DefinitionObservation @go(AtProvider)
}

// Definition is the Schema for the Definitions API. Provides a CloudWatch Logs query definition resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Definition: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.queryString)",message="queryString is a required parameter"
	spec:    #DefinitionSpec   @go(Spec)
	status?: #DefinitionStatus @go(Status)
}

// DefinitionList contains a list of Definitions
#DefinitionList: {
	items: [...#Definition] @go(Items,[]Definition)
}
