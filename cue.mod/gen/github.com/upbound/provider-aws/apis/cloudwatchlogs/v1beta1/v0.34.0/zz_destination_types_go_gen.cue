// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudwatchlogs/v1beta1

package v1beta1

#DestinationObservation: {
	// The Amazon Resource Name (ARN) specifying the log destination.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to put data into the target.
	roleArn?: null | string @go(RoleArn,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The ARN of the target Amazon Kinesis stream resource for the destination.
	targetArn?: null | string @go(TargetArn,*string)
}

#DestinationParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to put data into the target.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ARN of the target Amazon Kinesis stream resource for the destination.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.TerraformID()
	// +kubebuilder:validation:Optional
	targetArn?: null | string @go(TargetArn,*string)
}

// DestinationSpec defines the desired state of Destination
#DestinationSpec: {
	forProvider: #DestinationParameters @go(ForProvider)
}

// DestinationStatus defines the observed state of Destination.
#DestinationStatus: {
	atProvider?: #DestinationObservation @go(AtProvider)
}

// Destination is the Schema for the Destinations API. Provides a CloudWatch Logs destination.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Destination: {
	spec:    #DestinationSpec   @go(Spec)
	status?: #DestinationStatus @go(Status)
}

// DestinationList contains a list of Destinations
#DestinationList: {
	items: [...#Destination] @go(Items,[]Destination)
}
