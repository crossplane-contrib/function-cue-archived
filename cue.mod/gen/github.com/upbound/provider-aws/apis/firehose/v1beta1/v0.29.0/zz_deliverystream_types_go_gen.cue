// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/firehose/v1beta1

package v1beta1

#CloudwatchLoggingOptionsObservation: {
}

#CloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#CommonAttributesObservation: {
}

#CommonAttributesParameters: {
	// The HTTP endpoint name.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The value of the HTTP endpoint common attribute.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#DataFormatConversionConfigurationObservation: {
}

#DataFormatConversionConfigurationParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	// +kubebuilder:validation:Required
	inputFormatConfiguration: [...#InputFormatConfigurationParameters] @go(InputFormatConfiguration,[]InputFormatConfigurationParameters)

	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	// +kubebuilder:validation:Required
	outputFormatConfiguration: [...#OutputFormatConfigurationParameters] @go(OutputFormatConfiguration,[]OutputFormatConfigurationParameters)

	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	// +kubebuilder:validation:Required
	schemaConfiguration: [...#SchemaConfigurationParameters] @go(SchemaConfiguration,[]SchemaConfigurationParameters)
}

#DeliveryStreamObservation: {
	// Configuration options if elasticsearch is the destination. More details are given below.
	// +kubebuilder:validation:Optional
	elasticsearchConfiguration?: [...#ElasticsearchConfigurationObservation] @go(ElasticsearchConfiguration,[]ElasticsearchConfigurationObservation)
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#DeliveryStreamParameters: {
	// The Amazon Resource Name (ARN) specifying the Stream
	// +kubebuilder:validation:Optional
	arn?: null | string @go(Arn,*string)

	// â€“  This is the destination to where the data is delivered. The only options are s3 (Deprecated, use extended_s3 instead), extended_s3, redshift, elasticsearch, splunk, and http_endpoint.
	// +kubebuilder:validation:Required
	destination?: null | string @go(Destination,*string)

	// +kubebuilder:validation:Optional
	destinationId?: null | string @go(DestinationID,*string)

	// Configuration options if elasticsearch is the destination. More details are given below.
	// +kubebuilder:validation:Optional
	elasticsearchConfiguration?: [...#ElasticsearchConfigurationParameters] @go(ElasticsearchConfiguration,[]ElasticsearchConfigurationParameters)

	// Enhanced configuration options for the s3 destination. More details are given below.
	// +kubebuilder:validation:Optional
	extendedS3Configuration?: [...#ExtendedS3ConfigurationParameters] @go(ExtendedS3Configuration,[]ExtendedS3ConfigurationParameters)

	// Configuration options if http_endpoint is the destination. requires the user to also specify a s3_configuration block.  More details are given below.
	// +kubebuilder:validation:Optional
	httpEndpointConfiguration?: [...#HTTPEndpointConfigurationParameters] @go(HTTPEndpointConfiguration,[]HTTPEndpointConfigurationParameters)

	// Allows the ability to specify the kinesis stream that is used as the source of the firehose delivery stream.
	// +kubebuilder:validation:Optional
	kinesisSourceConfiguration?: [...#KinesisSourceConfigurationParameters] @go(KinesisSourceConfiguration,[]KinesisSourceConfigurationParameters)

	// Configuration options if redshift is the destination.
	// Using redshift_configuration requires the user to also specify a
	// s3_configuration block. More details are given below.
	// +kubebuilder:validation:Optional
	redshiftConfiguration?: [...#RedshiftConfigurationParameters] @go(RedshiftConfiguration,[]RedshiftConfigurationParameters)

	// If you don't specify an AWS Region, the default is the current region.
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Required for non-S3 destinations. For S3 destination, use extended_s3_configuration instead. Configuration options for the s3 destination (or the intermediate bucket if the destination
	// is redshift). More details are given below.
	// +kubebuilder:validation:Optional
	s3Configuration?: [...#S3ConfigurationParameters] @go(S3Configuration,[]S3ConfigurationParameters)

	// Encrypt at rest options.
	// Server-side encryption should not be enabled when a kinesis stream is configured as the source of the firehose delivery stream.
	// +kubebuilder:validation:Optional
	serverSideEncryption?: [...#ServerSideEncryptionParameters] @go(ServerSideEncryption,[]ServerSideEncryptionParameters)

	// Configuration options if splunk is the destination. More details are given below.
	// +kubebuilder:validation:Optional
	splunkConfiguration?: [...#SplunkConfigurationParameters] @go(SplunkConfiguration,[]SplunkConfigurationParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Specifies the table version for the output data schema. Defaults to LATEST.
	// +kubebuilder:validation:Optional
	versionId?: null | string @go(VersionID,*string)
}

#DeserializerObservation: {
}

#DeserializerParameters: {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	// +kubebuilder:validation:Optional
	hiveJsonSerDe?: [...#HiveJSONSerDeParameters] @go(HiveJSONSerDe,[]HiveJSONSerDeParameters)

	// Nested argument that specifies the OpenX SerDe. More details below.
	// +kubebuilder:validation:Optional
	openXJsonSerDe?: [...#OpenXJSONSerDeParameters] @go(OpenXJSONSerDe,[]OpenXJSONSerDeParameters)
}

#DynamicPartitioningConfigurationObservation: {
}

#DynamicPartitioningConfigurationParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	// +kubebuilder:validation:Optional
	retryDuration?: null | float64 @go(RetryDuration,*float64)
}

#ElasticsearchConfigurationObservation: {
	// The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below
	// +kubebuilder:validation:Optional
	vpcConfig?: [...#VPCConfigObservation] @go(VPCConfig,[]VPCConfigObservation)
}

#ElasticsearchConfigurationParameters: {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	// +kubebuilder:validation:Optional
	bufferingInterval?: null | float64 @go(BufferingInterval,*float64)

	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	// +kubebuilder:validation:Optional
	bufferingSize?: null | float64 @go(BufferingSize,*float64)

	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#CloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]CloudwatchLoggingOptionsParameters)

	// The endpoint to use when communicating with the cluster. Conflicts with domain_arn.
	// +kubebuilder:validation:Optional
	clusterEndpoint?: null | string @go(ClusterEndpoint,*string)

	// The ARN of the Amazon ES domain.  The pattern needs to be arn:.*.  Conflicts with cluster_endpoint.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/elasticsearch/v1beta1.Domain
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	domainArn?: null | string @go(DomainArn,*string)

	// The Elasticsearch index name.
	// +kubebuilder:validation:Required
	indexName?: null | string @go(IndexName,*string)

	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are NoRotation, OneHour, OneDay, OneWeek, and OneMonth.  The default value is OneDay.
	// +kubebuilder:validation:Optional
	indexRotationPeriod?: null | string @go(IndexRotationPeriod,*string)

	// The data processing configuration.  More details are given below.
	// +kubebuilder:validation:Optional
	processingConfiguration?: [...#ProcessingConfigurationParameters] @go(ProcessingConfiguration,[]ProcessingConfigurationParameters)

	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	// +kubebuilder:validation:Optional
	retryDuration?: null | float64 @go(RetryDuration,*float64)

	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
	// +kubebuilder:validation:Optional
	s3BackupMode?: null | string @go(S3BackupMode,*string)

	// The Elasticsearch type name with maximum length of 100 characters.
	// +kubebuilder:validation:Optional
	typeName?: null | string @go(TypeName,*string)

	// The VPC configuration for the delivery stream to connect to Elastic Search associated with the VPC. More details are given below
	// +kubebuilder:validation:Optional
	vpcConfig?: [...#VPCConfigParameters] @go(VPCConfig,[]VPCConfigParameters)
}

#ExtendedS3ConfigurationCloudwatchLoggingOptionsObservation: {
}

#ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#ExtendedS3ConfigurationObservation: {
}

#ExtendedS3ConfigurationParameters: {
	// The ARN of the S3 bucket
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	bucketArn?: null | string @go(BucketArn,*string)

	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	// +kubebuilder:validation:Optional
	bufferInterval?: null | float64 @go(BufferInterval,*float64)

	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	// +kubebuilder:validation:Optional
	bufferSize?: null | float64 @go(BufferSize,*float64)

	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]ExtendedS3ConfigurationCloudwatchLoggingOptionsParameters)

	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
	// +kubebuilder:validation:Optional
	compressionFormat?: null | string @go(CompressionFormat,*string)

	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	// +kubebuilder:validation:Optional
	dataFormatConversionConfiguration?: [...#DataFormatConversionConfigurationParameters] @go(DataFormatConversionConfiguration,[]DataFormatConversionConfigurationParameters)

	// The configuration for dynamic partitioning. See Dynamic Partitioning Configuration below for more details.
	// +kubebuilder:validation:Optional
	dynamicPartitioningConfiguration?: [...#DynamicPartitioningConfigurationParameters] @go(DynamicPartitioningConfiguration,[]DynamicPartitioningConfigurationParameters)

	// Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
	// +kubebuilder:validation:Optional
	errorOutputPrefix?: null | string @go(ErrorOutputPrefix,*string)

	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// The data processing configuration.  More details are given below.
	// +kubebuilder:validation:Optional
	processingConfiguration?: [...#ExtendedS3ConfigurationProcessingConfigurationParameters] @go(ProcessingConfiguration,[]ExtendedS3ConfigurationProcessingConfigurationParameters)

	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.
	// +kubebuilder:validation:Optional
	s3BackupConfiguration?: [...#S3BackupConfigurationParameters] @go(S3BackupConfiguration,[]S3BackupConfigurationParameters)

	// The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
	// +kubebuilder:validation:Optional
	s3BackupMode?: null | string @go(S3BackupMode,*string)
}

#ExtendedS3ConfigurationProcessingConfigurationObservation: {
}

#ExtendedS3ConfigurationProcessingConfigurationParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Array of data processors. More details are given below
	// +kubebuilder:validation:Optional
	processors?: [...#ProcessingConfigurationProcessorsParameters] @go(Processors,[]ProcessingConfigurationProcessorsParameters)
}

#HTTPEndpointConfigurationCloudwatchLoggingOptionsObservation: {
}

#HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#HTTPEndpointConfigurationObservation: {
}

#HTTPEndpointConfigurationParameters: {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	// +kubebuilder:validation:Optional
	bufferingInterval?: null | float64 @go(BufferingInterval,*float64)

	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	// +kubebuilder:validation:Optional
	bufferingSize?: null | float64 @go(BufferingSize,*float64)

	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]HTTPEndpointConfigurationCloudwatchLoggingOptionsParameters)

	// The HTTP endpoint name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The data processing configuration.  More details are given below.
	// +kubebuilder:validation:Optional
	processingConfiguration?: [...#HTTPEndpointConfigurationProcessingConfigurationParameters] @go(ProcessingConfiguration,[]HTTPEndpointConfigurationProcessingConfigurationParameters)

	// The request configuration.  More details are given below.
	// +kubebuilder:validation:Optional
	requestConfiguration?: [...#RequestConfigurationParameters] @go(RequestConfiguration,[]RequestConfigurationParameters)

	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	// +kubebuilder:validation:Optional
	retryDuration?: null | float64 @go(RetryDuration,*float64)

	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
	// +kubebuilder:validation:Optional
	s3BackupMode?: null | string @go(S3BackupMode,*string)

	// The HTTP endpoint URL to which Kinesis Firehose sends your data.
	// +kubebuilder:validation:Required
	url?: null | string @go(URL,*string)
}

#HTTPEndpointConfigurationProcessingConfigurationObservation: {
}

#HTTPEndpointConfigurationProcessingConfigurationParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Array of data processors. More details are given below
	// +kubebuilder:validation:Optional
	processors?: [...#HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters] @go(Processors,[]HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters)
}

#HTTPEndpointConfigurationProcessingConfigurationProcessorsObservation: {
}

#HTTPEndpointConfigurationProcessingConfigurationProcessorsParameters: {
	// Array of processor parameters. More details are given below
	// +kubebuilder:validation:Optional
	parameters?: [...#ProcessingConfigurationProcessorsParametersParameters] @go(Parameters,[]ProcessingConfigurationProcessorsParametersParameters)

	// The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#HiveJSONSerDeObservation: {
}

#HiveJSONSerDeParameters: {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see Class DateTimeFormat. You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	// +kubebuilder:validation:Optional
	timestampFormats?: [...null | string] @go(TimestampFormats,[]*string)
}

#InputFormatConfigurationObservation: {
}

#InputFormatConfigurationParameters: {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	// +kubebuilder:validation:Required
	deserializer: [...#DeserializerParameters] @go(Deserializer,[]DeserializerParameters)
}

#KinesisSourceConfigurationObservation: {
}

#KinesisSourceConfigurationParameters: {
	// The kinesis stream used as the source of the firehose delivery stream.
	// +kubebuilder:validation:Required
	kinesisStreamArn?: null | string @go(KinesisStreamArn,*string)

	// The ARN of the AWS credentials.
	// +kubebuilder:validation:Required
	roleArn?: null | string @go(RoleArn,*string)
}

#OpenXJSONSerDeObservation: {
}

#OpenXJSONSerDeParameters: {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	// +kubebuilder:validation:Optional
	caseInsensitive?: null | bool @go(CaseInsensitive,*bool)

	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to { ts = "timestamp" } to map this key to a column named ts.
	// +kubebuilder:validation:Optional
	columnToJsonKeyMappings?: {[string]: null | string} @go(ColumnToJSONKeyMappings,map[string]*string)

	// When set to true, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option. Defaults to false.
	// +kubebuilder:validation:Optional
	convertDotsInJsonKeysToUnderscores?: null | bool @go(ConvertDotsInJSONKeysToUnderscores,*bool)
}

#OrcSerDeObservation: {
}

#OrcSerDeParameters: {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	// +kubebuilder:validation:Optional
	blockSizeBytes?: null | float64 @go(BlockSizeBytes,*float64)

	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	// +kubebuilder:validation:Optional
	bloomFilterColumns?: [...null | string] @go(BloomFilterColumns,[]*string)

	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
	// +kubebuilder:validation:Optional
	bloomFilterFalsePositiveProbability?: null | float64 @go(BloomFilterFalsePositiveProbability,*float64)

	// The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
	// +kubebuilder:validation:Optional
	compression?: null | string @go(Compression,*string)

	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
	// +kubebuilder:validation:Optional
	dictionaryKeyThreshold?: null | float64 @go(DictionaryKeyThreshold,*float64)

	// Set this to true to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is false.
	// +kubebuilder:validation:Optional
	enablePadding?: null | bool @go(EnablePadding,*bool)

	// The version of the file to write. The possible values are V0_11 and V0_12. The default is V0_12.
	// +kubebuilder:validation:Optional
	formatVersion?: null | string @go(FormatVersion,*string)

	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when enable_padding is false.
	// +kubebuilder:validation:Optional
	paddingTolerance?: null | float64 @go(PaddingTolerance,*float64)

	// The number of rows between index entries. The default is 10000 and the minimum is 1000.
	// +kubebuilder:validation:Optional
	rowIndexStride?: null | float64 @go(RowIndexStride,*float64)

	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	// +kubebuilder:validation:Optional
	stripeSizeBytes?: null | float64 @go(StripeSizeBytes,*float64)
}

#OutputFormatConfigurationObservation: {
}

#OutputFormatConfigurationParameters: {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	// +kubebuilder:validation:Required
	serializer: [...#SerializerParameters] @go(Serializer,[]SerializerParameters)
}

#ParametersObservation: {
}

#ParametersParameters: {
	// Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	parameterName?: null | string @go(ParameterName,*string)

	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	// +kubebuilder:validation:Required
	parameterValue?: null | string @go(ParameterValue,*string)
}

#ParquetSerDeObservation: {
}

#ParquetSerDeParameters: {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	// +kubebuilder:validation:Optional
	blockSizeBytes?: null | float64 @go(BlockSizeBytes,*float64)

	// The compression code to use over data blocks. The possible values are UNCOMPRESSED, SNAPPY, and GZIP, with the default being SNAPPY. Use SNAPPY for higher decompression speed. Use GZIP if the compression ratio is more important than speed.
	// +kubebuilder:validation:Optional
	compression?: null | string @go(Compression,*string)

	// Indicates whether to enable dictionary compression.
	// +kubebuilder:validation:Optional
	enableDictionaryCompression?: null | bool @go(EnableDictionaryCompression,*bool)

	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
	// +kubebuilder:validation:Optional
	maxPaddingBytes?: null | float64 @go(MaxPaddingBytes,*float64)

	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	// +kubebuilder:validation:Optional
	pageSizeBytes?: null | float64 @go(PageSizeBytes,*float64)

	// Indicates the version of row format to output. The possible values are V1 and V2. The default is V1.
	// +kubebuilder:validation:Optional
	writerVersion?: null | string @go(WriterVersion,*string)
}

#ProcessingConfigurationObservation: {
}

#ProcessingConfigurationParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Array of data processors. More details are given below
	// +kubebuilder:validation:Optional
	processors?: [...#ProcessorsParameters] @go(Processors,[]ProcessorsParameters)
}

#ProcessingConfigurationProcessorsObservation: {
}

#ProcessingConfigurationProcessorsParameters: {
	// Array of processor parameters. More details are given below
	// +kubebuilder:validation:Optional
	parameters?: [...#ProcessorsParametersParameters] @go(Parameters,[]ProcessorsParametersParameters)

	// The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#ProcessingConfigurationProcessorsParametersObservation: {
}

#ProcessingConfigurationProcessorsParametersParameters: {
	// Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	parameterName?: null | string @go(ParameterName,*string)

	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	// +kubebuilder:validation:Required
	parameterValue?: null | string @go(ParameterValue,*string)
}

#ProcessorsObservation: {
}

#ProcessorsParameters: {
	// Array of processor parameters. More details are given below
	// +kubebuilder:validation:Optional
	parameters?: [...#ParametersParameters] @go(Parameters,[]ParametersParameters)

	// The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#ProcessorsParametersObservation: {
}

#ProcessorsParametersParameters: {
	// Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	parameterName?: null | string @go(ParameterName,*string)

	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	// +kubebuilder:validation:Required
	parameterValue?: null | string @go(ParameterValue,*string)
}

#RedshiftConfigurationCloudwatchLoggingOptionsObservation: {
}

#RedshiftConfigurationCloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#RedshiftConfigurationObservation: {
}

#RedshiftConfigurationParameters: {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#RedshiftConfigurationCloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]RedshiftConfigurationCloudwatchLoggingOptionsParameters)

	// The jdbcurl of the redshift cluster.
	// +kubebuilder:validation:Required
	clusterJdbcurl?: null | string @go(ClusterJdbcurl,*string)

	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the AWS documentation
	// +kubebuilder:validation:Optional
	copyOptions?: null | string @go(CopyOptions,*string)

	// The data table columns that will be targeted by the copy command.
	// +kubebuilder:validation:Optional
	dataTableColumns?: null | string @go(DataTableColumns,*string)

	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	// +kubebuilder:validation:Required
	dataTableName?: null | string @go(DataTableName,*string)

	// The data processing configuration.  More details are given below.
	// +kubebuilder:validation:Optional
	processingConfiguration?: [...#RedshiftConfigurationProcessingConfigurationParameters] @go(ProcessingConfiguration,[]RedshiftConfigurationProcessingConfigurationParameters)

	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	// +kubebuilder:validation:Optional
	retryDuration?: null | float64 @go(RetryDuration,*float64)

	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The configuration for backup in Amazon S3. Required if s3_backup_mode is Enabled. Supports the same fields as s3_configuration object.
	// +kubebuilder:validation:Optional
	s3BackupConfiguration?: [...#RedshiftConfigurationS3BackupConfigurationParameters] @go(S3BackupConfiguration,[]RedshiftConfigurationS3BackupConfigurationParameters)

	// The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
	// +kubebuilder:validation:Optional
	s3BackupMode?: null | string @go(S3BackupMode,*string)

	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	// +kubebuilder:validation:Required
	username?: null | string @go(Username,*string)
}

#RedshiftConfigurationProcessingConfigurationObservation: {
}

#RedshiftConfigurationProcessingConfigurationParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Array of data processors. More details are given below
	// +kubebuilder:validation:Optional
	processors?: [...#RedshiftConfigurationProcessingConfigurationProcessorsParameters] @go(Processors,[]RedshiftConfigurationProcessingConfigurationProcessorsParameters)
}

#RedshiftConfigurationProcessingConfigurationProcessorsObservation: {
}

#RedshiftConfigurationProcessingConfigurationProcessorsParameters: {
	// Array of processor parameters. More details are given below
	// +kubebuilder:validation:Optional
	parameters?: [...#RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters] @go(Parameters,[]RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters)

	// The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#RedshiftConfigurationProcessingConfigurationProcessorsParametersObservation: {
}

#RedshiftConfigurationProcessingConfigurationProcessorsParametersParameters: {
	// Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	parameterName?: null | string @go(ParameterName,*string)

	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	// +kubebuilder:validation:Required
	parameterValue?: null | string @go(ParameterValue,*string)
}

#RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsObservation: {
}

#RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#RedshiftConfigurationS3BackupConfigurationObservation: {
}

#RedshiftConfigurationS3BackupConfigurationParameters: {
	// The ARN of the S3 bucket
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	bucketArn?: null | string @go(BucketArn,*string)

	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	// +kubebuilder:validation:Optional
	bufferInterval?: null | float64 @go(BufferInterval,*float64)

	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	// +kubebuilder:validation:Optional
	bufferSize?: null | float64 @go(BufferSize,*float64)

	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]RedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsParameters)

	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
	// +kubebuilder:validation:Optional
	compressionFormat?: null | string @go(CompressionFormat,*string)

	// Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
	// +kubebuilder:validation:Optional
	errorOutputPrefix?: null | string @go(ErrorOutputPrefix,*string)

	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

#RequestConfigurationObservation: {
}

#RequestConfigurationParameters: {
	// Describes the metadata sent to the HTTP endpoint destination. More details are given below
	// +kubebuilder:validation:Optional
	commonAttributes?: [...#CommonAttributesParameters] @go(CommonAttributes,[]CommonAttributesParameters)

	// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. Valid values are NONE and GZIP.  Default value is NONE.
	// +kubebuilder:validation:Optional
	contentEncoding?: null | string @go(ContentEncoding,*string)
}

#S3BackupConfigurationCloudwatchLoggingOptionsObservation: {
}

#S3BackupConfigurationCloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#S3BackupConfigurationObservation: {
}

#S3BackupConfigurationParameters: {
	// The ARN of the S3 bucket
	// +kubebuilder:validation:Required
	bucketArn?: null | string @go(BucketArn,*string)

	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	// +kubebuilder:validation:Optional
	bufferInterval?: null | float64 @go(BufferInterval,*float64)

	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	// +kubebuilder:validation:Optional
	bufferSize?: null | float64 @go(BufferSize,*float64)

	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#S3BackupConfigurationCloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]S3BackupConfigurationCloudwatchLoggingOptionsParameters)

	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
	// +kubebuilder:validation:Optional
	compressionFormat?: null | string @go(CompressionFormat,*string)

	// Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
	// +kubebuilder:validation:Optional
	errorOutputPrefix?: null | string @go(ErrorOutputPrefix,*string)

	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// The ARN of the AWS credentials.
	// +kubebuilder:validation:Required
	roleArn?: null | string @go(RoleArn,*string)
}

#S3ConfigurationCloudwatchLoggingOptionsObservation: {
}

#S3ConfigurationCloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#S3ConfigurationObservation: {
}

#S3ConfigurationParameters: {
	// The ARN of the S3 bucket
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	bucketArn?: null | string @go(BucketArn,*string)

	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	// +kubebuilder:validation:Optional
	bufferInterval?: null | float64 @go(BufferInterval,*float64)

	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	// +kubebuilder:validation:Optional
	bufferSize?: null | float64 @go(BufferSize,*float64)

	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#S3ConfigurationCloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]S3ConfigurationCloudwatchLoggingOptionsParameters)

	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP, Snappy, & HADOOP_SNAPPY.
	// +kubebuilder:validation:Optional
	compressionFormat?: null | string @go(CompressionFormat,*string)

	// Prefix added to failed records before writing them to S3. Not currently supported for redshift destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see Custom Prefixes for Amazon S3 Objects.
	// +kubebuilder:validation:Optional
	errorOutputPrefix?: null | string @go(ErrorOutputPrefix,*string)

	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

#SchemaConfigurationObservation: {
}

#SchemaConfigurationParameters: {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	// +kubebuilder:validation:Optional
	catalogId?: null | string @go(CatalogID,*string)

	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	// +kubebuilder:validation:Required
	databaseName?: null | string @go(DatabaseName,*string)

	// If you don't specify an AWS Region, the default is the current region.
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)

	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/glue/v1beta1.CatalogTable
	// +kubebuilder:validation:Optional
	tableName?: null | string @go(TableName,*string)

	// Specifies the table version for the output data schema. Defaults to LATEST.
	// +kubebuilder:validation:Optional
	versionId?: null | string @go(VersionID,*string)
}

#SerializerObservation: {
}

#SerializerParameters: {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see Apache ORC. More details below.
	// +kubebuilder:validation:Optional
	orcSerDe?: [...#OrcSerDeParameters] @go(OrcSerDe,[]OrcSerDeParameters)

	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see Apache Parquet. More details below.
	// +kubebuilder:validation:Optional
	parquetSerDe?: [...#ParquetSerDeParameters] @go(ParquetSerDe,[]ParquetSerDeParameters)
}

#ServerSideEncryptionObservation: {
}

#ServerSideEncryptionParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Amazon Resource Name (ARN) of the encryption key. Required when key_type is CUSTOMER_MANAGED_CMK.
	// +kubebuilder:validation:Optional
	keyArn?: null | string @go(KeyArn,*string)

	// Type of encryption key. Default is AWS_OWNED_CMK. Valid values are AWS_OWNED_CMK and CUSTOMER_MANAGED_CMK
	// +kubebuilder:validation:Optional
	keyType?: null | string @go(KeyType,*string)
}

#SplunkConfigurationCloudwatchLoggingOptionsObservation: {
}

#SplunkConfigurationCloudwatchLoggingOptionsParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The CloudWatch group name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logGroupName?: null | string @go(LogGroupName,*string)

	// The CloudWatch log stream name for logging. This value is required if enabled is true.
	// +kubebuilder:validation:Optional
	logStreamName?: null | string @go(LogStreamName,*string)
}

#SplunkConfigurationObservation: {
}

#SplunkConfigurationParameters: {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	// +kubebuilder:validation:Optional
	cloudwatchLoggingOptions?: [...#SplunkConfigurationCloudwatchLoggingOptionsParameters] @go(CloudwatchLoggingOptions,[]SplunkConfigurationCloudwatchLoggingOptionsParameters)

	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	// +kubebuilder:validation:Optional
	hecAcknowledgmentTimeout?: null | float64 @go(HecAcknowledgmentTimeout,*float64)

	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	// +kubebuilder:validation:Required
	hecEndpoint?: null | string @go(HecEndpoint,*string)

	// The HEC endpoint type. Valid values are Raw or Event. The default value is Raw.
	// +kubebuilder:validation:Optional
	hecEndpointType?: null | string @go(HecEndpointType,*string)

	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	// +kubebuilder:validation:Required
	hecToken?: null | string @go(HecToken,*string)

	// The data processing configuration.  More details are given below.
	// +kubebuilder:validation:Optional
	processingConfiguration?: [...#SplunkConfigurationProcessingConfigurationParameters] @go(ProcessingConfiguration,[]SplunkConfigurationProcessingConfigurationParameters)

	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	// +kubebuilder:validation:Optional
	retryDuration?: null | float64 @go(RetryDuration,*float64)

	// The Amazon S3 backup mode.  Valid values are Disabled and Enabled.  Default value is Disabled.
	// +kubebuilder:validation:Optional
	s3BackupMode?: null | string @go(S3BackupMode,*string)
}

#SplunkConfigurationProcessingConfigurationObservation: {
}

#SplunkConfigurationProcessingConfigurationParameters: {
	// Enables or disables the logging. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Array of data processors. More details are given below
	// +kubebuilder:validation:Optional
	processors?: [...#SplunkConfigurationProcessingConfigurationProcessorsParameters] @go(Processors,[]SplunkConfigurationProcessingConfigurationProcessorsParameters)
}

#SplunkConfigurationProcessingConfigurationProcessorsObservation: {
}

#SplunkConfigurationProcessingConfigurationProcessorsParameters: {
	// Array of processor parameters. More details are given below
	// +kubebuilder:validation:Optional
	parameters?: [...#SplunkConfigurationProcessingConfigurationProcessorsParametersParameters] @go(Parameters,[]SplunkConfigurationProcessingConfigurationProcessorsParametersParameters)

	// The type of processor. Valid Values: RecordDeAggregation, Lambda, MetadataExtraction, AppendDelimiterToRecord. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#SplunkConfigurationProcessingConfigurationProcessorsParametersObservation: {
}

#SplunkConfigurationProcessingConfigurationProcessorsParametersParameters: {
	// Parameter name. Valid Values: LambdaArn, NumberOfRetries, MetadataExtractionQuery, JsonParsingEngine, RoleArn, BufferSizeInMBs, BufferIntervalInSeconds, SubRecordType, Delimiter. Validation is done against AWS SDK constants; so that values not explicitly listed may also work.
	// +kubebuilder:validation:Required
	parameterName?: null | string @go(ParameterName,*string)

	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	// +kubebuilder:validation:Required
	parameterValue?: null | string @go(ParameterValue,*string)
}

#VPCConfigObservation: {
	vpcId?: null | string @go(VPCID,*string)
}

#VPCConfigParameters: {
	// The ARN of the AWS credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// A list of security group IDs to associate with Kinesis Firehose.
	// +kubebuilder:validation:Required
	securityGroupIds: [...null | string] @go(SecurityGroupIds,[]*string)

	// A list of subnet IDs to associate with Kinesis Firehose.
	// +kubebuilder:validation:Required
	subnetIds: [...null | string] @go(SubnetIds,[]*string)
}

// DeliveryStreamSpec defines the desired state of DeliveryStream
#DeliveryStreamSpec: {
	forProvider: #DeliveryStreamParameters @go(ForProvider)
}

// DeliveryStreamStatus defines the observed state of DeliveryStream.
#DeliveryStreamStatus: {
	atProvider?: #DeliveryStreamObservation @go(AtProvider)
}

// DeliveryStream is the Schema for the DeliveryStreams API. Provides a AWS Kinesis Firehose Delivery Stream
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DeliveryStream: {
	spec:    #DeliveryStreamSpec   @go(Spec)
	status?: #DeliveryStreamStatus @go(Status)
}

// DeliveryStreamList contains a list of DeliveryStreams
#DeliveryStreamList: {
	items: [...#DeliveryStream] @go(Items,[]DeliveryStream)
}
