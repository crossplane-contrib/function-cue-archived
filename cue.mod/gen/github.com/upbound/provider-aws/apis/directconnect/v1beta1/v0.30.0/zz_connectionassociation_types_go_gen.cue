// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/directconnect/v1beta1

package v1beta1

#ConnectionAssociationObservation: {
	id?: null | string @go(ID,*string)
}

#ConnectionAssociationParameters: {
	// The ID of the connection.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/directconnect/v1beta1.Connection
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	connectionId?: null | string @go(ConnectionID,*string)

	// The ID of the LAG with which to associate the connection.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/directconnect/v1beta1.Lag
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	lagId?: null | string @go(LagID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ConnectionAssociationSpec defines the desired state of ConnectionAssociation
#ConnectionAssociationSpec: {
	forProvider: #ConnectionAssociationParameters @go(ForProvider)
}

// ConnectionAssociationStatus defines the observed state of ConnectionAssociation.
#ConnectionAssociationStatus: {
	atProvider?: #ConnectionAssociationObservation @go(AtProvider)
}

// ConnectionAssociation is the Schema for the ConnectionAssociations API. Associates a Direct Connect Connection with a LAG.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConnectionAssociation: {
	spec:    #ConnectionAssociationSpec   @go(Spec)
	status?: #ConnectionAssociationStatus @go(Status)
}

// ConnectionAssociationList contains a list of ConnectionAssociations
#ConnectionAssociationList: {
	items: [...#ConnectionAssociation] @go(Items,[]ConnectionAssociation)
}
