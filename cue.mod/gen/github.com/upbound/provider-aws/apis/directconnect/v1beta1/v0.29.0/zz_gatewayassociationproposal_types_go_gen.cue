// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/directconnect/v1beta1

package v1beta1

#GatewayAssociationProposalObservation: {
	// The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
	associatedGatewayOwnerAccountId?: null | string @go(AssociatedGatewayOwnerAccountID,*string)

	// The type of the associated gateway, transitGateway or virtualPrivateGateway.
	associatedGatewayType?: null | string @go(AssociatedGatewayType,*string)

	// Direct Connect Gateway Association Proposal identifier.
	id?: null | string @go(ID,*string)
}

#GatewayAssociationProposalParameters: {
	// VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
	// +kubebuilder:validation:Optional
	allowedPrefixes?: [...null | string] @go(AllowedPrefixes,[]*string)

	// The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPNGateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	associatedGatewayId?: null | string @go(AssociatedGatewayID,*string)

	// Direct Connect Gateway identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/directconnect/v1beta1.Gateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dxGatewayId?: null | string @go(DxGatewayID,*string)

	// AWS Account identifier of the Direct Connect Gateway's owner.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/directconnect/v1beta1.Gateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("owner_account_id",true)
	// +kubebuilder:validation:Optional
	dxGatewayOwnerAccountId?: null | string @go(DxGatewayOwnerAccountID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// GatewayAssociationProposalSpec defines the desired state of GatewayAssociationProposal
#GatewayAssociationProposalSpec: {
	forProvider: #GatewayAssociationProposalParameters @go(ForProvider)
}

// GatewayAssociationProposalStatus defines the observed state of GatewayAssociationProposal.
#GatewayAssociationProposalStatus: {
	atProvider?: #GatewayAssociationProposalObservation @go(AtProvider)
}

// GatewayAssociationProposal is the Schema for the GatewayAssociationProposals API. Manages a Direct Connect Gateway Association Proposal.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GatewayAssociationProposal: {
	spec:    #GatewayAssociationProposalSpec   @go(Spec)
	status?: #GatewayAssociationProposalStatus @go(Status)
}

// GatewayAssociationProposalList contains a list of GatewayAssociationProposals
#GatewayAssociationProposalList: {
	items: [...#GatewayAssociationProposal] @go(Items,[]GatewayAssociationProposal)
}
