// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/directconnect/v1beta1

package v1beta1

#GatewayObservation: {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	amazonSideAsn?: null | string @go(AmazonSideAsn,*string)

	// The ID of the gateway.
	id?: null | string @go(ID,*string)

	// The name of the connection.
	name?: null | string @go(Name,*string)

	// AWS Account ID of the gateway.
	ownerAccountId?: null | string @go(OwnerAccountID,*string)
}

#GatewayParameters: {
	// The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294.
	// +kubebuilder:validation:Optional
	amazonSideAsn?: null | string @go(AmazonSideAsn,*string)

	// The name of the connection.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// GatewaySpec defines the desired state of Gateway
#GatewaySpec: {
	forProvider: #GatewayParameters @go(ForProvider)
}

// GatewayStatus defines the observed state of Gateway.
#GatewayStatus: {
	atProvider?: #GatewayObservation @go(AtProvider)
}

// Gateway is the Schema for the Gateways API. Provides a Direct Connect Gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Gateway: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.amazonSideAsn)",message="amazonSideAsn is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #GatewaySpec   @go(Spec)
	status?: #GatewayStatus @go(Status)
}

// GatewayList contains a list of Gateways
#GatewayList: {
	items: [...#Gateway] @go(Items,[]Gateway)
}
