// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicediscovery/v1beta1

package v1beta1

#HTTPNamespaceObservation: {
	// The ARN that Amazon Route 53 assigns to the namespace when you create it.
	arn?: null | string @go(Arn,*string)

	// The name of an HTTP namespace.
	httpName?: null | string @go(HTTPName,*string)

	// The ID of a namespace.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#HTTPNamespaceParameters: {
	// The description that you specify for the namespace when you create it.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The name of the http namespace.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// HTTPNamespaceSpec defines the desired state of HTTPNamespace
#HTTPNamespaceSpec: {
	forProvider: #HTTPNamespaceParameters @go(ForProvider)
}

// HTTPNamespaceStatus defines the observed state of HTTPNamespace.
#HTTPNamespaceStatus: {
	atProvider?: #HTTPNamespaceObservation @go(AtProvider)
}

// HTTPNamespace is the Schema for the HTTPNamespaces API. Provides a Service Discovery HTTP Namespace resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#HTTPNamespace: {
	spec:    #HTTPNamespaceSpec   @go(Spec)
	status?: #HTTPNamespaceStatus @go(Status)
}

// HTTPNamespaceList contains a list of HTTPNamespaces
#HTTPNamespaceList: {
	items: [...#HTTPNamespace] @go(Items,[]HTTPNamespace)
}
