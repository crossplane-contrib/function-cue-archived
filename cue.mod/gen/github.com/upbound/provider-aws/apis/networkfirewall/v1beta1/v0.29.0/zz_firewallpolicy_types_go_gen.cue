// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/networkfirewall/v1beta1

package v1beta1

#ActionDefinitionObservation: {
}

#ActionDefinitionParameters: {
	// A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.
	// +kubebuilder:validation:Required
	publishMetricAction: [...#PublishMetricActionParameters] @go(PublishMetricAction,[]PublishMetricActionParameters)
}

#DimensionObservation: {
}

#DimensionParameters: {
	// The string value to use in the custom metric dimension.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#EncryptionConfigurationObservation: {
}

#EncryptionConfigurationParameters: {
	// The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
	// +kubebuilder:validation:Optional
	keyId?: null | string @go(KeyID,*string)

	// The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#FirewallPolicyFirewallPolicyObservation: {
}

#FirewallPolicyFirewallPolicyParameters: {
	// Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.
	// +kubebuilder:validation:Optional
	statefulDefaultActions?: [...null | string] @go(StatefulDefaultActions,[]*string)

	// A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.
	// +kubebuilder:validation:Optional
	statefulEngineOptions?: [...#StatefulEngineOptionsParameters] @go(StatefulEngineOptions,[]StatefulEngineOptionsParameters)

	// Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
	// +kubebuilder:validation:Optional
	statefulRuleGroupReference?: [...#StatefulRuleGroupReferenceParameters] @go(StatefulRuleGroupReference,[]StatefulRuleGroupReferenceParameters)

	// Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's stateless_default_actions. See Stateless Custom Action below for details.
	// +kubebuilder:validation:Optional
	statelessCustomAction?: [...#StatelessCustomActionParameters] @go(StatelessCustomAction,[]StatelessCustomActionParameters)

	// Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
	// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
	// +kubebuilder:validation:Required
	statelessDefaultActions: [...null | string] @go(StatelessDefaultActions,[]*string)

	// Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.
	// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.
	// +kubebuilder:validation:Required
	statelessFragmentDefaultActions: [...null | string] @go(StatelessFragmentDefaultActions,[]*string)

	// Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
	// +kubebuilder:validation:Optional
	statelessRuleGroupReference?: [...#StatelessRuleGroupReferenceParameters] @go(StatelessRuleGroupReference,[]StatelessRuleGroupReferenceParameters)
}

#FirewallPolicyObservation: {
	// The Amazon Resource Name (ARN) that identifies the firewall policy.
	arn?: null | string @go(Arn,*string)

	// The Amazon Resource Name (ARN) that identifies the firewall policy.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// A string token used when updating a firewall policy.
	updateToken?: null | string @go(UpdateToken,*string)
}

#FirewallPolicyParameters: {
	// A friendly description of the firewall policy.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// KMS encryption configuration settings. See Encryption Configuration below for details.
	// +kubebuilder:validation:Optional
	encryptionConfiguration?: [...#EncryptionConfigurationParameters] @go(EncryptionConfiguration,[]EncryptionConfigurationParameters)

	// A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
	// +kubebuilder:validation:Required
	firewallPolicy: [...#FirewallPolicyFirewallPolicyParameters] @go(FirewallPolicy,[]FirewallPolicyFirewallPolicyParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#OverrideObservation: {
}

#OverrideParameters: {
	// The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.
	// +kubebuilder:validation:Optional
	action?: null | string @go(Action,*string)
}

#PublishMetricActionObservation: {
}

#PublishMetricActionParameters: {
	// Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.
	// +kubebuilder:validation:Required
	dimension: [...#DimensionParameters] @go(Dimension,[]DimensionParameters)
}

#StatefulEngineOptionsObservation: {
}

#StatefulEngineOptionsParameters: {
	// Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.
	// +kubebuilder:validation:Required
	ruleOrder?: null | string @go(RuleOrder,*string)
}

#StatefulRuleGroupReferenceObservation: {
}

#StatefulRuleGroupReferenceParameters: {
	// Configuration block for override values
	// +kubebuilder:validation:Optional
	override?: [...#OverrideParameters] @go(Override,[]OverrideParameters)

	// An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
	// +kubebuilder:validation:Optional
	priority?: null | float64 @go(Priority,*float64)

	// The Amazon Resource Name (ARN) of the stateless rule group.
	// +kubebuilder:validation:Required
	resourceArn?: null | string @go(ResourceArn,*string)
}

#StatelessCustomActionObservation: {
}

#StatelessCustomActionParameters: {
	// A configuration block describing the custom action associated with the action_name. See Action Definition below for details.
	// +kubebuilder:validation:Required
	actionDefinition: [...#ActionDefinitionParameters] @go(ActionDefinition,[]ActionDefinitionParameters)

	// A friendly name of the custom action.
	// +kubebuilder:validation:Required
	actionName?: null | string @go(ActionName,*string)
}

#StatelessRuleGroupReferenceObservation: {
}

#StatelessRuleGroupReferenceParameters: {
	// An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.
	// +kubebuilder:validation:Required
	priority?: null | float64 @go(Priority,*float64)

	// The Amazon Resource Name (ARN) of the stateless rule group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/networkfirewall/v1beta1.RuleGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	resourceArn?: null | string @go(ResourceArn,*string)
}

// FirewallPolicySpec defines the desired state of FirewallPolicy
#FirewallPolicySpec: {
	forProvider: #FirewallPolicyParameters @go(ForProvider)
}

// FirewallPolicyStatus defines the observed state of FirewallPolicy.
#FirewallPolicyStatus: {
	atProvider?: #FirewallPolicyObservation @go(AtProvider)
}

// FirewallPolicy is the Schema for the FirewallPolicys API. Provides an AWS Network Firewall Policy resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#FirewallPolicy: {
	spec:    #FirewallPolicySpec   @go(Spec)
	status?: #FirewallPolicyStatus @go(Status)
}

// FirewallPolicyList contains a list of FirewallPolicys
#FirewallPolicyList: {
	items: [...#FirewallPolicy] @go(Items,[]FirewallPolicy)
}
