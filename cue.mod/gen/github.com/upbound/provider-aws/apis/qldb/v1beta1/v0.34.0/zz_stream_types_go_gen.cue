// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/qldb/v1beta1

package v1beta1

#KinesisConfigurationObservation: {
	// Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: true.
	aggregationEnabled?: null | bool @go(AggregationEnabled,*bool)

	// The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
	streamArn?: null | string @go(StreamArn,*string)
}

#KinesisConfigurationParameters: {
	// Enables QLDB to publish multiple data records in a single Kinesis Data Streams record, increasing the number of records sent per API call. Default: true.
	// +kubebuilder:validation:Optional
	aggregationEnabled?: null | bool @go(AggregationEnabled,*bool)

	// The Amazon Resource Name (ARN) of the Kinesis Data Streams resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.TerraformID()
	// +kubebuilder:validation:Optional
	streamArn?: null | string @go(StreamArn,*string)
}

#StreamObservation: {
	// The ARN of the QLDB Stream.
	arn?: null | string @go(Arn,*string)

	// The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it. It must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".
	exclusiveEndTime?: null | string @go(ExclusiveEndTime,*string)

	// The ID of the QLDB Stream.
	id?: null | string @go(ID,*string)

	// The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".  This cannot be in the future and must be before exclusive_end_time.  If you provide a value that is before the ledger's CreationDateTime, QLDB effectively defaults it to the ledger's CreationDateTime.
	inclusiveStartTime?: null | string @go(InclusiveStartTime,*string)

	// The configuration settings of the Kinesis Data Streams destination for your stream request. Documented below.
	kinesisConfiguration?: [...#KinesisConfigurationObservation] @go(KinesisConfiguration,[]KinesisConfigurationObservation)

	// The name of the QLDB ledger.
	ledgerName?: null | string @go(LedgerName,*string)

	// The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
	roleArn?: null | string @go(RoleArn,*string)

	// The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the Amazon QLDB Developer Guide.
	streamName?: null | string @go(StreamName,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#StreamParameters: {
	// The exclusive date and time that specifies when the stream ends. If you don't define this parameter, the stream runs indefinitely until you cancel it. It must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".
	// +kubebuilder:validation:Optional
	exclusiveEndTime?: null | string @go(ExclusiveEndTime,*string)

	// The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: "2019-06-13T21:36:34Z".  This cannot be in the future and must be before exclusive_end_time.  If you provide a value that is before the ledger's CreationDateTime, QLDB effectively defaults it to the ledger's CreationDateTime.
	// +kubebuilder:validation:Optional
	inclusiveStartTime?: null | string @go(InclusiveStartTime,*string)

	// The configuration settings of the Kinesis Data Streams destination for your stream request. Documented below.
	// +kubebuilder:validation:Optional
	kinesisConfiguration?: [...#KinesisConfigurationParameters] @go(KinesisConfiguration,[]KinesisConfigurationParameters)

	// The name of the QLDB ledger.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/qldb/v1beta1.Ledger
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.TerraformID()
	// +kubebuilder:validation:Optional
	ledgerName?: null | string @go(LedgerName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the Amazon QLDB Developer Guide.
	// +kubebuilder:validation:Optional
	streamName?: null | string @go(StreamName,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// StreamSpec defines the desired state of Stream
#StreamSpec: {
	forProvider: #StreamParameters @go(ForProvider)
}

// StreamStatus defines the observed state of Stream.
#StreamStatus: {
	atProvider?: #StreamObservation @go(AtProvider)
}

// Stream is the Schema for the Streams API. Provides a QLDB Stream resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Stream: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.inclusiveStartTime)",message="inclusiveStartTime is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.kinesisConfiguration)",message="kinesisConfiguration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.streamName)",message="streamName is a required parameter"
	spec:    #StreamSpec   @go(Spec)
	status?: #StreamStatus @go(Status)
}

// StreamList contains a list of Streams
#StreamList: {
	items: [...#Stream] @go(Items,[]Stream)
}
