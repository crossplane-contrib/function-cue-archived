// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/acmpca/v1beta1

package v1beta1

#CertificateAuthorityCertificateObservation: {
	id?: null | string @go(ID,*string)
}

#CertificateAuthorityCertificateParameters: {
	// ARN of the Certificate Authority.
	// +crossplane:generate:reference:type=CertificateAuthority
	// +kubebuilder:validation:Optional
	certificateAuthorityArn?: null | string @go(CertificateAuthorityArn,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// CertificateAuthorityCertificateSpec defines the desired state of CertificateAuthorityCertificate
#CertificateAuthorityCertificateSpec: {
	forProvider: #CertificateAuthorityCertificateParameters @go(ForProvider)
}

// CertificateAuthorityCertificateStatus defines the observed state of CertificateAuthorityCertificate.
#CertificateAuthorityCertificateStatus: {
	atProvider?: #CertificateAuthorityCertificateObservation @go(AtProvider)
}

// CertificateAuthorityCertificate is the Schema for the CertificateAuthorityCertificates API. Associates a certificate with an AWS Certificate Manager Private Certificate Authority
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CertificateAuthorityCertificate: {
	spec:    #CertificateAuthorityCertificateSpec   @go(Spec)
	status?: #CertificateAuthorityCertificateStatus @go(Status)
}

// CertificateAuthorityCertificateList contains a list of CertificateAuthorityCertificates
#CertificateAuthorityCertificateList: {
	items: [...#CertificateAuthorityCertificate] @go(Items,[]CertificateAuthorityCertificate)
}
