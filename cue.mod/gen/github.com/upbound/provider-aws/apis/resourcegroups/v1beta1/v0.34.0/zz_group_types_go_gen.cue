// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/resourcegroups/v1beta1

package v1beta1

#ConfigurationObservation: {
	// A collection of parameters for this group configuration item. See below for details.
	parameters?: [...#ParametersObservation] @go(Parameters,[]ParametersObservation)

	// Specifies the type of group configuration item.
	type?: null | string @go(Type,*string)
}

#ConfigurationParameters: {
	// A collection of parameters for this group configuration item. See below for details.
	// +kubebuilder:validation:Optional
	parameters?: [...#ParametersParameters] @go(Parameters,[]ParametersParameters)

	// Specifies the type of group configuration item.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#GroupObservation: {
	// The ARN assigned by AWS for this resource group.
	arn?: null | string @go(Arn,*string)

	// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
	configuration?: [...#ConfigurationObservation] @go(Configuration,[]ConfigurationObservation)

	// A description of the resource group.
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)

	// A resource_query block. Resource queries are documented below.
	resourceQuery?: [...#ResourceQueryObservation] @go(ResourceQuery,[]ResourceQueryObservation)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#GroupParameters: {
	// A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
	// +kubebuilder:validation:Optional
	configuration?: [...#ConfigurationParameters] @go(Configuration,[]ConfigurationParameters)

	// A description of the resource group.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// A resource_query block. Resource queries are documented below.
	// +kubebuilder:validation:Optional
	resourceQuery?: [...#ResourceQueryParameters] @go(ResourceQuery,[]ResourceQueryParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ParametersObservation: {
	// The name of the group configuration parameter.
	name?: null | string @go(Name,*string)

	// The value or values to be used for the specified parameter.
	values?: [...null | string] @go(Values,[]*string)
}

#ParametersParameters: {
	// The name of the group configuration parameter.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The value or values to be used for the specified parameter.
	// +kubebuilder:validation:Required
	values: [...null | string] @go(Values,[]*string)
}

#ResourceQueryObservation: {
	// The resource query as a JSON string.
	query?: null | string @go(Query,*string)

	// The type of the resource query. Defaults to TAG_FILTERS_1_0.
	type?: null | string @go(Type,*string)
}

#ResourceQueryParameters: {
	// The resource query as a JSON string.
	// +kubebuilder:validation:Required
	query?: null | string @go(Query,*string)

	// The type of the resource query. Defaults to TAG_FILTERS_1_0.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// GroupSpec defines the desired state of Group
#GroupSpec: {
	forProvider: #GroupParameters @go(ForProvider)
}

// GroupStatus defines the observed state of Group.
#GroupStatus: {
	atProvider?: #GroupObservation @go(AtProvider)
}

// Group is the Schema for the Groups API. Provides a Resource Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Group: {
	spec:    #GroupSpec   @go(Spec)
	status?: #GroupStatus @go(Status)
}

// GroupList contains a list of Groups
#GroupList: {
	items: [...#Group] @go(Items,[]Group)
}
