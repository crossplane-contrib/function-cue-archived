// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/wafregional/v1beta1

package v1beta1

#SQLInjectionMatchSetObservation: {
	// The ID of the WAF SqlInjectionMatchSet.
	id?: null | string @go(ID,*string)
}

#SQLInjectionMatchSetParameters: {
	// The name or description of the SizeConstraintSet.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
	// +kubebuilder:validation:Optional
	sqlInjectionMatchTuple?: [...#SQLInjectionMatchTupleParameters] @go(SQLInjectionMatchTuple,[]SQLInjectionMatchTupleParameters)
}

#SQLInjectionMatchTupleFieldToMatchObservation: {
}

#SQLInjectionMatchTupleFieldToMatchParameters: {
	// When type is HEADER, enter the name of the header that you want to search, e.g., User-Agent or Referer.
	// If type is any other value, omit this field.
	// +kubebuilder:validation:Optional
	data?: null | string @go(Data,*string)

	// The part of the web request that you want AWS WAF to search for a specified string.
	// e.g., HEADER, METHOD or BODY.
	// See docs
	// for all supported values.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#SQLInjectionMatchTupleObservation: {
}

#SQLInjectionMatchTupleParameters: {
	// Specifies where in a web request to look for snippets of malicious SQL code.
	// +kubebuilder:validation:Required
	fieldToMatch: [...#SQLInjectionMatchTupleFieldToMatchParameters] @go(FieldToMatch,[]SQLInjectionMatchTupleFieldToMatchParameters)

	// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
	// If you specify a transformation, AWS WAF performs the transformation on field_to_match before inspecting a request for a match.
	// e.g., CMD_LINE, HTML_ENTITY_DECODE or NONE.
	// See docs
	// for all supported values.
	// +kubebuilder:validation:Required
	textTransformation?: null | string @go(TextTransformation,*string)
}

// SQLInjectionMatchSetSpec defines the desired state of SQLInjectionMatchSet
#SQLInjectionMatchSetSpec: {
	forProvider: #SQLInjectionMatchSetParameters @go(ForProvider)
}

// SQLInjectionMatchSetStatus defines the observed state of SQLInjectionMatchSet.
#SQLInjectionMatchSetStatus: {
	atProvider?: #SQLInjectionMatchSetObservation @go(AtProvider)
}

// SQLInjectionMatchSet is the Schema for the SQLInjectionMatchSets API. Provides a AWS WAF Regional SqlInjectionMatchSet resource for use with ALB.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SQLInjectionMatchSet: {
	spec:    #SQLInjectionMatchSetSpec   @go(Spec)
	status?: #SQLInjectionMatchSetStatus @go(Status)
}

// SQLInjectionMatchSetList contains a list of SQLInjectionMatchSets
#SQLInjectionMatchSetList: {
	items: [...#SQLInjectionMatchSet] @go(Items,[]SQLInjectionMatchSet)
}
