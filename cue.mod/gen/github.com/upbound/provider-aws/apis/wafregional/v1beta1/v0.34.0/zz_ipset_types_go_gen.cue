// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/wafregional/v1beta1

package v1beta1

#IPSetDescriptorObservation: {
	// The string like IPV4 or IPV6.
	type?: null | string @go(Type,*string)

	// The CIDR notation.
	value?: null | string @go(Value,*string)
}

#IPSetDescriptorParameters: {
	// The string like IPV4 or IPV6.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)

	// The CIDR notation.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#IPSetObservation: {
	// The ARN of the WAF IPSet.
	arn?: null | string @go(Arn,*string)

	// The ID of the WAF IPSet.
	id?: null | string @go(ID,*string)

	// One or more pairs specifying the IP address type (IPV4 or IPV6) and the IP address range (in CIDR notation) from which web requests originate.
	ipSetDescriptor?: [...#IPSetDescriptorObservation] @go(IPSetDescriptor,[]IPSetDescriptorObservation)

	// The name or description of the IPSet.
	name?: null | string @go(Name,*string)
}

#IPSetParameters: {
	// One or more pairs specifying the IP address type (IPV4 or IPV6) and the IP address range (in CIDR notation) from which web requests originate.
	// +kubebuilder:validation:Optional
	ipSetDescriptor?: [...#IPSetDescriptorParameters] @go(IPSetDescriptor,[]IPSetDescriptorParameters)

	// The name or description of the IPSet.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// IPSetSpec defines the desired state of IPSet
#IPSetSpec: {
	forProvider: #IPSetParameters @go(ForProvider)
}

// IPSetStatus defines the observed state of IPSet.
#IPSetStatus: {
	atProvider?: #IPSetObservation @go(AtProvider)
}

// IPSet is the Schema for the IPSets API. Provides a AWS WAF Regional IPSet resource for use with ALB.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#IPSet: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #IPSetSpec   @go(Spec)
	status?: #IPSetStatus @go(Status)
}

// IPSetList contains a list of IPSets
#IPSetList: {
	items: [...#IPSet] @go(Items,[]IPSet)
}
