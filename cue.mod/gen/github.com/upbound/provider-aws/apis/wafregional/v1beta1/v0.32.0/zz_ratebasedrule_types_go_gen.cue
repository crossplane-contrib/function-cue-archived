// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/wafregional/v1beta1

package v1beta1

#PredicateObservation: {
}

#PredicateParameters: {
	// A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/wafregional/v1beta1.IPSet
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataId?: null | string @go(DataID,*string)

	// Set this to false if you want to allow, block, or count requests
	// based on the settings in the specified ByteMatchSet, IPSet, SqlInjectionMatchSet, XssMatchSet, or SizeConstraintSet.
	// For example, if an IPSet includes the IP address 192.0.2.44, AWS WAF will allow or block requests based on that IP address.
	// If set to true, AWS WAF will allow, block, or count requests based on all IP addresses except 192.0.2.44.
	// +kubebuilder:validation:Required
	negated?: null | bool @go(Negated,*bool)

	// The type of predicate in a rule. Valid values: ByteMatch, GeoMatch, IPMatch, RegexMatch, SizeConstraint, SqlInjectionMatch, or XssMatch.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#RateBasedRuleObservation: {
	// The ARN of the WAF Regional Rate Based Rule.
	arn?: null | string @go(Arn,*string)

	// The ID of the WAF Regional Rate Based Rule.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#RateBasedRuleParameters: {
	// The name or description for the Amazon CloudWatch metric of this rule.
	// +kubebuilder:validation:Required
	metricName?: null | string @go(MetricName,*string)

	// The name or description of the rule.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The objects to include in a rule (documented below).
	// +kubebuilder:validation:Optional
	predicate?: [...#PredicateParameters] @go(Predicate,[]PredicateParameters)

	// Valid value is IP.
	// +kubebuilder:validation:Required
	rateKey?: null | string @go(RateKey,*string)

	// The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100.
	// +kubebuilder:validation:Required
	rateLimit?: null | float64 @go(RateLimit,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// RateBasedRuleSpec defines the desired state of RateBasedRule
#RateBasedRuleSpec: {
	forProvider: #RateBasedRuleParameters @go(ForProvider)
}

// RateBasedRuleStatus defines the observed state of RateBasedRule.
#RateBasedRuleStatus: {
	atProvider?: #RateBasedRuleObservation @go(AtProvider)
}

// RateBasedRule is the Schema for the RateBasedRules API. Provides a AWS WAF Regional rate based rule resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RateBasedRule: {
	spec:    #RateBasedRuleSpec   @go(Spec)
	status?: #RateBasedRuleStatus @go(Status)
}

// RateBasedRuleList contains a list of RateBasedRules
#RateBasedRuleList: {
	items: [...#RateBasedRule] @go(Items,[]RateBasedRule)
}
