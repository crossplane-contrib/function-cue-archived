// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/location/v1beta1

package v1beta1

#DataSourceConfigurationObservation: {
}

#DataSourceConfigurationParameters: {
	// Specifies how the results of an operation will be stored by the caller. Valid values: SingleUse, Storage. Default: SingleUse.
	// +kubebuilder:validation:Optional
	intendedUse?: null | string @go(IntendedUse,*string)
}

#PlaceIndexObservation: {
	// The timestamp for when the place index resource was created in ISO 8601 format.
	createTime?: null | string @go(CreateTime,*string)
	id?:         null | string @go(ID,*string)

	// The Amazon Resource Name (ARN) for the place index resource. Used to specify a resource across AWS.
	indexArn?: null | string @go(IndexArn,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The timestamp for when the place index resource was last update in ISO 8601.
	updateTime?: null | string @go(UpdateTime,*string)
}

#PlaceIndexParameters: {
	// Specifies the geospatial data provider for the new place index.
	// +kubebuilder:validation:Required
	dataSource?: null | string @go(DataSource,*string)

	// Configuration block with the data storage option chosen for requesting Places. Detailed below.
	// +kubebuilder:validation:Optional
	dataSourceConfiguration?: [...#DataSourceConfigurationParameters] @go(DataSourceConfiguration,[]DataSourceConfigurationParameters)

	// The optional description for the place index resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// PlaceIndexSpec defines the desired state of PlaceIndex
#PlaceIndexSpec: {
	forProvider: #PlaceIndexParameters @go(ForProvider)
}

// PlaceIndexStatus defines the observed state of PlaceIndex.
#PlaceIndexStatus: {
	atProvider?: #PlaceIndexObservation @go(AtProvider)
}

// PlaceIndex is the Schema for the PlaceIndexs API. Provides a Location Service Place Index.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PlaceIndex: {
	spec:    #PlaceIndexSpec   @go(Spec)
	status?: #PlaceIndexStatus @go(Status)
}

// PlaceIndexList contains a list of PlaceIndexs
#PlaceIndexList: {
	items: [...#PlaceIndex] @go(Items,[]PlaceIndex)
}
