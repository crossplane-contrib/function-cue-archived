// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/docdb/v1beta1

package v1beta1

#EventSubscriptionObservation: {
	// The Amazon Resource Name of the DocDB event notification subscription
	arn?: null | string @go(Arn,*string)

	// The AWS customer account associated with the DocDB event notification subscription
	customerAwsId?: null | string @go(CustomerAwsID,*string)

	// The name of the DocDB event notification subscription
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#EventSubscriptionParameters: {
	// A boolean flag to enable/disable the subscription. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// A list of event categories for a SourceType that you want to subscribe to. See https://docs.aws.amazon.com/documentdb/latest/developerguide/API_Event.html or run aws docdb describe-event-categories.
	// +kubebuilder:validation:Optional
	eventCategories?: [...null | string] @go(EventCategories,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name of the DocDB event notification subscription
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	snsTopicArn?: null | string @go(SnsTopicArn,*string)

	// A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
	// +kubebuilder:validation:Optional
	sourceIds?: [...null | string] @go(SourceIds,[]*string)

	// The type of source that will be generating the events. Valid options are db-instance, db-cluster, db-parameter-group, db-security-group, db-cluster-snapshot. If not set, all sources will be subscribed to.
	// +kubebuilder:validation:Optional
	sourceType?: null | string @go(SourceType,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// EventSubscriptionSpec defines the desired state of EventSubscription
#EventSubscriptionSpec: {
	forProvider: #EventSubscriptionParameters @go(ForProvider)
}

// EventSubscriptionStatus defines the observed state of EventSubscription.
#EventSubscriptionStatus: {
	atProvider?: #EventSubscriptionObservation @go(AtProvider)
}

// EventSubscription is the Schema for the EventSubscriptions API. Provides a DocumentDB event subscription resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EventSubscription: {
	spec:    #EventSubscriptionSpec   @go(Spec)
	status?: #EventSubscriptionStatus @go(Status)
}

// EventSubscriptionList contains a list of EventSubscriptions
#EventSubscriptionList: {
	items: [...#EventSubscription] @go(Items,[]EventSubscription)
}
