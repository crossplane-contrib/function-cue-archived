// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/docdb/v1beta1

package v1beta1

#ClusterObservation: {
	// Specifies whether any cluster modifications
	// are applied immediately, or during the next maintenance window. Default is
	// false.
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// Amazon Resource Name (ARN) of cluster
	arn?: null | string @go(Arn,*string)

	// A list of EC2 Availability Zones that
	// instances in the DB cluster can be created in.
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)

	// The days to retain backups for. Default 1
	backupRetentionPeriod?: null | float64 @go(BackupRetentionPeriod,*float64)

	// â€“ List of DocDB Instances that are a part of this cluster
	clusterMembers?: [...null | string] @go(ClusterMembers,[]*string)

	// The DocDB Cluster Resource ID
	clusterResourceId?: null | string @go(ClusterResourceID,*string)

	// A cluster parameter group to associate with the cluster.
	dbClusterParameterGroupName?: null | string @go(DBClusterParameterGroupName,*string)

	// A DB subnet group to associate with this DB instance.
	dbSubnetGroupName?: null | string @go(DBSubnetGroupName,*string)

	// A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// List of log types to export to cloudwatch. If omitted, no logs will be exported.
	// The following log types are supported: audit, profiler.
	enabledCloudwatchLogsExports?: [...null | string] @go(EnabledCloudwatchLogsExports,[]*string)

	// The DNS address of the DocDB instance
	endpoint?: null | string @go(Endpoint,*string)

	// The name of the database engine to be used for this DB cluster. Defaults to docdb. Valid Values: docdb
	engine?: null | string @go(Engine,*string)

	// The database engine version. Updating this argument results in an outage.
	engineVersion?: null | string @go(EngineVersion,*string)

	// The name of your final DB snapshot
	// when this DB cluster is deleted. If omitted, no final snapshot will be
	// made.
	finalSnapshotIdentifier?: null | string @go(FinalSnapshotIdentifier,*string)

	// The global cluster identifier specified on aws_docdb_global_cluster.
	globalClusterIdentifier?: null | string @go(GlobalClusterIdentifier,*string)

	// The Route53 Hosted Zone ID of the endpoint
	hostedZoneId?: null | string @go(HostedZoneID,*string)

	// The DocDB Cluster Identifier
	id?: null | string @go(ID,*string)

	// The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Username for the master DB user.
	masterUsername?: null | string @go(MasterUsername,*string)

	// The port on which the DB accepts connections
	port?: null | float64 @go(Port,*float64)

	// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC
	// Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	preferredBackupWindow?: null | string @go(PreferredBackupWindow,*string)

	// The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	preferredMaintenanceWindow?: null | string @go(PreferredMaintenanceWindow,*string)

	// A read-only endpoint for the DocDB cluster, automatically load-balanced across replicas
	readerEndpoint?: null | string @go(ReaderEndpoint,*string)

	// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
	skipFinalSnapshot?: null | bool @go(SkipFinalSnapshot,*bool)

	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
	snapshotIdentifier?: null | string @go(SnapshotIdentifier,*string)

	// Specifies whether the DB cluster is encrypted. The default is false.
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// List of VPC security groups to associate
	// with the Cluster
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)
}

#ClusterParameters: {
	// Specifies whether any cluster modifications
	// are applied immediately, or during the next maintenance window. Default is
	// false.
	// +kubebuilder:validation:Optional
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// A list of EC2 Availability Zones that
	// instances in the DB cluster can be created in.
	// +kubebuilder:validation:Optional
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)

	// The days to retain backups for. Default 1
	// +kubebuilder:validation:Optional
	backupRetentionPeriod?: null | float64 @go(BackupRetentionPeriod,*float64)

	// A cluster parameter group to associate with the cluster.
	// +kubebuilder:validation:Optional
	dbClusterParameterGroupName?: null | string @go(DBClusterParameterGroupName,*string)

	// A DB subnet group to associate with this DB instance.
	// +kubebuilder:validation:Optional
	dbSubnetGroupName?: null | string @go(DBSubnetGroupName,*string)

	// A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
	// +kubebuilder:validation:Optional
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// List of log types to export to cloudwatch. If omitted, no logs will be exported.
	// The following log types are supported: audit, profiler.
	// +kubebuilder:validation:Optional
	enabledCloudwatchLogsExports?: [...null | string] @go(EnabledCloudwatchLogsExports,[]*string)

	// The name of the database engine to be used for this DB cluster. Defaults to docdb. Valid Values: docdb
	// +kubebuilder:validation:Optional
	engine?: null | string @go(Engine,*string)

	// The database engine version. Updating this argument results in an outage.
	// +kubebuilder:validation:Optional
	engineVersion?: null | string @go(EngineVersion,*string)

	// The name of your final DB snapshot
	// when this DB cluster is deleted. If omitted, no final snapshot will be
	// made.
	// +kubebuilder:validation:Optional
	finalSnapshotIdentifier?: null | string @go(FinalSnapshotIdentifier,*string)

	// The global cluster identifier specified on aws_docdb_global_cluster.
	// +kubebuilder:validation:Optional
	globalClusterIdentifier?: null | string @go(GlobalClusterIdentifier,*string)

	// The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Username for the master DB user.
	// +kubebuilder:validation:Optional
	masterUsername?: null | string @go(MasterUsername,*string)

	// The port on which the DB accepts connections
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC
	// Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	// +kubebuilder:validation:Optional
	preferredBackupWindow?: null | string @go(PreferredBackupWindow,*string)

	// The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	// +kubebuilder:validation:Optional
	preferredMaintenanceWindow?: null | string @go(PreferredMaintenanceWindow,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
	// +kubebuilder:validation:Optional
	skipFinalSnapshot?: null | bool @go(SkipFinalSnapshot,*bool)

	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
	// +kubebuilder:validation:Optional
	snapshotIdentifier?: null | string @go(SnapshotIdentifier,*string)

	// Specifies whether the DB cluster is encrypted. The default is false.
	// +kubebuilder:validation:Optional
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// List of VPC security groups to associate
	// with the Cluster
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=VPCSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=VPCSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)
}

// ClusterSpec defines the desired state of Cluster
#ClusterSpec: {
	forProvider: #ClusterParameters @go(ForProvider)
}

// ClusterStatus defines the observed state of Cluster.
#ClusterStatus: {
	atProvider?: #ClusterObservation @go(AtProvider)
}

// Cluster is the Schema for the Clusters API. Manages a DocDB Aurora Cluster
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Cluster: {
	spec:    #ClusterSpec   @go(Spec)
	status?: #ClusterStatus @go(Status)
}

// ClusterList contains a list of Clusters
#ClusterList: {
	items: [...#Cluster] @go(Items,[]Cluster)
}
