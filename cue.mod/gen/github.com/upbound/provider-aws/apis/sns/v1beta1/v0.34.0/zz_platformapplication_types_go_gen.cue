// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sns/v1beta1

package v1beta1

#PlatformApplicationObservation: {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	applePlatformBundleId?: null | string @go(ApplePlatformBundleID,*string)

	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	applePlatformTeamId?: null | string @go(ApplePlatformTeamID,*string)

	// The ARN of the SNS platform application
	arn?: null | string @go(Arn,*string)

	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	eventDeliveryFailureTopicArn?: null | string @go(EventDeliveryFailureTopicArn,*string)

	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	eventEndpointCreatedTopicArn?: null | string @go(EventEndpointCreatedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	eventEndpointDeletedTopicArn?: null | string @go(EventEndpointDeletedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	eventEndpointUpdatedTopicArn?: null | string @go(EventEndpointUpdatedTopicArn,*string)

	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	failureFeedbackRoleArn?: null | string @go(FailureFeedbackRoleArn,*string)

	// The ARN of the SNS platform application
	id?: null | string @go(ID,*string)

	// The platform that the app is registered with. See Platform for supported platforms.
	platform?: null | string @go(Platform,*string)

	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	successFeedbackRoleArn?: null | string @go(SuccessFeedbackRoleArn,*string)

	// The sample rate percentage (0-100) of successfully delivered messages.
	successFeedbackSampleRate?: null | string @go(SuccessFeedbackSampleRate,*string)
}

#PlatformApplicationParameters: {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	// +kubebuilder:validation:Optional
	applePlatformBundleId?: null | string @go(ApplePlatformBundleID,*string)

	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	// +kubebuilder:validation:Optional
	applePlatformTeamId?: null | string @go(ApplePlatformTeamID,*string)

	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	// +kubebuilder:validation:Optional
	eventDeliveryFailureTopicArn?: null | string @go(EventDeliveryFailureTopicArn,*string)

	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	// +kubebuilder:validation:Optional
	eventEndpointCreatedTopicArn?: null | string @go(EventEndpointCreatedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	// +kubebuilder:validation:Optional
	eventEndpointDeletedTopicArn?: null | string @go(EventEndpointDeletedTopicArn,*string)

	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	// +kubebuilder:validation:Optional
	eventEndpointUpdatedTopicArn?: null | string @go(EventEndpointUpdatedTopicArn,*string)

	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	failureFeedbackRoleArn?: null | string @go(FailureFeedbackRoleArn,*string)

	// The platform that the app is registered with. See Platform for supported platforms.
	// +kubebuilder:validation:Optional
	platform?: null | string @go(Platform,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	successFeedbackRoleArn?: null | string @go(SuccessFeedbackRoleArn,*string)

	// The sample rate percentage (0-100) of successfully delivered messages.
	// +kubebuilder:validation:Optional
	successFeedbackSampleRate?: null | string @go(SuccessFeedbackSampleRate,*string)
}

// PlatformApplicationSpec defines the desired state of PlatformApplication
#PlatformApplicationSpec: {
	forProvider: #PlatformApplicationParameters @go(ForProvider)
}

// PlatformApplicationStatus defines the observed state of PlatformApplication.
#PlatformApplicationStatus: {
	atProvider?: #PlatformApplicationObservation @go(AtProvider)
}

// PlatformApplication is the Schema for the PlatformApplications API. Provides an SNS platform application resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PlatformApplication: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.platform)",message="platform is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.platformCredentialSecretRef)",message="platformCredentialSecretRef is a required parameter"
	spec:    #PlatformApplicationSpec   @go(Spec)
	status?: #PlatformApplicationStatus @go(Status)
}

// PlatformApplicationList contains a list of PlatformApplications
#PlatformApplicationList: {
	items: [...#PlatformApplication] @go(Items,[]PlatformApplication)
}
