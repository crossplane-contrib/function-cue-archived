// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lightsail/v1beta1

package v1beta1

#BucketObservation: {
	// The ARN of the lightsail bucket.
	arn?: null | string @go(Arn,*string)

	// The resource Availability Zone. Follows the format us-east-2a (case-sensitive).
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The timestamp when the bucket was created.
	createdAt?: null | string @go(CreatedAt,*string)

	// The name used for this bucket (matches name).
	id?: null | string @go(ID,*string)

	// The support code for the resource. Include this code in your email to support when you have questions about a resource in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	supportCode?: null | string @go(SupportCode,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
	url?: null | string @go(URL,*string)
}

#BucketParameters: {
	// - The ID of the bundle to use for the bucket. A bucket bundle specifies the monthly cost, storage space, and data transfer quota for a bucket. Use the get-bucket-bundles cli command to get a list of bundle IDs that you can specify.
	// +kubebuilder:validation:Required
	bundleId?: null | string @go(BundleID,*string)

	// The Amazon Web Services Region name.
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// BucketSpec defines the desired state of Bucket
#BucketSpec: {
	forProvider: #BucketParameters @go(ForProvider)
}

// BucketStatus defines the observed state of Bucket.
#BucketStatus: {
	atProvider?: #BucketObservation @go(AtProvider)
}

// Bucket is the Schema for the Buckets API. Provides a lightsail bucket
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Bucket: {
	spec:    #BucketSpec   @go(Spec)
	status?: #BucketStatus @go(Status)
}

// BucketList contains a list of Buckets
#BucketList: {
	items: [...#Bucket] @go(Items,[]Bucket)
}
