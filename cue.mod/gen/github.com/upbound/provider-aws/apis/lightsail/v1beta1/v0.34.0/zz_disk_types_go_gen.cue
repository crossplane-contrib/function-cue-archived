// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lightsail/v1beta1

package v1beta1

#DiskObservation: {
	// The ARN of the Lightsail load balancer.
	arn?: null | string @go(Arn,*string)

	// The Availability Zone in which to create your disk.
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The timestamp when the load balancer was created.
	createdAt?: null | string @go(CreatedAt,*string)

	// The name of the disk  (matches name).
	id?: null | string @go(ID,*string)

	// The instance port the load balancer will connect.
	sizeInGb?: null | float64 @go(SizeInGb,*float64)

	// The support code for the disk. Include this code in your email to support when you have questions about a disk in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	supportCode?: null | string @go(SupportCode,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#DiskParameters: {
	// The Availability Zone in which to create your disk.
	// +kubebuilder:validation:Optional
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The instance port the load balancer will connect.
	// +kubebuilder:validation:Optional
	sizeInGb?: null | float64 @go(SizeInGb,*float64)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// DiskSpec defines the desired state of Disk
#DiskSpec: {
	forProvider: #DiskParameters @go(ForProvider)
}

// DiskStatus defines the observed state of Disk.
#DiskStatus: {
	atProvider?: #DiskObservation @go(AtProvider)
}

// Disk is the Schema for the Disks API. Provides a Lightsail Disk resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Disk: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.availabilityZone)",message="availabilityZone is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.sizeInGb)",message="sizeInGb is a required parameter"
	spec:    #DiskSpec   @go(Spec)
	status?: #DiskStatus @go(Status)
}

// DiskList contains a list of Disks
#DiskList: {
	items: [...#Disk] @go(Items,[]Disk)
}
