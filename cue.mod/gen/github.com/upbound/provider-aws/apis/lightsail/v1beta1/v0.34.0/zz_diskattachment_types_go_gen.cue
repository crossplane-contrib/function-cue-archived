// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lightsail/v1beta1

package v1beta1

#DiskAttachmentObservation: {
	// The name of the Lightsail Disk.
	diskName?: null | string @go(DiskName,*string)

	// The disk path to expose to the instance.
	diskPath?: null | string @go(DiskPath,*string)

	// A combination of attributes to create a unique id: disk_name,instance_name
	id?: null | string @go(ID,*string)

	// The name of the Lightsail Instance to attach to.
	instanceName?: null | string @go(InstanceName,*string)
}

#DiskAttachmentParameters: {
	// The name of the Lightsail Disk.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lightsail/v1beta1.Disk
	// +kubebuilder:validation:Optional
	diskName?: null | string @go(DiskName,*string)

	// The disk path to expose to the instance.
	// +kubebuilder:validation:Optional
	diskPath?: null | string @go(DiskPath,*string)

	// The name of the Lightsail Instance to attach to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lightsail/v1beta1.Instance
	// +kubebuilder:validation:Optional
	instanceName?: null | string @go(InstanceName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// DiskAttachmentSpec defines the desired state of DiskAttachment
#DiskAttachmentSpec: {
	forProvider: #DiskAttachmentParameters @go(ForProvider)
}

// DiskAttachmentStatus defines the observed state of DiskAttachment.
#DiskAttachmentStatus: {
	atProvider?: #DiskAttachmentObservation @go(AtProvider)
}

// DiskAttachment is the Schema for the DiskAttachments API. Attaches a Lightsail disk to a Lightsail Instance
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DiskAttachment: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.diskPath)",message="diskPath is a required parameter"
	spec:    #DiskAttachmentSpec   @go(Spec)
	status?: #DiskAttachmentStatus @go(Status)
}

// DiskAttachmentList contains a list of DiskAttachments
#DiskAttachmentList: {
	items: [...#DiskAttachment] @go(Items,[]DiskAttachment)
}
