// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lightsail/v1beta1

package v1beta1

#DomainObservation: {
	// The ARN of the Lightsail domain
	arn?: null | string @go(Arn,*string)

	// The name of the Lightsail domain to manage
	domainName?: null | string @go(DomainName,*string)

	// The name used for this domain
	id?: null | string @go(ID,*string)
}

#DomainParameters: {
	// The name of the Lightsail domain to manage
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// DomainSpec defines the desired state of Domain
#DomainSpec: {
	forProvider: #DomainParameters @go(ForProvider)
}

// DomainStatus defines the observed state of Domain.
#DomainStatus: {
	atProvider?: #DomainObservation @go(AtProvider)
}

// Domain is the Schema for the Domains API. Provides an Lightsail Domain
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Domain: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.domainName)",message="domainName is a required parameter"
	spec:    #DomainSpec   @go(Spec)
	status?: #DomainStatus @go(Status)
}

// DomainList contains a list of Domains
#DomainList: {
	items: [...#Domain] @go(Items,[]Domain)
}
