// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

#TagOptionObservation: {
	// Whether tag option is active. Default is true.
	active?: null | bool @go(Active,*bool)

	// Identifier (e.g., tag-pjtvagohlyo3m).
	id?: null | string @go(ID,*string)

	// Tag option key.
	key?:   null | string @go(Key,*string)
	owner?: null | string @go(Owner,*string)

	// Tag option value.
	value?: null | string @go(Value,*string)
}

#TagOptionParameters: {
	// Whether tag option is active. Default is true.
	// +kubebuilder:validation:Optional
	active?: null | bool @go(Active,*bool)

	// Tag option key.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Tag option value.
	// +kubebuilder:validation:Optional
	value?: null | string @go(Value,*string)
}

// TagOptionSpec defines the desired state of TagOption
#TagOptionSpec: {
	forProvider: #TagOptionParameters @go(ForProvider)
}

// TagOptionStatus defines the observed state of TagOption.
#TagOptionStatus: {
	atProvider?: #TagOptionObservation @go(AtProvider)
}

// TagOption is the Schema for the TagOptions API. Manages a Service Catalog Tag Option
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TagOption: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.key)",message="key is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.value)",message="value is a required parameter"
	spec:    #TagOptionSpec   @go(Spec)
	status?: #TagOptionStatus @go(Status)
}

// TagOptionList contains a list of TagOptions
#TagOptionList: {
	items: [...#TagOption] @go(Items,[]TagOption)
}
