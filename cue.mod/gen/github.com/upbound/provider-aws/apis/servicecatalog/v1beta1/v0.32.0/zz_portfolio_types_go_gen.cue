// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

#PortfolioObservation: {
	arn?:         null | string @go(Arn,*string)
	createdTime?: null | string @go(CreatedTime,*string)

	// The ID of the Service Catalog Portfolio.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#PortfolioParameters: {
	// Description of the portfolio
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The name of the portfolio.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Name of the person or organization who owns the portfolio.
	// +kubebuilder:validation:Required
	providerName?: null | string @go(ProviderName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// PortfolioSpec defines the desired state of Portfolio
#PortfolioSpec: {
	forProvider: #PortfolioParameters @go(ForProvider)
}

// PortfolioStatus defines the observed state of Portfolio.
#PortfolioStatus: {
	atProvider?: #PortfolioObservation @go(AtProvider)
}

// Portfolio is the Schema for the Portfolios API. Provides a resource to create a Service Catalog portfolio
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Portfolio: {
	spec:    #PortfolioSpec   @go(Spec)
	status?: #PortfolioStatus @go(Status)
}

// PortfolioList contains a list of Portfolios
#PortfolioList: {
	items: [...#Portfolio] @go(Items,[]Portfolio)
}
