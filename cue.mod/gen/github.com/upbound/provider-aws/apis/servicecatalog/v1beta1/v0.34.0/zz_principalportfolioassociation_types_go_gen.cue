// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

#PrincipalPortfolioAssociationObservation: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Identifier of the association.
	id?: null | string @go(ID,*string)

	// Portfolio identifier.
	portfolioId?: null | string @go(PortfolioID,*string)

	// Principal ARN.
	principalArn?: null | string @go(PrincipalArn,*string)

	// Principal type. Setting this argument empty (e.g., principal_type = "") will result in an error. Valid value is IAM. Default is IAM.
	principalType?: null | string @go(PrincipalType,*string)
}

#PrincipalPortfolioAssociationParameters: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	// +kubebuilder:validation:Optional
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Portfolio identifier.
	// +crossplane:generate:reference:type=Portfolio
	// +kubebuilder:validation:Optional
	portfolioId?: null | string @go(PortfolioID,*string)

	// Principal ARN.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.User
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	principalArn?: null | string @go(PrincipalArn,*string)

	// Principal type. Setting this argument empty (e.g., principal_type = "") will result in an error. Valid value is IAM. Default is IAM.
	// +kubebuilder:validation:Optional
	principalType?: null | string @go(PrincipalType,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// PrincipalPortfolioAssociationSpec defines the desired state of PrincipalPortfolioAssociation
#PrincipalPortfolioAssociationSpec: {
	forProvider: #PrincipalPortfolioAssociationParameters @go(ForProvider)
}

// PrincipalPortfolioAssociationStatus defines the observed state of PrincipalPortfolioAssociation.
#PrincipalPortfolioAssociationStatus: {
	atProvider?: #PrincipalPortfolioAssociationObservation @go(AtProvider)
}

// PrincipalPortfolioAssociation is the Schema for the PrincipalPortfolioAssociations API. Manages a Service Catalog Principal Portfolio Association
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PrincipalPortfolioAssociation: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.acceptLanguage)",message="acceptLanguage is a required parameter"
	spec:    #PrincipalPortfolioAssociationSpec   @go(Spec)
	status?: #PrincipalPortfolioAssociationStatus @go(Status)
}

// PrincipalPortfolioAssociationList contains a list of PrincipalPortfolioAssociations
#PrincipalPortfolioAssociationList: {
	items: [...#PrincipalPortfolioAssociation] @go(Items,[]PrincipalPortfolioAssociation)
}
