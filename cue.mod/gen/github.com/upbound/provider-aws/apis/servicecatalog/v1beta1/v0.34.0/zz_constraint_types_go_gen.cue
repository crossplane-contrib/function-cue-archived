// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

#ConstraintObservation: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Description of the constraint.
	description?: null | string @go(Description,*string)

	// Constraint identifier.
	id?: null | string @go(ID,*string)

	// Owner of the constraint.
	owner?: null | string @go(Owner,*string)

	// Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.
	parameters?: null | string @go(Parameters,*string)

	// Portfolio identifier.
	portfolioId?: null | string @go(PortfolioID,*string)

	// Product identifier.
	productId?: null | string @go(ProductID,*string)
	status?:    null | string @go(Status,*string)

	// Type of constraint. Valid values are LAUNCH, NOTIFICATION, RESOURCE_UPDATE, STACKSET, and TEMPLATE.
	type?: null | string @go(Type,*string)
}

#ConstraintParameters: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	// +kubebuilder:validation:Optional
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Description of the constraint.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.
	// +kubebuilder:validation:Optional
	parameters?: null | string @go(Parameters,*string)

	// Portfolio identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/servicecatalog/v1beta1.Portfolio
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	portfolioId?: null | string @go(PortfolioID,*string)

	// Product identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/servicecatalog/v1beta1.Product
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	productId?: null | string @go(ProductID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Type of constraint. Valid values are LAUNCH, NOTIFICATION, RESOURCE_UPDATE, STACKSET, and TEMPLATE.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// ConstraintSpec defines the desired state of Constraint
#ConstraintSpec: {
	forProvider: #ConstraintParameters @go(ForProvider)
}

// ConstraintStatus defines the observed state of Constraint.
#ConstraintStatus: {
	atProvider?: #ConstraintObservation @go(AtProvider)
}

// Constraint is the Schema for the Constraints API. Manages a Service Catalog Constraint
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Constraint: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.parameters)",message="parameters is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.type)",message="type is a required parameter"
	spec:    #ConstraintSpec   @go(Spec)
	status?: #ConstraintStatus @go(Status)
}

// ConstraintList contains a list of Constraints
#ConstraintList: {
	items: [...#Constraint] @go(Items,[]Constraint)
}
