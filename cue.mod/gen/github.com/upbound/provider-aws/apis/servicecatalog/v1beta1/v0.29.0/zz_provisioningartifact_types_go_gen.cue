// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicecatalog/v1beta1

package v1beta1

#ProvisioningArtifactObservation: {
	// Time when the provisioning artifact was created.
	createdTime?: null | string @go(CreatedTime,*string)

	// Provisioning Artifact identifier and product identifier separated by a colon.
	id?: null | string @go(ID,*string)
}

#ProvisioningArtifactParameters: {
	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). The default value is en.
	// +kubebuilder:validation:Optional
	acceptLanguage?: null | string @go(AcceptLanguage,*string)

	// Whether the product version is active. Inactive provisioning artifacts are invisible to end users. End users cannot launch or update a provisioned product from an inactive provisioning artifact. Default is true.
	// +kubebuilder:validation:Optional
	active?: null | bool @go(Active,*bool)

	// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
	// +kubebuilder:validation:Optional
	disableTemplateValidation?: null | bool @go(DisableTemplateValidation,*bool)

	// Information set by the administrator to provide guidance to end users about which provisioning artifacts to use. Valid values are DEFAULT and DEPRECATED. The default is DEFAULT. Users are able to make updates to a provisioned product of a deprecated version but cannot launch new provisioned products using a deprecated version.
	// +kubebuilder:validation:Optional
	guidance?: null | string @go(Guidance,*string)

	// Name of the provisioning artifact (for example, v1, v2beta). No spaces are allowed.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Identifier of the product.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/servicecatalog/v1beta1.Product
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	productId?: null | string @go(ProductID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID].
	// +kubebuilder:validation:Optional
	templatePhysicalId?: null | string @go(TemplatePhysicalID,*string)

	// Template source as URL of the CloudFormation template in Amazon S3.
	// +kubebuilder:validation:Optional
	templateUrl?: null | string @go(TemplateURL,*string)

	// Type of provisioning artifact. Valid values: CLOUD_FORMATION_TEMPLATE, MARKETPLACE_AMI, MARKETPLACE_CAR (Marketplace Clusters and AWS Resources).
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// ProvisioningArtifactSpec defines the desired state of ProvisioningArtifact
#ProvisioningArtifactSpec: {
	forProvider: #ProvisioningArtifactParameters @go(ForProvider)
}

// ProvisioningArtifactStatus defines the observed state of ProvisioningArtifact.
#ProvisioningArtifactStatus: {
	atProvider?: #ProvisioningArtifactObservation @go(AtProvider)
}

// ProvisioningArtifact is the Schema for the ProvisioningArtifacts API. Manages a Service Catalog Provisioning Artifact
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ProvisioningArtifact: {
	spec:    #ProvisioningArtifactSpec   @go(Spec)
	status?: #ProvisioningArtifactStatus @go(Status)
}

// ProvisioningArtifactList contains a list of ProvisioningArtifacts
#ProvisioningArtifactList: {
	items: [...#ProvisioningArtifact] @go(Items,[]ProvisioningArtifact)
}
