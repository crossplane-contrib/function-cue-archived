// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/redshift/v1beta1

package v1beta1

#HSMConfigurationObservation: {
	// Amazon Resource Name (ARN) of the Hsm Client Certificate.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#HSMConfigurationParameters: {
	// A text description of the HSM configuration to be created.
	// +kubebuilder:validation:Required
	description?: null | string @go(Description,*string)

	// The IP address that the Amazon Redshift cluster must use to access the HSM.
	// +kubebuilder:validation:Required
	hsmIpAddress?: null | string @go(HSMIPAddress,*string)

	// The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
	// +kubebuilder:validation:Required
	hsmPartitionName?: null | string @go(HSMPartitionName,*string)

	// The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.
	// +kubebuilder:validation:Required
	hsmServerPublicCertificate?: null | string @go(HSMServerPublicCertificate,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// HSMConfigurationSpec defines the desired state of HSMConfiguration
#HSMConfigurationSpec: {
	forProvider: #HSMConfigurationParameters @go(ForProvider)
}

// HSMConfigurationStatus defines the observed state of HSMConfiguration.
#HSMConfigurationStatus: {
	atProvider?: #HSMConfigurationObservation @go(AtProvider)
}

// HSMConfiguration is the Schema for the HSMConfigurations API. Creates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM).
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#HSMConfiguration: {
	spec:    #HSMConfigurationSpec   @go(Spec)
	status?: #HSMConfigurationStatus @go(Status)
}

// HSMConfigurationList contains a list of HSMConfigurations
#HSMConfigurationList: {
	items: [...#HSMConfiguration] @go(Items,[]HSMConfiguration)
}
