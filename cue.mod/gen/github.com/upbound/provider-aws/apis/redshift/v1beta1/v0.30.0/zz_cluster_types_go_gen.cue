// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/redshift/v1beta1

package v1beta1

#ClusterNodesObservation: {
	// Whether the node is a leader node or a compute node
	nodeRole?: null | string @go(NodeRole,*string)

	// The private IP address of a node within a cluster
	privateIpAddress?: null | string @go(PrivateIPAddress,*string)

	// The public IP address of a node within a cluster
	publicIpAddress?: null | string @go(PublicIPAddress,*string)
}

#ClusterNodesParameters: {
}

#ClusterObservation: {
	// Amazon Resource Name (ARN) of cluster
	arn?: null | string @go(Arn,*string)

	// The nodes in the cluster. Cluster node blocks are documented below
	clusterNodes?: [...#ClusterNodesObservation] @go(ClusterNodes,[]ClusterNodesObservation)

	// The DNS name of the cluster
	dnsName?: null | string @go(DNSName,*string)

	// The Redshift Cluster ID.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ClusterParameters: {
	// If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is true.
	// +kubebuilder:validation:Optional
	allowVersionUpgrade?: null | bool @go(AllowVersionUpgrade,*bool)

	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
	// +kubebuilder:validation:Optional
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values are enabled, disabled, and auto. Requires Cluster reboot.
	// +kubebuilder:validation:Optional
	aquaConfigurationStatus?: null | string @go(AquaConfigurationStatus,*string)

	// The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.
	// +kubebuilder:validation:Optional
	automatedSnapshotRetentionPeriod?: null | float64 @go(AutomatedSnapshotRetentionPeriod,*float64)

	// The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if availability_zone_relocation_enabled is true.
	// +kubebuilder:validation:Optional
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is false. Available for use on clusters from the RA3 instance family.
	// +kubebuilder:validation:Optional
	availabilityZoneRelocationEnabled?: null | bool @go(AvailabilityZoneRelocationEnabled,*bool)

	// The name of the parameter group to be associated with this cluster.
	// +kubebuilder:validation:Optional
	clusterParameterGroupName?: null | string @go(ClusterParameterGroupName,*string)

	// The public key for the cluster
	// +kubebuilder:validation:Optional
	clusterPublicKey?: null | string @go(ClusterPublicKey,*string)

	// The specific revision number of the database in the cluster
	// +kubebuilder:validation:Optional
	clusterRevisionNumber?: null | string @go(ClusterRevisionNumber,*string)

	// A list of security groups to be associated with this cluster.
	// +kubebuilder:validation:Optional
	clusterSecurityGroups?: [...null | string] @go(ClusterSecurityGroups,[]*string)

	// The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).
	// +kubebuilder:validation:Optional
	clusterSubnetGroupName?: null | string @go(ClusterSubnetGroupName,*string)

	// The cluster type to use. Either single-node or multi-node.
	// +kubebuilder:validation:Optional
	clusterType?: null | string @go(ClusterType,*string)

	// The version of the Amazon Redshift engine software that you want to deploy on the cluster.
	// The version selected runs on all the nodes in the cluster.
	// +kubebuilder:validation:Optional
	clusterVersion?: null | string @go(ClusterVersion,*string)

	// The name of the first database to be created when the cluster is created.
	// If you do not provide a name, Amazon Redshift will create a default database called dev.
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	defaultIamRoleArn?: null | string @go(DefaultIAMRoleArn,*string)

	// The Elastic IP (EIP) address for the cluster.
	// +kubebuilder:validation:Optional
	elasticIp?: null | string @go(ElasticIP,*string)

	// If true , the data in the cluster is encrypted at rest.
	// +kubebuilder:validation:Optional
	encrypted?: null | bool @go(Encrypted,*bool)

	// The connection endpoint
	// +kubebuilder:validation:Optional
	endpoint?: null | string @go(Endpoint,*string)

	// If true , enhanced VPC routing is enabled.
	// +kubebuilder:validation:Optional
	enhancedVpcRouting?: null | bool @go(EnhancedVPCRouting,*bool)

	// The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, skip_final_snapshot must be false.
	// +kubebuilder:validation:Optional
	finalSnapshotIdentifier?: null | string @go(FinalSnapshotIdentifier,*string)

	// A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:refFieldName=IAMRoleRefs
	// +crossplane:generate:reference:selectorFieldName=IAMRoleSelector
	// +kubebuilder:validation:Optional
	iamRoles?: [...null | string] @go(IAMRoles,[]*string)

	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Logging, documented below.
	// +kubebuilder:validation:Optional
	logging?: [...#LoggingParameters] @go(Logging,[]LoggingParameters)

	// The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is current.
	// +kubebuilder:validation:Optional
	maintenanceTrackName?: null | string @go(MaintenanceTrackName,*string)

	// The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values are between -1 and 3653. Default value is -1.
	// +kubebuilder:validation:Optional
	manualSnapshotRetentionPeriod?: null | float64 @go(ManualSnapshotRetentionPeriod,*float64)

	// Username for the master DB user.
	// +kubebuilder:validation:Optional
	masterUsername?: null | string @go(MasterUsername,*string)

	// The node type to be provisioned for the cluster.
	// +kubebuilder:validation:Required
	nodeType?: null | string @go(NodeType,*string)

	// The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.
	// +kubebuilder:validation:Optional
	numberOfNodes?: null | float64 @go(NumberOfNodes,*float64)

	// The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.
	// +kubebuilder:validation:Optional
	ownerAccount?: null | string @go(OwnerAccount,*string)

	// The port number on which the cluster accepts incoming connections. Valid values are between 1115 and 65535.
	// The cluster is accessible only via the JDBC and ODBC connection strings.
	// Part of the connection string requires the port on which the cluster will listen for incoming connections.
	// Default port is 5439.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// The weekly time range (in UTC) during which automated cluster maintenance can occur.
	// Format: ddd:hh24:mi-ddd:hh24:mi
	// +kubebuilder:validation:Optional
	preferredMaintenanceWindow?: null | string @go(PreferredMaintenanceWindow,*string)

	// If true, the cluster can be accessed from a public network. Default is true.
	// +kubebuilder:validation:Optional
	publiclyAccessible?: null | bool @go(PubliclyAccessible,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.
	// +kubebuilder:validation:Optional
	skipFinalSnapshot?: null | bool @go(SkipFinalSnapshot,*bool)

	// The name of the cluster the source snapshot was created from.
	// +kubebuilder:validation:Optional
	snapshotClusterIdentifier?: null | string @go(SnapshotClusterIdentifier,*string)

	// Configuration of automatic copy of snapshots from one region to another. Documented below.
	// +kubebuilder:validation:Optional
	snapshotCopy?: [...#SnapshotCopyParameters] @go(SnapshotCopy,[]SnapshotCopyParameters)

	// The name of the snapshot from which to create the new cluster.
	// +kubebuilder:validation:Optional
	snapshotIdentifier?: null | string @go(SnapshotIdentifier,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=VPCSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=VPCSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)
}

#LoggingObservation: {
}

#LoggingParameters: {
	// The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.
	// For more information on the permissions required for the bucket, please read the AWS documentation
	// +kubebuilder:validation:Optional
	bucketName?: null | string @go(BucketName,*string)

	// Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.
	// +kubebuilder:validation:Required
	enable?: null | bool @go(Enable,*bool)

	// The log destination type. An enum with possible values of s3 and cloudwatch.
	// +kubebuilder:validation:Optional
	logDestinationType?: null | string @go(LogDestinationType,*string)

	// The collection of exported log types. Log types include the connection log, user log and user activity log. Required when log_destination_type is cloudwatch. Valid log types are connectionlog, userlog, and useractivitylog.
	// +kubebuilder:validation:Optional
	logExports?: [...null | string] @go(LogExports,[]*string)

	// The prefix applied to the log file names.
	// +kubebuilder:validation:Optional
	s3KeyPrefix?: null | string @go(S3KeyPrefix,*string)
}

#SnapshotCopyObservation: {
}

#SnapshotCopyParameters: {
	// The destination region that you want to copy snapshots to.
	// +kubebuilder:validation:Required
	destinationRegion?: null | string @go(DestinationRegion,*string)

	// The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
	// +kubebuilder:validation:Optional
	grantName?: null | string @go(GrantName,*string)

	// The number of days to retain automated snapshots in the destination region after they are copied from the source region. Defaults to 7.
	// +kubebuilder:validation:Optional
	retentionPeriod?: null | float64 @go(RetentionPeriod,*float64)
}

// ClusterSpec defines the desired state of Cluster
#ClusterSpec: {
	forProvider: #ClusterParameters @go(ForProvider)
}

// ClusterStatus defines the observed state of Cluster.
#ClusterStatus: {
	atProvider?: #ClusterObservation @go(AtProvider)
}

// Cluster is the Schema for the Clusters API. Provides a Redshift Cluster resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Cluster: {
	spec:    #ClusterSpec   @go(Spec)
	status?: #ClusterStatus @go(Status)
}

// ClusterList contains a list of Clusters
#ClusterList: {
	items: [...#Cluster] @go(Items,[]Cluster)
}
