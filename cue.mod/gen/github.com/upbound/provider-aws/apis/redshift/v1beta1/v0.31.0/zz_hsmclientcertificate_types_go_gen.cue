// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/redshift/v1beta1

package v1beta1

#HSMClientCertificateObservation: {
	// Amazon Resource Name (ARN) of the Hsm Client Certificate.
	arn?: null | string @go(Arn,*string)

	// The public key that the Amazon Redshift cluster will use to connect to the HSM. You must register the public key in the HSM.
	hsmClientCertificatePublicKey?: null | string @go(HSMClientCertificatePublicKey,*string)
	id?:                            null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#HSMClientCertificateParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// HSMClientCertificateSpec defines the desired state of HSMClientCertificate
#HSMClientCertificateSpec: {
	forProvider: #HSMClientCertificateParameters @go(ForProvider)
}

// HSMClientCertificateStatus defines the observed state of HSMClientCertificate.
#HSMClientCertificateStatus: {
	atProvider?: #HSMClientCertificateObservation @go(AtProvider)
}

// HSMClientCertificate is the Schema for the HSMClientCertificates API. Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client's HSM in order to store and retrieve the keys used to encrypt the cluster databases.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#HSMClientCertificate: {
	spec:    #HSMClientCertificateSpec   @go(Spec)
	status?: #HSMClientCertificateStatus @go(Status)
}

// HSMClientCertificateList contains a list of HSMClientCertificates
#HSMClientCertificateList: {
	items: [...#HSMClientCertificate] @go(Items,[]HSMClientCertificate)
}
