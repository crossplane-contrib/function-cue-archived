// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudwatch/v1beta1

package v1beta1

#CompositeAlarmObservation: {
	// The ARN of the composite alarm.
	arn?: null | string @go(Arn,*string)

	// The ID of the composite alarm resource, which is equivalent to its alarm_name.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#CompositeAlarmParameters: {
	// Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. Defaults to true.
	// +kubebuilder:validation:Optional
	actionsEnabled?: null | bool @go(ActionsEnabled,*bool)

	// The set of actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	alarmActions?: [...null | string] @go(AlarmActions,[]*string)

	// The description for the composite alarm.
	// +kubebuilder:validation:Optional
	alarmDescription?: null | string @go(AlarmDescription,*string)

	// An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For syntax, see Creating a Composite Alarm. The maximum length is 10240 characters.
	// +kubebuilder:validation:Required
	alarmRule?: null | string @go(AlarmRule,*string)

	// The set of actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
	// +kubebuilder:validation:Optional
	insufficientDataActions?: [...null | string] @go(InsufficientDataActions,[]*string)

	// The set of actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	okActions?: [...null | string] @go(OkActions,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// CompositeAlarmSpec defines the desired state of CompositeAlarm
#CompositeAlarmSpec: {
	forProvider: #CompositeAlarmParameters @go(ForProvider)
}

// CompositeAlarmStatus defines the observed state of CompositeAlarm.
#CompositeAlarmStatus: {
	atProvider?: #CompositeAlarmObservation @go(AtProvider)
}

// CompositeAlarm is the Schema for the CompositeAlarms API. Provides a CloudWatch Composite Alarm resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CompositeAlarm: {
	spec:    #CompositeAlarmSpec   @go(Spec)
	status?: #CompositeAlarmStatus @go(Status)
}

// CompositeAlarmList contains a list of CompositeAlarms
#CompositeAlarmList: {
	items: [...#CompositeAlarm] @go(Items,[]CompositeAlarm)
}
