// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/transfer/v1beta1

package v1beta1

#SSHKeyObservation: {
	// (Requirement) The public key portion of an SSH key pair.
	body?: null | string @go(Body,*string)
	id?:   null | string @go(ID,*string)

	// (Requirement) The Server ID of the Transfer Server (e.g., s-12345678)
	serverId?: null | string @go(ServerID,*string)

	// (Requirement) The name of the user account that is assigned to one or more servers.
	userName?: null | string @go(UserName,*string)
}

#SSHKeyParameters: {
	// (Requirement) The public key portion of an SSH key pair.
	// +kubebuilder:validation:Optional
	body?: null | string @go(Body,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// (Requirement) The Server ID of the Transfer Server (e.g., s-12345678)
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/transfer/v1beta1.Server
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	serverId?: null | string @go(ServerID,*string)

	// (Requirement) The name of the user account that is assigned to one or more servers.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/transfer/v1beta1.User
	// +kubebuilder:validation:Optional
	userName?: null | string @go(UserName,*string)
}

// SSHKeySpec defines the desired state of SSHKey
#SSHKeySpec: {
	forProvider: #SSHKeyParameters @go(ForProvider)
}

// SSHKeyStatus defines the observed state of SSHKey.
#SSHKeyStatus: {
	atProvider?: #SSHKeyObservation @go(AtProvider)
}

// SSHKey is the Schema for the SSHKeys API. Provides a AWS Transfer SSH Public Key resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SSHKey: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.body)",message="body is a required parameter"
	spec:    #SSHKeySpec   @go(Spec)
	status?: #SSHKeyStatus @go(Status)
}

// SSHKeyList contains a list of SSHKeys
#SSHKeyList: {
	items: [...#SSHKey] @go(Items,[]SSHKey)
}
