// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/glue/v1beta1

package v1beta1

#CatalogDatabaseObservation: {
	// ARN of the Glue Catalog Database.
	arn?: null | string @go(Arn,*string)

	// ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.
	catalogId?: null | string @go(CatalogID,*string)

	// Creates a set of default permissions on the table for principals. See create_table_default_permission below.
	createTableDefaultPermission?: [...#CreateTableDefaultPermissionObservation] @go(CreateTableDefaultPermission,[]CreateTableDefaultPermissionObservation)

	// Description of the database.
	description?: null | string @go(Description,*string)

	// Catalog ID and name of the database
	id?: null | string @go(ID,*string)

	// Location of the database (for example, an HDFS path).
	locationUri?: null | string @go(LocationURI,*string)

	// List of key-value pairs that define parameters and properties of the database.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// Configuration block for a target database for resource linking. See target_database below.
	targetDatabase?: [...#TargetDatabaseObservation] @go(TargetDatabase,[]TargetDatabaseObservation)
}

#CatalogDatabaseParameters: {
	// ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.
	// +kubebuilder:validation:Required
	catalogId?: null | string @go(CatalogID,*string)

	// Creates a set of default permissions on the table for principals. See create_table_default_permission below.
	// +kubebuilder:validation:Optional
	createTableDefaultPermission?: [...#CreateTableDefaultPermissionParameters] @go(CreateTableDefaultPermission,[]CreateTableDefaultPermissionParameters)

	// Description of the database.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Location of the database (for example, an HDFS path).
	// +kubebuilder:validation:Optional
	locationUri?: null | string @go(LocationURI,*string)

	// List of key-value pairs that define parameters and properties of the database.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Configuration block for a target database for resource linking. See target_database below.
	// +kubebuilder:validation:Optional
	targetDatabase?: [...#TargetDatabaseParameters] @go(TargetDatabase,[]TargetDatabaseParameters)
}

#CreateTableDefaultPermissionObservation: {
	// The permissions that are granted to the principal.
	permissions?: [...null | string] @go(Permissions,[]*string)

	// The principal who is granted permissions.. See principal below.
	principal?: [...#PrincipalObservation] @go(Principal,[]PrincipalObservation)
}

#CreateTableDefaultPermissionParameters: {
	// The permissions that are granted to the principal.
	// +kubebuilder:validation:Optional
	permissions?: [...null | string] @go(Permissions,[]*string)

	// The principal who is granted permissions.. See principal below.
	// +kubebuilder:validation:Optional
	principal?: [...#PrincipalParameters] @go(Principal,[]PrincipalParameters)
}

#PrincipalObservation: {
	// An identifier for the Lake Formation principal.
	dataLakePrincipalIdentifier?: null | string @go(DataLakePrincipalIdentifier,*string)
}

#PrincipalParameters: {
	// An identifier for the Lake Formation principal.
	// +kubebuilder:validation:Optional
	dataLakePrincipalIdentifier?: null | string @go(DataLakePrincipalIdentifier,*string)
}

#TargetDatabaseObservation: {
	// ID of the Data Catalog in which the database resides.
	catalogId?: null | string @go(CatalogID,*string)

	// Name of the catalog database.
	databaseName?: null | string @go(DatabaseName,*string)
}

#TargetDatabaseParameters: {
	// ID of the Data Catalog in which the database resides.
	// +kubebuilder:validation:Required
	catalogId?: null | string @go(CatalogID,*string)

	// Name of the catalog database.
	// +kubebuilder:validation:Required
	databaseName?: null | string @go(DatabaseName,*string)
}

// CatalogDatabaseSpec defines the desired state of CatalogDatabase
#CatalogDatabaseSpec: {
	forProvider: #CatalogDatabaseParameters @go(ForProvider)
}

// CatalogDatabaseStatus defines the observed state of CatalogDatabase.
#CatalogDatabaseStatus: {
	atProvider?: #CatalogDatabaseObservation @go(AtProvider)
}

// CatalogDatabase is the Schema for the CatalogDatabases API. Provides a Glue Catalog Database.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CatalogDatabase: {
	spec:    #CatalogDatabaseSpec   @go(Spec)
	status?: #CatalogDatabaseStatus @go(Status)
}

// CatalogDatabaseList contains a list of CatalogDatabases
#CatalogDatabaseList: {
	items: [...#CatalogDatabase] @go(Items,[]CatalogDatabase)
}
