// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/glue/v1beta1

package v1beta1

#ResourceUrisObservation: {
}

#ResourceUrisParameters: {
	// The type of the resource. can be one of JAR, FILE, and ARCHIVE.
	// +kubebuilder:validation:Required
	resourceType?: null | string @go(ResourceType,*string)

	// The URI for accessing the resource.
	// +kubebuilder:validation:Required
	uri?: null | string @go(URI,*string)
}

#UserDefinedFunctionObservation: {
	// The ARN of the Glue User Defined Function.
	arn?: null | string @go(Arn,*string)

	// The time at which the function was created.
	createTime?: null | string @go(CreateTime,*string)

	// The id of the Glue User Defined Function.
	id?: null | string @go(ID,*string)
}

#UserDefinedFunctionParameters: {
	// ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
	// +kubebuilder:validation:Required
	catalogId?: null | string @go(CatalogID,*string)

	// The Java class that contains the function code.
	// +kubebuilder:validation:Required
	className?: null | string @go(ClassName,*string)

	// The name of the Database to create the Function.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/glue/v1beta1.CatalogDatabase
	// +kubebuilder:validation:Optional
	databaseName?: null | string @go(DatabaseName,*string)

	// The owner of the function.
	// +kubebuilder:validation:Required
	ownerName?: null | string @go(OwnerName,*string)

	// The owner type. can be one of USER, ROLE, and GROUP.
	// +kubebuilder:validation:Required
	ownerType?: null | string @go(OwnerType,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The configuration block for Resource URIs. See resource uris below for more details.
	// +kubebuilder:validation:Optional
	resourceUris?: [...#ResourceUrisParameters] @go(ResourceUris,[]ResourceUrisParameters)
}

// UserDefinedFunctionSpec defines the desired state of UserDefinedFunction
#UserDefinedFunctionSpec: {
	forProvider: #UserDefinedFunctionParameters @go(ForProvider)
}

// UserDefinedFunctionStatus defines the observed state of UserDefinedFunction.
#UserDefinedFunctionStatus: {
	atProvider?: #UserDefinedFunctionObservation @go(AtProvider)
}

// UserDefinedFunction is the Schema for the UserDefinedFunctions API. Provides a Glue User Defined Function.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserDefinedFunction: {
	spec:    #UserDefinedFunctionSpec   @go(Spec)
	status?: #UserDefinedFunctionStatus @go(Status)
}

// UserDefinedFunctionList contains a list of UserDefinedFunctions
#UserDefinedFunctionList: {
	items: [...#UserDefinedFunction] @go(Items,[]UserDefinedFunction)
}
