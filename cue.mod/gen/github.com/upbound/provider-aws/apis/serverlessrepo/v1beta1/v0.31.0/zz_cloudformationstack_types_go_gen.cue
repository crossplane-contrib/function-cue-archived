// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/serverlessrepo/v1beta1

package v1beta1

#CloudFormationStackObservation: {
	// A unique identifier of the stack.
	id?: null | string @go(ID,*string)

	// A map of outputs from the stack.
	outputs?: {[string]: null | string} @go(Outputs,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#CloudFormationStackParameters: {
	// The ARN of the application from the Serverless Application Repository.
	// +kubebuilder:validation:Required
	applicationId?: null | string @go(ApplicationID,*string)

	// A list of capabilities. Valid values are CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_RESOURCE_POLICY, or CAPABILITY_AUTO_EXPAND
	// +kubebuilder:validation:Required
	capabilities: [...null | string] @go(Capabilities,[]*string)

	// The name of the stack to create. The resource deployed in AWS will be prefixed with serverlessrepo-
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// A map of Parameter structures that specify input parameters for the stack.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The version of the application to deploy. If not supplied, deploys the latest version.
	// +kubebuilder:validation:Optional
	semanticVersion?: null | string @go(SemanticVersion,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// CloudFormationStackSpec defines the desired state of CloudFormationStack
#CloudFormationStackSpec: {
	forProvider: #CloudFormationStackParameters @go(ForProvider)
}

// CloudFormationStackStatus defines the observed state of CloudFormationStack.
#CloudFormationStackStatus: {
	atProvider?: #CloudFormationStackObservation @go(AtProvider)
}

// CloudFormationStack is the Schema for the CloudFormationStacks API. Deploys an Application CloudFormation Stack from the Serverless Application Repository.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CloudFormationStack: {
	spec:    #CloudFormationStackSpec   @go(Spec)
	status?: #CloudFormationStackStatus @go(Status)
}

// CloudFormationStackList contains a list of CloudFormationStacks
#CloudFormationStackList: {
	items: [...#CloudFormationStack] @go(Items,[]CloudFormationStack)
}
