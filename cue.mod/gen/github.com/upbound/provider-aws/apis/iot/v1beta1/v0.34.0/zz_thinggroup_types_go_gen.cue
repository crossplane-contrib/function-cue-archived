// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iot/v1beta1

package v1beta1

#AttributePayloadObservation: {
	// Key-value map.
	attributes?: {[string]: null | string} @go(Attributes,map[string]*string)
}

#AttributePayloadParameters: {
	// Key-value map.
	// +kubebuilder:validation:Optional
	attributes?: {[string]: null | string} @go(Attributes,map[string]*string)
}

#MetadataObservation: {
	creationDate?: null | string @go(CreationDate,*string)

	// The name of the parent Thing Group.
	parentGroupName?: null | string @go(ParentGroupName,*string)
	rootToParentGroups?: [...#RootToParentGroupsObservation] @go(RootToParentGroups,[]RootToParentGroupsObservation)
}

#MetadataParameters: {
}

#PropertiesObservation: {
	// The Thing Group attributes. Defined below.
	attributePayload?: [...#AttributePayloadObservation] @go(AttributePayload,[]AttributePayloadObservation)

	// A description of the Thing Group.
	description?: null | string @go(Description,*string)
}

#PropertiesParameters: {
	// The Thing Group attributes. Defined below.
	// +kubebuilder:validation:Optional
	attributePayload?: [...#AttributePayloadParameters] @go(AttributePayload,[]AttributePayloadParameters)

	// A description of the Thing Group.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)
}

#RootToParentGroupsObservation: {
	// The ARN of the Thing Group.
	groupArn?: null | string @go(GroupArn,*string)

	// The name of the Thing Group.
	groupName?: null | string @go(GroupName,*string)
}

#RootToParentGroupsParameters: {
}

#ThingGroupObservation: {
	// The ARN of the Thing Group.
	arn?: null | string @go(Arn,*string)

	// The Thing Group ID.
	id?: null | string @go(ID,*string)
	metadata?: [...#MetadataObservation] @go(Metadata,[]MetadataObservation)

	// The name of the parent Thing Group.
	parentGroupName?: null | string @go(ParentGroupName,*string)

	// The Thing Group properties. Defined below.
	properties?: [...#PropertiesObservation] @go(Properties,[]PropertiesObservation)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The current version of the Thing Group record in the registry.
	version?: null | float64 @go(Version,*float64)
}

#ThingGroupParameters: {
	// The name of the parent Thing Group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iot/v1beta1.ThingGroup
	// +kubebuilder:validation:Optional
	parentGroupName?: null | string @go(ParentGroupName,*string)

	// The Thing Group properties. Defined below.
	// +kubebuilder:validation:Optional
	properties?: [...#PropertiesParameters] @go(Properties,[]PropertiesParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ThingGroupSpec defines the desired state of ThingGroup
#ThingGroupSpec: {
	forProvider: #ThingGroupParameters @go(ForProvider)
}

// ThingGroupStatus defines the observed state of ThingGroup.
#ThingGroupStatus: {
	atProvider?: #ThingGroupObservation @go(AtProvider)
}

// ThingGroup is the Schema for the ThingGroups API. Manages an AWS IoT Thing Group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ThingGroup: {
	spec:    #ThingGroupSpec   @go(Spec)
	status?: #ThingGroupStatus @go(Status)
}

// ThingGroupList contains a list of ThingGroups
#ThingGroupList: {
	items: [...#ThingGroup] @go(Items,[]ThingGroup)
}
