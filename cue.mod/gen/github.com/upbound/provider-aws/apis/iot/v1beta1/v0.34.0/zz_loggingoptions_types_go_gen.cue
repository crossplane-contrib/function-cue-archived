// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iot/v1beta1

package v1beta1

#LoggingOptionsObservation: {
	// The default logging level. Valid Values: "DEBUG", "INFO", "ERROR", "WARN", "DISABLED".
	defaultLogLevel?: null | string @go(DefaultLogLevel,*string)

	// If true all logs are disabled. The default is false.
	disableAllLogs?: null | bool   @go(DisableAllLogs,*bool)
	id?:             null | string @go(ID,*string)

	// The ARN of the role that allows IoT to write to Cloudwatch logs.
	roleArn?: null | string @go(RoleArn,*string)
}

#LoggingOptionsParameters: {
	// The default logging level. Valid Values: "DEBUG", "INFO", "ERROR", "WARN", "DISABLED".
	// +kubebuilder:validation:Optional
	defaultLogLevel?: null | string @go(DefaultLogLevel,*string)

	// If true all logs are disabled. The default is false.
	// +kubebuilder:validation:Optional
	disableAllLogs?: null | bool @go(DisableAllLogs,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN of the role that allows IoT to write to Cloudwatch logs.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

// LoggingOptionsSpec defines the desired state of LoggingOptions
#LoggingOptionsSpec: {
	forProvider: #LoggingOptionsParameters @go(ForProvider)
}

// LoggingOptionsStatus defines the observed state of LoggingOptions.
#LoggingOptionsStatus: {
	atProvider?: #LoggingOptionsObservation @go(AtProvider)
}

// LoggingOptions is the Schema for the LoggingOptionss API. Provides a resource to manage default logging options.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#LoggingOptions: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.defaultLogLevel)",message="defaultLogLevel is a required parameter"
	spec:    #LoggingOptionsSpec   @go(Spec)
	status?: #LoggingOptionsStatus @go(Status)
}

// LoggingOptionsList contains a list of LoggingOptionss
#LoggingOptionsList: {
	items: [...#LoggingOptions] @go(Items,[]LoggingOptions)
}
