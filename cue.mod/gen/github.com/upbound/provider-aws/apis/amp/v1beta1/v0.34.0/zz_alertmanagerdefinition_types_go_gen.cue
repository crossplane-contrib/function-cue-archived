// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/amp/v1beta1

package v1beta1

#AlertManagerDefinitionObservation: {
	// the alert manager definition that you want to be applied. See more in AWS Docs.
	definition?: null | string @go(Definition,*string)
	id?:         null | string @go(ID,*string)

	// ID of the prometheus workspace the alert manager definition should be linked to
	workspaceId?: null | string @go(WorkspaceID,*string)
}

#AlertManagerDefinitionParameters: {
	// the alert manager definition that you want to be applied. See more in AWS Docs.
	// +kubebuilder:validation:Optional
	definition?: null | string @go(Definition,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// ID of the prometheus workspace the alert manager definition should be linked to
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/amp/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	workspaceId?: null | string @go(WorkspaceID,*string)
}

// AlertManagerDefinitionSpec defines the desired state of AlertManagerDefinition
#AlertManagerDefinitionSpec: {
	forProvider: #AlertManagerDefinitionParameters @go(ForProvider)
}

// AlertManagerDefinitionStatus defines the observed state of AlertManagerDefinition.
#AlertManagerDefinitionStatus: {
	atProvider?: #AlertManagerDefinitionObservation @go(AtProvider)
}

// AlertManagerDefinition is the Schema for the AlertManagerDefinitions API. Manages an Amazon Managed Service for Prometheus (AMP) Alert Manager Definition
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AlertManagerDefinition: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.definition)",message="definition is a required parameter"
	spec:    #AlertManagerDefinitionSpec   @go(Spec)
	status?: #AlertManagerDefinitionStatus @go(Status)
}

// AlertManagerDefinitionList contains a list of AlertManagerDefinitions
#AlertManagerDefinitionList: {
	items: [...#AlertManagerDefinition] @go(Items,[]AlertManagerDefinition)
}
