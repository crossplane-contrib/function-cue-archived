// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/deploy/v1beta1

package v1beta1

#AppObservation: {
	// The application ID.
	applicationId?: null | string @go(ApplicationID,*string)

	// The ARN of the CodeDeploy application.
	arn?: null | string @go(Arn,*string)

	// The name for a connection to a GitHub account.
	githubAccountName?: null | string @go(GithubAccountName,*string)

	// Amazon's assigned ID for the application.
	id?: null | string @go(ID,*string)

	// Whether the user has authenticated with GitHub for the specified application.
	linkedToGithub?: null | bool @go(LinkedToGithub,*bool)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#AppParameters: {
	// The compute platform can either be ECS, Lambda, or Server. Default is Server.
	// +kubebuilder:validation:Optional
	computePlatform?: null | string @go(ComputePlatform,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// AppSpec defines the desired state of App
#AppSpec: {
	forProvider: #AppParameters @go(ForProvider)
}

// AppStatus defines the observed state of App.
#AppStatus: {
	atProvider?: #AppObservation @go(AtProvider)
}

// App is the Schema for the Apps API. Provides a CodeDeploy application.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#App: {
	spec:    #AppSpec   @go(Spec)
	status?: #AppStatus @go(Status)
}

// AppList contains a list of Apps
#AppList: {
	items: [...#App] @go(Items,[]App)
}
