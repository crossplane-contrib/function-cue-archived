// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3control/v1beta1

package v1beta1

#ObjectLambdaAccessPointPolicyObservation: {
	// Indicates whether this access point currently has a policy that allows public access.
	hasPublicAccessPolicy?: null | bool @go(HasPublicAccessPolicy,*bool)

	// The AWS account ID and access point name separated by a colon (:).
	id?: null | string @go(ID,*string)
}

#ObjectLambdaAccessPointPolicyParameters: {
	// The AWS account ID for the account that owns the Object Lambda Access Point.
	// +kubebuilder:validation:Optional
	accountId?: null | string @go(AccountID,*string)

	// The name of the Object Lambda Access Point.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3control/v1beta1.ObjectLambdaAccessPoint
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The Object Lambda Access Point resource policy document.
	// +kubebuilder:validation:Required
	policy?: null | string @go(Policy,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ObjectLambdaAccessPointPolicySpec defines the desired state of ObjectLambdaAccessPointPolicy
#ObjectLambdaAccessPointPolicySpec: {
	forProvider: #ObjectLambdaAccessPointPolicyParameters @go(ForProvider)
}

// ObjectLambdaAccessPointPolicyStatus defines the observed state of ObjectLambdaAccessPointPolicy.
#ObjectLambdaAccessPointPolicyStatus: {
	atProvider?: #ObjectLambdaAccessPointPolicyObservation @go(AtProvider)
}

// ObjectLambdaAccessPointPolicy is the Schema for the ObjectLambdaAccessPointPolicys API. Provides a resource to manage an S3 Object Lambda Access Point resource policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ObjectLambdaAccessPointPolicy: {
	spec:    #ObjectLambdaAccessPointPolicySpec   @go(Spec)
	status?: #ObjectLambdaAccessPointPolicyStatus @go(Status)
}

// ObjectLambdaAccessPointPolicyList contains a list of ObjectLambdaAccessPointPolicys
#ObjectLambdaAccessPointPolicyList: {
	items: [...#ObjectLambdaAccessPointPolicy] @go(Items,[]ObjectLambdaAccessPointPolicy)
}
