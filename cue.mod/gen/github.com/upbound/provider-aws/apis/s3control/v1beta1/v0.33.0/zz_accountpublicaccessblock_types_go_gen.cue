// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3control/v1beta1

package v1beta1

#AccountPublicAccessBlockObservation: {
	// AWS account ID
	id?: null | string @go(ID,*string)
}

#AccountPublicAccessBlockParameters: {
	// AWS account ID to configure.
	// +kubebuilder:validation:Optional
	accountId?: null | string @go(AccountID,*string)

	// Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to false. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:
	// +kubebuilder:validation:Optional
	blockPublicAcls?: null | bool @go(BlockPublicAcls,*bool)

	// Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to false. Enabling this setting does not affect existing bucket policies. When set to true causes Amazon S3 to:
	// +kubebuilder:validation:Optional
	blockPublicPolicy?: null | bool @go(BlockPublicPolicy,*bool)

	// Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to false. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to true causes Amazon S3 to:
	// +kubebuilder:validation:Optional
	ignorePublicAcls?: null | bool @go(IgnorePublicAcls,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to false. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:
	// +kubebuilder:validation:Optional
	restrictPublicBuckets?: null | bool @go(RestrictPublicBuckets,*bool)
}

// AccountPublicAccessBlockSpec defines the desired state of AccountPublicAccessBlock
#AccountPublicAccessBlockSpec: {
	forProvider: #AccountPublicAccessBlockParameters @go(ForProvider)
}

// AccountPublicAccessBlockStatus defines the observed state of AccountPublicAccessBlock.
#AccountPublicAccessBlockStatus: {
	atProvider?: #AccountPublicAccessBlockObservation @go(AtProvider)
}

// AccountPublicAccessBlock is the Schema for the AccountPublicAccessBlocks API. Manages S3 account-level Public Access Block Configuration
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AccountPublicAccessBlock: {
	spec:    #AccountPublicAccessBlockSpec   @go(Spec)
	status?: #AccountPublicAccessBlockStatus @go(Status)
}

// AccountPublicAccessBlockList contains a list of AccountPublicAccessBlocks
#AccountPublicAccessBlockList: {
	items: [...#AccountPublicAccessBlock] @go(Items,[]AccountPublicAccessBlock)
}
