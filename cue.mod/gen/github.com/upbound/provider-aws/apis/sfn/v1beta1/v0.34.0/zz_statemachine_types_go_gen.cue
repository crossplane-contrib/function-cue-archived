// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sfn/v1beta1

package v1beta1

#LoggingConfigurationObservation: {
	// Determines whether execution data is included in your log. When set to false, data is excluded.
	includeExecutionData?: null | bool @go(IncludeExecutionData,*bool)

	// Defines which category of execution history events are logged. Valid values: ALL, ERROR, FATAL, OFF
	level?: null | string @go(Level,*string)

	// Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with :*
	logDestination?: null | string @go(LogDestination,*string)
}

#LoggingConfigurationParameters: {
	// Determines whether execution data is included in your log. When set to false, data is excluded.
	// +kubebuilder:validation:Optional
	includeExecutionData?: null | bool @go(IncludeExecutionData,*bool)

	// Defines which category of execution history events are logged. Valid values: ALL, ERROR, FATAL, OFF
	// +kubebuilder:validation:Optional
	level?: null | string @go(Level,*string)

	// Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with :*
	// +kubebuilder:validation:Optional
	logDestination?: null | string @go(LogDestination,*string)
}

#StateMachineObservation: {
	// The ARN of the state machine.
	arn?: null | string @go(Arn,*string)

	// The date the state machine was created.
	creationDate?: null | string @go(CreationDate,*string)

	// The Amazon States Language definition of the state machine.
	definition?: null | string @go(Definition,*string)

	// The ARN of the state machine.
	id?: null | string @go(ID,*string)

	// Defines what execution history events are logged and where they are logged. The logging_configuration parameter is only valid when type is set to EXPRESS. Defaults to OFF. For more information see Logging Express Workflows and Log Levels in the AWS Step Functions User Guide.
	loggingConfiguration?: [...#LoggingConfigurationObservation] @go(LoggingConfiguration,[]LoggingConfigurationObservation)

	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	roleArn?: null | string @go(RoleArn,*string)

	// The current status of the state machine. Either ACTIVE or DELETING.
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// Selects whether AWS X-Ray tracing is enabled.
	tracingConfiguration?: [...#TracingConfigurationObservation] @go(TracingConfiguration,[]TracingConfigurationObservation)

	// Determines whether a Standard or Express state machine is created. The default is STANDARD. You cannot update the type of a state machine once it has been created. Valid values: STANDARD, EXPRESS.
	type?: null | string @go(Type,*string)
}

#StateMachineParameters: {
	// The Amazon States Language definition of the state machine.
	// +kubebuilder:validation:Optional
	definition?: null | string @go(Definition,*string)

	// Defines what execution history events are logged and where they are logged. The logging_configuration parameter is only valid when type is set to EXPRESS. Defaults to OFF. For more information see Logging Express Workflows and Log Levels in the AWS Step Functions User Guide.
	// +kubebuilder:validation:Optional
	loggingConfiguration?: [...#LoggingConfigurationParameters] @go(LoggingConfiguration,[]LoggingConfigurationParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Selects whether AWS X-Ray tracing is enabled.
	// +kubebuilder:validation:Optional
	tracingConfiguration?: [...#TracingConfigurationParameters] @go(TracingConfiguration,[]TracingConfigurationParameters)

	// Determines whether a Standard or Express state machine is created. The default is STANDARD. You cannot update the type of a state machine once it has been created. Valid values: STANDARD, EXPRESS.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#TracingConfigurationObservation: {
	// When set to true, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the AWS Step Functions Developer Guide for details.
	enabled?: null | bool @go(Enabled,*bool)
}

#TracingConfigurationParameters: {
	// When set to true, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the AWS Step Functions Developer Guide for details.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)
}

// StateMachineSpec defines the desired state of StateMachine
#StateMachineSpec: {
	forProvider: #StateMachineParameters @go(ForProvider)
}

// StateMachineStatus defines the observed state of StateMachine.
#StateMachineStatus: {
	atProvider?: #StateMachineObservation @go(AtProvider)
}

// StateMachine is the Schema for the StateMachines API. Provides a Step Function State Machine resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#StateMachine: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.definition)",message="definition is a required parameter"
	spec:    #StateMachineSpec   @go(Spec)
	status?: #StateMachineStatus @go(Status)
}

// StateMachineList contains a list of StateMachines
#StateMachineList: {
	items: [...#StateMachine] @go(Items,[]StateMachine)
}
