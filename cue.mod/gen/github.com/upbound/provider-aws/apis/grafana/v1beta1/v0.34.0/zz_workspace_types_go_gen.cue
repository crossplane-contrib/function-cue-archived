// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/grafana/v1beta1

package v1beta1

#VPCConfigurationObservation: {
	// - The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// - The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
	subnetIds?: [...null | string] @go(SubnetIds,[]*string)
}

#VPCConfigurationParameters: {
	// - The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
	// +kubebuilder:validation:Required
	securityGroupIds: [...null | string] @go(SecurityGroupIds,[]*string)

	// - The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
	// +kubebuilder:validation:Required
	subnetIds: [...null | string] @go(SubnetIds,[]*string)
}

#WorkspaceObservation: {
	// The type of account access for the workspace. Valid values are CURRENT_ACCOUNT and ORGANIZATION. If ORGANIZATION is specified, then organizational_units must also be present.
	accountAccessType?: null | string @go(AccountAccessType,*string)

	// The Amazon Resource Name (ARN) of the Grafana workspace.
	arn?: null | string @go(Arn,*string)

	// The authentication providers for the workspace. Valid values are AWS_SSO, SAML, or both.
	authenticationProviders?: [...null | string] @go(AuthenticationProviders,[]*string)

	// The configuration string for the workspace that you create. For more information about the format and configuration options available, see Working in your Grafana workspace.
	configuration?: null | string @go(Configuration,*string)

	// The data sources for the workspace. Valid values are AMAZON_OPENSEARCH_SERVICE, ATHENA, CLOUDWATCH, PROMETHEUS, REDSHIFT, SITEWISE, TIMESTREAM, XRAY
	dataSources?: [...null | string] @go(DataSources,[]*string)

	// The workspace description.
	description?: null | string @go(Description,*string)

	// The endpoint of the Grafana workspace.
	endpoint?: null | string @go(Endpoint,*string)

	// The version of Grafana running on the workspace.
	grafanaVersion?: null | string @go(GrafanaVersion,*string)
	id?:             null | string @go(ID,*string)

	// The Grafana workspace name.
	name?: null | string @go(Name,*string)

	// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to SNS.
	notificationDestinations?: [...null | string] @go(NotificationDestinations,[]*string)

	// The role name that the workspace uses to access resources through Amazon Organizations.
	organizationRoleName?: null | string @go(OrganizationRoleName,*string)

	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	organizationalUnits?: [...null | string] @go(OrganizationalUnits,[]*string)

	// The permission type of the workspace. If SERVICE_MANAGED is specified, the IAM roles and IAM policy attachments are generated automatically. If CUSTOMER_MANAGED is specified, the IAM roles and IAM policy attachments will not be created.
	permissionType?: null | string @go(PermissionType,*string)

	// The IAM role ARN that the workspace assumes.
	roleArn?:                 null | string @go(RoleArn,*string)
	samlConfigurationStatus?: null | string @go(SAMLConfigurationStatus,*string)

	// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	stackSetName?: null | string @go(StackSetName,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
	vpcConfiguration?: [...#VPCConfigurationObservation] @go(VPCConfiguration,[]VPCConfigurationObservation)
}

#WorkspaceParameters: {
	// The type of account access for the workspace. Valid values are CURRENT_ACCOUNT and ORGANIZATION. If ORGANIZATION is specified, then organizational_units must also be present.
	// +kubebuilder:validation:Optional
	accountAccessType?: null | string @go(AccountAccessType,*string)

	// The authentication providers for the workspace. Valid values are AWS_SSO, SAML, or both.
	// +kubebuilder:validation:Optional
	authenticationProviders?: [...null | string] @go(AuthenticationProviders,[]*string)

	// The configuration string for the workspace that you create. For more information about the format and configuration options available, see Working in your Grafana workspace.
	// +kubebuilder:validation:Optional
	configuration?: null | string @go(Configuration,*string)

	// The data sources for the workspace. Valid values are AMAZON_OPENSEARCH_SERVICE, ATHENA, CLOUDWATCH, PROMETHEUS, REDSHIFT, SITEWISE, TIMESTREAM, XRAY
	// +kubebuilder:validation:Optional
	dataSources?: [...null | string] @go(DataSources,[]*string)

	// The workspace description.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The Grafana workspace name.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The notification destinations. If a data source is specified here, Amazon Managed Grafana will create IAM roles and permissions needed to use these destinations. Must be set to SNS.
	// +kubebuilder:validation:Optional
	notificationDestinations?: [...null | string] @go(NotificationDestinations,[]*string)

	// The role name that the workspace uses to access resources through Amazon Organizations.
	// +kubebuilder:validation:Optional
	organizationRoleName?: null | string @go(OrganizationRoleName,*string)

	// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
	// +kubebuilder:validation:Optional
	organizationalUnits?: [...null | string] @go(OrganizationalUnits,[]*string)

	// The permission type of the workspace. If SERVICE_MANAGED is specified, the IAM roles and IAM policy attachments are generated automatically. If CUSTOMER_MANAGED is specified, the IAM roles and IAM policy attachments will not be created.
	// +kubebuilder:validation:Optional
	permissionType?: null | string @go(PermissionType,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The IAM role ARN that the workspace assumes.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
	// +kubebuilder:validation:Optional
	stackSetName?: null | string @go(StackSetName,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to. See VPC Configuration below.
	// +kubebuilder:validation:Optional
	vpcConfiguration?: [...#VPCConfigurationParameters] @go(VPCConfiguration,[]VPCConfigurationParameters)
}

// WorkspaceSpec defines the desired state of Workspace
#WorkspaceSpec: {
	forProvider: #WorkspaceParameters @go(ForProvider)
}

// WorkspaceStatus defines the observed state of Workspace.
#WorkspaceStatus: {
	atProvider?: #WorkspaceObservation @go(AtProvider)
}

// Workspace is the Schema for the Workspaces API. Provides an Amazon Managed Grafana workspace resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Workspace: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.accountAccessType)",message="accountAccessType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.authenticationProviders)",message="authenticationProviders is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.permissionType)",message="permissionType is a required parameter"
	spec:    #WorkspaceSpec   @go(Spec)
	status?: #WorkspaceStatus @go(Status)
}

// WorkspaceList contains a list of Workspaces
#WorkspaceList: {
	items: [...#Workspace] @go(Items,[]Workspace)
}
