// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/grafana/v1beta1

package v1beta1

#WorkspaceAPIKeyObservation: {
	id?: null | string @go(ID,*string)

	// The key token in JSON format. Use this value as a bearer token to authenticate HTTP requests to the workspace.
	key?: null | string @go(Key,*string)
}

#WorkspaceAPIKeyParameters: {
	// Specifies the name of the API key. Key names must be unique to the workspace.
	// +kubebuilder:validation:Required
	keyName?: null | string @go(KeyName,*string)

	// Specifies the permission level of the API key. Valid values are VIEWER, EDITOR, or ADMIN.
	// +kubebuilder:validation:Required
	keyRole?: null | string @go(KeyRole,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Specifies the time in seconds until the API key expires. Keys can be valid for up to 30 days.
	// +kubebuilder:validation:Required
	secondsToLive?: null | float64 @go(SecondsToLive,*float64)

	// The ID of the workspace that the API key is valid for.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/grafana/v1beta1.Workspace
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	workspaceId?: null | string @go(WorkspaceID,*string)
}

// WorkspaceAPIKeySpec defines the desired state of WorkspaceAPIKey
#WorkspaceAPIKeySpec: {
	forProvider: #WorkspaceAPIKeyParameters @go(ForProvider)
}

// WorkspaceAPIKeyStatus defines the observed state of WorkspaceAPIKey.
#WorkspaceAPIKeyStatus: {
	atProvider?: #WorkspaceAPIKeyObservation @go(AtProvider)
}

// WorkspaceAPIKey is the Schema for the WorkspaceAPIKeys API. Creates a Grafana API key for the workspace. This key can be used to authenticate requests sent to the workspace's HTTP API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#WorkspaceAPIKey: {
	spec:    #WorkspaceAPIKeySpec   @go(Spec)
	status?: #WorkspaceAPIKeyStatus @go(Status)
}

// WorkspaceAPIKeyList contains a list of WorkspaceAPIKeys
#WorkspaceAPIKeyList: {
	items: [...#WorkspaceAPIKey] @go(Items,[]WorkspaceAPIKey)
}
