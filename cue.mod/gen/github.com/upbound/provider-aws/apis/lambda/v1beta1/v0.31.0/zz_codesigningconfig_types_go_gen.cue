// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lambda/v1beta1

package v1beta1

#AllowedPublishersObservation: {
}

#AllowedPublishersParameters: {
	// The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/signer/v1beta1.SigningProfile
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	signingProfileVersionArns?: [...null | string] @go(SigningProfileVersionArns,[]*string)
}

#CodeSigningConfigObservation: {
	// The Amazon Resource Name (ARN) of the code signing configuration.
	arn?: null | string @go(Arn,*string)

	// Unique identifier for the code signing configuration.
	configId?: null | string @go(ConfigID,*string)
	id?:       null | string @go(ID,*string)

	// The date and time that the code signing configuration was last modified.
	lastModified?: null | string @go(LastModified,*string)
}

#CodeSigningConfigParameters: {
	// A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
	// +kubebuilder:validation:Required
	allowedPublishers: [...#AllowedPublishersParameters] @go(AllowedPublishers,[]AllowedPublishersParameters)

	// Descriptive name for this code signing configuration.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
	// +kubebuilder:validation:Optional
	policies?: [...#PoliciesParameters] @go(Policies,[]PoliciesParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#PoliciesObservation: {
}

#PoliciesParameters: {
	// Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: Warn, Enforce. Default value: Warn.
	// +kubebuilder:validation:Required
	untrustedArtifactOnDeployment?: null | string @go(UntrustedArtifactOnDeployment,*string)
}

// CodeSigningConfigSpec defines the desired state of CodeSigningConfig
#CodeSigningConfigSpec: {
	forProvider: #CodeSigningConfigParameters @go(ForProvider)
}

// CodeSigningConfigStatus defines the observed state of CodeSigningConfig.
#CodeSigningConfigStatus: {
	atProvider?: #CodeSigningConfigObservation @go(AtProvider)
}

// CodeSigningConfig is the Schema for the CodeSigningConfigs API. Provides a Lambda Code Signing Config resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CodeSigningConfig: {
	spec:    #CodeSigningConfigSpec   @go(Spec)
	status?: #CodeSigningConfigStatus @go(Status)
}

// CodeSigningConfigList contains a list of CodeSigningConfigs
#CodeSigningConfigList: {
	items: [...#CodeSigningConfig] @go(Items,[]CodeSigningConfig)
}
