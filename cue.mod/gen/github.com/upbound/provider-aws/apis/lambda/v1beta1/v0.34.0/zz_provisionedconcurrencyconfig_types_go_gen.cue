// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lambda/v1beta1

package v1beta1

#ProvisionedConcurrencyConfigObservation: {
	// Name or Amazon Resource Name (ARN) of the Lambda Function.
	functionName?: null | string @go(FunctionName,*string)

	// Lambda Function name and qualifier separated by a colon (:).
	id?: null | string @go(ID,*string)

	// Amount of capacity to allocate. Must be greater than or equal to 1.
	provisionedConcurrentExecutions?: null | float64 @go(ProvisionedConcurrentExecutions,*float64)

	// Lambda Function version or Lambda Alias name.
	qualifier?: null | string @go(Qualifier,*string)
}

#ProvisionedConcurrencyConfigParameters: {
	// Name or Amazon Resource Name (ARN) of the Lambda Function.
	// +kubebuilder:validation:Optional
	functionName?: null | string @go(FunctionName,*string)

	// Amount of capacity to allocate. Must be greater than or equal to 1.
	// +kubebuilder:validation:Optional
	provisionedConcurrentExecutions?: null | float64 @go(ProvisionedConcurrentExecutions,*float64)

	// Lambda Function version or Lambda Alias name.
	// +kubebuilder:validation:Optional
	qualifier?: null | string @go(Qualifier,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ProvisionedConcurrencyConfigSpec defines the desired state of ProvisionedConcurrencyConfig
#ProvisionedConcurrencyConfigSpec: {
	forProvider: #ProvisionedConcurrencyConfigParameters @go(ForProvider)
}

// ProvisionedConcurrencyConfigStatus defines the observed state of ProvisionedConcurrencyConfig.
#ProvisionedConcurrencyConfigStatus: {
	atProvider?: #ProvisionedConcurrencyConfigObservation @go(AtProvider)
}

// ProvisionedConcurrencyConfig is the Schema for the ProvisionedConcurrencyConfigs API. Manages a Lambda Provisioned Concurrency Configuration
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ProvisionedConcurrencyConfig: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.functionName)",message="functionName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.provisionedConcurrentExecutions)",message="provisionedConcurrentExecutions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.qualifier)",message="qualifier is a required parameter"
	spec:    #ProvisionedConcurrencyConfigSpec   @go(Spec)
	status?: #ProvisionedConcurrencyConfigStatus @go(Status)
}

// ProvisionedConcurrencyConfigList contains a list of ProvisionedConcurrencyConfigs
#ProvisionedConcurrencyConfigList: {
	items: [...#ProvisionedConcurrencyConfig] @go(Items,[]ProvisionedConcurrencyConfig)
}
