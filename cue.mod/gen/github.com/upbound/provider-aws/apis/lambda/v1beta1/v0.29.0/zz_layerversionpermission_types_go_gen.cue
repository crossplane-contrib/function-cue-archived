// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/lambda/v1beta1

package v1beta1

#LayerVersionPermissionObservation: {
	// The layer_name and version_number, separated by a comma (,).
	id?: null | string @go(ID,*string)

	// Full Lambda Layer Permission policy.
	policy?: null | string @go(Policy,*string)

	// A unique identifier for the current revision of the policy.
	revisionId?: null | string @go(RevisionID,*string)
}

#LayerVersionPermissionParameters: {
	// Action, which will be allowed. lambda:GetLayerVersion value is suggested by AWS documantation.
	// +kubebuilder:validation:Required
	action?: null | string @go(Action,*string)

	// The name or ARN of the Lambda Layer, which you want to grant access to.
	// +kubebuilder:validation:Required
	layerName?: null | string @go(LayerName,*string)

	// An identifier of AWS Organization, which should be able to use your Lambda Layer. principal should be equal to * if organization_id provided.
	// +kubebuilder:validation:Optional
	organizationId?: null | string @go(OrganizationID,*string)

	// AWS account ID which should be able to use your Lambda Layer. * can be used here, if you want to share your Lambda Layer widely.
	// +kubebuilder:validation:Required
	principal?: null | string @go(Principal,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The name of Lambda Layer Permission, for example dev-account - human readable note about what is this permission for.
	// +kubebuilder:validation:Required
	statementId?: null | string @go(StatementID,*string)

	// Version of Lambda Layer, which you want to grant access to. Note: permissions only apply to a single version of a layer.
	// +kubebuilder:validation:Required
	versionNumber?: null | float64 @go(VersionNumber,*float64)
}

// LayerVersionPermissionSpec defines the desired state of LayerVersionPermission
#LayerVersionPermissionSpec: {
	forProvider: #LayerVersionPermissionParameters @go(ForProvider)
}

// LayerVersionPermissionStatus defines the observed state of LayerVersionPermission.
#LayerVersionPermissionStatus: {
	atProvider?: #LayerVersionPermissionObservation @go(AtProvider)
}

// LayerVersionPermission is the Schema for the LayerVersionPermissions API. Provides a Lambda Layer Version Permission resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#LayerVersionPermission: {
	spec:    #LayerVersionPermissionSpec   @go(Spec)
	status?: #LayerVersionPermissionStatus @go(Status)
}

// LayerVersionPermissionList contains a list of LayerVersionPermissions
#LayerVersionPermissionList: {
	items: [...#LayerVersionPermission] @go(Items,[]LayerVersionPermission)
}
