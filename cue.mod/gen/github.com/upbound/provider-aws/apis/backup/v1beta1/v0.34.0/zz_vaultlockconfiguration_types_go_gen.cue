// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/backup/v1beta1

package v1beta1

#VaultLockConfigurationObservation: {
	// The ARN of the vault.
	backupVaultArn?: null | string @go(BackupVaultArn,*string)

	// Name of the backup vault to add a lock configuration for.
	backupVaultName?: null | string @go(BackupVaultName,*string)

	// The number of days before the lock date. If omitted creates a vault lock in governance mode, otherwise it will create a vault lock in compliance mode.
	changeableForDays?: null | float64 @go(ChangeableForDays,*float64)
	id?:                null | string  @go(ID,*string)

	// The maximum retention period that the vault retains its recovery points.
	maxRetentionDays?: null | float64 @go(MaxRetentionDays,*float64)

	// The minimum retention period that the vault retains its recovery points.
	minRetentionDays?: null | float64 @go(MinRetentionDays,*float64)
}

#VaultLockConfigurationParameters: {
	// Name of the backup vault to add a lock configuration for.
	// +crossplane:generate:reference:type=Vault
	// +kubebuilder:validation:Optional
	backupVaultName?: null | string @go(BackupVaultName,*string)

	// The number of days before the lock date. If omitted creates a vault lock in governance mode, otherwise it will create a vault lock in compliance mode.
	// +kubebuilder:validation:Optional
	changeableForDays?: null | float64 @go(ChangeableForDays,*float64)

	// The maximum retention period that the vault retains its recovery points.
	// +kubebuilder:validation:Optional
	maxRetentionDays?: null | float64 @go(MaxRetentionDays,*float64)

	// The minimum retention period that the vault retains its recovery points.
	// +kubebuilder:validation:Optional
	minRetentionDays?: null | float64 @go(MinRetentionDays,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// VaultLockConfigurationSpec defines the desired state of VaultLockConfiguration
#VaultLockConfigurationSpec: {
	forProvider: #VaultLockConfigurationParameters @go(ForProvider)
}

// VaultLockConfigurationStatus defines the observed state of VaultLockConfiguration.
#VaultLockConfigurationStatus: {
	atProvider?: #VaultLockConfigurationObservation @go(AtProvider)
}

// VaultLockConfiguration is the Schema for the VaultLockConfigurations API. Provides an AWS Backup vault lock configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VaultLockConfiguration: {
	spec:    #VaultLockConfigurationSpec   @go(Spec)
	status?: #VaultLockConfigurationStatus @go(Status)
}

// VaultLockConfigurationList contains a list of VaultLockConfigurations
#VaultLockConfigurationList: {
	items: [...#VaultLockConfiguration] @go(Items,[]VaultLockConfiguration)
}
