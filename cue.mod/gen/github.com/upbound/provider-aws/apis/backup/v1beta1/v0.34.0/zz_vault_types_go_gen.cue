// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/backup/v1beta1

package v1beta1

#VaultObservation: {
	// The ARN of the vault.
	arn?: null | string @go(Arn,*string)

	// A boolean that indicates that all recovery points stored in the vault are deleted so that the vault can be destroyed without error.
	forceDestroy?: null | bool @go(ForceDestroy,*bool)

	// The name of the vault.
	id?: null | string @go(ID,*string)

	// The server-side encryption key that is used to protect your backups.
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// The number of recovery points that are stored in a backup vault.
	recoveryPoints?: null | float64 @go(RecoveryPoints,*float64)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#VaultParameters: {
	// A boolean that indicates that all recovery points stored in the vault are deleted so that the vault can be destroyed without error.
	// +kubebuilder:validation:Optional
	forceDestroy?: null | bool @go(ForceDestroy,*bool)

	// The server-side encryption key that is used to protect your backups.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// VaultSpec defines the desired state of Vault
#VaultSpec: {
	forProvider: #VaultParameters @go(ForProvider)
}

// VaultStatus defines the observed state of Vault.
#VaultStatus: {
	atProvider?: #VaultObservation @go(AtProvider)
}

// Vault is the Schema for the Vaults API. Provides an AWS Backup vault resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Vault: {
	spec:    #VaultSpec   @go(Spec)
	status?: #VaultStatus @go(Status)
}

// VaultList contains a list of Vaults
#VaultList: {
	items: [...#Vault] @go(Items,[]Vault)
}
