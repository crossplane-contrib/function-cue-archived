// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/dms/v1beta1

package v1beta1

#ReplicationInstanceObservation: {
	id?: null | string @go(ID,*string)

	// The Amazon Resource Name (ARN) of the replication instance.
	replicationInstanceArn?: null | string @go(ReplicationInstanceArn,*string)

	// A list of the private IP addresses of the replication instance.
	replicationInstancePrivateIps?: [...null | string] @go(ReplicationInstancePrivateIps,[]*string)

	// A list of the public IP addresses of the replication instance.
	replicationInstancePublicIps?: [...null | string] @go(ReplicationInstancePublicIps,[]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ReplicationInstanceParameters: {
	// The amount of storage (in gigabytes) to be initially allocated for the replication instance.
	// +kubebuilder:validation:Optional
	allocatedStorage?: null | float64 @go(AllocatedStorage,*float64)

	// Indicates that major version upgrades are allowed.
	// +kubebuilder:validation:Optional
	allowMajorVersionUpgrade?: null | bool @go(AllowMajorVersionUpgrade,*bool)

	// Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
	// +kubebuilder:validation:Optional
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
	// +kubebuilder:validation:Optional
	autoMinorVersionUpgrade?: null | bool @go(AutoMinorVersionUpgrade,*bool)

	// The EC2 Availability Zone that the replication instance will be created in.
	// +kubebuilder:validation:Optional
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The engine version number of the replication instance.
	// +kubebuilder:validation:Optional
	engineVersion?: null | string @go(EngineVersion,*string)

	// The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for kms_key_arn, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// Specifies if the replication instance is a multi-az deployment. You cannot set the availability_zone parameter if the multi_az parameter is set to true.
	// +kubebuilder:validation:Optional
	multiAz?: null | bool @go(MultiAz,*bool)

	// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
	// +kubebuilder:validation:Optional
	preferredMaintenanceWindow?: null | string @go(PreferredMaintenanceWindow,*string)

	// Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
	// +kubebuilder:validation:Optional
	publiclyAccessible?: null | bool @go(PubliclyAccessible,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The compute and memory capacity of the replication instance as specified by the replication instance class. See AWS DMS User Guide for available instance sizes and advice on which one to choose.
	// +kubebuilder:validation:Required
	replicationInstanceClass?: null | string @go(ReplicationInstanceClass,*string)

	// A subnet group to associate with the replication instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dms/v1beta1.ReplicationSubnetGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	replicationSubnetGroupId?: null | string @go(ReplicationSubnetGroupID,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=VPCSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=VPCSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)
}

// ReplicationInstanceSpec defines the desired state of ReplicationInstance
#ReplicationInstanceSpec: {
	forProvider: #ReplicationInstanceParameters @go(ForProvider)
}

// ReplicationInstanceStatus defines the observed state of ReplicationInstance.
#ReplicationInstanceStatus: {
	atProvider?: #ReplicationInstanceObservation @go(AtProvider)
}

// ReplicationInstance is the Schema for the ReplicationInstances API. Provides a DMS (Data Migration Service) replication instance resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ReplicationInstance: {
	spec:    #ReplicationInstanceSpec   @go(Spec)
	status?: #ReplicationInstanceStatus @go(Status)
}

// ReplicationInstanceList contains a list of ReplicationInstances
#ReplicationInstanceList: {
	items: [...#ReplicationInstance] @go(Items,[]ReplicationInstance)
}
