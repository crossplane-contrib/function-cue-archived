// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/elasticbeanstalk/v1beta1

package v1beta1

#ApplicationVersionObservation: {
	// Name of the Beanstalk Application the version is associated with.
	application?: null | string @go(Application,*string)

	// ARN assigned by AWS for this Elastic Beanstalk Application.
	arn?: null | string @go(Arn,*string)

	// S3 bucket that contains the Application Version source bundle.
	bucket?: null | string @go(Bucket,*string)

	// Short description of the Application Version.
	description?: null | string @go(Description,*string)

	// On delete, force an Application Version to be deleted when it may be in use by multiple Elastic Beanstalk Environments.
	forceDelete?: null | bool   @go(ForceDelete,*bool)
	id?:          null | string @go(ID,*string)

	// S3 object that is the Application Version source bundle.
	key?: null | string @go(Key,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ApplicationVersionParameters: {
	// Name of the Beanstalk Application the version is associated with.
	// +kubebuilder:validation:Optional
	application?: null | string @go(Application,*string)

	// S3 bucket that contains the Application Version source bundle.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Short description of the Application Version.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// On delete, force an Application Version to be deleted when it may be in use by multiple Elastic Beanstalk Environments.
	// +kubebuilder:validation:Optional
	forceDelete?: null | bool @go(ForceDelete,*bool)

	// S3 object that is the Application Version source bundle.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Object
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ApplicationVersionSpec defines the desired state of ApplicationVersion
#ApplicationVersionSpec: {
	forProvider: #ApplicationVersionParameters @go(ForProvider)
}

// ApplicationVersionStatus defines the observed state of ApplicationVersion.
#ApplicationVersionStatus: {
	atProvider?: #ApplicationVersionObservation @go(AtProvider)
}

// ApplicationVersion is the Schema for the ApplicationVersions API. Provides an Elastic Beanstalk Application Version Resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ApplicationVersion: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.application)",message="application is a required parameter"
	spec:    #ApplicationVersionSpec   @go(Spec)
	status?: #ApplicationVersionStatus @go(Status)
}

// ApplicationVersionList contains a list of ApplicationVersions
#ApplicationVersionList: {
	items: [...#ApplicationVersion] @go(Items,[]ApplicationVersion)
}
