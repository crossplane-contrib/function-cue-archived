// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#TransitGatewayConnectObservation: {
	// EC2 Transit Gateway Attachment identifier
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#TransitGatewayConnectParameters: {
	// The tunnel protocol. Valida values: gre. Default is gre.
	// +kubebuilder:validation:Optional
	protocol?: null | string @go(Protocol,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
	// +kubebuilder:validation:Optional
	transitGatewayDefaultRouteTableAssociation?: null | bool @go(TransitGatewayDefaultRouteTableAssociation,*bool)

	// Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: true.
	// +kubebuilder:validation:Optional
	transitGatewayDefaultRouteTablePropagation?: null | bool @go(TransitGatewayDefaultRouteTablePropagation,*bool)

	// Identifier of EC2 Transit Gateway.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.TransitGateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// The underlaying VPC attachment
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.TransitGatewayVPCAttachment
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	transportAttachmentId?: null | string @go(TransportAttachmentID,*string)
}

// TransitGatewayConnectSpec defines the desired state of TransitGatewayConnect
#TransitGatewayConnectSpec: {
	forProvider: #TransitGatewayConnectParameters @go(ForProvider)
}

// TransitGatewayConnectStatus defines the observed state of TransitGatewayConnect.
#TransitGatewayConnectStatus: {
	atProvider?: #TransitGatewayConnectObservation @go(AtProvider)
}

// TransitGatewayConnect is the Schema for the TransitGatewayConnects API. Manages an EC2 Transit Gateway Connect
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayConnect: {
	spec:    #TransitGatewayConnectSpec   @go(Spec)
	status?: #TransitGatewayConnectStatus @go(Status)
}

// TransitGatewayConnectList contains a list of TransitGatewayConnects
#TransitGatewayConnectList: {
	items: [...#TransitGatewayConnect] @go(Items,[]TransitGatewayConnect)
}
