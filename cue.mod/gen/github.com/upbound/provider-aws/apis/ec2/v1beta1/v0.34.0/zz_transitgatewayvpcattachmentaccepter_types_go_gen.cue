// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#TransitGatewayVPCAttachmentAccepterObservation: {
	// Whether Appliance Mode support is enabled. Valid values: disable, enable.
	applianceModeSupport?: null | string @go(ApplianceModeSupport,*string)

	// Whether DNS support is enabled. Valid values: disable, enable.
	dnsSupport?: null | string @go(DNSSupport,*string)

	// EC2 Transit Gateway Attachment identifier
	id?: null | string @go(ID,*string)

	// Whether IPv6 support is enabled. Valid values: disable, enable.
	ipv6Support?: null | string @go(IPv6Support,*string)

	// Identifiers of EC2 Subnets.
	subnetIds?: [...null | string] @go(SubnetIds,[]*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The ID of the EC2 Transit Gateway Attachment to manage.
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)

	// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: true.
	transitGatewayDefaultRouteTableAssociation?: null | bool @go(TransitGatewayDefaultRouteTableAssociation,*bool)

	// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: true.
	transitGatewayDefaultRouteTablePropagation?: null | bool @go(TransitGatewayDefaultRouteTablePropagation,*bool)

	// Identifier of EC2 Transit Gateway.
	transitGatewayId?: null | string @go(TransitGatewayID,*string)

	// Identifier of EC2 VPC.
	vpcId?: null | string @go(VPCID,*string)

	// Identifier of the AWS account that owns the EC2 VPC.
	vpcOwnerId?: null | string @go(VPCOwnerID,*string)
}

#TransitGatewayVPCAttachmentAccepterParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The ID of the EC2 Transit Gateway Attachment to manage.
	// +crossplane:generate:reference:type=TransitGatewayVPCAttachment
	// +kubebuilder:validation:Optional
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)

	// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: true.
	// +kubebuilder:validation:Optional
	transitGatewayDefaultRouteTableAssociation?: null | bool @go(TransitGatewayDefaultRouteTableAssociation,*bool)

	// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: true.
	// +kubebuilder:validation:Optional
	transitGatewayDefaultRouteTablePropagation?: null | bool @go(TransitGatewayDefaultRouteTablePropagation,*bool)
}

// TransitGatewayVPCAttachmentAccepterSpec defines the desired state of TransitGatewayVPCAttachmentAccepter
#TransitGatewayVPCAttachmentAccepterSpec: {
	forProvider: #TransitGatewayVPCAttachmentAccepterParameters @go(ForProvider)
}

// TransitGatewayVPCAttachmentAccepterStatus defines the observed state of TransitGatewayVPCAttachmentAccepter.
#TransitGatewayVPCAttachmentAccepterStatus: {
	atProvider?: #TransitGatewayVPCAttachmentAccepterObservation @go(AtProvider)
}

// TransitGatewayVPCAttachmentAccepter is the Schema for the TransitGatewayVPCAttachmentAccepters API. Manages the accepter's side of an EC2 Transit Gateway VPC Attachment
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayVPCAttachmentAccepter: {
	spec:    #TransitGatewayVPCAttachmentAccepterSpec   @go(Spec)
	status?: #TransitGatewayVPCAttachmentAccepterStatus @go(Status)
}

// TransitGatewayVPCAttachmentAccepterList contains a list of TransitGatewayVPCAttachmentAccepters
#TransitGatewayVPCAttachmentAccepterList: {
	items: [...#TransitGatewayVPCAttachmentAccepter] @go(Items,[]TransitGatewayVPCAttachmentAccepter)
}
