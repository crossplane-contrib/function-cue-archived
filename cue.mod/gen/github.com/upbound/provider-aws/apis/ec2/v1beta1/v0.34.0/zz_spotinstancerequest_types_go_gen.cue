// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation: {
	// The Spot Instance Request ID.
	capacityReservationId?:               null | string @go(CapacityReservationID,*string)
	capacityReservationResourceGroupArn?: null | string @go(CapacityReservationResourceGroupArn,*string)
}

#SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters: {
	// The Spot Instance Request ID.
	// +kubebuilder:validation:Optional
	capacityReservationId?: null | string @go(CapacityReservationID,*string)

	// +kubebuilder:validation:Optional
	capacityReservationResourceGroupArn?: null | string @go(CapacityReservationResourceGroupArn,*string)
}

#SpotInstanceRequestCapacityReservationSpecificationObservation: {
	capacityReservationPreference?: null | string @go(CapacityReservationPreference,*string)
	capacityReservationTarget?: [...#SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation] @go(CapacityReservationTarget,[]SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetObservation)
}

#SpotInstanceRequestCapacityReservationSpecificationParameters: {
	// +kubebuilder:validation:Optional
	capacityReservationPreference?: null | string @go(CapacityReservationPreference,*string)

	// +kubebuilder:validation:Optional
	capacityReservationTarget?: [...#SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters] @go(CapacityReservationTarget,[]SpotInstanceRequestCapacityReservationSpecificationCapacityReservationTargetParameters)
}

#SpotInstanceRequestCreditSpecificationObservation: {
	cpuCredits?: null | string @go(CPUCredits,*string)
}

#SpotInstanceRequestCreditSpecificationParameters: {
	// +kubebuilder:validation:Optional
	cpuCredits?: null | string @go(CPUCredits,*string)
}

#SpotInstanceRequestEBSBlockDeviceObservation: {
	deleteOnTermination?: null | bool    @go(DeleteOnTermination,*bool)
	deviceName?:          null | string  @go(DeviceName,*string)
	encrypted?:           null | bool    @go(Encrypted,*bool)
	iops?:                null | float64 @go(Iops,*float64)

	// The Spot Instance Request ID.
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// The Spot Instance Request ID.
	snapshotId?: null | string @go(SnapshotID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
	throughput?: null | float64 @go(Throughput,*float64)

	// The Spot Instance Request ID.
	volumeId?:   null | string  @go(VolumeID,*string)
	volumeSize?: null | float64 @go(VolumeSize,*float64)
	volumeType?: null | string  @go(VolumeType,*string)
}

#SpotInstanceRequestEBSBlockDeviceParameters: {
	// +kubebuilder:validation:Optional
	deleteOnTermination?: null | bool @go(DeleteOnTermination,*bool)

	// +kubebuilder:validation:Required
	deviceName?: null | string @go(DeviceName,*string)

	// +kubebuilder:validation:Optional
	encrypted?: null | bool @go(Encrypted,*bool)

	// +kubebuilder:validation:Optional
	iops?: null | float64 @go(Iops,*float64)

	// The Spot Instance Request ID.
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// The Spot Instance Request ID.
	// +kubebuilder:validation:Optional
	snapshotId?: null | string @go(SnapshotID,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// +kubebuilder:validation:Optional
	throughput?: null | float64 @go(Throughput,*float64)

	// +kubebuilder:validation:Optional
	volumeSize?: null | float64 @go(VolumeSize,*float64)

	// +kubebuilder:validation:Optional
	volumeType?: null | string @go(VolumeType,*string)
}

#SpotInstanceRequestEnclaveOptionsObservation: {
	enabled?: null | bool @go(Enabled,*bool)
}

#SpotInstanceRequestEnclaveOptionsParameters: {
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)
}

#SpotInstanceRequestEphemeralBlockDeviceObservation: {
	deviceName?:  null | string @go(DeviceName,*string)
	noDevice?:    null | bool   @go(NoDevice,*bool)
	virtualName?: null | string @go(VirtualName,*string)
}

#SpotInstanceRequestEphemeralBlockDeviceParameters: {
	// +kubebuilder:validation:Required
	deviceName?: null | string @go(DeviceName,*string)

	// +kubebuilder:validation:Optional
	noDevice?: null | bool @go(NoDevice,*bool)

	// +kubebuilder:validation:Optional
	virtualName?: null | string @go(VirtualName,*string)
}

#SpotInstanceRequestLaunchTemplateObservation: {
	// The Spot Instance Request ID.
	id?:      null | string @go(ID,*string)
	name?:    null | string @go(Name,*string)
	version?: null | string @go(Version,*string)
}

#SpotInstanceRequestLaunchTemplateParameters: {
	// The Spot Instance Request ID.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#SpotInstanceRequestMaintenanceOptionsObservation: {
	autoRecovery?: null | string @go(AutoRecovery,*string)
}

#SpotInstanceRequestMaintenanceOptionsParameters: {
	// +kubebuilder:validation:Optional
	autoRecovery?: null | string @go(AutoRecovery,*string)
}

#SpotInstanceRequestMetadataOptionsObservation: {
	httpEndpoint?:            null | string  @go(HTTPEndpoint,*string)
	httpPutResponseHopLimit?: null | float64 @go(HTTPPutResponseHopLimit,*float64)
	httpTokens?:              null | string  @go(HTTPTokens,*string)

	// Key-value map of resource tags.
	instanceMetadataTags?: null | string @go(InstanceMetadataTags,*string)
}

#SpotInstanceRequestMetadataOptionsParameters: {
	// +kubebuilder:validation:Optional
	httpEndpoint?: null | string @go(HTTPEndpoint,*string)

	// +kubebuilder:validation:Optional
	httpPutResponseHopLimit?: null | float64 @go(HTTPPutResponseHopLimit,*float64)

	// +kubebuilder:validation:Optional
	httpTokens?: null | string @go(HTTPTokens,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	instanceMetadataTags?: null | string @go(InstanceMetadataTags,*string)
}

#SpotInstanceRequestNetworkInterfaceObservation: {
	deleteOnTermination?: null | bool    @go(DeleteOnTermination,*bool)
	deviceIndex?:         null | float64 @go(DeviceIndex,*float64)
	networkCardIndex?:    null | float64 @go(NetworkCardIndex,*float64)

	// The Spot Instance Request ID.
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)
}

#SpotInstanceRequestNetworkInterfaceParameters: {
	// +kubebuilder:validation:Optional
	deleteOnTermination?: null | bool @go(DeleteOnTermination,*bool)

	// +kubebuilder:validation:Required
	deviceIndex?: null | float64 @go(DeviceIndex,*float64)

	// +kubebuilder:validation:Optional
	networkCardIndex?: null | float64 @go(NetworkCardIndex,*float64)

	// The Spot Instance Request ID.
	// +kubebuilder:validation:Required
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)
}

#SpotInstanceRequestObservation: {
	ami?:                      null | string @go(AMI,*string)
	arn?:                      null | string @go(Arn,*string)
	associatePublicIpAddress?: null | bool   @go(AssociatePublicIPAddress,*bool)
	availabilityZone?:         null | string @go(AvailabilityZone,*string)

	// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
	// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
	// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
	blockDurationMinutes?: null | float64 @go(BlockDurationMinutes,*float64)
	cpuCoreCount?:         null | float64 @go(CPUCoreCount,*float64)
	cpuThreadsPerCore?:    null | float64 @go(CPUThreadsPerCore,*float64)
	capacityReservationSpecification?: [...#SpotInstanceRequestCapacityReservationSpecificationObservation] @go(CapacityReservationSpecification,[]SpotInstanceRequestCapacityReservationSpecificationObservation)
	creditSpecification?: [...#SpotInstanceRequestCreditSpecificationObservation] @go(CreditSpecification,[]SpotInstanceRequestCreditSpecificationObservation)
	disableApiStop?:        null | bool @go(DisableAPIStop,*bool)
	disableApiTermination?: null | bool @go(DisableAPITermination,*bool)
	ebsBlockDevice?: [...#SpotInstanceRequestEBSBlockDeviceObservation] @go(EBSBlockDevice,[]SpotInstanceRequestEBSBlockDeviceObservation)
	ebsOptimized?: null | bool @go(EBSOptimized,*bool)
	enclaveOptions?: [...#SpotInstanceRequestEnclaveOptionsObservation] @go(EnclaveOptions,[]SpotInstanceRequestEnclaveOptionsObservation)
	ephemeralBlockDevice?: [...#SpotInstanceRequestEphemeralBlockDeviceObservation] @go(EphemeralBlockDevice,[]SpotInstanceRequestEphemeralBlockDeviceObservation)
	getPasswordData?: null | bool @go(GetPasswordData,*bool)
	hibernation?:     null | bool @go(Hibernation,*bool)

	// The Spot Instance Request ID.
	hostId?:               null | string @go(HostID,*string)
	hostResourceGroupArn?: null | string @go(HostResourceGroupArn,*string)
	iamInstanceProfile?:   null | string @go(IAMInstanceProfile,*string)

	// The Spot Instance Request ID.
	id?:               null | string  @go(ID,*string)
	ipv6AddressCount?: null | float64 @go(IPv6AddressCount,*float64)
	ipv6Addresses?: [...null | string] @go(IPv6Addresses,[]*string)
	instanceInitiatedShutdownBehavior?: null | string @go(InstanceInitiatedShutdownBehavior,*string)

	// Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
	instanceInterruptionBehavior?: null | string @go(InstanceInterruptionBehavior,*string)
	instanceState?:                null | string @go(InstanceState,*string)
	instanceType?:                 null | string @go(InstanceType,*string)
	keyName?:                      null | string @go(KeyName,*string)

	// A launch group is a group of spot instances that launch together and terminate together.
	// If left empty instances are launched and terminated individually.
	launchGroup?: null | string @go(LaunchGroup,*string)
	launchTemplate?: [...#SpotInstanceRequestLaunchTemplateObservation] @go(LaunchTemplate,[]SpotInstanceRequestLaunchTemplateObservation)
	maintenanceOptions?: [...#SpotInstanceRequestMaintenanceOptionsObservation] @go(MaintenanceOptions,[]SpotInstanceRequestMaintenanceOptionsObservation)
	metadataOptions?: [...#SpotInstanceRequestMetadataOptionsObservation] @go(MetadataOptions,[]SpotInstanceRequestMetadataOptionsObservation)
	monitoring?: null | bool @go(Monitoring,*bool)
	networkInterface?: [...#SpotInstanceRequestNetworkInterfaceObservation] @go(NetworkInterface,[]SpotInstanceRequestNetworkInterfaceObservation)
	outpostArn?:               null | string  @go(OutpostArn,*string)
	passwordData?:             null | string  @go(PasswordData,*string)
	placementGroup?:           null | string  @go(PlacementGroup,*string)
	placementPartitionNumber?: null | float64 @go(PlacementPartitionNumber,*float64)

	// The Spot Instance Request ID.
	primaryNetworkInterfaceId?: null | string @go(PrimaryNetworkInterfaceID,*string)

	// The private DNS name assigned to the instance. Can only be
	// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
	// for your VPC
	privateDns?: null | string @go(PrivateDNS,*string)
	privateDnsNameOptions?: [...#SpotInstanceRequestPrivateDNSNameOptionsObservation] @go(PrivateDNSNameOptions,[]SpotInstanceRequestPrivateDNSNameOptionsObservation)

	// The private IP address assigned to the instance
	privateIp?: null | string @go(PrivateIP,*string)

	// The public DNS name assigned to the instance. For EC2-VPC, this
	// is only available if you've enabled DNS hostnames for your VPC
	publicDns?: null | string @go(PublicDNS,*string)

	// The public IP address assigned to the instance, if applicable.
	publicIp?: null | string @go(PublicIP,*string)
	rootBlockDevice?: [...#SpotInstanceRequestRootBlockDeviceObservation] @go(RootBlockDevice,[]SpotInstanceRequestRootBlockDeviceObservation)
	secondaryPrivateIps?: [...null | string] @go(SecondaryPrivateIps,[]*string)
	securityGroups?: [...null | string] @go(SecurityGroups,[]*string)
	sourceDestCheck?: null | bool @go(SourceDestCheck,*bool)

	// The current bid
	// status
	// of the Spot Instance Request.
	spotBidStatus?: null | string @go(SpotBidStatus,*string)

	// The Instance ID (if any) that is currently fulfilling
	// the Spot Instance request.
	spotInstanceId?: null | string @go(SpotInstanceID,*string)

	// The maximum price to request on the spot market.
	spotPrice?: null | string @go(SpotPrice,*string)

	// The current request
	// state
	// of the Spot Instance Request.
	spotRequestState?: null | string @go(SpotRequestState,*string)

	// If set to one-time, after
	// the instance is terminated, the spot request will be closed.
	spotType?: null | string @go(SpotType,*string)

	// The Spot Instance Request ID.
	subnetId?: null | string @go(SubnetID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
	tenancy?:                 null | string @go(Tenancy,*string)
	userData?:                null | string @go(UserData,*string)
	userDataBase64?:          null | string @go(UserDataBase64,*string)
	userDataReplaceOnChange?: null | bool   @go(UserDataReplaceOnChange,*bool)
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)

	// The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	validFrom?: null | string @go(ValidFrom,*string)

	// The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
	validUntil?: null | string @go(ValidUntil,*string)

	// Key-value map of resource tags.
	volumeTags?: {[string]: null | string} @go(VolumeTags,map[string]*string)
	waitForFulfillment?: null | bool @go(WaitForFulfillment,*bool)
}

#SpotInstanceRequestParameters: {
	// +kubebuilder:validation:Optional
	ami?: null | string @go(AMI,*string)

	// +kubebuilder:validation:Optional
	associatePublicIpAddress?: null | bool @go(AssociatePublicIPAddress,*bool)

	// +kubebuilder:validation:Optional
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
	// The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
	// Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
	// +kubebuilder:validation:Optional
	blockDurationMinutes?: null | float64 @go(BlockDurationMinutes,*float64)

	// +kubebuilder:validation:Optional
	cpuCoreCount?: null | float64 @go(CPUCoreCount,*float64)

	// +kubebuilder:validation:Optional
	cpuThreadsPerCore?: null | float64 @go(CPUThreadsPerCore,*float64)

	// +kubebuilder:validation:Optional
	capacityReservationSpecification?: [...#SpotInstanceRequestCapacityReservationSpecificationParameters] @go(CapacityReservationSpecification,[]SpotInstanceRequestCapacityReservationSpecificationParameters)

	// +kubebuilder:validation:Optional
	creditSpecification?: [...#SpotInstanceRequestCreditSpecificationParameters] @go(CreditSpecification,[]SpotInstanceRequestCreditSpecificationParameters)

	// +kubebuilder:validation:Optional
	disableApiStop?: null | bool @go(DisableAPIStop,*bool)

	// +kubebuilder:validation:Optional
	disableApiTermination?: null | bool @go(DisableAPITermination,*bool)

	// +kubebuilder:validation:Optional
	ebsBlockDevice?: [...#SpotInstanceRequestEBSBlockDeviceParameters] @go(EBSBlockDevice,[]SpotInstanceRequestEBSBlockDeviceParameters)

	// +kubebuilder:validation:Optional
	ebsOptimized?: null | bool @go(EBSOptimized,*bool)

	// +kubebuilder:validation:Optional
	enclaveOptions?: [...#SpotInstanceRequestEnclaveOptionsParameters] @go(EnclaveOptions,[]SpotInstanceRequestEnclaveOptionsParameters)

	// +kubebuilder:validation:Optional
	ephemeralBlockDevice?: [...#SpotInstanceRequestEphemeralBlockDeviceParameters] @go(EphemeralBlockDevice,[]SpotInstanceRequestEphemeralBlockDeviceParameters)

	// +kubebuilder:validation:Optional
	getPasswordData?: null | bool @go(GetPasswordData,*bool)

	// +kubebuilder:validation:Optional
	hibernation?: null | bool @go(Hibernation,*bool)

	// The Spot Instance Request ID.
	// +kubebuilder:validation:Optional
	hostId?: null | string @go(HostID,*string)

	// +kubebuilder:validation:Optional
	hostResourceGroupArn?: null | string @go(HostResourceGroupArn,*string)

	// +kubebuilder:validation:Optional
	iamInstanceProfile?: null | string @go(IAMInstanceProfile,*string)

	// +kubebuilder:validation:Optional
	ipv6AddressCount?: null | float64 @go(IPv6AddressCount,*float64)

	// +kubebuilder:validation:Optional
	ipv6Addresses?: [...null | string] @go(IPv6Addresses,[]*string)

	// +kubebuilder:validation:Optional
	instanceInitiatedShutdownBehavior?: null | string @go(InstanceInitiatedShutdownBehavior,*string)

	// Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
	// +kubebuilder:validation:Optional
	instanceInterruptionBehavior?: null | string @go(InstanceInterruptionBehavior,*string)

	// +kubebuilder:validation:Optional
	instanceType?: null | string @go(InstanceType,*string)

	// +kubebuilder:validation:Optional
	keyName?: null | string @go(KeyName,*string)

	// A launch group is a group of spot instances that launch together and terminate together.
	// If left empty instances are launched and terminated individually.
	// +kubebuilder:validation:Optional
	launchGroup?: null | string @go(LaunchGroup,*string)

	// +kubebuilder:validation:Optional
	launchTemplate?: [...#SpotInstanceRequestLaunchTemplateParameters] @go(LaunchTemplate,[]SpotInstanceRequestLaunchTemplateParameters)

	// +kubebuilder:validation:Optional
	maintenanceOptions?: [...#SpotInstanceRequestMaintenanceOptionsParameters] @go(MaintenanceOptions,[]SpotInstanceRequestMaintenanceOptionsParameters)

	// +kubebuilder:validation:Optional
	metadataOptions?: [...#SpotInstanceRequestMetadataOptionsParameters] @go(MetadataOptions,[]SpotInstanceRequestMetadataOptionsParameters)

	// +kubebuilder:validation:Optional
	monitoring?: null | bool @go(Monitoring,*bool)

	// +kubebuilder:validation:Optional
	networkInterface?: [...#SpotInstanceRequestNetworkInterfaceParameters] @go(NetworkInterface,[]SpotInstanceRequestNetworkInterfaceParameters)

	// +kubebuilder:validation:Optional
	placementGroup?: null | string @go(PlacementGroup,*string)

	// +kubebuilder:validation:Optional
	placementPartitionNumber?: null | float64 @go(PlacementPartitionNumber,*float64)

	// +kubebuilder:validation:Optional
	privateDnsNameOptions?: [...#SpotInstanceRequestPrivateDNSNameOptionsParameters] @go(PrivateDNSNameOptions,[]SpotInstanceRequestPrivateDNSNameOptionsParameters)

	// The private IP address assigned to the instance
	// +kubebuilder:validation:Optional
	privateIp?: null | string @go(PrivateIP,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// +kubebuilder:validation:Optional
	rootBlockDevice?: [...#SpotInstanceRequestRootBlockDeviceParameters] @go(RootBlockDevice,[]SpotInstanceRequestRootBlockDeviceParameters)

	// +kubebuilder:validation:Optional
	secondaryPrivateIps?: [...null | string] @go(SecondaryPrivateIps,[]*string)

	// +kubebuilder:validation:Optional
	securityGroups?: [...null | string] @go(SecurityGroups,[]*string)

	// +kubebuilder:validation:Optional
	sourceDestCheck?: null | bool @go(SourceDestCheck,*bool)

	// The maximum price to request on the spot market.
	// +kubebuilder:validation:Optional
	spotPrice?: null | string @go(SpotPrice,*string)

	// If set to one-time, after
	// the instance is terminated, the spot request will be closed.
	// +kubebuilder:validation:Optional
	spotType?: null | string @go(SpotType,*string)

	// The Spot Instance Request ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// +kubebuilder:validation:Optional
	tenancy?: null | string @go(Tenancy,*string)

	// +kubebuilder:validation:Optional
	userData?: null | string @go(UserData,*string)

	// +kubebuilder:validation:Optional
	userDataBase64?: null | string @go(UserDataBase64,*string)

	// +kubebuilder:validation:Optional
	userDataReplaceOnChange?: null | bool @go(UserDataReplaceOnChange,*bool)

	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=VPCSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=VPCSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)

	// The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
	// +kubebuilder:validation:Optional
	validFrom?: null | string @go(ValidFrom,*string)

	// The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
	// +kubebuilder:validation:Optional
	validUntil?: null | string @go(ValidUntil,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	volumeTags?: {[string]: null | string} @go(VolumeTags,map[string]*string)

	// +kubebuilder:validation:Optional
	waitForFulfillment?: null | bool @go(WaitForFulfillment,*bool)
}

#SpotInstanceRequestPrivateDNSNameOptionsObservation: {
	enableResourceNameDnsARecord?:    null | bool   @go(EnableResourceNameDNSARecord,*bool)
	enableResourceNameDnsAaaaRecord?: null | bool   @go(EnableResourceNameDNSAaaaRecord,*bool)
	hostnameType?:                    null | string @go(HostnameType,*string)
}

#SpotInstanceRequestPrivateDNSNameOptionsParameters: {
	// +kubebuilder:validation:Optional
	enableResourceNameDnsARecord?: null | bool @go(EnableResourceNameDNSARecord,*bool)

	// +kubebuilder:validation:Optional
	enableResourceNameDnsAaaaRecord?: null | bool @go(EnableResourceNameDNSAaaaRecord,*bool)

	// +kubebuilder:validation:Optional
	hostnameType?: null | string @go(HostnameType,*string)
}

#SpotInstanceRequestRootBlockDeviceObservation: {
	deleteOnTermination?: null | bool    @go(DeleteOnTermination,*bool)
	deviceName?:          null | string  @go(DeviceName,*string)
	encrypted?:           null | bool    @go(Encrypted,*bool)
	iops?:                null | float64 @go(Iops,*float64)

	// The Spot Instance Request ID.
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
	throughput?: null | float64 @go(Throughput,*float64)

	// The Spot Instance Request ID.
	volumeId?:   null | string  @go(VolumeID,*string)
	volumeSize?: null | float64 @go(VolumeSize,*float64)
	volumeType?: null | string  @go(VolumeType,*string)
}

#SpotInstanceRequestRootBlockDeviceParameters: {
	// +kubebuilder:validation:Optional
	deleteOnTermination?: null | bool @go(DeleteOnTermination,*bool)

	// +kubebuilder:validation:Optional
	encrypted?: null | bool @go(Encrypted,*bool)

	// +kubebuilder:validation:Optional
	iops?: null | float64 @go(Iops,*float64)

	// The Spot Instance Request ID.
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// +kubebuilder:validation:Optional
	throughput?: null | float64 @go(Throughput,*float64)

	// +kubebuilder:validation:Optional
	volumeSize?: null | float64 @go(VolumeSize,*float64)

	// +kubebuilder:validation:Optional
	volumeType?: null | string @go(VolumeType,*string)
}

// SpotInstanceRequestSpec defines the desired state of SpotInstanceRequest
#SpotInstanceRequestSpec: {
	forProvider: #SpotInstanceRequestParameters @go(ForProvider)
}

// SpotInstanceRequestStatus defines the observed state of SpotInstanceRequest.
#SpotInstanceRequestStatus: {
	atProvider?: #SpotInstanceRequestObservation @go(AtProvider)
}

// SpotInstanceRequest is the Schema for the SpotInstanceRequests API. Provides a Spot Instance Request resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SpotInstanceRequest: {
	spec:    #SpotInstanceRequestSpec   @go(Spec)
	status?: #SpotInstanceRequestStatus @go(Status)
}

// SpotInstanceRequestList contains a list of SpotInstanceRequests
#SpotInstanceRequestList: {
	items: [...#SpotInstanceRequest] @go(Items,[]SpotInstanceRequest)
}
