// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#RouteTableAssociationObservation: {
	// The ID of the association
	id?: null | string @go(ID,*string)
}

#RouteTableAssociationParameters: {
	// The gateway ID to create an association. Conflicts with subnet_id.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.InternetGateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	gatewayId?: null | string @go(GatewayID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the routing table to associate with.
	// +crossplane:generate:reference:type=RouteTable
	// +kubebuilder:validation:Optional
	routeTableId?: null | string @go(RouteTableID,*string)

	// The subnet ID to create an association. Conflicts with gateway_id.
	// +crossplane:generate:reference:type=Subnet
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

// RouteTableAssociationSpec defines the desired state of RouteTableAssociation
#RouteTableAssociationSpec: {
	forProvider: #RouteTableAssociationParameters @go(ForProvider)
}

// RouteTableAssociationStatus defines the observed state of RouteTableAssociation.
#RouteTableAssociationStatus: {
	atProvider?: #RouteTableAssociationObservation @go(AtProvider)
}

// RouteTableAssociation is the Schema for the RouteTableAssociations API. Provides a resource to create an association between a route table and a subnet or a route table and an internet gateway or virtual private gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RouteTableAssociation: {
	spec:    #RouteTableAssociationSpec   @go(Spec)
	status?: #RouteTableAssociationStatus @go(Status)
}

// RouteTableAssociationList contains a list of RouteTableAssociations
#RouteTableAssociationList: {
	items: [...#RouteTableAssociation] @go(Items,[]RouteTableAssociation)
}
