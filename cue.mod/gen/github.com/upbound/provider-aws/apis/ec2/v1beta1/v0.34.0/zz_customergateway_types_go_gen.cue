// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#CustomerGatewayObservation: {
	// The ARN of the customer gateway.
	arn?: null | string @go(Arn,*string)

	// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
	bgpAsn?: null | string @go(BGPAsn,*string)

	// The Amazon Resource Name (ARN) for the customer gateway certificate.
	certificateArn?: null | string @go(CertificateArn,*string)

	// A name for the customer gateway device.
	deviceName?: null | string @go(DeviceName,*string)

	// The amazon-assigned ID of the gateway.
	id?: null | string @go(ID,*string)

	// The IPv4 address for the customer gateway device's outside interface.
	ipAddress?: null | string @go(IPAddress,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The type of customer gateway. The only type AWS
	// supports at this time is "ipsec.1".
	type?: null | string @go(Type,*string)
}

#CustomerGatewayParameters: {
	// The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
	// +kubebuilder:validation:Optional
	bgpAsn?: null | string @go(BGPAsn,*string)

	// The Amazon Resource Name (ARN) for the customer gateway certificate.
	// +kubebuilder:validation:Optional
	certificateArn?: null | string @go(CertificateArn,*string)

	// A name for the customer gateway device.
	// +kubebuilder:validation:Optional
	deviceName?: null | string @go(DeviceName,*string)

	// The IPv4 address for the customer gateway device's outside interface.
	// +kubebuilder:validation:Optional
	ipAddress?: null | string @go(IPAddress,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The type of customer gateway. The only type AWS
	// supports at this time is "ipsec.1".
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

// CustomerGatewaySpec defines the desired state of CustomerGateway
#CustomerGatewaySpec: {
	forProvider: #CustomerGatewayParameters @go(ForProvider)
}

// CustomerGatewayStatus defines the observed state of CustomerGateway.
#CustomerGatewayStatus: {
	atProvider?: #CustomerGatewayObservation @go(AtProvider)
}

// CustomerGateway is the Schema for the CustomerGateways API. Provides a customer gateway inside a VPC. These objects can be connected to VPN gateways via VPN connections, and allow you to establish tunnels between your network and the VPC.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CustomerGateway: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.bgpAsn)",message="bgpAsn is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.type)",message="type is a required parameter"
	spec:    #CustomerGatewaySpec   @go(Spec)
	status?: #CustomerGatewayStatus @go(Status)
}

// CustomerGatewayList contains a list of CustomerGateways
#CustomerGatewayList: {
	items: [...#CustomerGateway] @go(Items,[]CustomerGateway)
}
