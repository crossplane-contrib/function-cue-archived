// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#TransitGatewayPolicyTableObservation: {
	// EC2 Transit Gateway Policy Table Amazon Resource Name (ARN).
	arn?: null | string @go(Arn,*string)

	// EC2 Transit Gateway Policy Table identifier.
	id?: null | string @go(ID,*string)

	// The state of the EC2 Transit Gateway Policy Table.
	state?: null | string @go(State,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#TransitGatewayPolicyTableParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// EC2 Transit Gateway identifier.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.TransitGateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	transitGatewayId?: null | string @go(TransitGatewayID,*string)
}

// TransitGatewayPolicyTableSpec defines the desired state of TransitGatewayPolicyTable
#TransitGatewayPolicyTableSpec: {
	forProvider: #TransitGatewayPolicyTableParameters @go(ForProvider)
}

// TransitGatewayPolicyTableStatus defines the observed state of TransitGatewayPolicyTable.
#TransitGatewayPolicyTableStatus: {
	atProvider?: #TransitGatewayPolicyTableObservation @go(AtProvider)
}

// TransitGatewayPolicyTable is the Schema for the TransitGatewayPolicyTables API. Manages an EC2 Transit Gateway Policy Table
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayPolicyTable: {
	spec:    #TransitGatewayPolicyTableSpec   @go(Spec)
	status?: #TransitGatewayPolicyTableStatus @go(Status)
}

// TransitGatewayPolicyTableList contains a list of TransitGatewayPolicyTables
#TransitGatewayPolicyTableList: {
	items: [...#TransitGatewayPolicyTable] @go(Items,[]TransitGatewayPolicyTable)
}
