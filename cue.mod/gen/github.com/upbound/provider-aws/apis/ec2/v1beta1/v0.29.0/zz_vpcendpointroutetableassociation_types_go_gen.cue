// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#VPCEndpointRouteTableAssociationObservation: {
	// A hash of the EC2 Route Table and VPC Endpoint identifiers.
	id?: null | string @go(ID,*string)
}

#VPCEndpointRouteTableAssociationParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.RouteTable
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	routeTableId?: null | string @go(RouteTableID,*string)

	// Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPCEndpoint
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)
}

// VPCEndpointRouteTableAssociationSpec defines the desired state of VPCEndpointRouteTableAssociation
#VPCEndpointRouteTableAssociationSpec: {
	forProvider: #VPCEndpointRouteTableAssociationParameters @go(ForProvider)
}

// VPCEndpointRouteTableAssociationStatus defines the observed state of VPCEndpointRouteTableAssociation.
#VPCEndpointRouteTableAssociationStatus: {
	atProvider?: #VPCEndpointRouteTableAssociationObservation @go(AtProvider)
}

// VPCEndpointRouteTableAssociation is the Schema for the VPCEndpointRouteTableAssociations API. Manages a VPC Endpoint Route Table Association
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VPCEndpointRouteTableAssociation: {
	spec:    #VPCEndpointRouteTableAssociationSpec   @go(Spec)
	status?: #VPCEndpointRouteTableAssociationStatus @go(Status)
}

// VPCEndpointRouteTableAssociationList contains a list of VPCEndpointRouteTableAssociations
#VPCEndpointRouteTableAssociationList: {
	items: [...#VPCEndpointRouteTableAssociation] @go(Items,[]VPCEndpointRouteTableAssociation)
}
