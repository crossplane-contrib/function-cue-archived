// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#VolumeAttachmentObservation: {
	id?: null | string @go(ID,*string)
}

#VolumeAttachmentParameters: {
	// The device name to expose to the instance (for
	// example, /dev/sdh or xvdh).  See Device Naming on Linux Instances and Device Naming on Windows Instances for more information.
	// +kubebuilder:validation:Required
	deviceName?: null | string @go(DeviceName,*string)

	// Set to true if you want to force the
	// volume to detach. Useful if previous attempts failed, but use this option only
	// as a last resort, as this can result in data loss. See
	// Detaching an Amazon EBS Volume from an Instance for more information.
	// +kubebuilder:validation:Optional
	forceDetach?: null | bool @go(ForceDetach,*bool)

	// ID of the Instance to attach to
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// This is
	// useful when destroying an instance which has volumes created by some other
	// means attached.
	// +kubebuilder:validation:Optional
	skipDestroy?: null | bool @go(SkipDestroy,*bool)

	// Set this to true to ensure that the target instance is stopped
	// before trying to detach the volume. Stops the instance, if it is not already stopped.
	// +kubebuilder:validation:Optional
	stopInstanceBeforeDetaching?: null | bool @go(StopInstanceBeforeDetaching,*bool)

	// ID of the Volume to be attached
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.EBSVolume
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	volumeId?: null | string @go(VolumeID,*string)
}

// VolumeAttachmentSpec defines the desired state of VolumeAttachment
#VolumeAttachmentSpec: {
	forProvider: #VolumeAttachmentParameters @go(ForProvider)
}

// VolumeAttachmentStatus defines the observed state of VolumeAttachment.
#VolumeAttachmentStatus: {
	atProvider?: #VolumeAttachmentObservation @go(AtProvider)
}

// VolumeAttachment is the Schema for the VolumeAttachments API. Provides an AWS EBS Volume Attachment
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VolumeAttachment: {
	spec:    #VolumeAttachmentSpec   @go(Spec)
	status?: #VolumeAttachmentStatus @go(Status)
}

// VolumeAttachmentList contains a list of VolumeAttachments
#VolumeAttachmentList: {
	items: [...#VolumeAttachment] @go(Items,[]VolumeAttachment)
}
