// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#VPCEndpointSubnetAssociationObservation: {
	// The ID of the association.
	id?: null | string @go(ID,*string)

	// The ID of the subnet to be associated with the VPC endpoint.
	subnetId?: null | string @go(SubnetID,*string)

	// The ID of the VPC endpoint with which the subnet will be associated.
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)
}

#VPCEndpointSubnetAssociationParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the subnet to be associated with the VPC endpoint.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)

	// The ID of the VPC endpoint with which the subnet will be associated.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPCEndpoint
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)
}

// VPCEndpointSubnetAssociationSpec defines the desired state of VPCEndpointSubnetAssociation
#VPCEndpointSubnetAssociationSpec: {
	forProvider: #VPCEndpointSubnetAssociationParameters @go(ForProvider)
}

// VPCEndpointSubnetAssociationStatus defines the observed state of VPCEndpointSubnetAssociation.
#VPCEndpointSubnetAssociationStatus: {
	atProvider?: #VPCEndpointSubnetAssociationObservation @go(AtProvider)
}

// VPCEndpointSubnetAssociation is the Schema for the VPCEndpointSubnetAssociations API. Provides a resource to create an association between a VPC endpoint and a subnet.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VPCEndpointSubnetAssociation: {
	spec:    #VPCEndpointSubnetAssociationSpec   @go(Spec)
	status?: #VPCEndpointSubnetAssociationStatus @go(Status)
}

// VPCEndpointSubnetAssociationList contains a list of VPCEndpointSubnetAssociations
#VPCEndpointSubnetAssociationList: {
	items: [...#VPCEndpointSubnetAssociation] @go(Items,[]VPCEndpointSubnetAssociation)
}
