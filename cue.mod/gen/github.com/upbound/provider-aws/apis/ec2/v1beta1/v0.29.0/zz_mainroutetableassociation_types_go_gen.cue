// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#MainRouteTableAssociationObservation: {
	// The ID of the Route Table Association
	id?: null | string @go(ID,*string)

	// Used internally, see Notes below
	originalRouteTableId?: null | string @go(OriginalRouteTableID,*string)
}

#MainRouteTableAssociationParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the Route Table to set as the new
	// main route table for the target VPC
	// +crossplane:generate:reference:type=RouteTable
	// +kubebuilder:validation:Optional
	routeTableId?: null | string @go(RouteTableID,*string)

	// The ID of the VPC whose main route table should be set
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPC
	// +kubebuilder:validation:Optional
	vpcId?: null | string @go(VPCID,*string)
}

// MainRouteTableAssociationSpec defines the desired state of MainRouteTableAssociation
#MainRouteTableAssociationSpec: {
	forProvider: #MainRouteTableAssociationParameters @go(ForProvider)
}

// MainRouteTableAssociationStatus defines the observed state of MainRouteTableAssociation.
#MainRouteTableAssociationStatus: {
	atProvider?: #MainRouteTableAssociationObservation @go(AtProvider)
}

// MainRouteTableAssociation is the Schema for the MainRouteTableAssociations API. Provides a resource for managing the main routing table of a VPC.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#MainRouteTableAssociation: {
	spec:    #MainRouteTableAssociationSpec   @go(Spec)
	status?: #MainRouteTableAssociationStatus @go(Status)
}

// MainRouteTableAssociationList contains a list of MainRouteTableAssociations
#MainRouteTableAssociationList: {
	items: [...#MainRouteTableAssociation] @go(Items,[]MainRouteTableAssociation)
}
