// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#NetworkInsightsPathObservation: {
	// ARN of the Network Insights Path.
	arn?: null | string @go(Arn,*string)

	// ID of the Network Insights Path.
	id?: null | string @go(ID,*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#NetworkInsightsPathParameters: {
	// ID of the resource which is the source of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.NetworkInterface
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	destination?: null | string @go(Destination,*string)

	// IP address of the destination resource.
	// +kubebuilder:validation:Optional
	destinationIp?: null | string @go(DestinationIP,*string)

	// Destination port to analyze access to.
	// +kubebuilder:validation:Optional
	destinationPort?: null | float64 @go(DestinationPort,*float64)

	// Protocol to use for analysis. Valid options are tcp or udp.
	// +kubebuilder:validation:Required
	protocol?: null | string @go(Protocol,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// ID of the resource which is the source of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.NetworkInterface
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	source?: null | string @go(Source,*string)

	// IP address of the source resource.
	// +kubebuilder:validation:Optional
	sourceIp?: null | string @go(SourceIP,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// NetworkInsightsPathSpec defines the desired state of NetworkInsightsPath
#NetworkInsightsPathSpec: {
	forProvider: #NetworkInsightsPathParameters @go(ForProvider)
}

// NetworkInsightsPathStatus defines the observed state of NetworkInsightsPath.
#NetworkInsightsPathStatus: {
	atProvider?: #NetworkInsightsPathObservation @go(AtProvider)
}

// NetworkInsightsPath is the Schema for the NetworkInsightsPaths API. Provides a Network Insights Path resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#NetworkInsightsPath: {
	spec:    #NetworkInsightsPathSpec   @go(Spec)
	status?: #NetworkInsightsPathStatus @go(Status)
}

// NetworkInsightsPathList contains a list of NetworkInsightsPaths
#NetworkInsightsPathList: {
	items: [...#NetworkInsightsPath] @go(Items,[]NetworkInsightsPath)
}
