// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#PlacementGroupObservation: {
	// Amazon Resource Name (ARN) of the placement group.
	arn?: null | string @go(Arn,*string)

	// The name of the placement group.
	id?: null | string @go(ID,*string)

	// The number of partitions to create in the
	// placement group.  Can only be specified when the strategy is set to
	// "partition".  Valid values are 1 - 7 (default is 2).
	partitionCount?: null | float64 @go(PartitionCount,*float64)

	// The ID of the placement group.
	placementGroupId?: null | string @go(PlacementGroupID,*string)

	// Determines how placement groups spread instances. Can only be used
	// when the strategy is set to "spread". Can be "host" or "rack". "host" can only be used for Outpost placement groups.
	spreadLevel?: null | string @go(SpreadLevel,*string)

	// The placement strategy. Can be "cluster", "partition" or "spread".
	strategy?: null | string @go(Strategy,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#PlacementGroupParameters: {
	// The number of partitions to create in the
	// placement group.  Can only be specified when the strategy is set to
	// "partition".  Valid values are 1 - 7 (default is 2).
	// +kubebuilder:validation:Optional
	partitionCount?: null | float64 @go(PartitionCount,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Determines how placement groups spread instances. Can only be used
	// when the strategy is set to "spread". Can be "host" or "rack". "host" can only be used for Outpost placement groups.
	// +kubebuilder:validation:Optional
	spreadLevel?: null | string @go(SpreadLevel,*string)

	// The placement strategy. Can be "cluster", "partition" or "spread".
	// +kubebuilder:validation:Optional
	strategy?: null | string @go(Strategy,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// PlacementGroupSpec defines the desired state of PlacementGroup
#PlacementGroupSpec: {
	forProvider: #PlacementGroupParameters @go(ForProvider)
}

// PlacementGroupStatus defines the observed state of PlacementGroup.
#PlacementGroupStatus: {
	atProvider?: #PlacementGroupObservation @go(AtProvider)
}

// PlacementGroup is the Schema for the PlacementGroups API. Provides an EC2 placement group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PlacementGroup: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.strategy)",message="strategy is a required parameter"
	spec:    #PlacementGroupSpec   @go(Spec)
	status?: #PlacementGroupStatus @go(Status)
}

// PlacementGroupList contains a list of PlacementGroups
#PlacementGroupList: {
	items: [...#PlacementGroup] @go(Items,[]PlacementGroup)
}
