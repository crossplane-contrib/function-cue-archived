// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#VPCEndpointConnectionNotificationObservation: {
	// One or more endpoint events for which to receive notifications.
	connectionEvents?: [...null | string] @go(ConnectionEvents,[]*string)

	// The ARN of the SNS topic for the notifications.
	connectionNotificationArn?: null | string @go(ConnectionNotificationArn,*string)

	// The ID of the VPC connection notification.
	id?: null | string @go(ID,*string)

	// The type of notification.
	notificationType?: null | string @go(NotificationType,*string)

	// The state of the notification.
	state?: null | string @go(State,*string)

	// The ID of the VPC Endpoint to receive notifications for.
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)

	// The ID of the VPC Endpoint Service to receive notifications for.
	vpcEndpointServiceId?: null | string @go(VPCEndpointServiceID,*string)
}

#VPCEndpointConnectionNotificationParameters: {
	// One or more endpoint events for which to receive notifications.
	// +kubebuilder:validation:Optional
	connectionEvents?: [...null | string] @go(ConnectionEvents,[]*string)

	// The ARN of the SNS topic for the notifications.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	connectionNotificationArn?: null | string @go(ConnectionNotificationArn,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the VPC Endpoint to receive notifications for.
	// +kubebuilder:validation:Optional
	vpcEndpointId?: null | string @go(VPCEndpointID,*string)

	// The ID of the VPC Endpoint Service to receive notifications for.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPCEndpointService
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vpcEndpointServiceId?: null | string @go(VPCEndpointServiceID,*string)
}

// VPCEndpointConnectionNotificationSpec defines the desired state of VPCEndpointConnectionNotification
#VPCEndpointConnectionNotificationSpec: {
	forProvider: #VPCEndpointConnectionNotificationParameters @go(ForProvider)
}

// VPCEndpointConnectionNotificationStatus defines the observed state of VPCEndpointConnectionNotification.
#VPCEndpointConnectionNotificationStatus: {
	atProvider?: #VPCEndpointConnectionNotificationObservation @go(AtProvider)
}

// VPCEndpointConnectionNotification is the Schema for the VPCEndpointConnectionNotifications API. Provides a VPC Endpoint connection notification resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VPCEndpointConnectionNotification: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.connectionEvents)",message="connectionEvents is a required parameter"
	spec:    #VPCEndpointConnectionNotificationSpec   @go(Spec)
	status?: #VPCEndpointConnectionNotificationStatus @go(Status)
}

// VPCEndpointConnectionNotificationList contains a list of VPCEndpointConnectionNotifications
#VPCEndpointConnectionNotificationList: {
	items: [...#VPCEndpointConnectionNotification] @go(Items,[]VPCEndpointConnectionNotification)
}
