// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#InstanceStateObservation: {
	// ID of the instance (matches instance_id).
	id?: null | string @go(ID,*string)
}

#InstanceStateParameters: {
	// Whether to request a forced stop when state is stopped. Otherwise (i.e., state is running), ignored. When an instance is forced to stop, it does not flush file system caches or file system metadata, and you must subsequently perform file system check and repair. Not recommended for Windows instances. Defaults to false.
	// +kubebuilder:validation:Optional
	force?: null | bool @go(Force,*bool)

	// ID of the instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	instanceId?: null | string @go(InstanceID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// - State of the instance. Valid values are stopped, running.
	// +kubebuilder:validation:Required
	state?: null | string @go(State,*string)
}

// InstanceStateSpec defines the desired state of InstanceState
#InstanceStateSpec: {
	forProvider: #InstanceStateParameters @go(ForProvider)
}

// InstanceStateStatus defines the observed state of InstanceState.
#InstanceStateStatus: {
	atProvider?: #InstanceStateObservation @go(AtProvider)
}

// InstanceState is the Schema for the InstanceStates API. Provides an EC2 instance state resource. This allows managing an instance power state.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#InstanceState: {
	spec:    #InstanceStateSpec   @go(Spec)
	status?: #InstanceStateStatus @go(Status)
}

// InstanceStateList contains a list of InstanceStates
#InstanceStateList: {
	items: [...#InstanceState] @go(Items,[]InstanceState)
}
