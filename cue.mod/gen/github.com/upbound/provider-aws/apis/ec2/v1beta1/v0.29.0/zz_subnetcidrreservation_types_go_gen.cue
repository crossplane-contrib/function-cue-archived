// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#SubnetCidrReservationObservation: {
	// ID of the CIDR reservation.
	id?: null | string @go(ID,*string)

	// ID of the AWS account that owns this CIDR reservation.
	ownerId?: null | string @go(OwnerID,*string)
}

#SubnetCidrReservationParameters: {
	// The CIDR block for the reservation.
	// +kubebuilder:validation:Required
	cidrBlock?: null | string @go(CidrBlock,*string)

	// A brief description of the reservation.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The type of reservation to create. Valid values: explicit, prefix
	// +kubebuilder:validation:Required
	reservationType?: null | string @go(ReservationType,*string)

	// The ID of the subnet to create the reservation for.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)
}

// SubnetCidrReservationSpec defines the desired state of SubnetCidrReservation
#SubnetCidrReservationSpec: {
	forProvider: #SubnetCidrReservationParameters @go(ForProvider)
}

// SubnetCidrReservationStatus defines the observed state of SubnetCidrReservation.
#SubnetCidrReservationStatus: {
	atProvider?: #SubnetCidrReservationObservation @go(AtProvider)
}

// SubnetCidrReservation is the Schema for the SubnetCidrReservations API. Provides a subnet CIDR reservation resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SubnetCidrReservation: {
	spec:    #SubnetCidrReservationSpec   @go(Spec)
	status?: #SubnetCidrReservationStatus @go(Status)
}

// SubnetCidrReservationList contains a list of SubnetCidrReservations
#SubnetCidrReservationList: {
	items: [...#SubnetCidrReservation] @go(Items,[]SubnetCidrReservation)
}
