// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#EgressOnlyInternetGatewayObservation: {
	// The ID of the egress-only Internet gateway.
	id?: null | string @go(ID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The VPC ID to create in.
	vpcId?: null | string @go(VPCID,*string)
}

#EgressOnlyInternetGatewayParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The VPC ID to create in.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPC
	// +kubebuilder:validation:Optional
	vpcId?: null | string @go(VPCID,*string)
}

// EgressOnlyInternetGatewaySpec defines the desired state of EgressOnlyInternetGateway
#EgressOnlyInternetGatewaySpec: {
	forProvider: #EgressOnlyInternetGatewayParameters @go(ForProvider)
}

// EgressOnlyInternetGatewayStatus defines the observed state of EgressOnlyInternetGateway.
#EgressOnlyInternetGatewayStatus: {
	atProvider?: #EgressOnlyInternetGatewayObservation @go(AtProvider)
}

// EgressOnlyInternetGateway is the Schema for the EgressOnlyInternetGateways API. Provides a resource to create an egress-only Internet gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EgressOnlyInternetGateway: {
	spec:    #EgressOnlyInternetGatewaySpec   @go(Spec)
	status?: #EgressOnlyInternetGatewayStatus @go(Status)
}

// EgressOnlyInternetGatewayList contains a list of EgressOnlyInternetGateways
#EgressOnlyInternetGatewayList: {
	items: [...#EgressOnlyInternetGateway] @go(Items,[]EgressOnlyInternetGateway)
}
