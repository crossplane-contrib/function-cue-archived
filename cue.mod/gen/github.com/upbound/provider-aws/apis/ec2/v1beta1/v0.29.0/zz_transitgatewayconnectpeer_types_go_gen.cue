// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#TransitGatewayConnectPeerObservation: {
	// EC2 Transit Gateway Connect Peer ARN
	arn?: null | string @go(Arn,*string)

	// EC2 Transit Gateway Connect Peer identifier
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#TransitGatewayConnectPeerParameters: {
	// The BGP ASN number assigned customer device. If not provided, it will use the same BGP ASN as is associated with Transit Gateway.
	// +kubebuilder:validation:Optional
	bgpAsn?: null | string @go(BGPAsn,*string)

	// The CIDR block that will be used for addressing within the tunnel. It must contain exactly one IPv4 CIDR block and up to one IPv6 CIDR block. The IPv4 CIDR block must be /29 size and must be within 169.254.0.0/16 range, with exception of: 169.254.0.0/29, 169.254.1.0/29, 169.254.2.0/29, 169.254.3.0/29, 169.254.4.0/29, 169.254.5.0/29, 169.254.169.248/29. The IPv6 CIDR block must be /125 size and must be within fd00::/8. The first IP from each CIDR block is assigned for customer gateway, the second and third is for Transit Gateway (An example: from range 169.254.100.0/29, .1 is assigned to customer gateway and .2 and .3 are assigned to Transit Gateway)
	// +kubebuilder:validation:Required
	insideCidrBlocks: [...null | string] @go(InsideCidrBlocks,[]*string)

	// The IP addressed assigned to customer device, which will be used as tunnel endpoint. It can be IPv4 or IPv6 address, but must be the same address family as transit_gateway_address
	// +kubebuilder:validation:Required
	peerAddress?: null | string @go(PeerAddress,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The IP address assigned to Transit Gateway, which will be used as tunnel endpoint. This address must be from associated Transit Gateway CIDR block. The address must be from the same address family as peer_address. If not set explicitly, it will be selected from associated Transit Gateway CIDR blocks
	// +kubebuilder:validation:Optional
	transitGatewayAddress?: null | string @go(TransitGatewayAddress,*string)

	// The Transit Gateway Connect
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.TransitGatewayConnect
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)
}

// TransitGatewayConnectPeerSpec defines the desired state of TransitGatewayConnectPeer
#TransitGatewayConnectPeerSpec: {
	forProvider: #TransitGatewayConnectPeerParameters @go(ForProvider)
}

// TransitGatewayConnectPeerStatus defines the observed state of TransitGatewayConnectPeer.
#TransitGatewayConnectPeerStatus: {
	atProvider?: #TransitGatewayConnectPeerObservation @go(AtProvider)
}

// TransitGatewayConnectPeer is the Schema for the TransitGatewayConnectPeers API. Manages an EC2 Transit Gateway Connect Peer
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayConnectPeer: {
	spec:    #TransitGatewayConnectPeerSpec   @go(Spec)
	status?: #TransitGatewayConnectPeerStatus @go(Status)
}

// TransitGatewayConnectPeerList contains a list of TransitGatewayConnectPeers
#TransitGatewayConnectPeerList: {
	items: [...#TransitGatewayConnectPeer] @go(Items,[]TransitGatewayConnectPeer)
}
