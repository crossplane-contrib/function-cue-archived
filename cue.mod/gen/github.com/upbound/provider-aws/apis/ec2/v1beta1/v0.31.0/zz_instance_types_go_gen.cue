// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#CapacityReservationSpecificationObservation: {
}

#CapacityReservationSpecificationParameters: {
	// Indicates the instance's Capacity Reservation preferences. Can be "open" or "none". (Default: "open").
	// +kubebuilder:validation:Optional
	capacityReservationPreference?: null | string @go(CapacityReservationPreference,*string)

	// Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
	// +kubebuilder:validation:Optional
	capacityReservationTarget?: [...#CapacityReservationTargetParameters] @go(CapacityReservationTarget,[]CapacityReservationTargetParameters)
}

#CapacityReservationTargetObservation: {
}

#CapacityReservationTargetParameters: {
	// ID of the Capacity Reservation in which to run the instance.
	// +kubebuilder:validation:Optional
	capacityReservationId?: null | string @go(CapacityReservationID,*string)

	// ARN of the Capacity Reservation resource group in which to run the instance.
	// +kubebuilder:validation:Optional
	capacityReservationResourceGroupArn?: null | string @go(CapacityReservationResourceGroupArn,*string)
}

#CreditSpecificationObservation: {
}

#CreditSpecificationParameters: {
	// Credit option for CPU usage. Valid values include standard or unlimited. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	// +kubebuilder:validation:Optional
	cpuCredits?: null | string @go(CPUCredits,*string)
}

#EnclaveOptionsObservation: {
}

#EnclaveOptionsParameters: {
	// Whether Nitro Enclaves will be enabled on the instance. Defaults to false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)
}

#InstanceEBSBlockDeviceObservation: {
	// ID of the volume. For example, the ID can be accessed like this, aws_instance.web.ebs_block_device.2.volume_id.
	volumeId?: null | string @go(VolumeID,*string)
}

#InstanceEBSBlockDeviceParameters: {
	// Whether the volume should be destroyed on instance termination. Defaults to true.
	// +kubebuilder:validation:Optional
	deleteOnTermination?: null | bool @go(DeleteOnTermination,*bool)

	// Name of the device to mount.
	// +kubebuilder:validation:Required
	deviceName?: null | string @go(DeviceName,*string)

	// Enables EBS encryption on the volume. Defaults to false. Cannot be used with snapshot_id. Must be configured to perform drift detection.
	// +kubebuilder:validation:Optional
	encrypted?: null | bool @go(Encrypted,*bool)

	// Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
	// +kubebuilder:validation:Optional
	iops?: null | float64 @go(Iops,*float64)

	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Snapshot ID to mount.
	// +kubebuilder:validation:Optional
	snapshotId?: null | string @go(SnapshotID,*string)

	// Map of tags to assign to the device.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
	// +kubebuilder:validation:Optional
	throughput?: null | float64 @go(Throughput,*float64)

	// Size of the volume in gibibytes (GiB).
	// +kubebuilder:validation:Optional
	volumeSize?: null | float64 @go(VolumeSize,*float64)

	// Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.
	// +kubebuilder:validation:Optional
	volumeType?: null | string @go(VolumeType,*string)
}

#InstanceEphemeralBlockDeviceObservation: {
}

#InstanceEphemeralBlockDeviceParameters: {
	// Name of the block device to mount on the instance.
	// +kubebuilder:validation:Required
	deviceName?: null | string @go(DeviceName,*string)

	// Suppresses the specified device included in the AMI's block device mapping.
	// +kubebuilder:validation:Optional
	noDevice?: null | bool @go(NoDevice,*bool)

	// Instance Store Device Name (e.g., ephemeral0).
	// +kubebuilder:validation:Optional
	virtualName?: null | string @go(VirtualName,*string)
}

#InstanceNetworkInterfaceObservation: {
}

#InstanceNetworkInterfaceParameters: {
	// Whether or not to delete the network interface on instance termination. Defaults to false. Currently, the only valid value is false, as this is only supported when creating new network interfaces when launching an instance.
	// +kubebuilder:validation:Optional
	deleteOnTermination?: null | bool @go(DeleteOnTermination,*bool)

	// Integer index of the network interface attachment. Limited by instance type.
	// +kubebuilder:validation:Required
	deviceIndex?: null | float64 @go(DeviceIndex,*float64)

	// Integer index of the network card. Limited by instance type. The default index is 0.
	// +kubebuilder:validation:Optional
	networkCardIndex?: null | float64 @go(NetworkCardIndex,*float64)

	// ID of the network interface to attach.
	// +crossplane:generate:reference:type=NetworkInterface
	// +kubebuilder:validation:Optional
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)
}

#InstanceObservation: {
	// ARN of the instance.
	arn?: null | string @go(Arn,*string)

	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	// +kubebuilder:validation:Optional
	ebsBlockDevice?: [...#InstanceEBSBlockDeviceObservation] @go(EBSBlockDevice,[]InstanceEBSBlockDeviceObservation)

	// ID of the launch template. Conflicts with name.
	id?: null | string @go(ID,*string)

	// State of the instance. One of: pending, running, shutting-down, terminated, stopping, stopped. See Instance Lifecycle for more information.
	instanceState?: null | string @go(InstanceState,*string)

	// ARN of the Outpost the instance is assigned to.
	outpostArn?: null | string @go(OutpostArn,*string)

	// Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if get_password_data is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See GetPasswordData for more information.
	passwordData?: null | string @go(PasswordData,*string)

	// ID of the instance's primary network interface.
	primaryNetworkInterfaceId?: null | string @go(PrimaryNetworkInterfaceID,*string)

	// Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
	privateDns?: null | string @go(PrivateDNS,*string)

	// Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
	publicDns?: null | string @go(PublicDNS,*string)

	// Public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use public_ip as this field will change after the EIP is attached.
	publicIp?: null | string @go(PublicIP,*string)

	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	// +kubebuilder:validation:Optional
	rootBlockDevice?: [...#RootBlockDeviceObservation] @go(RootBlockDevice,[]RootBlockDeviceObservation)

	// List of security group names to associate with.
	securityGroups?: [...null | string] @go(SecurityGroups,[]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#InstanceParameters: {
	// AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.
	// +kubebuilder:validation:Optional
	ami?: null | string @go(AMI,*string)

	// Whether to associate a public IP address with an instance in a VPC.
	// +kubebuilder:validation:Optional
	associatePublicIpAddress?: null | bool @go(AssociatePublicIPAddress,*bool)

	// AZ to start the instance in.
	// +kubebuilder:validation:Optional
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
	// +kubebuilder:validation:Optional
	cpuCoreCount?: null | float64 @go(CPUCoreCount,*float64)

	// If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
	// +kubebuilder:validation:Optional
	cpuThreadsPerCore?: null | float64 @go(CPUThreadsPerCore,*float64)

	// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
	// +kubebuilder:validation:Optional
	capacityReservationSpecification?: [...#CapacityReservationSpecificationParameters] @go(CapacityReservationSpecification,[]CapacityReservationSpecificationParameters)

	// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
	// +kubebuilder:validation:Optional
	creditSpecification?: [...#CreditSpecificationParameters] @go(CreditSpecification,[]CreditSpecificationParameters)

	// If true, enables EC2 Instance Stop Protection.
	// +kubebuilder:validation:Optional
	disableApiStop?: null | bool @go(DisableAPIStop,*bool)

	// If true, enables EC2 Instance Termination Protection.
	// +kubebuilder:validation:Optional
	disableApiTermination?: null | bool @go(DisableAPITermination,*bool)

	// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
	// +kubebuilder:validation:Optional
	ebsBlockDevice?: [...#InstanceEBSBlockDeviceParameters] @go(EBSBlockDevice,[]InstanceEBSBlockDeviceParameters)

	// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.
	// +kubebuilder:validation:Optional
	ebsOptimized?: null | bool @go(EBSOptimized,*bool)

	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	// +kubebuilder:validation:Optional
	enclaveOptions?: [...#EnclaveOptionsParameters] @go(EnclaveOptions,[]EnclaveOptionsParameters)

	// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
	// +kubebuilder:validation:Optional
	ephemeralBlockDevice?: [...#InstanceEphemeralBlockDeviceParameters] @go(EphemeralBlockDevice,[]InstanceEphemeralBlockDeviceParameters)

	// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.
	// +kubebuilder:validation:Optional
	getPasswordData?: null | bool @go(GetPasswordData,*bool)

	// If true, the launched EC2 instance will support hibernation.
	// +kubebuilder:validation:Optional
	hibernation?: null | bool @go(Hibernation,*bool)

	// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
	// +kubebuilder:validation:Optional
	hostId?: null | string @go(HostID,*string)

	// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the tenancy parameter or set it to host.
	// +kubebuilder:validation:Optional
	hostResourceGroupArn?: null | string @go(HostResourceGroupArn,*string)

	// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.
	// +kubebuilder:validation:Optional
	iamInstanceProfile?: null | string @go(IAMInstanceProfile,*string)

	// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
	// +kubebuilder:validation:Optional
	ipv6AddressCount?: null | float64 @go(IPv6AddressCount,*float64)

	// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
	// +kubebuilder:validation:Optional
	ipv6Addresses?: [...null | string] @go(IPv6Addresses,[]*string)

	// Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.
	// +kubebuilder:validation:Optional
	instanceInitiatedShutdownBehavior?: null | string @go(InstanceInitiatedShutdownBehavior,*string)

	// Instance type to use for the instance. Required unless launch_template is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting instance_type will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
	// +kubebuilder:validation:Optional
	instanceType?: null | string @go(InstanceType,*string)

	// Key name of the Key Pair to use for the instance; which can be managed using the .
	// +kubebuilder:validation:Optional
	keyName?: null | string @go(KeyName,*string)

	// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
	// +kubebuilder:validation:Optional
	launchTemplate?: [...#LaunchTemplateParameters] @go(LaunchTemplate,[]LaunchTemplateParameters)

	// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
	// +kubebuilder:validation:Optional
	maintenanceOptions?: [...#MaintenanceOptionsParameters] @go(MaintenanceOptions,[]MaintenanceOptionsParameters)

	// Customize the metadata options of the instance. See Metadata Options below for more details.
	// +kubebuilder:validation:Optional
	metadataOptions?: [...#MetadataOptionsParameters] @go(MetadataOptions,[]MetadataOptionsParameters)

	// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
	// +kubebuilder:validation:Optional
	monitoring?: null | bool @go(Monitoring,*bool)

	// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
	// +kubebuilder:validation:Optional
	networkInterface?: [...#InstanceNetworkInterfaceParameters] @go(NetworkInterface,[]InstanceNetworkInterfaceParameters)

	// Placement Group to start the instance in.
	// +kubebuilder:validation:Optional
	placementGroup?: null | string @go(PlacementGroup,*string)

	// Number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".
	// +kubebuilder:validation:Optional
	placementPartitionNumber?: null | float64 @go(PlacementPartitionNumber,*float64)

	// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	// +kubebuilder:validation:Optional
	privateDnsNameOptions?: [...#PrivateDNSNameOptionsParameters] @go(PrivateDNSNameOptions,[]PrivateDNSNameOptionsParameters)

	// Private IP address to associate with the instance in a VPC.
	// +kubebuilder:validation:Optional
	privateIp?: null | string @go(PrivateIP,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
	// +kubebuilder:validation:Optional
	rootBlockDevice?: [...#RootBlockDeviceParameters] @go(RootBlockDevice,[]RootBlockDeviceParameters)

	// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.
	// +kubebuilder:validation:Optional
	secondaryPrivateIps?: [...null | string] @go(SecondaryPrivateIps,[]*string)

	// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
	// +kubebuilder:validation:Optional
	sourceDestCheck?: null | bool @go(SourceDestCheck,*bool)

	// VPC Subnet ID to launch in.
	// +crossplane:generate:reference:type=Subnet
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command. Valid values are default, dedicated, and host.
	// +kubebuilder:validation:Optional
	tenancy?: null | string @go(Tenancy,*string)

	// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
	// +kubebuilder:validation:Optional
	userData?: null | string @go(UserData,*string)

	// Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
	// +kubebuilder:validation:Optional
	userDataBase64?: null | string @go(UserDataBase64,*string)

	// When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.
	// +kubebuilder:validation:Optional
	userDataReplaceOnChange?: null | bool @go(UserDataReplaceOnChange,*bool)

	// List of security group IDs to associate with.
	// +crossplane:generate:reference:type=SecurityGroup
	// +crossplane:generate:reference:refFieldName=VPCSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=VPCSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)

	// Map of tags to assign, at instance-creation time, to root and EBS volumes.
	// +kubebuilder:validation:Optional
	volumeTags?: {[string]: null | string} @go(VolumeTags,map[string]*string)
}

#LaunchTemplateObservation: {
}

#LaunchTemplateParameters: {
	// ID of the launch template. Conflicts with name.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Name of the launch template. Conflicts with id.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Template version. Can be a specific version number, $Latest or $Default. The default value is $Default.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#MaintenanceOptionsObservation: {
}

#MaintenanceOptionsParameters: {
	// Automatic recovery behavior of the Instance. Can be "default" or "disabled". See Recover your instance for more details.
	// +kubebuilder:validation:Optional
	autoRecovery?: null | string @go(AutoRecovery,*string)
}

#MetadataOptionsObservation: {
}

#MetadataOptionsParameters: {
	// Whether the metadata service is available. Valid values include enabled or disabled. Defaults to enabled.
	// +kubebuilder:validation:Optional
	httpEndpoint?: null | string @go(HTTPEndpoint,*string)

	// Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from 1 to 64. Defaults to 1.
	// +kubebuilder:validation:Optional
	httpPutResponseHopLimit?: null | float64 @go(HTTPPutResponseHopLimit,*float64)

	// Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Valid values include optional or required. Defaults to optional.
	// +kubebuilder:validation:Optional
	httpTokens?: null | string @go(HTTPTokens,*string)

	// Enables or disables access to instance tags from the instance metadata service. Valid values include enabled or disabled. Defaults to disabled.
	// +kubebuilder:validation:Optional
	instanceMetadataTags?: null | string @go(InstanceMetadataTags,*string)
}

#PrivateDNSNameOptionsObservation: {
}

#PrivateDNSNameOptionsParameters: {
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	// +kubebuilder:validation:Optional
	enableResourceNameDnsARecord?: null | bool @go(EnableResourceNameDNSARecord,*bool)

	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	// +kubebuilder:validation:Optional
	enableResourceNameDnsAaaaRecord?: null | bool @go(EnableResourceNameDNSAaaaRecord,*bool)

	// Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
	// +kubebuilder:validation:Optional
	hostnameType?: null | string @go(HostnameType,*string)
}

#RootBlockDeviceObservation: {
	// Device name, e.g., /dev/sdh or xvdh.
	deviceName?: null | string @go(DeviceName,*string)

	// ID of the volume. For example, the ID can be accessed like this, aws_instance.web.root_block_device.0.volume_id.
	volumeId?: null | string @go(VolumeID,*string)
}

#RootBlockDeviceParameters: {
	// Whether the volume should be destroyed on instance termination. Defaults to true.
	// +kubebuilder:validation:Optional
	deleteOnTermination?: null | bool @go(DeleteOnTermination,*bool)

	// Whether to enable volume encryption. Defaults to false. Must be configured to perform drift detection.
	// +kubebuilder:validation:Optional
	encrypted?: null | bool @go(Encrypted,*bool)

	// Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
	// +kubebuilder:validation:Optional
	iops?: null | float64 @go(Iops,*float64)

	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Map of tags to assign to the device.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
	// +kubebuilder:validation:Optional
	throughput?: null | float64 @go(Throughput,*float64)

	// Size of the volume in gibibytes (GiB).
	// +kubebuilder:validation:Optional
	volumeSize?: null | float64 @go(VolumeSize,*float64)

	// Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.
	// +kubebuilder:validation:Optional
	volumeType?: null | string @go(VolumeType,*string)
}

// InstanceSpec defines the desired state of Instance
#InstanceSpec: {
	forProvider: #InstanceParameters @go(ForProvider)
}

// InstanceStatus defines the observed state of Instance.
#InstanceStatus: {
	atProvider?: #InstanceObservation @go(AtProvider)
}

// Instance is the Schema for the Instances API. Provides an EC2 instance resource. This allows instances to be created, updated, and deleted. Instances also support provisioning.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Instance: {
	spec:    #InstanceSpec   @go(Spec)
	status?: #InstanceStatus @go(Status)
}

// InstanceList contains a list of Instances
#InstanceList: {
	items: [...#Instance] @go(Items,[]Instance)
}
