// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#EIPObservation: {
	// ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
	allocationId?: null | string @go(AllocationID,*string)

	// ID representing the association of the address with an instance in a VPC.
	associationId?: null | string @go(AssociationID,*string)

	// Carrier IP address.
	carrierIp?: null | string @go(CarrierIP,*string)

	// Customer owned IP.
	customerOwnedIp?: null | string @go(CustomerOwnedIP,*string)

	// Indicates if this EIP is for use in VPC (vpc) or EC2-Classic (standard).
	domain?: null | string @go(Domain,*string)

	// Contains the EIP allocation ID.
	id?: null | string @go(ID,*string)

	// The Private DNS associated with the Elastic IP address (if in VPC).
	privateDns?: null | string @go(PrivateDNS,*string)

	// Contains the private IP address (if in VPC).
	privateIp?: null | string @go(PrivateIP,*string)

	// Public DNS associated with the Elastic IP address.
	publicDns?: null | string @go(PublicDNS,*string)

	// Contains the public IP address.
	publicIp?: null | string @go(PublicIP,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#EIPParameters: {
	// IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
	// +kubebuilder:validation:Optional
	address?: null | string @go(Address,*string)

	// User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
	// +kubebuilder:validation:Optional
	associateWithPrivateIp?: null | string @go(AssociateWithPrivateIP,*string)

	// ID  of a customer-owned address pool. For more on customer owned IP addressed check out Customer-owned IP addresses guide.
	// +kubebuilder:validation:Optional
	customerOwnedIpv4Pool?: null | string @go(CustomerOwnedIPv4Pool,*string)

	// EC2 instance ID.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	instance?: null | string @go(Instance,*string)

	// Location from which the IP address is advertised. Use this parameter to limit the address to this location.
	// +kubebuilder:validation:Optional
	networkBorderGroup?: null | string @go(NetworkBorderGroup,*string)

	// Network interface ID to associate with.
	// +crossplane:generate:reference:type=NetworkInterface
	// +kubebuilder:validation:Optional
	networkInterface?: null | string @go(NetworkInterface,*string)

	// EC2 IPv4 address pool identifier or amazon.
	// This option is only available for VPC EIPs.
	// +kubebuilder:validation:Optional
	publicIpv4Pool?: null | string @go(PublicIPv4Pool,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Boolean if the EIP is in a VPC or not.
	// Defaults to true unless the region supports EC2-Classic.
	// +kubebuilder:validation:Optional
	vpc?: null | bool @go(VPC,*bool)
}

// EIPSpec defines the desired state of EIP
#EIPSpec: {
	forProvider: #EIPParameters @go(ForProvider)
}

// EIPStatus defines the observed state of EIP.
#EIPStatus: {
	atProvider?: #EIPObservation @go(AtProvider)
}

// EIP is the Schema for the EIPs API. Provides an Elastic IP resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EIP: {
	spec:    #EIPSpec   @go(Spec)
	status?: #EIPStatus @go(Status)
}

// EIPList contains a list of EIPs
#EIPList: {
	items: [...#EIP] @go(Items,[]EIP)
}
