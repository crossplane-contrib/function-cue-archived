// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#VPCIPv4CidrBlockAssociationObservation: {
	// The ID of the VPC CIDR association
	id?: null | string @go(ID,*string)
}

#VPCIPv4CidrBlockAssociationParameters: {
	// The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using ipv4_netmask_length.
	// +kubebuilder:validation:Optional
	cidrBlock?: null | string @go(CidrBlock,*string)

	// The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP address usage throughout your AWS Organization.
	// +kubebuilder:validation:Optional
	ipv4IpamPoolId?: null | string @go(IPv4IpamPoolID,*string)

	// The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id.
	// +kubebuilder:validation:Optional
	ipv4NetmaskLength?: null | float64 @go(IPv4NetmaskLength,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the VPC to make the association with.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPC
	// +kubebuilder:validation:Optional
	vpcId?: null | string @go(VPCID,*string)
}

// VPCIPv4CidrBlockAssociationSpec defines the desired state of VPCIPv4CidrBlockAssociation
#VPCIPv4CidrBlockAssociationSpec: {
	forProvider: #VPCIPv4CidrBlockAssociationParameters @go(ForProvider)
}

// VPCIPv4CidrBlockAssociationStatus defines the observed state of VPCIPv4CidrBlockAssociation.
#VPCIPv4CidrBlockAssociationStatus: {
	atProvider?: #VPCIPv4CidrBlockAssociationObservation @go(AtProvider)
}

// VPCIPv4CidrBlockAssociation is the Schema for the VPCIPv4CidrBlockAssociations API. Associate additional IPv4 CIDR blocks with a VPC
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VPCIPv4CidrBlockAssociation: {
	spec:    #VPCIPv4CidrBlockAssociationSpec   @go(Spec)
	status?: #VPCIPv4CidrBlockAssociationStatus @go(Status)
}

// VPCIPv4CidrBlockAssociationList contains a list of VPCIPv4CidrBlockAssociations
#VPCIPv4CidrBlockAssociationList: {
	items: [...#VPCIPv4CidrBlockAssociation] @go(Items,[]VPCIPv4CidrBlockAssociation)
}
