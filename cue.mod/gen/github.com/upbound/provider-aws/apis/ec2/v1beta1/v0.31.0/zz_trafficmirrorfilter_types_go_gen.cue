// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#TrafficMirrorFilterObservation: {
	// The ARN of the traffic mirror filter.
	arn?: null | string @go(Arn,*string)

	// The name of the filter.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#TrafficMirrorFilterParameters: {
	// A description of the filter.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// List of amazon network services that should be mirrored. Valid values: amazon-dns.
	// +kubebuilder:validation:Optional
	networkServices?: [...null | string] @go(NetworkServices,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// TrafficMirrorFilterSpec defines the desired state of TrafficMirrorFilter
#TrafficMirrorFilterSpec: {
	forProvider: #TrafficMirrorFilterParameters @go(ForProvider)
}

// TrafficMirrorFilterStatus defines the observed state of TrafficMirrorFilter.
#TrafficMirrorFilterStatus: {
	atProvider?: #TrafficMirrorFilterObservation @go(AtProvider)
}

// TrafficMirrorFilter is the Schema for the TrafficMirrorFilters API. Provides an Traffic mirror filter
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TrafficMirrorFilter: {
	spec:    #TrafficMirrorFilterSpec   @go(Spec)
	status?: #TrafficMirrorFilterStatus @go(Status)
}

// TrafficMirrorFilterList contains a list of TrafficMirrorFilters
#TrafficMirrorFilterList: {
	items: [...#TrafficMirrorFilter] @go(Items,[]TrafficMirrorFilter)
}
