// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ec2/v1beta1

package v1beta1

#TransitGatewayRouteObservation: {
	// EC2 Transit Gateway Route Table identifier combined with destination
	id?: null | string @go(ID,*string)
}

#TransitGatewayRouteParameters: {
	// Indicates whether to drop traffic that matches this route (default to false).
	// +kubebuilder:validation:Optional
	blackhole?: null | bool @go(Blackhole,*bool)

	// IPv4 or IPv6 RFC1924 CIDR used for destination matches. Routing decisions are based on the most specific match.
	// +kubebuilder:validation:Required
	destinationCidrBlock?: null | string @go(DestinationCidrBlock,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Identifier of EC2 Transit Gateway Attachment .
	// +crossplane:generate:reference:type=TransitGatewayVPCAttachment
	// +kubebuilder:validation:Optional
	transitGatewayAttachmentId?: null | string @go(TransitGatewayAttachmentID,*string)

	// Identifier of EC2 Transit Gateway Route Table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.TransitGateway
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("association_default_route_table_id",true)
	// +kubebuilder:validation:Optional
	transitGatewayRouteTableId?: null | string @go(TransitGatewayRouteTableID,*string)
}

// TransitGatewayRouteSpec defines the desired state of TransitGatewayRoute
#TransitGatewayRouteSpec: {
	forProvider: #TransitGatewayRouteParameters @go(ForProvider)
}

// TransitGatewayRouteStatus defines the observed state of TransitGatewayRoute.
#TransitGatewayRouteStatus: {
	atProvider?: #TransitGatewayRouteObservation @go(AtProvider)
}

// TransitGatewayRoute is the Schema for the TransitGatewayRoutes API. Manages an EC2 Transit Gateway Route
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TransitGatewayRoute: {
	spec:    #TransitGatewayRouteSpec   @go(Spec)
	status?: #TransitGatewayRouteStatus @go(Status)
}

// TransitGatewayRouteList contains a list of TransitGatewayRoutes
#TransitGatewayRouteList: {
	items: [...#TransitGatewayRoute] @go(Items,[]TransitGatewayRoute)
}
