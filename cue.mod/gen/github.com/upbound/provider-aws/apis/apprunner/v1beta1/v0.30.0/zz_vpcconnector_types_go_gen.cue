// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apprunner/v1beta1

package v1beta1

#VPCConnectorObservation: {
	// ARN of VPC connector.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// Current state of the VPC connector. If the status of a connector revision is INACTIVE, it was deleted and can't be used. Inactive connector revisions are permanently removed some time after they are deleted.
	status?: null | string @go(Status,*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The revision of VPC connector. It's unique among all the active connectors ("Status": "ACTIVE") that share the same Name.
	vpcConnectorRevision?: null | float64 @go(VPCConnectorRevision,*float64)
}

#VPCConnectorParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// List of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupSelector
	// +kubebuilder:validation:Optional
	securityGroups?: [...null | string] @go(SecurityGroups,[]*string)

	// List of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +crossplane:generate:reference:refFieldName=SubnetRefs
	// +crossplane:generate:reference:selectorFieldName=SubnetSelector
	// +kubebuilder:validation:Optional
	subnets?: [...null | string] @go(Subnets,[]*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Name for the VPC connector.
	// +kubebuilder:validation:Required
	vpcConnectorName?: null | string @go(VPCConnectorName,*string)
}

// VPCConnectorSpec defines the desired state of VPCConnector
#VPCConnectorSpec: {
	forProvider: #VPCConnectorParameters @go(ForProvider)
}

// VPCConnectorStatus defines the observed state of VPCConnector.
#VPCConnectorStatus: {
	atProvider?: #VPCConnectorObservation @go(AtProvider)
}

// VPCConnector is the Schema for the VPCConnectors API. Manages an App Runner VPC Connector.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VPCConnector: {
	spec:    #VPCConnectorSpec   @go(Spec)
	status?: #VPCConnectorStatus @go(Status)
}

// VPCConnectorList contains a list of VPCConnectors
#VPCConnectorList: {
	items: [...#VPCConnector] @go(Items,[]VPCConnector)
}
