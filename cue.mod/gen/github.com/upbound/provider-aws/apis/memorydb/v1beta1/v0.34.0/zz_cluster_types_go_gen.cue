// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/memorydb/v1beta1

package v1beta1

#ClusterEndpointObservation: {
	// DNS hostname of the cluster configuration endpoint.
	address?: null | string @go(Address,*string)

	// The port number on which each of the nodes accepts connections. Defaults to 6379.
	port?: null | float64 @go(Port,*float64)
}

#ClusterEndpointParameters: {
}

#ClusterObservation: {
	// The name of the Access Control List to associate with the cluster.
	aclName?: null | string @go(ACLName,*string)

	// The ARN of the cluster.
	arn?: null | string @go(Arn,*string)

	// When set to true, the cluster will automatically receive minor engine version upgrades after launch. Defaults to true.
	autoMinorVersionUpgrade?: null | bool @go(AutoMinorVersionUpgrade,*bool)
	clusterEndpoint?: [...#ClusterEndpointObservation] @go(ClusterEndpoint,[]ClusterEndpointObservation)

	// Enables data tiering. This option is not supported by all instance types. For more information, see Data tiering.
	dataTiering?: null | bool @go(DataTiering,*bool)

	// Description for the cluster.
	description?: null | string @go(Description,*string)

	// Patch version number of the Redis engine used by the cluster.
	enginePatchVersion?: null | string @go(EnginePatchVersion,*string)

	// Version number of the Redis engine to be used for the cluster. Downgrades are not supported.
	engineVersion?: null | string @go(EngineVersion,*string)

	// Name of the final cluster snapshot to be created when this resource is deleted. If omitted, no final snapshot will be made.
	finalSnapshotName?: null | string @go(FinalSnapshotName,*string)

	// Same as name.
	id?: null | string @go(ID,*string)

	// ARN of the KMS key used to encrypt the cluster at rest.
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// Specifies the weekly time range during which maintenance on the cluster is performed. Specify as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:23:00-mon:01:30.
	maintenanceWindow?: null | string @go(MaintenanceWindow,*string)

	// The compute and memory capacity of the nodes in the cluster. See AWS documentation on supported node types as well as vertical scaling.
	nodeType?: null | string @go(NodeType,*string)

	// The number of replicas to apply to each shard, up to a maximum of 5. Defaults to 1 (i.e. 2 nodes per shard).
	numReplicasPerShard?: null | float64 @go(NumReplicasPerShard,*float64)

	// The number of shards in the cluster. Defaults to 1.
	numShards?: null | float64 @go(NumShards,*float64)

	// The name of the parameter group associated with the cluster.
	parameterGroupName?: null | string @go(ParameterGroupName,*string)

	// The port number on which each of the nodes accepts connections. Defaults to 6379.
	port?: null | float64 @go(Port,*float64)

	// Set of VPC Security Group ID-s to associate with this cluster.
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// Set of shards in this cluster.
	shards?: [...#ShardsObservation] @go(Shards,[]ShardsObservation)

	// List of ARN-s that uniquely identify RDB snapshot files stored in S3. The snapshot files will be used to populate the new cluster. Object names in the ARN-s cannot contain any commas.
	snapshotArns?: [...null | string] @go(SnapshotArns,[]*string)

	// The name of a snapshot from which to restore data into the new cluster.
	snapshotName?: null | string @go(SnapshotName,*string)

	// The number of days for which MemoryDB retains automatic snapshots before deleting them. When set to 0, automatic backups are disabled. Defaults to 0.
	snapshotRetentionLimit?: null | float64 @go(SnapshotRetentionLimit,*float64)

	// The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00.
	snapshotWindow?: null | string @go(SnapshotWindow,*string)

	// ARN of the SNS topic to which cluster notifications are sent.
	snsTopicArn?: null | string @go(SnsTopicArn,*string)

	// The name of the subnet group to be used for the cluster. Defaults to a subnet group consisting of default VPC subnets.
	subnetGroupName?: null | string @go(SubnetGroupName,*string)

	// A flag to enable in-transit encryption on the cluster. When set to false, the acl_name must be open-access. Defaults to true.
	tlsEnabled?: null | bool @go(TLSEnabled,*bool)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ClusterParameters: {
	// The name of the Access Control List to associate with the cluster.
	// +kubebuilder:validation:Optional
	aclName?: null | string @go(ACLName,*string)

	// When set to true, the cluster will automatically receive minor engine version upgrades after launch. Defaults to true.
	// +kubebuilder:validation:Optional
	autoMinorVersionUpgrade?: null | bool @go(AutoMinorVersionUpgrade,*bool)

	// Enables data tiering. This option is not supported by all instance types. For more information, see Data tiering.
	// +kubebuilder:validation:Optional
	dataTiering?: null | bool @go(DataTiering,*bool)

	// Description for the cluster.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Version number of the Redis engine to be used for the cluster. Downgrades are not supported.
	// +kubebuilder:validation:Optional
	engineVersion?: null | string @go(EngineVersion,*string)

	// Name of the final cluster snapshot to be created when this resource is deleted. If omitted, no final snapshot will be made.
	// +kubebuilder:validation:Optional
	finalSnapshotName?: null | string @go(FinalSnapshotName,*string)

	// ARN of the KMS key used to encrypt the cluster at rest.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// Specifies the weekly time range during which maintenance on the cluster is performed. Specify as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:23:00-mon:01:30.
	// +kubebuilder:validation:Optional
	maintenanceWindow?: null | string @go(MaintenanceWindow,*string)

	// The compute and memory capacity of the nodes in the cluster. See AWS documentation on supported node types as well as vertical scaling.
	// +kubebuilder:validation:Optional
	nodeType?: null | string @go(NodeType,*string)

	// The number of replicas to apply to each shard, up to a maximum of 5. Defaults to 1 (i.e. 2 nodes per shard).
	// +kubebuilder:validation:Optional
	numReplicasPerShard?: null | float64 @go(NumReplicasPerShard,*float64)

	// The number of shards in the cluster. Defaults to 1.
	// +kubebuilder:validation:Optional
	numShards?: null | float64 @go(NumShards,*float64)

	// The name of the parameter group associated with the cluster.
	// +kubebuilder:validation:Optional
	parameterGroupName?: null | string @go(ParameterGroupName,*string)

	// The port number on which each of the nodes accepts connections. Defaults to 6379.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Set of VPC Security Group ID-s to associate with this cluster.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// List of ARN-s that uniquely identify RDB snapshot files stored in S3. The snapshot files will be used to populate the new cluster. Object names in the ARN-s cannot contain any commas.
	// +kubebuilder:validation:Optional
	snapshotArns?: [...null | string] @go(SnapshotArns,[]*string)

	// The name of a snapshot from which to restore data into the new cluster.
	// +kubebuilder:validation:Optional
	snapshotName?: null | string @go(SnapshotName,*string)

	// The number of days for which MemoryDB retains automatic snapshots before deleting them. When set to 0, automatic backups are disabled. Defaults to 0.
	// +kubebuilder:validation:Optional
	snapshotRetentionLimit?: null | float64 @go(SnapshotRetentionLimit,*float64)

	// The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00.
	// +kubebuilder:validation:Optional
	snapshotWindow?: null | string @go(SnapshotWindow,*string)

	// ARN of the SNS topic to which cluster notifications are sent.
	// +kubebuilder:validation:Optional
	snsTopicArn?: null | string @go(SnsTopicArn,*string)

	// The name of the subnet group to be used for the cluster. Defaults to a subnet group consisting of default VPC subnets.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/memorydb/v1beta1.SubnetGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	subnetGroupName?: null | string @go(SubnetGroupName,*string)

	// A flag to enable in-transit encryption on the cluster. When set to false, the acl_name must be open-access. Defaults to true.
	// +kubebuilder:validation:Optional
	tlsEnabled?: null | bool @go(TLSEnabled,*bool)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EndpointObservation: {
	// DNS hostname of the cluster configuration endpoint.
	address?: null | string @go(Address,*string)

	// The port number on which each of the nodes accepts connections. Defaults to 6379.
	port?: null | float64 @go(Port,*float64)
}

#EndpointParameters: {
}

#NodesObservation: {
	// The Availability Zone in which the node resides.
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The date and time when the node was created. Example: 2022-01-01T21:00:00Z.
	createTime?: null | string @go(CreateTime,*string)
	endpoint?: [...#EndpointObservation] @go(Endpoint,[]EndpointObservation)

	// Name of the cluster. Conflicts with name_prefix.
	name?: null | string @go(Name,*string)
}

#NodesParameters: {
}

#ShardsObservation: {
	// Name of the cluster. Conflicts with name_prefix.
	name?: null | string @go(Name,*string)

	// Set of nodes in this shard.
	nodes?: [...#NodesObservation] @go(Nodes,[]NodesObservation)

	// Number of individual nodes in this shard.
	numNodes?: null | float64 @go(NumNodes,*float64)

	// Keyspace for this shard. Example: 0-16383.
	slots?: null | string @go(Slots,*string)
}

#ShardsParameters: {
}

// ClusterSpec defines the desired state of Cluster
#ClusterSpec: {
	forProvider: #ClusterParameters @go(ForProvider)
}

// ClusterStatus defines the observed state of Cluster.
#ClusterStatus: {
	atProvider?: #ClusterObservation @go(AtProvider)
}

// Cluster is the Schema for the Clusters API. Provides a MemoryDB Cluster.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Cluster: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.aclName)",message="aclName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.nodeType)",message="nodeType is a required parameter"
	spec:    #ClusterSpec   @go(Spec)
	status?: #ClusterStatus @go(Status)
}

// ClusterList contains a list of Clusters
#ClusterList: {
	items: [...#Cluster] @go(Items,[]Cluster)
}
