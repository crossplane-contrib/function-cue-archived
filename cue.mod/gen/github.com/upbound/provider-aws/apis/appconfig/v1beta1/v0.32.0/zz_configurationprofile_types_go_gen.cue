// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/appconfig/v1beta1

package v1beta1

#ConfigurationProfileObservation: {
	// ARN of the AppConfig Configuration Profile.
	arn?: null | string @go(Arn,*string)

	// The configuration profile ID.
	configurationProfileId?: null | string @go(ConfigurationProfileID,*string)

	// AppConfig configuration profile ID and application ID separated by a colon (:).
	id?: null | string @go(ID,*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ConfigurationProfileParameters: {
	// Application ID. Must be between 4 and 7 characters in length.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/appconfig/v1beta1.Application
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	applicationId?: null | string @go(ApplicationID,*string)

	// Description of the configuration profile. Can be at most 1024 characters.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify hosted. For an SSM document, specify either the document name in the format ssm-document://<Document_name> or the ARN. For a parameter, specify either the parameter name in the format ssm-parameter://<Parameter_name> or the ARN. For an Amazon S3 object, specify the URI in the following format: s3://<bucket>/<objectKey>.
	// +kubebuilder:validation:Required
	locationUri?: null | string @go(LocationURI,*string)

	// Name for the configuration profile. Must be between 1 and 64 characters in length.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// ARN of an IAM role with permission to access the configuration at the specified location_uri. A retrieval role ARN is not required for configurations stored in the AWS AppConfig hosted configuration store. It is required for all other sources that store your configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	retrievalRoleArn?: null | string @go(RetrievalRoleArn,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Type of configurations contained in the profile. Valid values: AWS.AppConfig.FeatureFlags and AWS.Freeform.  Default: AWS.Freeform.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
	// +kubebuilder:validation:Optional
	validator?: [...#ValidatorParameters] @go(Validator,[]ValidatorParameters)
}

#ValidatorObservation: {
}

#ValidatorParameters: {
	// Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

// ConfigurationProfileSpec defines the desired state of ConfigurationProfile
#ConfigurationProfileSpec: {
	forProvider: #ConfigurationProfileParameters @go(ForProvider)
}

// ConfigurationProfileStatus defines the observed state of ConfigurationProfile.
#ConfigurationProfileStatus: {
	atProvider?: #ConfigurationProfileObservation @go(AtProvider)
}

// ConfigurationProfile is the Schema for the ConfigurationProfiles API. Provides an AppConfig Configuration Profile resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConfigurationProfile: {
	spec:    #ConfigurationProfileSpec   @go(Spec)
	status?: #ConfigurationProfileStatus @go(Status)
}

// ConfigurationProfileList contains a list of ConfigurationProfiles
#ConfigurationProfileList: {
	items: [...#ConfigurationProfile] @go(Items,[]ConfigurationProfile)
}
