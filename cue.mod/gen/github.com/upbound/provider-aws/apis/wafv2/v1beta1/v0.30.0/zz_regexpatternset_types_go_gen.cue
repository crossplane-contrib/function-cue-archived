// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/wafv2/v1beta1

package v1beta1

#RegexPatternSetObservation: {
	// The Amazon Resource Name (ARN) that identifies the cluster.
	arn?: null | string @go(Arn,*string)

	// A unique identifier for the set.
	id?:        null | string @go(ID,*string)
	lockToken?: null | string @go(LockToken,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#RegexPatternSetParameters: {
	// A friendly description of the regular expression pattern set.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A friendly name of the regular expression pattern set.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// One or more blocks of regular expression patterns that you want AWS WAF to search for, such as B[a@]dB[o0]t. See Regular Expression below for details.
	// +kubebuilder:validation:Optional
	regularExpression?: [...#RegularExpressionParameters] @go(RegularExpression,[]RegularExpressionParameters)

	// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.
	// +kubebuilder:validation:Required
	scope?: null | string @go(Scope,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#RegularExpressionObservation: {
}

#RegularExpressionParameters: {
	// The string representing the regular expression, see the AWS WAF documentation for more information.
	// +kubebuilder:validation:Required
	regexString?: null | string @go(RegexString,*string)
}

// RegexPatternSetSpec defines the desired state of RegexPatternSet
#RegexPatternSetSpec: {
	forProvider: #RegexPatternSetParameters @go(ForProvider)
}

// RegexPatternSetStatus defines the observed state of RegexPatternSet.
#RegexPatternSetStatus: {
	atProvider?: #RegexPatternSetObservation @go(AtProvider)
}

// RegexPatternSet is the Schema for the RegexPatternSets API. Provides an AWS WAFv2 Regex Pattern Set resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RegexPatternSet: {
	spec:    #RegexPatternSetSpec   @go(Spec)
	status?: #RegexPatternSetStatus @go(Status)
}

// RegexPatternSetList contains a list of RegexPatternSets
#RegexPatternSetList: {
	items: [...#RegexPatternSet] @go(Items,[]RegexPatternSet)
}
