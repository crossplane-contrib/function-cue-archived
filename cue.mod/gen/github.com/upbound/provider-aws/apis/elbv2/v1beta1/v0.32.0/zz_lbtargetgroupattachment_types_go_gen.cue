// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/elbv2/v1beta1

package v1beta1

#LBTargetGroupAttachmentObservation: {
	// A unique identifier for the attachment
	id?: null | string @go(ID,*string)
}

#LBTargetGroupAttachmentParameters: {
	// The Availability Zone where the IP address of the target is to be registered. If the private ip address is outside of the VPC scope, this value must be set to 'all'.
	// +kubebuilder:validation:Optional
	availabilityZone?: null | string @go(AvailabilityZone,*string)

	// The port on which targets receive traffic.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN of the target group with which to register targets
	// +crossplane:generate:reference:type=LBTargetGroup
	// +kubebuilder:validation:Optional
	targetGroupArn?: null | string @go(TargetGroupArn,*string)

	// The ID of the target. This is the Instance ID for an instance, or the container ID for an ECS container. If the target type is ip, specify an IP address. If the target type is lambda, specify the arn of lambda. If the target type is alb, specify the arn of alb.
	// +kubebuilder:validation:Required
	targetId?: null | string @go(TargetID,*string)
}

// LBTargetGroupAttachmentSpec defines the desired state of LBTargetGroupAttachment
#LBTargetGroupAttachmentSpec: {
	forProvider: #LBTargetGroupAttachmentParameters @go(ForProvider)
}

// LBTargetGroupAttachmentStatus defines the observed state of LBTargetGroupAttachment.
#LBTargetGroupAttachmentStatus: {
	atProvider?: #LBTargetGroupAttachmentObservation @go(AtProvider)
}

// LBTargetGroupAttachment is the Schema for the LBTargetGroupAttachments API. Provides the ability to register instances and containers with a LB target group
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#LBTargetGroupAttachment: {
	spec:    #LBTargetGroupAttachmentSpec   @go(Spec)
	status?: #LBTargetGroupAttachmentStatus @go(Status)
}

// LBTargetGroupAttachmentList contains a list of LBTargetGroupAttachments
#LBTargetGroupAttachmentList: {
	items: [...#LBTargetGroupAttachment] @go(Items,[]LBTargetGroupAttachment)
}
