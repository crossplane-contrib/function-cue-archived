// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/codecommit/v1beta1

package v1beta1

#RepositoryObservation: {
	// The ARN of the repository
	arn?: null | string @go(Arn,*string)

	// The URL to use for cloning the repository over HTTPS.
	cloneUrlHttp?: null | string @go(CloneURLHTTP,*string)

	// The URL to use for cloning the repository over SSH.
	cloneUrlSsh?: null | string @go(CloneURLSSH,*string)
	id?:          null | string @go(ID,*string)

	// The ID of the repository
	repositoryId?: null | string @go(RepositoryID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#RepositoryParameters: {
	// The default branch of the repository. The branch specified here needs to exist.
	// +kubebuilder:validation:Optional
	defaultBranch?: null | string @go(DefaultBranch,*string)

	// The description of the repository. This needs to be less than 1000 characters
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// RepositorySpec defines the desired state of Repository
#RepositorySpec: {
	forProvider: #RepositoryParameters @go(ForProvider)
}

// RepositoryStatus defines the observed state of Repository.
#RepositoryStatus: {
	atProvider?: #RepositoryObservation @go(AtProvider)
}

// Repository is the Schema for the Repositorys API. Provides a CodeCommit Repository Resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Repository: {
	spec:    #RepositorySpec   @go(Spec)
	status?: #RepositoryStatus @go(Status)
}

// RepositoryList contains a list of Repositorys
#RepositoryList: {
	items: [...#Repository] @go(Items,[]Repository)
}
