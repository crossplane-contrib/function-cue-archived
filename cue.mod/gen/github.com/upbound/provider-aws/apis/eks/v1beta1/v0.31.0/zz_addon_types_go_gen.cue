// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/eks/v1beta1

package v1beta1

#AddonObservation: {
	// Amazon Resource Name (ARN) of the EKS add-on.
	arn?: null | string @go(Arn,*string)

	// Date and time in RFC3339 format that the EKS add-on was created.
	createdAt?: null | string @go(CreatedAt,*string)

	// EKS Cluster name and EKS Addon name separated by a colon (:).
	id?: null | string @go(ID,*string)

	// Date and time in RFC3339 format that the EKS add-on was updated.
	modifiedAt?: null | string @go(ModifiedAt,*string)

	// Key-value map of resource tags, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#AddonParameters: {
	// on. The version must
	// match one of the versions returned by describe-addon-versions.
	// +kubebuilder:validation:Optional
	addonVersion?: null | string @go(AddonVersion,*string)

	// 100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (^[0-9A-Za-z][A-Za-z0-9\-_]+$).
	// +crossplane:generate:reference:type=Cluster
	// +kubebuilder:validation:Optional
	clusterName?: null | string @go(ClusterName,*string)

	// custom configuration values for addons with single JSON string. This JSON string value must match the JSON schema derived from describe-addon-configuration.
	// +kubebuilder:validation:Optional
	configurationValues?: null | string @go(ConfigurationValues,*string)

	// Indicates if you want to preserve the created resources when deleting the EKS add-on.
	// +kubebuilder:validation:Optional
	preserve?: null | bool @go(Preserve,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Define how to resolve parameter value conflicts
	// when migrating an existing add-on to an Amazon EKS add-on or when applying
	// version updates to the add-on. Valid values are NONE, OVERWRITE and PRESERVE. For more details check UpdateAddon API Docs.
	// +kubebuilder:validation:Optional
	resolveConflicts?: null | string @go(ResolveConflicts,*string)

	// The Amazon Resource Name (ARN) of an
	// existing IAM role to bind to the add-on's service account. The role must be
	// assigned the IAM permissions required by the add-on. If you don't specify
	// an existing IAM role, then the add-on uses the permissions assigned to the node
	// IAM role. For more information, see Amazon EKS node IAM role
	// in the Amazon EKS User Guide.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	serviceAccountRoleArn?: null | string @go(ServiceAccountRoleArn,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// AddonSpec defines the desired state of Addon
#AddonSpec: {
	forProvider: #AddonParameters @go(ForProvider)
}

// AddonStatus defines the observed state of Addon.
#AddonStatus: {
	atProvider?: #AddonObservation @go(AtProvider)
}

// Addon is the Schema for the Addons API. Manages an EKS add-on
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Addon: {
	spec:    #AddonSpec   @go(Spec)
	status?: #AddonStatus @go(Status)
}

// AddonList contains a list of Addons
#AddonList: {
	items: [...#Addon] @go(Items,[]Addon)
}
