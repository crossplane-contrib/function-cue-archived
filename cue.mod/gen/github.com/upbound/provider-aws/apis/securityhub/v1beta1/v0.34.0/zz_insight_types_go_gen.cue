// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/securityhub/v1beta1

package v1beta1

#AwsAccountIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#AwsAccountIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#CompanyNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#CompanyNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ComplianceStatusObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ComplianceStatusParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ConfidenceObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#ConfidenceParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#CreatedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#DateRangeObservation] @go(DateRange,[]DateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#CreatedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#DateRangeParameters] @go(DateRange,[]DateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#CriticalityObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#CriticalityParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#DateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#DateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#DescriptionObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#DescriptionParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#FiltersObservation: {
	// AWS account ID that a finding is generated in. See String_Filter below for more details.
	awsAccountId?: [...#AwsAccountIDObservation] @go(AwsAccountID,[]AwsAccountIDObservation)

	// The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
	companyName?: [...#CompanyNameObservation] @go(CompanyName,[]CompanyNameObservation)

	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
	complianceStatus?: [...#ComplianceStatusObservation] @go(ComplianceStatus,[]ComplianceStatusObservation)

	// A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	confidence?: [...#ConfidenceObservation] @go(Confidence,[]ConfidenceObservation)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
	createdAt?: [...#CreatedAtObservation] @go(CreatedAt,[]CreatedAtObservation)

	// The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	criticality?: [...#CriticalityObservation] @go(Criticality,[]CriticalityObservation)

	// A finding's description. See String Filter below for more details.
	description?: [...#DescriptionObservation] @go(Description,[]DescriptionObservation)

	// The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	findingProviderFieldsConfidence?: [...#FindingProviderFieldsConfidenceObservation] @go(FindingProviderFieldsConfidence,[]FindingProviderFieldsConfidenceObservation)

	// The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	findingProviderFieldsCriticality?: [...#FindingProviderFieldsCriticalityObservation] @go(FindingProviderFieldsCriticality,[]FindingProviderFieldsCriticalityObservation)

	// The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
	findingProviderFieldsRelatedFindingsId?: [...#FindingProviderFieldsRelatedFindingsIDObservation] @go(FindingProviderFieldsRelatedFindingsID,[]FindingProviderFieldsRelatedFindingsIDObservation)

	// The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
	findingProviderFieldsRelatedFindingsProductArn?: [...#FindingProviderFieldsRelatedFindingsProductArnObservation] @go(FindingProviderFieldsRelatedFindingsProductArn,[]FindingProviderFieldsRelatedFindingsProductArnObservation)

	// The finding provider value for the severity label. See String Filter below for more details.
	findingProviderFieldsSeverityLabel?: [...#FindingProviderFieldsSeverityLabelObservation] @go(FindingProviderFieldsSeverityLabel,[]FindingProviderFieldsSeverityLabelObservation)

	// The finding provider's original value for the severity. See String Filter below for more details.
	findingProviderFieldsSeverityOriginal?: [...#FindingProviderFieldsSeverityOriginalObservation] @go(FindingProviderFieldsSeverityOriginal,[]FindingProviderFieldsSeverityOriginalObservation)

	// One or more finding types that the finding provider assigned to the finding. Uses the format of namespace/category/classifier that classify a finding. Valid namespace values include: Software and Configuration Checks, TTPs, Effects, Unusual Behaviors, and Sensitive Data Identifications. See String Filter below for more details.
	findingProviderFieldsTypes?: [...#FindingProviderFieldsTypesObservation] @go(FindingProviderFieldsTypes,[]FindingProviderFieldsTypesObservation)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
	firstObservedAt?: [...#FirstObservedAtObservation] @go(FirstObservedAt,[]FirstObservedAtObservation)

	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
	generatorId?: [...#GeneratorIDObservation] @go(GeneratorID,[]GeneratorIDObservation)

	// The security findings provider-specific identifier for a finding. See String Filter below for more details.
	id?: [...#IDObservation] @go(ID,[]IDObservation)

	// A keyword for a finding. See Keyword Filter below for more details.
	keyword?: [...#KeywordObservation] @go(Keyword,[]KeywordObservation)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
	lastObservedAt?: [...#LastObservedAtObservation] @go(LastObservedAt,[]LastObservedAtObservation)

	// The name of the malware that was observed. See String Filter below for more details.
	malwareName?: [...#MalwareNameObservation] @go(MalwareName,[]MalwareNameObservation)

	// The filesystem path of the malware that was observed. See String Filter below for more details.
	malwarePath?: [...#MalwarePathObservation] @go(MalwarePath,[]MalwarePathObservation)

	// The state of the malware that was observed. See String Filter below for more details.
	malwareState?: [...#MalwareStateObservation] @go(MalwareState,[]MalwareStateObservation)

	// The type of the malware that was observed. See String Filter below for more details.
	malwareType?: [...#MalwareTypeObservation] @go(MalwareType,[]MalwareTypeObservation)

	// The destination domain of network-related information about a finding. See String Filter below for more details.
	networkDestinationDomain?: [...#NetworkDestinationDomainObservation] @go(NetworkDestinationDomain,[]NetworkDestinationDomainObservation)

	// The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	networkDestinationIpv4?: [...#NetworkDestinationIPv4Observation] @go(NetworkDestinationIPv4,[]NetworkDestinationIPv4Observation)

	// The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	networkDestinationIpv6?: [...#NetworkDestinationIPv6Observation] @go(NetworkDestinationIPv6,[]NetworkDestinationIPv6Observation)

	// The destination port of network-related information about a finding. See Number Filter below for more details.
	networkDestinationPort?: [...#NetworkDestinationPortObservation] @go(NetworkDestinationPort,[]NetworkDestinationPortObservation)

	// Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
	networkDirection?: [...#NetworkDirectionObservation] @go(NetworkDirection,[]NetworkDirectionObservation)

	// The protocol of network-related information about a finding. See String Filter below for more details.
	networkProtocol?: [...#NetworkProtocolObservation] @go(NetworkProtocol,[]NetworkProtocolObservation)

	// The source domain of network-related information about a finding. See String Filter below for more details.
	networkSourceDomain?: [...#NetworkSourceDomainObservation] @go(NetworkSourceDomain,[]NetworkSourceDomainObservation)

	// The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	networkSourceIpv4?: [...#NetworkSourceIPv4Observation] @go(NetworkSourceIPv4,[]NetworkSourceIPv4Observation)

	// The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	networkSourceIpv6?: [...#NetworkSourceIPv6Observation] @go(NetworkSourceIPv6,[]NetworkSourceIPv6Observation)

	// The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
	networkSourceMac?: [...#NetworkSourceMacObservation] @go(NetworkSourceMac,[]NetworkSourceMacObservation)

	// The source port of network-related information about a finding. See Number Filter below for more details.
	networkSourcePort?: [...#NetworkSourcePortObservation] @go(NetworkSourcePort,[]NetworkSourcePortObservation)

	// The text of a note. See String Filter below for more details.
	noteText?: [...#NoteTextObservation] @go(NoteText,[]NoteTextObservation)

	// The timestamp of when the note was updated. See Date Filter below for more details.
	noteUpdatedAt?: [...#NoteUpdatedAtObservation] @go(NoteUpdatedAt,[]NoteUpdatedAtObservation)

	// The principal that created a note. See String Filter below for more details.
	noteUpdatedBy?: [...#NoteUpdatedByObservation] @go(NoteUpdatedBy,[]NoteUpdatedByObservation)

	// The date/time that the process was launched. See Date Filter below for more details.
	processLaunchedAt?: [...#ProcessLaunchedAtObservation] @go(ProcessLaunchedAt,[]ProcessLaunchedAtObservation)

	// The name of the process. See String Filter below for more details.
	processName?: [...#ProcessNameObservation] @go(ProcessName,[]ProcessNameObservation)

	// The parent process ID. See Number Filter below for more details.
	processParentPid?: [...#ProcessParentPidObservation] @go(ProcessParentPid,[]ProcessParentPidObservation)

	// The path to the process executable. See String Filter below for more details.
	processPath?: [...#ProcessPathObservation] @go(ProcessPath,[]ProcessPathObservation)

	// The process ID. See Number Filter below for more details.
	processPid?: [...#ProcessPidObservation] @go(ProcessPid,[]ProcessPidObservation)

	// The date/time that the process was terminated. See Date Filter below for more details.
	processTerminatedAt?: [...#ProcessTerminatedAtObservation] @go(ProcessTerminatedAt,[]ProcessTerminatedAtObservation)

	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
	productArn?: [...#ProductArnObservation] @go(ProductArn,[]ProductArnObservation)

	// A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format. See Map Filter below for more details.
	productFields?: [...#ProductFieldsObservation] @go(ProductFields,[]ProductFieldsObservation)

	// The name of the solution (product) that generates findings. See String Filter below for more details.
	productName?: [...#ProductNameObservation] @go(ProductName,[]ProductNameObservation)

	// The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
	recommendationText?: [...#RecommendationTextObservation] @go(RecommendationText,[]RecommendationTextObservation)

	// The updated record state for the finding. See String Filter below for more details.
	recordState?: [...#RecordStateObservation] @go(RecordState,[]RecordStateObservation)

	// The solution-generated identifier for a related finding. See String Filter below for more details.
	relatedFindingsId?: [...#RelatedFindingsIDObservation] @go(RelatedFindingsID,[]RelatedFindingsIDObservation)

	// The ARN of the solution that generated a related finding. See String Filter below for more details.
	relatedFindingsProductArn?: [...#RelatedFindingsProductArnObservation] @go(RelatedFindingsProductArn,[]RelatedFindingsProductArnObservation)

	// The IAM profile ARN of the instance. See String Filter below for more details.
	resourceAwsEc2InstanceIamInstanceProfileArn?: [...#ResourceAwsEC2InstanceIAMInstanceProfileArnObservation] @go(ResourceAwsEC2InstanceIAMInstanceProfileArn,[]ResourceAwsEC2InstanceIAMInstanceProfileArnObservation)

	// The IPv4 addresses associated with the instance. See Ip Filter below for more details.
	resourceAwsEc2InstanceIpv4Addresses?: [...#ResourceAwsEC2InstanceIPv4AddressesObservation] @go(ResourceAwsEC2InstanceIPv4Addresses,[]ResourceAwsEC2InstanceIPv4AddressesObservation)

	// The IPv6 addresses associated with the instance. See Ip Filter below for more details.
	resourceAwsEc2InstanceIpv6Addresses?: [...#ResourceAwsEC2InstanceIPv6AddressesObservation] @go(ResourceAwsEC2InstanceIPv6Addresses,[]ResourceAwsEC2InstanceIPv6AddressesObservation)

	// The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
	resourceAwsEc2InstanceImageId?: [...#ResourceAwsEC2InstanceImageIDObservation] @go(ResourceAwsEC2InstanceImageID,[]ResourceAwsEC2InstanceImageIDObservation)

	// The key name associated with the instance. See String Filter below for more details.
	resourceAwsEc2InstanceKeyName?: [...#ResourceAwsEC2InstanceKeyNameObservation] @go(ResourceAwsEC2InstanceKeyName,[]ResourceAwsEC2InstanceKeyNameObservation)

	// The date and time the instance was launched. See Date Filter below for more details.
	resourceAwsEc2InstanceLaunchedAt?: [...#ResourceAwsEC2InstanceLaunchedAtObservation] @go(ResourceAwsEC2InstanceLaunchedAt,[]ResourceAwsEC2InstanceLaunchedAtObservation)

	// The identifier of the subnet that the instance was launched in. See String Filter below for more details.
	resourceAwsEc2InstanceSubnetId?: [...#ResourceAwsEC2InstanceSubnetIDObservation] @go(ResourceAwsEC2InstanceSubnetID,[]ResourceAwsEC2InstanceSubnetIDObservation)

	// The instance type of the instance. See String Filter below for more details.
	resourceAwsEc2InstanceType?: [...#ResourceAwsEC2InstanceTypeObservation] @go(ResourceAwsEC2InstanceType,[]ResourceAwsEC2InstanceTypeObservation)

	// The identifier of the VPC that the instance was launched in. See String Filter below for more details.
	resourceAwsEc2InstanceVpcId?: [...#ResourceAwsEC2InstanceVPCIDObservation] @go(ResourceAwsEC2InstanceVPCID,[]ResourceAwsEC2InstanceVPCIDObservation)

	// The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
	resourceAwsIamAccessKeyCreatedAt?: [...#ResourceAwsIAMAccessKeyCreatedAtObservation] @go(ResourceAwsIAMAccessKeyCreatedAt,[]ResourceAwsIAMAccessKeyCreatedAtObservation)

	// The status of the IAM access key related to a finding. See String Filter below for more details.
	resourceAwsIamAccessKeyStatus?: [...#ResourceAwsIAMAccessKeyStatusObservation] @go(ResourceAwsIAMAccessKeyStatus,[]ResourceAwsIAMAccessKeyStatusObservation)

	// The user associated with the IAM access key related to a finding. See String Filter below for more details.
	resourceAwsIamAccessKeyUserName?: [...#ResourceAwsIAMAccessKeyUserNameObservation] @go(ResourceAwsIAMAccessKeyUserName,[]ResourceAwsIAMAccessKeyUserNameObservation)

	// The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
	resourceAwsS3BucketOwnerId?: [...#ResourceAwsS3BucketOwnerIDObservation] @go(ResourceAwsS3BucketOwnerID,[]ResourceAwsS3BucketOwnerIDObservation)

	// The display name of the owner of the S3 bucket. See String Filter below for more details.
	resourceAwsS3BucketOwnerName?: [...#ResourceAwsS3BucketOwnerNameObservation] @go(ResourceAwsS3BucketOwnerName,[]ResourceAwsS3BucketOwnerNameObservation)

	// The identifier of the image related to a finding. See String Filter below for more details.
	resourceContainerImageId?: [...#ResourceContainerImageIDObservation] @go(ResourceContainerImageID,[]ResourceContainerImageIDObservation)

	// The name of the image related to a finding. See String Filter below for more details.
	resourceContainerImageName?: [...#ResourceContainerImageNameObservation] @go(ResourceContainerImageName,[]ResourceContainerImageNameObservation)

	// The date/time that the container was started. See Date Filter below for more details.
	resourceContainerLaunchedAt?: [...#ResourceContainerLaunchedAtObservation] @go(ResourceContainerLaunchedAt,[]ResourceContainerLaunchedAtObservation)

	// The name of the container related to a finding. See String Filter below for more details.
	resourceContainerName?: [...#ResourceContainerNameObservation] @go(ResourceContainerName,[]ResourceContainerNameObservation)

	// The details of a resource that doesn't have a specific subfield for the resource type defined. See Map Filter below for more details.
	resourceDetailsOther?: [...#ResourceDetailsOtherObservation] @go(ResourceDetailsOther,[]ResourceDetailsOtherObservation)

	// The canonical identifier for the given resource type. See String Filter below for more details.
	resourceId?: [...#ResourceIDObservation] @go(ResourceID,[]ResourceIDObservation)

	// The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
	resourcePartition?: [...#ResourcePartitionObservation] @go(ResourcePartition,[]ResourcePartitionObservation)

	// The canonical AWS external Region name where this resource is located. See String Filter below for more details.
	resourceRegion?: [...#ResourceRegionObservation] @go(ResourceRegion,[]ResourceRegionObservation)

	// A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
	resourceTags?: [...#ResourceTagsObservation] @go(ResourceTags,[]ResourceTagsObservation)

	// Specifies the type of the resource that details are provided for. See String Filter below for more details.
	resourceType?: [...#ResourceTypeObservation] @go(ResourceType,[]ResourceTypeObservation)

	// The label of a finding's severity. See String Filter below for more details.
	severityLabel?: [...#SeverityLabelObservation] @go(SeverityLabel,[]SeverityLabelObservation)

	// A URL that links to a page about the current finding in the security-findings provider's solution. See String Filter below for more details.
	sourceUrl?: [...#SourceURLObservation] @go(SourceURL,[]SourceURLObservation)

	// The category of a threat intelligence indicator. See String Filter below for more details.
	threatIntelIndicatorCategory?: [...#ThreatIntelIndicatorCategoryObservation] @go(ThreatIntelIndicatorCategory,[]ThreatIntelIndicatorCategoryObservation)

	// The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
	threatIntelIndicatorLastObservedAt?: [...#ThreatIntelIndicatorLastObservedAtObservation] @go(ThreatIntelIndicatorLastObservedAt,[]ThreatIntelIndicatorLastObservedAtObservation)

	// The source of the threat intelligence. See String Filter below for more details.
	threatIntelIndicatorSource?: [...#ThreatIntelIndicatorSourceObservation] @go(ThreatIntelIndicatorSource,[]ThreatIntelIndicatorSourceObservation)

	// The URL for more details from the source of the threat intelligence. See String Filter below for more details.
	threatIntelIndicatorSourceUrl?: [...#ThreatIntelIndicatorSourceURLObservation] @go(ThreatIntelIndicatorSourceURL,[]ThreatIntelIndicatorSourceURLObservation)

	// The type of a threat intelligence indicator. See String Filter below for more details.
	threatIntelIndicatorType?: [...#ThreatIntelIndicatorTypeObservation] @go(ThreatIntelIndicatorType,[]ThreatIntelIndicatorTypeObservation)

	// The value of a threat intelligence indicator. See String Filter below for more details.
	threatIntelIndicatorValue?: [...#ThreatIntelIndicatorValueObservation] @go(ThreatIntelIndicatorValue,[]ThreatIntelIndicatorValueObservation)

	// A finding's title. See String Filter below for more details.
	title?: [...#TitleObservation] @go(Title,[]TitleObservation)

	// A finding type in the format of namespace/category/classifier that classifies a finding. See String Filter below for more details.
	type?: [...#TypeObservation] @go(Type,[]TypeObservation)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
	updatedAt?: [...#UpdatedAtObservation] @go(UpdatedAt,[]UpdatedAtObservation)

	// A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
	userDefinedValues?: [...#UserDefinedValuesObservation] @go(UserDefinedValues,[]UserDefinedValuesObservation)

	// The veracity of a finding. See String Filter below for more details.
	verificationState?: [...#VerificationStateObservation] @go(VerificationState,[]VerificationStateObservation)

	// The status of the investigation into a finding. See Workflow Status Filter below for more details.
	workflowStatus?: [...#WorkflowStatusObservation] @go(WorkflowStatus,[]WorkflowStatusObservation)
}

#FiltersParameters: {
	// AWS account ID that a finding is generated in. See String_Filter below for more details.
	// +kubebuilder:validation:Optional
	awsAccountId?: [...#AwsAccountIDParameters] @go(AwsAccountID,[]AwsAccountIDParameters)

	// The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
	// +kubebuilder:validation:Optional
	companyName?: [...#CompanyNameParameters] @go(CompanyName,[]CompanyNameParameters)

	// Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	complianceStatus?: [...#ComplianceStatusParameters] @go(ComplianceStatus,[]ComplianceStatusParameters)

	// A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	confidence?: [...#ConfidenceParameters] @go(Confidence,[]ConfidenceParameters)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	createdAt?: [...#CreatedAtParameters] @go(CreatedAt,[]CreatedAtParameters)

	// The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	criticality?: [...#CriticalityParameters] @go(Criticality,[]CriticalityParameters)

	// A finding's description. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	description?: [...#DescriptionParameters] @go(Description,[]DescriptionParameters)

	// The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	findingProviderFieldsConfidence?: [...#FindingProviderFieldsConfidenceParameters] @go(FindingProviderFieldsConfidence,[]FindingProviderFieldsConfidenceParameters)

	// The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	findingProviderFieldsCriticality?: [...#FindingProviderFieldsCriticalityParameters] @go(FindingProviderFieldsCriticality,[]FindingProviderFieldsCriticalityParameters)

	// The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	findingProviderFieldsRelatedFindingsId?: [...#FindingProviderFieldsRelatedFindingsIDParameters] @go(FindingProviderFieldsRelatedFindingsID,[]FindingProviderFieldsRelatedFindingsIDParameters)

	// The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	findingProviderFieldsRelatedFindingsProductArn?: [...#FindingProviderFieldsRelatedFindingsProductArnParameters] @go(FindingProviderFieldsRelatedFindingsProductArn,[]FindingProviderFieldsRelatedFindingsProductArnParameters)

	// The finding provider value for the severity label. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	findingProviderFieldsSeverityLabel?: [...#FindingProviderFieldsSeverityLabelParameters] @go(FindingProviderFieldsSeverityLabel,[]FindingProviderFieldsSeverityLabelParameters)

	// The finding provider's original value for the severity. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	findingProviderFieldsSeverityOriginal?: [...#FindingProviderFieldsSeverityOriginalParameters] @go(FindingProviderFieldsSeverityOriginal,[]FindingProviderFieldsSeverityOriginalParameters)

	// One or more finding types that the finding provider assigned to the finding. Uses the format of namespace/category/classifier that classify a finding. Valid namespace values include: Software and Configuration Checks, TTPs, Effects, Unusual Behaviors, and Sensitive Data Identifications. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	findingProviderFieldsTypes?: [...#FindingProviderFieldsTypesParameters] @go(FindingProviderFieldsTypes,[]FindingProviderFieldsTypesParameters)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	firstObservedAt?: [...#FirstObservedAtParameters] @go(FirstObservedAt,[]FirstObservedAtParameters)

	// The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	generatorId?: [...#GeneratorIDParameters] @go(GeneratorID,[]GeneratorIDParameters)

	// The security findings provider-specific identifier for a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	id?: [...#IDParameters] @go(ID,[]IDParameters)

	// A keyword for a finding. See Keyword Filter below for more details.
	// +kubebuilder:validation:Optional
	keyword?: [...#KeywordParameters] @go(Keyword,[]KeywordParameters)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	lastObservedAt?: [...#LastObservedAtParameters] @go(LastObservedAt,[]LastObservedAtParameters)

	// The name of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	malwareName?: [...#MalwareNameParameters] @go(MalwareName,[]MalwareNameParameters)

	// The filesystem path of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	malwarePath?: [...#MalwarePathParameters] @go(MalwarePath,[]MalwarePathParameters)

	// The state of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	malwareState?: [...#MalwareStateParameters] @go(MalwareState,[]MalwareStateParameters)

	// The type of the malware that was observed. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	malwareType?: [...#MalwareTypeParameters] @go(MalwareType,[]MalwareTypeParameters)

	// The destination domain of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	networkDestinationDomain?: [...#NetworkDestinationDomainParameters] @go(NetworkDestinationDomain,[]NetworkDestinationDomainParameters)

	// The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	networkDestinationIpv4?: [...#NetworkDestinationIPv4Parameters] @go(NetworkDestinationIPv4,[]NetworkDestinationIPv4Parameters)

	// The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	networkDestinationIpv6?: [...#NetworkDestinationIPv6Parameters] @go(NetworkDestinationIPv6,[]NetworkDestinationIPv6Parameters)

	// The destination port of network-related information about a finding. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	networkDestinationPort?: [...#NetworkDestinationPortParameters] @go(NetworkDestinationPort,[]NetworkDestinationPortParameters)

	// Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	networkDirection?: [...#NetworkDirectionParameters] @go(NetworkDirection,[]NetworkDirectionParameters)

	// The protocol of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	networkProtocol?: [...#NetworkProtocolParameters] @go(NetworkProtocol,[]NetworkProtocolParameters)

	// The source domain of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	networkSourceDomain?: [...#NetworkSourceDomainParameters] @go(NetworkSourceDomain,[]NetworkSourceDomainParameters)

	// The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	networkSourceIpv4?: [...#NetworkSourceIPv4Parameters] @go(NetworkSourceIPv4,[]NetworkSourceIPv4Parameters)

	// The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	networkSourceIpv6?: [...#NetworkSourceIPv6Parameters] @go(NetworkSourceIPv6,[]NetworkSourceIPv6Parameters)

	// The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	networkSourceMac?: [...#NetworkSourceMacParameters] @go(NetworkSourceMac,[]NetworkSourceMacParameters)

	// The source port of network-related information about a finding. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	networkSourcePort?: [...#NetworkSourcePortParameters] @go(NetworkSourcePort,[]NetworkSourcePortParameters)

	// The text of a note. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	noteText?: [...#NoteTextParameters] @go(NoteText,[]NoteTextParameters)

	// The timestamp of when the note was updated. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	noteUpdatedAt?: [...#NoteUpdatedAtParameters] @go(NoteUpdatedAt,[]NoteUpdatedAtParameters)

	// The principal that created a note. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	noteUpdatedBy?: [...#NoteUpdatedByParameters] @go(NoteUpdatedBy,[]NoteUpdatedByParameters)

	// The date/time that the process was launched. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	processLaunchedAt?: [...#ProcessLaunchedAtParameters] @go(ProcessLaunchedAt,[]ProcessLaunchedAtParameters)

	// The name of the process. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	processName?: [...#ProcessNameParameters] @go(ProcessName,[]ProcessNameParameters)

	// The parent process ID. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	processParentPid?: [...#ProcessParentPidParameters] @go(ProcessParentPid,[]ProcessParentPidParameters)

	// The path to the process executable. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	processPath?: [...#ProcessPathParameters] @go(ProcessPath,[]ProcessPathParameters)

	// The process ID. See Number Filter below for more details.
	// +kubebuilder:validation:Optional
	processPid?: [...#ProcessPidParameters] @go(ProcessPid,[]ProcessPidParameters)

	// The date/time that the process was terminated. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	processTerminatedAt?: [...#ProcessTerminatedAtParameters] @go(ProcessTerminatedAt,[]ProcessTerminatedAtParameters)

	// The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	productArn?: [...#ProductArnParameters] @go(ProductArn,[]ProductArnParameters)

	// A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	productFields?: [...#ProductFieldsParameters] @go(ProductFields,[]ProductFieldsParameters)

	// The name of the solution (product) that generates findings. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	productName?: [...#ProductNameParameters] @go(ProductName,[]ProductNameParameters)

	// The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	recommendationText?: [...#RecommendationTextParameters] @go(RecommendationText,[]RecommendationTextParameters)

	// The updated record state for the finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	recordState?: [...#RecordStateParameters] @go(RecordState,[]RecordStateParameters)

	// The solution-generated identifier for a related finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	relatedFindingsId?: [...#RelatedFindingsIDParameters] @go(RelatedFindingsID,[]RelatedFindingsIDParameters)

	// The ARN of the solution that generated a related finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	relatedFindingsProductArn?: [...#RelatedFindingsProductArnParameters] @go(RelatedFindingsProductArn,[]RelatedFindingsProductArnParameters)

	// The IAM profile ARN of the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceIamInstanceProfileArn?: [...#ResourceAwsEC2InstanceIAMInstanceProfileArnParameters] @go(ResourceAwsEC2InstanceIAMInstanceProfileArn,[]ResourceAwsEC2InstanceIAMInstanceProfileArnParameters)

	// The IPv4 addresses associated with the instance. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceIpv4Addresses?: [...#ResourceAwsEC2InstanceIPv4AddressesParameters] @go(ResourceAwsEC2InstanceIPv4Addresses,[]ResourceAwsEC2InstanceIPv4AddressesParameters)

	// The IPv6 addresses associated with the instance. See Ip Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceIpv6Addresses?: [...#ResourceAwsEC2InstanceIPv6AddressesParameters] @go(ResourceAwsEC2InstanceIPv6Addresses,[]ResourceAwsEC2InstanceIPv6AddressesParameters)

	// The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceImageId?: [...#ResourceAwsEC2InstanceImageIDParameters] @go(ResourceAwsEC2InstanceImageID,[]ResourceAwsEC2InstanceImageIDParameters)

	// The key name associated with the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceKeyName?: [...#ResourceAwsEC2InstanceKeyNameParameters] @go(ResourceAwsEC2InstanceKeyName,[]ResourceAwsEC2InstanceKeyNameParameters)

	// The date and time the instance was launched. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceLaunchedAt?: [...#ResourceAwsEC2InstanceLaunchedAtParameters] @go(ResourceAwsEC2InstanceLaunchedAt,[]ResourceAwsEC2InstanceLaunchedAtParameters)

	// The identifier of the subnet that the instance was launched in. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceSubnetId?: [...#ResourceAwsEC2InstanceSubnetIDParameters] @go(ResourceAwsEC2InstanceSubnetID,[]ResourceAwsEC2InstanceSubnetIDParameters)

	// The instance type of the instance. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceType?: [...#ResourceAwsEC2InstanceTypeParameters] @go(ResourceAwsEC2InstanceType,[]ResourceAwsEC2InstanceTypeParameters)

	// The identifier of the VPC that the instance was launched in. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsEc2InstanceVpcId?: [...#ResourceAwsEC2InstanceVPCIDParameters] @go(ResourceAwsEC2InstanceVPCID,[]ResourceAwsEC2InstanceVPCIDParameters)

	// The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsIamAccessKeyCreatedAt?: [...#ResourceAwsIAMAccessKeyCreatedAtParameters] @go(ResourceAwsIAMAccessKeyCreatedAt,[]ResourceAwsIAMAccessKeyCreatedAtParameters)

	// The status of the IAM access key related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsIamAccessKeyStatus?: [...#ResourceAwsIAMAccessKeyStatusParameters] @go(ResourceAwsIAMAccessKeyStatus,[]ResourceAwsIAMAccessKeyStatusParameters)

	// The user associated with the IAM access key related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsIamAccessKeyUserName?: [...#ResourceAwsIAMAccessKeyUserNameParameters] @go(ResourceAwsIAMAccessKeyUserName,[]ResourceAwsIAMAccessKeyUserNameParameters)

	// The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsS3BucketOwnerId?: [...#ResourceAwsS3BucketOwnerIDParameters] @go(ResourceAwsS3BucketOwnerID,[]ResourceAwsS3BucketOwnerIDParameters)

	// The display name of the owner of the S3 bucket. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceAwsS3BucketOwnerName?: [...#ResourceAwsS3BucketOwnerNameParameters] @go(ResourceAwsS3BucketOwnerName,[]ResourceAwsS3BucketOwnerNameParameters)

	// The identifier of the image related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceContainerImageId?: [...#ResourceContainerImageIDParameters] @go(ResourceContainerImageID,[]ResourceContainerImageIDParameters)

	// The name of the image related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceContainerImageName?: [...#ResourceContainerImageNameParameters] @go(ResourceContainerImageName,[]ResourceContainerImageNameParameters)

	// The date/time that the container was started. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceContainerLaunchedAt?: [...#ResourceContainerLaunchedAtParameters] @go(ResourceContainerLaunchedAt,[]ResourceContainerLaunchedAtParameters)

	// The name of the container related to a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceContainerName?: [...#ResourceContainerNameParameters] @go(ResourceContainerName,[]ResourceContainerNameParameters)

	// The details of a resource that doesn't have a specific subfield for the resource type defined. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceDetailsOther?: [...#ResourceDetailsOtherParameters] @go(ResourceDetailsOther,[]ResourceDetailsOtherParameters)

	// The canonical identifier for the given resource type. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceId?: [...#ResourceIDParameters] @go(ResourceID,[]ResourceIDParameters)

	// The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourcePartition?: [...#ResourcePartitionParameters] @go(ResourcePartition,[]ResourcePartitionParameters)

	// The canonical AWS external Region name where this resource is located. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceRegion?: [...#ResourceRegionParameters] @go(ResourceRegion,[]ResourceRegionParameters)

	// A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceTags?: [...#ResourceTagsParameters] @go(ResourceTags,[]ResourceTagsParameters)

	// Specifies the type of the resource that details are provided for. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	resourceType?: [...#ResourceTypeParameters] @go(ResourceType,[]ResourceTypeParameters)

	// The label of a finding's severity. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	severityLabel?: [...#SeverityLabelParameters] @go(SeverityLabel,[]SeverityLabelParameters)

	// A URL that links to a page about the current finding in the security-findings provider's solution. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	sourceUrl?: [...#SourceURLParameters] @go(SourceURL,[]SourceURLParameters)

	// The category of a threat intelligence indicator. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	threatIntelIndicatorCategory?: [...#ThreatIntelIndicatorCategoryParameters] @go(ThreatIntelIndicatorCategory,[]ThreatIntelIndicatorCategoryParameters)

	// The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	threatIntelIndicatorLastObservedAt?: [...#ThreatIntelIndicatorLastObservedAtParameters] @go(ThreatIntelIndicatorLastObservedAt,[]ThreatIntelIndicatorLastObservedAtParameters)

	// The source of the threat intelligence. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	threatIntelIndicatorSource?: [...#ThreatIntelIndicatorSourceParameters] @go(ThreatIntelIndicatorSource,[]ThreatIntelIndicatorSourceParameters)

	// The URL for more details from the source of the threat intelligence. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	threatIntelIndicatorSourceUrl?: [...#ThreatIntelIndicatorSourceURLParameters] @go(ThreatIntelIndicatorSourceURL,[]ThreatIntelIndicatorSourceURLParameters)

	// The type of a threat intelligence indicator. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	threatIntelIndicatorType?: [...#ThreatIntelIndicatorTypeParameters] @go(ThreatIntelIndicatorType,[]ThreatIntelIndicatorTypeParameters)

	// The value of a threat intelligence indicator. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	threatIntelIndicatorValue?: [...#ThreatIntelIndicatorValueParameters] @go(ThreatIntelIndicatorValue,[]ThreatIntelIndicatorValueParameters)

	// A finding's title. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	title?: [...#TitleParameters] @go(Title,[]TitleParameters)

	// A finding type in the format of namespace/category/classifier that classifies a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	type?: [...#TypeParameters] @go(Type,[]TypeParameters)

	// An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
	// +kubebuilder:validation:Optional
	updatedAt?: [...#UpdatedAtParameters] @go(UpdatedAt,[]UpdatedAtParameters)

	// A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
	// +kubebuilder:validation:Optional
	userDefinedValues?: [...#UserDefinedValuesParameters] @go(UserDefinedValues,[]UserDefinedValuesParameters)

	// The veracity of a finding. See String Filter below for more details.
	// +kubebuilder:validation:Optional
	verificationState?: [...#VerificationStateParameters] @go(VerificationState,[]VerificationStateParameters)

	// The status of the investigation into a finding. See Workflow Status Filter below for more details.
	// +kubebuilder:validation:Optional
	workflowStatus?: [...#WorkflowStatusParameters] @go(WorkflowStatus,[]WorkflowStatusParameters)
}

#FindingProviderFieldsConfidenceObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#FindingProviderFieldsConfidenceParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#FindingProviderFieldsCriticalityObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#FindingProviderFieldsCriticalityParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#FindingProviderFieldsRelatedFindingsIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsRelatedFindingsIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsRelatedFindingsProductArnObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsRelatedFindingsProductArnParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsSeverityLabelObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsSeverityLabelParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsSeverityOriginalObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsSeverityOriginalParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsTypesObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#FindingProviderFieldsTypesParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#FirstObservedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#FirstObservedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#FirstObservedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#FirstObservedAtDateRangeObservation] @go(DateRange,[]FirstObservedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#FirstObservedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#FirstObservedAtDateRangeParameters] @go(DateRange,[]FirstObservedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#GeneratorIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#GeneratorIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#IDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#IDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#InsightObservation: {
	// ARN of the insight.
	arn?: null | string @go(Arn,*string)

	// A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.
	filters?: [...#FiltersObservation] @go(Filters,[]FiltersObservation)

	// The attribute used to group the findings for the insight e.g., if an insight is grouped by ResourceId, then the insight produces a list of resource identifiers.
	groupByAttribute?: null | string @go(GroupByAttribute,*string)

	// ARN of the insight.
	id?: null | string @go(ID,*string)

	// The name of the custom insight.
	name?: null | string @go(Name,*string)
}

#InsightParameters: {
	// A configuration block including one or more (up to 10 distinct) attributes used to filter the findings included in the insight. The insight only includes findings that match criteria defined in the filters. See filters below for more details.
	// +kubebuilder:validation:Optional
	filters?: [...#FiltersParameters] @go(Filters,[]FiltersParameters)

	// The attribute used to group the findings for the insight e.g., if an insight is grouped by ResourceId, then the insight produces a list of resource identifiers.
	// +kubebuilder:validation:Optional
	groupByAttribute?: null | string @go(GroupByAttribute,*string)

	// The name of the custom insight.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#KeywordObservation: {
	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#KeywordParameters: {
	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#LastObservedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#LastObservedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#LastObservedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#LastObservedAtDateRangeObservation] @go(DateRange,[]LastObservedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#LastObservedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#LastObservedAtDateRangeParameters] @go(DateRange,[]LastObservedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#MalwareNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#MalwareNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#MalwarePathObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#MalwarePathParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#MalwareStateObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#MalwareStateParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#MalwareTypeObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#MalwareTypeParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#NetworkDestinationDomainObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#NetworkDestinationDomainParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#NetworkDestinationIPv4Observation: {
	// A finding's CIDR value.
	cidr?: null | string @go(Cidr,*string)
}

#NetworkDestinationIPv4Parameters: {
	// A finding's CIDR value.
	// +kubebuilder:validation:Required
	cidr?: null | string @go(Cidr,*string)
}

#NetworkDestinationIPv6Observation: {
	// A finding's CIDR value.
	cidr?: null | string @go(Cidr,*string)
}

#NetworkDestinationIPv6Parameters: {
	// A finding's CIDR value.
	// +kubebuilder:validation:Required
	cidr?: null | string @go(Cidr,*string)
}

#NetworkDestinationPortObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#NetworkDestinationPortParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#NetworkDirectionObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#NetworkDirectionParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#NetworkProtocolObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#NetworkProtocolParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#NetworkSourceDomainObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#NetworkSourceDomainParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#NetworkSourceIPv4Observation: {
	// A finding's CIDR value.
	cidr?: null | string @go(Cidr,*string)
}

#NetworkSourceIPv4Parameters: {
	// A finding's CIDR value.
	// +kubebuilder:validation:Required
	cidr?: null | string @go(Cidr,*string)
}

#NetworkSourceIPv6Observation: {
	// A finding's CIDR value.
	cidr?: null | string @go(Cidr,*string)
}

#NetworkSourceIPv6Parameters: {
	// A finding's CIDR value.
	// +kubebuilder:validation:Required
	cidr?: null | string @go(Cidr,*string)
}

#NetworkSourceMacObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#NetworkSourceMacParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#NetworkSourcePortObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#NetworkSourcePortParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#NoteTextObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#NoteTextParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#NoteUpdatedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#NoteUpdatedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#NoteUpdatedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#NoteUpdatedAtDateRangeObservation] @go(DateRange,[]NoteUpdatedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#NoteUpdatedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#NoteUpdatedAtDateRangeParameters] @go(DateRange,[]NoteUpdatedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#NoteUpdatedByObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#NoteUpdatedByParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ProcessLaunchedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#ProcessLaunchedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#ProcessLaunchedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#ProcessLaunchedAtDateRangeObservation] @go(DateRange,[]ProcessLaunchedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#ProcessLaunchedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#ProcessLaunchedAtDateRangeParameters] @go(DateRange,[]ProcessLaunchedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#ProcessNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ProcessNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ProcessParentPidObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#ProcessParentPidParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#ProcessPathObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ProcessPathParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ProcessPidObservation: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	lte?: null | string @go(Lte,*string)
}

#ProcessPidParameters: {
	// The equal-to condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	eq?: null | string @go(Eq,*string)

	// The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	gte?: null | string @go(Gte,*string)

	// The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.
	// +kubebuilder:validation:Optional
	lte?: null | string @go(Lte,*string)
}

#ProcessTerminatedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#ProcessTerminatedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#ProcessTerminatedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#ProcessTerminatedAtDateRangeObservation] @go(DateRange,[]ProcessTerminatedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#ProcessTerminatedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#ProcessTerminatedAtDateRangeParameters] @go(DateRange,[]ProcessTerminatedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#ProductArnObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ProductArnParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ProductFieldsObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ProductFieldsParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ProductNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ProductNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#RecommendationTextObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#RecommendationTextParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#RecordStateObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#RecordStateParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#RelatedFindingsIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#RelatedFindingsIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#RelatedFindingsProductArnObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#RelatedFindingsProductArnParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceIAMInstanceProfileArnObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceIAMInstanceProfileArnParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceIPv4AddressesObservation: {
	// A finding's CIDR value.
	cidr?: null | string @go(Cidr,*string)
}

#ResourceAwsEC2InstanceIPv4AddressesParameters: {
	// A finding's CIDR value.
	// +kubebuilder:validation:Required
	cidr?: null | string @go(Cidr,*string)
}

#ResourceAwsEC2InstanceIPv6AddressesObservation: {
	// A finding's CIDR value.
	cidr?: null | string @go(Cidr,*string)
}

#ResourceAwsEC2InstanceIPv6AddressesParameters: {
	// A finding's CIDR value.
	// +kubebuilder:validation:Required
	cidr?: null | string @go(Cidr,*string)
}

#ResourceAwsEC2InstanceImageIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceImageIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceKeyNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceKeyNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceLaunchedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#ResourceAwsEC2InstanceLaunchedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#ResourceAwsEC2InstanceLaunchedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#ResourceAwsEC2InstanceLaunchedAtDateRangeObservation] @go(DateRange,[]ResourceAwsEC2InstanceLaunchedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#ResourceAwsEC2InstanceLaunchedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#ResourceAwsEC2InstanceLaunchedAtDateRangeParameters] @go(DateRange,[]ResourceAwsEC2InstanceLaunchedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#ResourceAwsEC2InstanceSubnetIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceSubnetIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceTypeObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceTypeParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceVPCIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsEC2InstanceVPCIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsIAMAccessKeyCreatedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#ResourceAwsIAMAccessKeyCreatedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#ResourceAwsIAMAccessKeyCreatedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#ResourceAwsIAMAccessKeyCreatedAtDateRangeObservation] @go(DateRange,[]ResourceAwsIAMAccessKeyCreatedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#ResourceAwsIAMAccessKeyCreatedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#ResourceAwsIAMAccessKeyCreatedAtDateRangeParameters] @go(DateRange,[]ResourceAwsIAMAccessKeyCreatedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#ResourceAwsIAMAccessKeyStatusObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsIAMAccessKeyStatusParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsIAMAccessKeyUserNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsIAMAccessKeyUserNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsS3BucketOwnerIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsS3BucketOwnerIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceAwsS3BucketOwnerNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceAwsS3BucketOwnerNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceContainerImageIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceContainerImageIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceContainerImageNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceContainerImageNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceContainerLaunchedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#ResourceContainerLaunchedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#ResourceContainerLaunchedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#ResourceContainerLaunchedAtDateRangeObservation] @go(DateRange,[]ResourceContainerLaunchedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#ResourceContainerLaunchedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#ResourceContainerLaunchedAtDateRangeParameters] @go(DateRange,[]ResourceContainerLaunchedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#ResourceContainerNameObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceContainerNameParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceDetailsOtherObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceDetailsOtherParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceIDObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceIDParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourcePartitionObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourcePartitionParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceRegionObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceRegionParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceTagsObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceTagsParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ResourceTypeObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ResourceTypeParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#SeverityLabelObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#SeverityLabelParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#SourceURLObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#SourceURLParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorCategoryObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorCategoryParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorLastObservedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#ThreatIntelIndicatorLastObservedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#ThreatIntelIndicatorLastObservedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#ThreatIntelIndicatorLastObservedAtDateRangeObservation] @go(DateRange,[]ThreatIntelIndicatorLastObservedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#ThreatIntelIndicatorLastObservedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#ThreatIntelIndicatorLastObservedAtDateRangeParameters] @go(DateRange,[]ThreatIntelIndicatorLastObservedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#ThreatIntelIndicatorSourceObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorSourceParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorSourceURLObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorSourceURLParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorTypeObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorTypeParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorValueObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#ThreatIntelIndicatorValueParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#TitleObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#TitleParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#TypeObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#TypeParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#UpdatedAtDateRangeObservation: {
	// A date range unit for the date filter. Valid values: DAYS.
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	value?: null | float64 @go(Value,*float64)
}

#UpdatedAtDateRangeParameters: {
	// A date range unit for the date filter. Valid values: DAYS.
	// +kubebuilder:validation:Required
	unit?: null | string @go(Unit,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

#UpdatedAtObservation: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	dateRange?: [...#UpdatedAtDateRangeObservation] @go(DateRange,[]UpdatedAtDateRangeObservation)

	// An end date for the date filter. Required with start if date_range is not specified.
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	start?: null | string @go(Start,*string)
}

#UpdatedAtParameters: {
	// A configuration block of the date range for the date filter. See date_range below for more details.
	// +kubebuilder:validation:Optional
	dateRange?: [...#UpdatedAtDateRangeParameters] @go(DateRange,[]UpdatedAtDateRangeParameters)

	// An end date for the date filter. Required with start if date_range is not specified.
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// A start date for the date filter. Required with end if date_range is not specified.
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

#UserDefinedValuesObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#UserDefinedValuesParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// The key of the map filter. For example, for ResourceTags, Key identifies the name of the tag. For UserDefinedFields, Key is the name of the field.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#VerificationStateObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#VerificationStateParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#WorkflowStatusObservation: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	value?: null | string @go(Value,*string)
}

#WorkflowStatusParameters: {
	// The condition to apply to a string value when querying for findings. Valid values include: EQUALS and NOT_EQUALS.
	// +kubebuilder:validation:Required
	comparison?: null | string @go(Comparison,*string)

	// A value for the keyword.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

// InsightSpec defines the desired state of Insight
#InsightSpec: {
	forProvider: #InsightParameters @go(ForProvider)
}

// InsightStatus defines the observed state of Insight.
#InsightStatus: {
	atProvider?: #InsightObservation @go(AtProvider)
}

// Insight is the Schema for the Insights API. Provides a Security Hub custom insight resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Insight: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.filters)",message="filters is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.groupByAttribute)",message="groupByAttribute is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #InsightSpec   @go(Spec)
	status?: #InsightStatus @go(Status)
}

// InsightList contains a list of Insights
#InsightList: {
	items: [...#Insight] @go(Items,[]Insight)
}
