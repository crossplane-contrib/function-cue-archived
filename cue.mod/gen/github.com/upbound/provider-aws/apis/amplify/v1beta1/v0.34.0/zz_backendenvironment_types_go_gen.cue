// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/amplify/v1beta1

package v1beta1

#BackendEnvironmentObservation: {
	// Unique ID for an Amplify app.
	appId?: null | string @go(AppID,*string)

	// ARN for a backend environment that is part of an Amplify app.
	arn?: null | string @go(Arn,*string)

	// Name of deployment artifacts.
	deploymentArtifacts?: null | string @go(DeploymentArtifacts,*string)

	// Unique ID of the Amplify backend environment.
	id?: null | string @go(ID,*string)

	// AWS CloudFormation stack name of a backend environment.
	stackName?: null | string @go(StackName,*string)
}

#BackendEnvironmentParameters: {
	// Unique ID for an Amplify app.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/amplify/v1beta1.App
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	appId?: null | string @go(AppID,*string)

	// Name of deployment artifacts.
	// +kubebuilder:validation:Optional
	deploymentArtifacts?: null | string @go(DeploymentArtifacts,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// AWS CloudFormation stack name of a backend environment.
	// +kubebuilder:validation:Optional
	stackName?: null | string @go(StackName,*string)
}

// BackendEnvironmentSpec defines the desired state of BackendEnvironment
#BackendEnvironmentSpec: {
	forProvider: #BackendEnvironmentParameters @go(ForProvider)
}

// BackendEnvironmentStatus defines the observed state of BackendEnvironment.
#BackendEnvironmentStatus: {
	atProvider?: #BackendEnvironmentObservation @go(AtProvider)
}

// BackendEnvironment is the Schema for the BackendEnvironments API. Provides an Amplify Backend Environment resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BackendEnvironment: {
	spec:    #BackendEnvironmentSpec   @go(Spec)
	status?: #BackendEnvironmentStatus @go(Status)
}

// BackendEnvironmentList contains a list of BackendEnvironments
#BackendEnvironmentList: {
	items: [...#BackendEnvironment] @go(Items,[]BackendEnvironment)
}
