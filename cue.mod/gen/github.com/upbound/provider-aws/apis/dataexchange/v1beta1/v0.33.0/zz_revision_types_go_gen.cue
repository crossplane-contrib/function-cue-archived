// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/dataexchange/v1beta1

package v1beta1

#RevisionObservation: {
	// The Amazon Resource Name of this data set.
	arn?: null | string @go(Arn,*string)

	// The Id of the data set.
	id?: null | string @go(ID,*string)

	// The Id of the revision.
	revisionId?: null | string @go(RevisionID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#RevisionParameters: {
	// An optional comment about the revision.
	// +kubebuilder:validation:Optional
	comment?: null | string @go(Comment,*string)

	// The dataset id.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/dataexchange/v1beta1.DataSet
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dataSetId?: null | string @go(DataSetID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// RevisionSpec defines the desired state of Revision
#RevisionSpec: {
	forProvider: #RevisionParameters @go(ForProvider)
}

// RevisionStatus defines the observed state of Revision.
#RevisionStatus: {
	atProvider?: #RevisionObservation @go(AtProvider)
}

// Revision is the Schema for the Revisions API. Provides a DataExchange Revision
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Revision: {
	spec:    #RevisionSpec   @go(Spec)
	status?: #RevisionStatus @go(Status)
}

// RevisionList contains a list of Revisions
#RevisionList: {
	items: [...#Revision] @go(Items,[]Revision)
}
