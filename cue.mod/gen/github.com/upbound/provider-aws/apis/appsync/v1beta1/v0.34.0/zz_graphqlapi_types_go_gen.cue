// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/appsync/v1beta1

package v1beta1

#AdditionalAuthenticationProviderObservation: {
	// Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
	authenticationType?: null | string @go(AuthenticationType,*string)

	// Nested argument containing Lambda authorizer configuration. Defined below.
	lambdaAuthorizerConfig?: [...#LambdaAuthorizerConfigObservation] @go(LambdaAuthorizerConfig,[]LambdaAuthorizerConfigObservation)

	// Nested argument containing OpenID Connect configuration. Defined below.
	openidConnectConfig?: [...#OpenIDConnectConfigObservation] @go(OpenIDConnectConfig,[]OpenIDConnectConfigObservation)

	// Amazon Cognito User Pool configuration. Defined below.
	userPoolConfig?: [...#UserPoolConfigObservation] @go(UserPoolConfig,[]UserPoolConfigObservation)
}

#AdditionalAuthenticationProviderParameters: {
	// Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
	// +kubebuilder:validation:Required
	authenticationType?: null | string @go(AuthenticationType,*string)

	// Nested argument containing Lambda authorizer configuration. Defined below.
	// +kubebuilder:validation:Optional
	lambdaAuthorizerConfig?: [...#LambdaAuthorizerConfigParameters] @go(LambdaAuthorizerConfig,[]LambdaAuthorizerConfigParameters)

	// Nested argument containing OpenID Connect configuration. Defined below.
	// +kubebuilder:validation:Optional
	openidConnectConfig?: [...#OpenIDConnectConfigParameters] @go(OpenIDConnectConfig,[]OpenIDConnectConfigParameters)

	// Amazon Cognito User Pool configuration. Defined below.
	// +kubebuilder:validation:Optional
	userPoolConfig?: [...#UserPoolConfigParameters] @go(UserPoolConfig,[]UserPoolConfigParameters)
}

#GraphQLAPILambdaAuthorizerConfigObservation: {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	authorizerResultTtlInSeconds?: null | float64 @go(AuthorizerResultTTLInSeconds,*float64)

	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
	authorizerUri?: null | string @go(AuthorizerURI,*string)

	// Regular expression for validation of tokens before the Lambda function is called.
	identityValidationExpression?: null | string @go(IdentityValidationExpression,*string)
}

#GraphQLAPILambdaAuthorizerConfigParameters: {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	// +kubebuilder:validation:Optional
	authorizerResultTtlInSeconds?: null | float64 @go(AuthorizerResultTTLInSeconds,*float64)

	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
	// +kubebuilder:validation:Required
	authorizerUri?: null | string @go(AuthorizerURI,*string)

	// Regular expression for validation of tokens before the Lambda function is called.
	// +kubebuilder:validation:Optional
	identityValidationExpression?: null | string @go(IdentityValidationExpression,*string)
}

#GraphQLAPIObservation: {
	// One or more additional authentication providers for the GraphqlApi. Defined below.
	additionalAuthenticationProvider?: [...#AdditionalAuthenticationProviderObservation] @go(AdditionalAuthenticationProvider,[]AdditionalAuthenticationProviderObservation)

	// ARN
	arn?: null | string @go(Arn,*string)

	// Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
	authenticationType?: null | string @go(AuthenticationType,*string)

	// API ID
	id?: null | string @go(ID,*string)

	// Nested argument containing Lambda authorizer configuration. Defined below.
	lambdaAuthorizerConfig?: [...#GraphQLAPILambdaAuthorizerConfigObservation] @go(LambdaAuthorizerConfig,[]GraphQLAPILambdaAuthorizerConfigObservation)

	// Nested argument containing logging configuration. Defined below.
	logConfig?: [...#LogConfigObservation] @go(LogConfig,[]LogConfigObservation)

	// User-supplied name for the GraphqlApi.
	name?: null | string @go(Name,*string)

	// Nested argument containing OpenID Connect configuration. Defined below.
	openidConnectConfig?: [...#GraphQLAPIOpenIDConnectConfigObservation] @go(OpenIDConnectConfig,[]GraphQLAPIOpenIDConnectConfigObservation)

	// Schema definition, in GraphQL schema language format.
	schema?: null | string @go(Schema,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// Map of URIs associated with the APIE.g., uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql
	uris?: {[string]: null | string} @go(Uris,map[string]*string)

	// Amazon Cognito User Pool configuration. Defined below.
	userPoolConfig?: [...#GraphQLAPIUserPoolConfigObservation] @go(UserPoolConfig,[]GraphQLAPIUserPoolConfigObservation)

	// Whether tracing with X-ray is enabled. Defaults to false.
	xrayEnabled?: null | bool @go(XrayEnabled,*bool)
}

#GraphQLAPIOpenIDConnectConfigObservation: {
	// Number of milliseconds a token is valid after being authenticated.
	authTtl?: null | float64 @go(AuthTTL,*float64)

	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	clientId?: null | string @go(ClientID,*string)

	// Number of milliseconds a token is valid after being issued to a user.
	iatTtl?: null | float64 @go(IatTTL,*float64)

	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	issuer?: null | string @go(Issuer,*string)
}

#GraphQLAPIOpenIDConnectConfigParameters: {
	// Number of milliseconds a token is valid after being authenticated.
	// +kubebuilder:validation:Optional
	authTtl?: null | float64 @go(AuthTTL,*float64)

	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// Number of milliseconds a token is valid after being issued to a user.
	// +kubebuilder:validation:Optional
	iatTtl?: null | float64 @go(IatTTL,*float64)

	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	// +kubebuilder:validation:Required
	issuer?: null | string @go(Issuer,*string)
}

#GraphQLAPIParameters: {
	// One or more additional authentication providers for the GraphqlApi. Defined below.
	// +kubebuilder:validation:Optional
	additionalAuthenticationProvider?: [...#AdditionalAuthenticationProviderParameters] @go(AdditionalAuthenticationProvider,[]AdditionalAuthenticationProviderParameters)

	// Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
	// +kubebuilder:validation:Optional
	authenticationType?: null | string @go(AuthenticationType,*string)

	// Nested argument containing Lambda authorizer configuration. Defined below.
	// +kubebuilder:validation:Optional
	lambdaAuthorizerConfig?: [...#GraphQLAPILambdaAuthorizerConfigParameters] @go(LambdaAuthorizerConfig,[]GraphQLAPILambdaAuthorizerConfigParameters)

	// Nested argument containing logging configuration. Defined below.
	// +kubebuilder:validation:Optional
	logConfig?: [...#LogConfigParameters] @go(LogConfig,[]LogConfigParameters)

	// User-supplied name for the GraphqlApi.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Nested argument containing OpenID Connect configuration. Defined below.
	// +kubebuilder:validation:Optional
	openidConnectConfig?: [...#GraphQLAPIOpenIDConnectConfigParameters] @go(OpenIDConnectConfig,[]GraphQLAPIOpenIDConnectConfigParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Schema definition, in GraphQL schema language format.
	// +kubebuilder:validation:Optional
	schema?: null | string @go(Schema,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Amazon Cognito User Pool configuration. Defined below.
	// +kubebuilder:validation:Optional
	userPoolConfig?: [...#GraphQLAPIUserPoolConfigParameters] @go(UserPoolConfig,[]GraphQLAPIUserPoolConfigParameters)

	// Whether tracing with X-ray is enabled. Defaults to false.
	// +kubebuilder:validation:Optional
	xrayEnabled?: null | bool @go(XrayEnabled,*bool)
}

#GraphQLAPIUserPoolConfigObservation: {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	appIdClientRegex?: null | string @go(AppIDClientRegex,*string)

	// AWS region in which the user pool was created.
	awsRegion?: null | string @go(AwsRegion,*string)

	// Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: ALLOW and DENY
	defaultAction?: null | string @go(DefaultAction,*string)

	// User pool ID.
	userPoolId?: null | string @go(UserPoolID,*string)
}

#GraphQLAPIUserPoolConfigParameters: {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	// +kubebuilder:validation:Optional
	appIdClientRegex?: null | string @go(AppIDClientRegex,*string)

	// AWS region in which the user pool was created.
	// +kubebuilder:validation:Optional
	awsRegion?: null | string @go(AwsRegion,*string)

	// Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: ALLOW and DENY
	// +kubebuilder:validation:Required
	defaultAction?: null | string @go(DefaultAction,*string)

	// User pool ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.UserPool
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	userPoolId?: null | string @go(UserPoolID,*string)
}

#LambdaAuthorizerConfigObservation: {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	authorizerResultTtlInSeconds?: null | float64 @go(AuthorizerResultTTLInSeconds,*float64)

	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
	authorizerUri?: null | string @go(AuthorizerURI,*string)

	// Regular expression for validation of tokens before the Lambda function is called.
	identityValidationExpression?: null | string @go(IdentityValidationExpression,*string)
}

#LambdaAuthorizerConfigParameters: {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	// +kubebuilder:validation:Optional
	authorizerResultTtlInSeconds?: null | float64 @go(AuthorizerResultTTLInSeconds,*float64)

	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
	// +kubebuilder:validation:Required
	authorizerUri?: null | string @go(AuthorizerURI,*string)

	// Regular expression for validation of tokens before the Lambda function is called.
	// +kubebuilder:validation:Optional
	identityValidationExpression?: null | string @go(IdentityValidationExpression,*string)
}

#LogConfigObservation: {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	cloudwatchLogsRoleArn?: null | string @go(CloudwatchLogsRoleArn,*string)

	// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: true, false. Default value: false
	excludeVerboseContent?: null | bool @go(ExcludeVerboseContent,*bool)

	// Field logging level. Valid values: ALL, ERROR, NONE.
	fieldLogLevel?: null | string @go(FieldLogLevel,*string)
}

#LogConfigParameters: {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	cloudwatchLogsRoleArn?: null | string @go(CloudwatchLogsRoleArn,*string)

	// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: true, false. Default value: false
	// +kubebuilder:validation:Optional
	excludeVerboseContent?: null | bool @go(ExcludeVerboseContent,*bool)

	// Field logging level. Valid values: ALL, ERROR, NONE.
	// +kubebuilder:validation:Required
	fieldLogLevel?: null | string @go(FieldLogLevel,*string)
}

#OpenIDConnectConfigObservation: {
	// Number of milliseconds a token is valid after being authenticated.
	authTtl?: null | float64 @go(AuthTTL,*float64)

	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	clientId?: null | string @go(ClientID,*string)

	// Number of milliseconds a token is valid after being issued to a user.
	iatTtl?: null | float64 @go(IatTTL,*float64)

	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	issuer?: null | string @go(Issuer,*string)
}

#OpenIDConnectConfigParameters: {
	// Number of milliseconds a token is valid after being authenticated.
	// +kubebuilder:validation:Optional
	authTtl?: null | float64 @go(AuthTTL,*float64)

	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// Number of milliseconds a token is valid after being issued to a user.
	// +kubebuilder:validation:Optional
	iatTtl?: null | float64 @go(IatTTL,*float64)

	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	// +kubebuilder:validation:Required
	issuer?: null | string @go(Issuer,*string)
}

#UserPoolConfigObservation: {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	appIdClientRegex?: null | string @go(AppIDClientRegex,*string)

	// AWS region in which the user pool was created.
	awsRegion?: null | string @go(AwsRegion,*string)

	// User pool ID.
	userPoolId?: null | string @go(UserPoolID,*string)
}

#UserPoolConfigParameters: {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	// +kubebuilder:validation:Optional
	appIdClientRegex?: null | string @go(AppIDClientRegex,*string)

	// AWS region in which the user pool was created.
	// +kubebuilder:validation:Optional
	awsRegion?: null | string @go(AwsRegion,*string)

	// User pool ID.
	// +kubebuilder:validation:Required
	userPoolId?: null | string @go(UserPoolID,*string)
}

// GraphQLAPISpec defines the desired state of GraphQLAPI
#GraphQLAPISpec: {
	forProvider: #GraphQLAPIParameters @go(ForProvider)
}

// GraphQLAPIStatus defines the observed state of GraphQLAPI.
#GraphQLAPIStatus: {
	atProvider?: #GraphQLAPIObservation @go(AtProvider)
}

// GraphQLAPI is the Schema for the GraphQLAPIs API. Provides an AppSync GraphQL API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GraphQLAPI: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.authenticationType)",message="authenticationType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #GraphQLAPISpec   @go(Spec)
	status?: #GraphQLAPIStatus @go(Status)
}

// GraphQLAPIList contains a list of GraphQLAPIs
#GraphQLAPIList: {
	items: [...#GraphQLAPI] @go(Items,[]GraphQLAPI)
}
