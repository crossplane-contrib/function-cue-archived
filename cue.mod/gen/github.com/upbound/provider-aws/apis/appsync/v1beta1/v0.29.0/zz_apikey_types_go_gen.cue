// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/appsync/v1beta1

package v1beta1

#APIKeyObservation: {
	// API Key ID (Formatted as ApiId:Key)
	id?: null | string @go(ID,*string)
}

#APIKeyParameters: {
	// ID of the associated AppSync API
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/appsync/v1beta1.GraphQLAPI
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	apiId?: null | string @go(APIID,*string)

	// API key description.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// RFC3339 string representation of the expiry date. Rounded down to nearest hour. By default, it is 7 days from the date of creation.
	// +kubebuilder:validation:Optional
	expires?: null | string @go(Expires,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// APIKeySpec defines the desired state of APIKey
#APIKeySpec: {
	forProvider: #APIKeyParameters @go(ForProvider)
}

// APIKeyStatus defines the observed state of APIKey.
#APIKeyStatus: {
	atProvider?: #APIKeyObservation @go(AtProvider)
}

// APIKey is the Schema for the APIKeys API. Provides an AppSync API Key.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#APIKey: {
	spec:    #APIKeySpec   @go(Spec)
	status?: #APIKeyStatus @go(Status)
}

// APIKeyList contains a list of APIKeys
#APIKeyList: {
	items: [...#APIKey] @go(Items,[]APIKey)
}
