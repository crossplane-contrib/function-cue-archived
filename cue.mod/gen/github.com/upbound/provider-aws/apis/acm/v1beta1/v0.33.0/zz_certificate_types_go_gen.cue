// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/acm/v1beta1

package v1beta1

#CertificateObservation: {
	// ARN of the certificate
	arn?: null | string @go(Arn,*string)

	// Set of domain validation objects which can be used to complete certificate validation.
	// Can have more than one element, e.g., if SANs are defined.
	// Only set if DNS-validation was used.
	domainValidationOptions?: [...#DomainValidationOptionsObservation] @go(DomainValidationOptions,[]DomainValidationOptionsObservation)

	// ARN of the certificate
	id?: null | string @go(ID,*string)

	// Expiration date and time of the certificate.
	notAfter?: null | string @go(NotAfter,*string)

	// Start of the validity period of the certificate.
	notBefore?: null | string @go(NotBefore,*string)

	// true if a Private certificate eligible for managed renewal is within the early_renewal_duration period.
	pendingRenewal?: null | bool @go(PendingRenewal,*bool)

	// Whether the certificate is eligible for managed renewal.
	renewalEligibility?: null | string @go(RenewalEligibility,*string)

	// Contains information about the status of ACM's managed renewal for the certificate.
	renewalSummary?: [...#RenewalSummaryObservation] @go(RenewalSummary,[]RenewalSummaryObservation)

	// Status of the certificate.
	status?: null | string @go(Status,*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// Source of the certificate.
	type?: null | string @go(Type,*string)

	// List of addresses that received a validation email. Only set if EMAIL validation was used.
	validationEmails?: [...null | string] @go(ValidationEmails,[]*string)
}

#CertificateParameters: {
	// ARN of an ACM PCA
	// +kubebuilder:validation:Optional
	certificateAuthorityArn?: null | string @go(CertificateAuthorityArn,*string)

	// Certificate's PEM-formatted public key
	// +kubebuilder:validation:Optional
	certificateBody?: null | string @go(CertificateBody,*string)

	// Certificate's PEM-formatted chain
	// +kubebuilder:validation:Optional
	certificateChain?: null | string @go(CertificateChain,*string)

	// Domain name for which the certificate should be issued
	// +kubebuilder:validation:Optional
	domainName?: null | string @go(DomainName,*string)

	// Amount of time to start automatic renewal process before expiration.
	// Has no effect if less than 60 days.
	// Represented by either
	// a subset of RFC 3339 duration supporting years, months, and days (e.g., P90D),
	// or a string such as 2160h.
	// +kubebuilder:validation:Optional
	earlyRenewalDuration?: null | string @go(EarlyRenewalDuration,*string)

	// Specifies the algorithm of the public and private key pair that your Amazon issued certificate uses to encrypt data. See ACM Certificate characteristics for more details.
	// +kubebuilder:validation:Optional
	keyAlgorithm?: null | string @go(KeyAlgorithm,*string)

	// Configuration block used to set certificate options. Detailed below.
	// +kubebuilder:validation:Optional
	options?: [...#OptionsParameters] @go(Options,[]OptionsParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Set of domains that should be SANs in the issued certificate.
	// +kubebuilder:validation:Optional
	subjectAlternativeNames?: [...null | string] @go(SubjectAlternativeNames,[]*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Which method to use for validation.
	// +kubebuilder:validation:Optional
	validationMethod?: null | string @go(ValidationMethod,*string)

	// Configuration block used to specify information about the initial validation of each domain name. Detailed below.
	// +kubebuilder:validation:Optional
	validationOption?: [...#ValidationOptionParameters] @go(ValidationOption,[]ValidationOptionParameters)
}

#DomainValidationOptionsObservation: {
	// Fully qualified domain name (FQDN) in the certificate.
	domainName?: null | string @go(DomainName,*string)

	// The name of the DNS record to create to validate the certificate
	resourceRecordName?: null | string @go(ResourceRecordName,*string)

	// The type of DNS record to create
	resourceRecordType?: null | string @go(ResourceRecordType,*string)

	// The value the DNS record needs to have
	resourceRecordValue?: null | string @go(ResourceRecordValue,*string)
}

#DomainValidationOptionsParameters: {
}

#OptionsObservation: {
}

#OptionsParameters: {
	// Whether certificate details should be added to a certificate transparency log. Valid values are ENABLED or DISABLED. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.
	// +kubebuilder:validation:Optional
	certificateTransparencyLoggingPreference?: null | string @go(CertificateTransparencyLoggingPreference,*string)
}

#RenewalSummaryObservation: {
	// The status of ACM's managed renewal of the certificate
	renewalStatus?: null | string @go(RenewalStatus,*string)

	// The reason that a renewal request was unsuccessful or is pending
	renewalStatusReason?: null | string @go(RenewalStatusReason,*string)
	updatedAt?:           null | string @go(UpdatedAt,*string)
}

#RenewalSummaryParameters: {
}

#ValidationOptionObservation: {
}

#ValidationOptionParameters: {
	// Fully qualified domain name (FQDN) in the certificate.
	// +kubebuilder:validation:Required
	domainName?: null | string @go(DomainName,*string)

	// Domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the domain_name value or a superdomain of the domain_name value. For example, if you request a certificate for "testing.example.com", you can specify "example.com" for this value.
	// +kubebuilder:validation:Required
	validationDomain?: null | string @go(ValidationDomain,*string)
}

// CertificateSpec defines the desired state of Certificate
#CertificateSpec: {
	forProvider: #CertificateParameters @go(ForProvider)
}

// CertificateStatus defines the observed state of Certificate.
#CertificateStatus: {
	atProvider?: #CertificateObservation @go(AtProvider)
}

// Certificate is the Schema for the Certificates API. Requests and manages a certificate from Amazon Certificate Manager (ACM).
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Certificate: {
	spec:    #CertificateSpec   @go(Spec)
	status?: #CertificateStatus @go(Status)
}

// CertificateList contains a list of Certificates
#CertificateList: {
	items: [...#Certificate] @go(Items,[]Certificate)
}
