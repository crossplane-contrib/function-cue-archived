// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/kinesisanalyticsv2/v1beta1

package v1beta1

#ApplicationSnapshotObservation: {
	// The current application version ID when the snapshot was created.
	applicationVersionId?: null | float64 @go(ApplicationVersionID,*float64)

	// The application snapshot identifier.
	id?: null | string @go(ID,*string)

	// The timestamp of the application snapshot.
	snapshotCreationTimestamp?: null | string @go(SnapshotCreationTimestamp,*string)
}

#ApplicationSnapshotParameters: {
	// The name of an existing  Kinesis Analytics v2 Application. Note that the application must be running for a snapshot to be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesisanalyticsv2/v1beta1.Application
	// +kubebuilder:validation:Optional
	applicationName?: null | string @go(ApplicationName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ApplicationSnapshotSpec defines the desired state of ApplicationSnapshot
#ApplicationSnapshotSpec: {
	forProvider: #ApplicationSnapshotParameters @go(ForProvider)
}

// ApplicationSnapshotStatus defines the observed state of ApplicationSnapshot.
#ApplicationSnapshotStatus: {
	atProvider?: #ApplicationSnapshotObservation @go(AtProvider)
}

// ApplicationSnapshot is the Schema for the ApplicationSnapshots API. Manages a Kinesis Analytics v2 Application Snapshot.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ApplicationSnapshot: {
	spec:    #ApplicationSnapshotSpec   @go(Spec)
	status?: #ApplicationSnapshotStatus @go(Status)
}

// ApplicationSnapshotList contains a list of ApplicationSnapshots
#ApplicationSnapshotList: {
	items: [...#ApplicationSnapshot] @go(Items,[]ApplicationSnapshot)
}
