// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/route53recoveryreadiness/v1beta1

package v1beta1

#ReadinessCheckObservation: {
	// ARN of the readiness_check
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ReadinessCheckParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Name describing the resource set that will be monitored for readiness.
	// +kubebuilder:validation:Required
	resourceSetName?: null | string @go(ResourceSetName,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ReadinessCheckSpec defines the desired state of ReadinessCheck
#ReadinessCheckSpec: {
	forProvider: #ReadinessCheckParameters @go(ForProvider)
}

// ReadinessCheckStatus defines the observed state of ReadinessCheck.
#ReadinessCheckStatus: {
	atProvider?: #ReadinessCheckObservation @go(AtProvider)
}

// ReadinessCheck is the Schema for the ReadinessChecks API. Provides an AWS Route 53 Recovery Readiness Readiness Check
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ReadinessCheck: {
	spec:    #ReadinessCheckSpec   @go(Spec)
	status?: #ReadinessCheckStatus @go(Status)
}

// ReadinessCheckList contains a list of ReadinessChecks
#ReadinessCheckList: {
	items: [...#ReadinessCheck] @go(Items,[]ReadinessCheck)
}
