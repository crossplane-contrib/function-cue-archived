// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ses/v1beta1

package v1beta1

#IdentityPolicyObservation: {
	id?: null | string @go(ID,*string)

	// Name or Amazon Resource Name (ARN) of the SES Identity.
	identity?: null | string @go(Identity,*string)

	// Name of the policy.
	name?: null | string @go(Name,*string)

	// JSON string of the policy.
	policy?: null | string @go(Policy,*string)
}

#IdentityPolicyParameters: {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ses/v1beta1.DomainIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	identity?: null | string @go(Identity,*string)

	// Name of the policy.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// JSON string of the policy.
	// +kubebuilder:validation:Optional
	policy?: null | string @go(Policy,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// IdentityPolicySpec defines the desired state of IdentityPolicy
#IdentityPolicySpec: {
	forProvider: #IdentityPolicyParameters @go(ForProvider)
}

// IdentityPolicyStatus defines the observed state of IdentityPolicy.
#IdentityPolicyStatus: {
	atProvider?: #IdentityPolicyObservation @go(AtProvider)
}

// IdentityPolicy is the Schema for the IdentityPolicys API. Manages a SES Identity Policy
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#IdentityPolicy: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.policy)",message="policy is a required parameter"
	spec:    #IdentityPolicySpec   @go(Spec)
	status?: #IdentityPolicyStatus @go(Status)
}

// IdentityPolicyList contains a list of IdentityPolicys
#IdentityPolicyList: {
	items: [...#IdentityPolicy] @go(Items,[]IdentityPolicy)
}
