// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/autoscaling/v1beta1

package v1beta1

#ScheduleObservation: {
	// ARN assigned by AWS to the autoscaling schedule.
	arn?: null | string @go(Arn,*string)

	// The name of the Auto Scaling group.
	autoscalingGroupName?: null | string @go(AutoscalingGroupName,*string)

	// The initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain. Set to -1 if you don't want to change the desired capacity at the scheduled time. Defaults to 0.
	desiredCapacity?: null | float64 @go(DesiredCapacity,*float64)

	// The date and time for the recurring schedule to end, in UTC with the format "YYYY-MM-DDThh:mm:ssZ" (e.g. "2021-06-01T00:00:00Z").
	endTime?: null | string @go(EndTime,*string)
	id?:      null | string @go(ID,*string)

	// The maximum size of the Auto Scaling group. Set to -1 if you don't want to change the maximum size at the scheduled time. Defaults to 0.
	maxSize?: null | float64 @go(MaxSize,*float64)

	// The minimum size of the Auto Scaling group. Set to -1 if you don't want to change the minimum size at the scheduled time. Defaults to 0.
	minSize?: null | float64 @go(MinSize,*float64)

	// The recurring schedule for this action specified using the Unix cron syntax format.
	recurrence?: null | string @go(Recurrence,*string)

	// The date and time for the recurring schedule to start, in UTC with the format "YYYY-MM-DDThh:mm:ssZ" (e.g. "2021-06-01T00:00:00Z").
	startTime?: null | string @go(StartTime,*string)

	// Specifies the time zone for a cron expression. Valid values are the canonical names of the IANA time zones (such as Etc/GMT+9 or Pacific/Tahiti).
	timeZone?: null | string @go(TimeZone,*string)
}

#ScheduleParameters: {
	// The name of the Auto Scaling group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/autoscaling/v1beta1.AutoscalingGroup
	// +kubebuilder:validation:Optional
	autoscalingGroupName?: null | string @go(AutoscalingGroupName,*string)

	// The initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain. Set to -1 if you don't want to change the desired capacity at the scheduled time. Defaults to 0.
	// +kubebuilder:validation:Optional
	desiredCapacity?: null | float64 @go(DesiredCapacity,*float64)

	// The date and time for the recurring schedule to end, in UTC with the format "YYYY-MM-DDThh:mm:ssZ" (e.g. "2021-06-01T00:00:00Z").
	// +kubebuilder:validation:Optional
	endTime?: null | string @go(EndTime,*string)

	// The maximum size of the Auto Scaling group. Set to -1 if you don't want to change the maximum size at the scheduled time. Defaults to 0.
	// +kubebuilder:validation:Optional
	maxSize?: null | float64 @go(MaxSize,*float64)

	// The minimum size of the Auto Scaling group. Set to -1 if you don't want to change the minimum size at the scheduled time. Defaults to 0.
	// +kubebuilder:validation:Optional
	minSize?: null | float64 @go(MinSize,*float64)

	// The recurring schedule for this action specified using the Unix cron syntax format.
	// +kubebuilder:validation:Optional
	recurrence?: null | string @go(Recurrence,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The date and time for the recurring schedule to start, in UTC with the format "YYYY-MM-DDThh:mm:ssZ" (e.g. "2021-06-01T00:00:00Z").
	// +kubebuilder:validation:Optional
	startTime?: null | string @go(StartTime,*string)

	// Specifies the time zone for a cron expression. Valid values are the canonical names of the IANA time zones (such as Etc/GMT+9 or Pacific/Tahiti).
	// +kubebuilder:validation:Optional
	timeZone?: null | string @go(TimeZone,*string)
}

// ScheduleSpec defines the desired state of Schedule
#ScheduleSpec: {
	forProvider: #ScheduleParameters @go(ForProvider)
}

// ScheduleStatus defines the observed state of Schedule.
#ScheduleStatus: {
	atProvider?: #ScheduleObservation @go(AtProvider)
}

// Schedule is the Schema for the Schedules API. Provides an AutoScaling Schedule resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Schedule: {
	spec:    #ScheduleSpec   @go(Spec)
	status?: #ScheduleStatus @go(Status)
}

// ScheduleList contains a list of Schedules
#ScheduleList: {
	items: [...#Schedule] @go(Items,[]Schedule)
}
