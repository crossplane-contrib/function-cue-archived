// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/autoscaling/v1beta1

package v1beta1

#GroupTagObservation: {
	// ASG name and key, separated by a comma (,)
	id?: null | string @go(ID,*string)
}

#GroupTagParameters: {
	// Name of the Autoscaling Group to apply the tag to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/autoscaling/v1beta1.AutoscalingGroup
	// +kubebuilder:validation:Optional
	autoscalingGroupName?: null | string @go(AutoscalingGroupName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Tag to create. The tag block is documented below.
	// +kubebuilder:validation:Required
	tag: [...#GroupTagTagParameters] @go(Tag,[]GroupTagTagParameters)
}

#GroupTagTagObservation: {
}

#GroupTagTagParameters: {
	// Tag name.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)

	// Whether to propagate the tags to instances launched by the ASG.
	// +kubebuilder:validation:Required
	propagateAtLaunch?: null | bool @go(PropagateAtLaunch,*bool)

	// Tag value.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

// GroupTagSpec defines the desired state of GroupTag
#GroupTagSpec: {
	forProvider: #GroupTagParameters @go(ForProvider)
}

// GroupTagStatus defines the observed state of GroupTag.
#GroupTagStatus: {
	atProvider?: #GroupTagObservation @go(AtProvider)
}

// GroupTag is the Schema for the GroupTags API. Manages an individual Autoscaling Group tag
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GroupTag: {
	spec:    #GroupTagSpec   @go(Spec)
	status?: #GroupTagStatus @go(Status)
}

// GroupTagList contains a list of GroupTags
#GroupTagList: {
	items: [...#GroupTag] @go(Items,[]GroupTag)
}
