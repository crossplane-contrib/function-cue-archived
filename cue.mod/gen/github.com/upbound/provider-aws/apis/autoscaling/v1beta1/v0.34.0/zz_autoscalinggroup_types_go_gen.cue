// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/autoscaling/v1beta1

package v1beta1

#AcceleratorCountObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#AcceleratorCountParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#AcceleratorTotalMemoryMibObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#AcceleratorTotalMemoryMibParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#AutoscalingGroupObservation: {
	// ARN for this Auto Scaling Group
	arn?: null | string @go(Arn,*string)

	// List of one or more availability zones for the group. Used for EC2-Classic, attaching a network interface via id from a launch template and default subnets when not specified with vpc_zone_identifier argument. Conflicts with vpc_zone_identifier.
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)

	// Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.
	capacityRebalance?: null | bool @go(CapacityRebalance,*bool)

	// Reserved.
	context?: null | string @go(Context,*string)

	// Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
	defaultCooldown?: null | float64 @go(DefaultCooldown,*float64)

	// Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)
	defaultInstanceWarmup?: null | float64 @go(DefaultInstanceWarmup,*float64)

	// Number of Amazon EC2 instances that
	// should be running in the group. (See also Waiting for
	// Capacity below.)
	desiredCapacity?: null | float64 @go(DesiredCapacity,*float64)

	// The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: "units", "vcpu", "memory-mib".
	desiredCapacityType?: null | string @go(DesiredCapacityType,*string)

	// List of metrics to collect. The allowed values are defined by the underlying AWS API.
	enabledMetrics?: [...null | string] @go(EnabledMetrics,[]*string)

	// Allows deleting the Auto Scaling Group without waiting
	// for all instances in the pool to terminate.  You can force an Auto Scaling Group to delete
	// even if it's in the process of scaling a resource.  This bypasses that
	// behavior and potentially leaves resources dangling.
	forceDelete?: null | bool @go(ForceDelete,*bool)

	// If this block is configured, add a Warm Pool
	// to the specified Auto Scaling group. Defined below
	forceDeleteWarmPool?: null | bool @go(ForceDeleteWarmPool,*bool)

	// Time (in seconds) after instance comes into service before checking health.
	healthCheckGracePeriod?: null | float64 @go(HealthCheckGracePeriod,*float64)

	// "EC2" or "ELB". Controls how health checking is done.
	healthCheckType?: null | string @go(HealthCheckType,*string)

	// Auto Scaling Group id.
	id?: null | string @go(ID,*string)

	// One or more
	// Lifecycle Hooks
	// to attach to the Auto Scaling Group before instances are launched. The
	// syntax is exactly the same as the separate
	// aws_autoscaling_lifecycle_hook
	// resource, without the autoscaling_group_name attribute. Please note that this will only work when creating
	// a new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.
	initialLifecycleHook?: [...#InitialLifecycleHookObservation] @go(InitialLifecycleHook,[]InitialLifecycleHookObservation)

	// If this block is configured, start an
	// Instance Refresh
	// when this Auto Scaling Group is updated. Defined below.
	instanceRefresh?: [...#InstanceRefreshObservation] @go(InstanceRefresh,[]InstanceRefreshObservation)

	// Name of the launch configuration to use.
	launchConfiguration?: null | string @go(LaunchConfiguration,*string)

	// Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.
	launchTemplate?: [...#LaunchTemplateObservation] @go(LaunchTemplate,[]LaunchTemplateObservation)

	// List of elastic load balancer names to add to the autoscaling
	// group names. Only valid for classic load balancers. For ALBs, use target_group_arns instead.
	loadBalancers?: [...null | string] @go(LoadBalancers,[]*string)

	// Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.
	maxInstanceLifetime?: null | float64 @go(MaxInstanceLifetime,*float64)

	// Maximum size of the Auto Scaling Group.
	maxSize?: null | float64 @go(MaxSize,*float64)

	// Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.
	metricsGranularity?: null | string @go(MetricsGranularity,*string)

	// Updates will not wait on ELB instance number changes.
	// (See also Waiting for Capacity below.)
	minElbCapacity?: null | float64 @go(MinELBCapacity,*float64)

	// Minimum size of the Auto Scaling Group.
	// (See also Waiting for Capacity below.)
	minSize?: null | float64 @go(MinSize,*float64)

	// Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.
	mixedInstancesPolicy?: [...#MixedInstancesPolicyObservation] @go(MixedInstancesPolicy,[]MixedInstancesPolicyObservation)

	// Name of the placement group into which you'll launch your instances, if any.
	placementGroup?: null | string @go(PlacementGroup,*string)

	// in protection
	// in the Amazon EC2 Auto Scaling User Guide.
	protectFromScaleIn?: null | bool @go(ProtectFromScaleIn,*bool)

	// linked role that the ASG will use to call other AWS services
	serviceLinkedRoleArn?: null | string @go(ServiceLinkedRoleArn,*string)

	// List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.
	// Note that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.
	suspendedProcesses?: [...null | string] @go(SuspendedProcesses,[]*string)

	// Configuration block(s) containing resource tags. Conflicts with tags. See Tag below for more details.
	tag?: [...#TagObservation] @go(Tag,[]TagObservation)

	// Key-value map of resource tags.
	tags?: [... {[string]: null | string}] @go(Tags,[]map[string]*string)

	// Set of aws_alb_target_group ARNs, for use with Application or Network Load Balancing.
	targetGroupArns?: [...null | string] @go(TargetGroupArns,[]*string)

	// List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.
	terminationPolicies?: [...null | string] @go(TerminationPolicies,[]*string)

	// List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.
	vpcZoneIdentifier?: [...null | string] @go(VPCZoneIdentifier,[]*string)

	// (See also Waiting
	// for Capacity below.
	waitForCapacityTimeout?: null | string @go(WaitForCapacityTimeout,*string)

	// (Takes
	// precedence over min_elb_capacity behavior.)
	// (See also Waiting for Capacity below.)
	waitForElbCapacity?: null | float64 @go(WaitForELBCapacity,*float64)

	// If this block is configured, add a Warm Pool
	// to the specified Auto Scaling group. Defined below
	warmPool?: [...#WarmPoolObservation] @go(WarmPool,[]WarmPoolObservation)
}

#AutoscalingGroupParameters: {
	// List of one or more availability zones for the group. Used for EC2-Classic, attaching a network interface via id from a launch template and default subnets when not specified with vpc_zone_identifier argument. Conflicts with vpc_zone_identifier.
	// +kubebuilder:validation:Optional
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)

	// Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.
	// +kubebuilder:validation:Optional
	capacityRebalance?: null | bool @go(CapacityRebalance,*bool)

	// Reserved.
	// +kubebuilder:validation:Optional
	context?: null | string @go(Context,*string)

	// Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
	// +kubebuilder:validation:Optional
	defaultCooldown?: null | float64 @go(DefaultCooldown,*float64)

	// Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)
	// +kubebuilder:validation:Optional
	defaultInstanceWarmup?: null | float64 @go(DefaultInstanceWarmup,*float64)

	// Number of Amazon EC2 instances that
	// should be running in the group. (See also Waiting for
	// Capacity below.)
	// +kubebuilder:validation:Optional
	desiredCapacity?: null | float64 @go(DesiredCapacity,*float64)

	// The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: "units", "vcpu", "memory-mib".
	// +kubebuilder:validation:Optional
	desiredCapacityType?: null | string @go(DesiredCapacityType,*string)

	// List of metrics to collect. The allowed values are defined by the underlying AWS API.
	// +kubebuilder:validation:Optional
	enabledMetrics?: [...null | string] @go(EnabledMetrics,[]*string)

	// Allows deleting the Auto Scaling Group without waiting
	// for all instances in the pool to terminate.  You can force an Auto Scaling Group to delete
	// even if it's in the process of scaling a resource.  This bypasses that
	// behavior and potentially leaves resources dangling.
	// +kubebuilder:validation:Optional
	forceDelete?: null | bool @go(ForceDelete,*bool)

	// If this block is configured, add a Warm Pool
	// to the specified Auto Scaling group. Defined below
	// +kubebuilder:validation:Optional
	forceDeleteWarmPool?: null | bool @go(ForceDeleteWarmPool,*bool)

	// Time (in seconds) after instance comes into service before checking health.
	// +kubebuilder:validation:Optional
	healthCheckGracePeriod?: null | float64 @go(HealthCheckGracePeriod,*float64)

	// "EC2" or "ELB". Controls how health checking is done.
	// +kubebuilder:validation:Optional
	healthCheckType?: null | string @go(HealthCheckType,*string)

	// One or more
	// Lifecycle Hooks
	// to attach to the Auto Scaling Group before instances are launched. The
	// syntax is exactly the same as the separate
	// aws_autoscaling_lifecycle_hook
	// resource, without the autoscaling_group_name attribute. Please note that this will only work when creating
	// a new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.
	// +kubebuilder:validation:Optional
	initialLifecycleHook?: [...#InitialLifecycleHookParameters] @go(InitialLifecycleHook,[]InitialLifecycleHookParameters)

	// If this block is configured, start an
	// Instance Refresh
	// when this Auto Scaling Group is updated. Defined below.
	// +kubebuilder:validation:Optional
	instanceRefresh?: [...#InstanceRefreshParameters] @go(InstanceRefresh,[]InstanceRefreshParameters)

	// Name of the launch configuration to use.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/autoscaling/v1beta1.LaunchConfiguration
	// +kubebuilder:validation:Optional
	launchConfiguration?: null | string @go(LaunchConfiguration,*string)

	// Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.
	// +kubebuilder:validation:Optional
	launchTemplate?: [...#LaunchTemplateParameters] @go(LaunchTemplate,[]LaunchTemplateParameters)

	// Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.
	// +kubebuilder:validation:Optional
	maxInstanceLifetime?: null | float64 @go(MaxInstanceLifetime,*float64)

	// Maximum size of the Auto Scaling Group.
	// +kubebuilder:validation:Optional
	maxSize?: null | float64 @go(MaxSize,*float64)

	// Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.
	// +kubebuilder:validation:Optional
	metricsGranularity?: null | string @go(MetricsGranularity,*string)

	// Updates will not wait on ELB instance number changes.
	// (See also Waiting for Capacity below.)
	// +kubebuilder:validation:Optional
	minElbCapacity?: null | float64 @go(MinELBCapacity,*float64)

	// Minimum size of the Auto Scaling Group.
	// (See also Waiting for Capacity below.)
	// +kubebuilder:validation:Optional
	minSize?: null | float64 @go(MinSize,*float64)

	// Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.
	// +kubebuilder:validation:Optional
	mixedInstancesPolicy?: [...#MixedInstancesPolicyParameters] @go(MixedInstancesPolicy,[]MixedInstancesPolicyParameters)

	// Name of the placement group into which you'll launch your instances, if any.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.PlacementGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	placementGroup?: null | string @go(PlacementGroup,*string)

	// in protection
	// in the Amazon EC2 Auto Scaling User Guide.
	// +kubebuilder:validation:Optional
	protectFromScaleIn?: null | bool @go(ProtectFromScaleIn,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// linked role that the ASG will use to call other AWS services
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	serviceLinkedRoleArn?: null | string @go(ServiceLinkedRoleArn,*string)

	// List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.
	// Note that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.
	// +kubebuilder:validation:Optional
	suspendedProcesses?: [...null | string] @go(SuspendedProcesses,[]*string)

	// Configuration block(s) containing resource tags. Conflicts with tags. See Tag below for more details.
	// +kubebuilder:validation:Optional
	tag?: [...#TagParameters] @go(Tag,[]TagParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: [... {[string]: null | string}] @go(Tags,[]map[string]*string)

	// List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.
	// +kubebuilder:validation:Optional
	terminationPolicies?: [...null | string] @go(TerminationPolicies,[]*string)

	// List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	vpcZoneIdentifier?: [...null | string] @go(VPCZoneIdentifier,[]*string)

	// (See also Waiting
	// for Capacity below.
	// +kubebuilder:validation:Optional
	waitForCapacityTimeout?: null | string @go(WaitForCapacityTimeout,*string)

	// (Takes
	// precedence over min_elb_capacity behavior.)
	// (See also Waiting for Capacity below.)
	// +kubebuilder:validation:Optional
	waitForElbCapacity?: null | float64 @go(WaitForELBCapacity,*float64)

	// If this block is configured, add a Warm Pool
	// to the specified Auto Scaling group. Defined below
	// +kubebuilder:validation:Optional
	warmPool?: [...#WarmPoolParameters] @go(WarmPool,[]WarmPoolParameters)
}

#BaselineEBSBandwidthMbpsObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#BaselineEBSBandwidthMbpsParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#InitialLifecycleHookObservation: {
	defaultResult?:       null | string  @go(DefaultResult,*string)
	heartbeatTimeout?:    null | float64 @go(HeartbeatTimeout,*float64)
	lifecycleTransition?: null | string  @go(LifecycleTransition,*string)

	// Name of the Auto Scaling Group. Conflicts with name_prefix.
	name?:                 null | string @go(Name,*string)
	notificationMetadata?: null | string @go(NotificationMetadata,*string)

	// ARN for this Auto Scaling Group
	notificationTargetArn?: null | string @go(NotificationTargetArn,*string)

	// ARN for this Auto Scaling Group
	roleArn?: null | string @go(RoleArn,*string)
}

#InitialLifecycleHookParameters: {
	// +kubebuilder:validation:Optional
	defaultResult?: null | string @go(DefaultResult,*string)

	// +kubebuilder:validation:Optional
	heartbeatTimeout?: null | float64 @go(HeartbeatTimeout,*float64)

	// +kubebuilder:validation:Required
	lifecycleTransition?: null | string @go(LifecycleTransition,*string)

	// Name of the Auto Scaling Group. Conflicts with name_prefix.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// +kubebuilder:validation:Optional
	notificationMetadata?: null | string @go(NotificationMetadata,*string)

	// ARN for this Auto Scaling Group
	// +kubebuilder:validation:Optional
	notificationTargetArn?: null | string @go(NotificationTargetArn,*string)

	// ARN for this Auto Scaling Group
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

#InstanceRefreshObservation: {
	// Override default parameters for Instance Refresh.
	preferences?: [...#PreferencesObservation] @go(Preferences,[]PreferencesObservation)

	// Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.
	strategy?: null | string @go(Strategy,*string)

	// Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.
	triggers?: [...null | string] @go(Triggers,[]*string)
}

#InstanceRefreshParameters: {
	// Override default parameters for Instance Refresh.
	// +kubebuilder:validation:Optional
	preferences?: [...#PreferencesParameters] @go(Preferences,[]PreferencesParameters)

	// Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.
	// +kubebuilder:validation:Required
	strategy?: null | string @go(Strategy,*string)

	// Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.
	// +kubebuilder:validation:Optional
	triggers?: [...null | string] @go(Triggers,[]*string)
}

#InstanceRequirementsObservation: {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
	acceleratorCount?: [...#AcceleratorCountObservation] @go(AcceleratorCount,[]AcceleratorCountObservation)

	// List of accelerator manufacturer names. Default is any manufacturer.
	acceleratorManufacturers?: [...null | string] @go(AcceleratorManufacturers,[]*string)

	// List of accelerator names. Default is any acclerator.
	acceleratorNames?: [...null | string] @go(AcceleratorNames,[]*string)

	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	acceleratorTotalMemoryMib?: [...#AcceleratorTotalMemoryMibObservation] @go(AcceleratorTotalMemoryMib,[]AcceleratorTotalMemoryMibObservation)

	// List of accelerator types. Default is any accelerator type.
	acceleratorTypes?: [...null | string] @go(AcceleratorTypes,[]*string)

	// Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
	bareMetal?: null | string @go(BareMetal,*string)

	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	baselineEbsBandwidthMbps?: [...#BaselineEBSBandwidthMbpsObservation] @go(BaselineEBSBandwidthMbps,[]BaselineEBSBandwidthMbpsObservation)

	// Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
	burstablePerformance?: null | string @go(BurstablePerformance,*string)

	// List of CPU manufacturer names. Default is any manufacturer.
	cpuManufacturers?: [...null | string] @go(CPUManufacturers,[]*string)

	// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	excludedInstanceTypes?: [...null | string] @go(ExcludedInstanceTypes,[]*string)

	// List of instance generation names. Default is any generation.
	instanceGenerations?: [...null | string] @go(InstanceGenerations,[]*string)

	// Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
	localStorage?: null | string @go(LocalStorage,*string)

	// List of local storage type names. Default any storage type.
	localStorageTypes?: [...null | string] @go(LocalStorageTypes,[]*string)

	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	memoryGibPerVcpu?: [...#MemoryGibPerVcpuObservation] @go(MemoryGibPerVcpu,[]MemoryGibPerVcpuObservation)

	// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
	memoryMib?: [...#MemoryMibObservation] @go(MemoryMib,[]MemoryMibObservation)

	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	networkInterfaceCount?: [...#NetworkInterfaceCountObservation] @go(NetworkInterfaceCount,[]NetworkInterfaceCountObservation)

	// Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	onDemandMaxPricePercentageOverLowestPrice?: null | float64 @go(OnDemandMaxPricePercentageOverLowestPrice,*float64)

	// Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
	requireHibernateSupport?: null | bool @go(RequireHibernateSupport,*bool)

	// Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	spotMaxPricePercentageOverLowestPrice?: null | float64 @go(SpotMaxPricePercentageOverLowestPrice,*float64)

	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	totalLocalStorageGb?: [...#TotalLocalStorageGbObservation] @go(TotalLocalStorageGb,[]TotalLocalStorageGbObservation)

	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	vcpuCount?: [...#VcpuCountObservation] @go(VcpuCount,[]VcpuCountObservation)
}

#InstanceRequirementsParameters: {
	// Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	acceleratorCount?: [...#AcceleratorCountParameters] @go(AcceleratorCount,[]AcceleratorCountParameters)

	// List of accelerator manufacturer names. Default is any manufacturer.
	// +kubebuilder:validation:Optional
	acceleratorManufacturers?: [...null | string] @go(AcceleratorManufacturers,[]*string)

	// List of accelerator names. Default is any acclerator.
	// +kubebuilder:validation:Optional
	acceleratorNames?: [...null | string] @go(AcceleratorNames,[]*string)

	// Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	acceleratorTotalMemoryMib?: [...#AcceleratorTotalMemoryMibParameters] @go(AcceleratorTotalMemoryMib,[]AcceleratorTotalMemoryMibParameters)

	// List of accelerator types. Default is any accelerator type.
	// +kubebuilder:validation:Optional
	acceleratorTypes?: [...null | string] @go(AcceleratorTypes,[]*string)

	// Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
	// +kubebuilder:validation:Optional
	bareMetal?: null | string @go(BareMetal,*string)

	// Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	baselineEbsBandwidthMbps?: [...#BaselineEBSBandwidthMbpsParameters] @go(BaselineEBSBandwidthMbps,[]BaselineEBSBandwidthMbpsParameters)

	// Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
	// +kubebuilder:validation:Optional
	burstablePerformance?: null | string @go(BurstablePerformance,*string)

	// List of CPU manufacturer names. Default is any manufacturer.
	// +kubebuilder:validation:Optional
	cpuManufacturers?: [...null | string] @go(CPUManufacturers,[]*string)

	// List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
	// +kubebuilder:validation:Optional
	excludedInstanceTypes?: [...null | string] @go(ExcludedInstanceTypes,[]*string)

	// List of instance generation names. Default is any generation.
	// +kubebuilder:validation:Optional
	instanceGenerations?: [...null | string] @go(InstanceGenerations,[]*string)

	// Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
	// +kubebuilder:validation:Optional
	localStorage?: null | string @go(LocalStorage,*string)

	// List of local storage type names. Default any storage type.
	// +kubebuilder:validation:Optional
	localStorageTypes?: [...null | string] @go(LocalStorageTypes,[]*string)

	// Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	memoryGibPerVcpu?: [...#MemoryGibPerVcpuParameters] @go(MemoryGibPerVcpu,[]MemoryGibPerVcpuParameters)

	// Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
	// +kubebuilder:validation:Optional
	memoryMib?: [...#MemoryMibParameters] @go(MemoryMib,[]MemoryMibParameters)

	// Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	networkInterfaceCount?: [...#NetworkInterfaceCountParameters] @go(NetworkInterfaceCount,[]NetworkInterfaceCountParameters)

	// Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
	// +kubebuilder:validation:Optional
	onDemandMaxPricePercentageOverLowestPrice?: null | float64 @go(OnDemandMaxPricePercentageOverLowestPrice,*float64)

	// Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
	// +kubebuilder:validation:Optional
	requireHibernateSupport?: null | bool @go(RequireHibernateSupport,*bool)

	// Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
	// +kubebuilder:validation:Optional
	spotMaxPricePercentageOverLowestPrice?: null | float64 @go(SpotMaxPricePercentageOverLowestPrice,*float64)

	// Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
	// +kubebuilder:validation:Optional
	totalLocalStorageGb?: [...#TotalLocalStorageGbParameters] @go(TotalLocalStorageGb,[]TotalLocalStorageGbParameters)

	// Block describing the minimum and maximum number of vCPUs. Default is no maximum.
	// +kubebuilder:validation:Optional
	vcpuCount?: [...#VcpuCountParameters] @go(VcpuCount,[]VcpuCountParameters)
}

#InstanceReusePolicyObservation: {
	// Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.
	reuseOnScaleIn?: null | bool @go(ReuseOnScaleIn,*bool)
}

#InstanceReusePolicyParameters: {
	// Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.
	// +kubebuilder:validation:Optional
	reuseOnScaleIn?: null | bool @go(ReuseOnScaleIn,*bool)
}

#InstancesDistributionObservation: {
	// Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.
	onDemandAllocationStrategy?: null | string @go(OnDemandAllocationStrategy,*string)

	// Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.
	onDemandBaseCapacity?: null | float64 @go(OnDemandBaseCapacity,*float64)

	// Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.
	onDemandPercentageAboveBaseCapacity?: null | float64 @go(OnDemandPercentageAboveBaseCapacity,*float64)

	// How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.
	spotAllocationStrategy?: null | string @go(SpotAllocationStrategy,*string)

	// Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.
	spotInstancePools?: null | float64 @go(SpotInstancePools,*float64)

	// Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
	spotMaxPrice?: null | string @go(SpotMaxPrice,*string)
}

#InstancesDistributionParameters: {
	// Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.
	// +kubebuilder:validation:Optional
	onDemandAllocationStrategy?: null | string @go(OnDemandAllocationStrategy,*string)

	// Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.
	// +kubebuilder:validation:Optional
	onDemandBaseCapacity?: null | float64 @go(OnDemandBaseCapacity,*float64)

	// Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.
	// +kubebuilder:validation:Optional
	onDemandPercentageAboveBaseCapacity?: null | float64 @go(OnDemandPercentageAboveBaseCapacity,*float64)

	// How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.
	// +kubebuilder:validation:Optional
	spotAllocationStrategy?: null | string @go(SpotAllocationStrategy,*string)

	// Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.
	// +kubebuilder:validation:Optional
	spotInstancePools?: null | float64 @go(SpotInstancePools,*float64)

	// Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
	// +kubebuilder:validation:Optional
	spotMaxPrice?: null | string @go(SpotMaxPrice,*string)
}

#LaunchTemplateObservation: {
	// ID of the launch template. Conflicts with name.
	id?: null | string @go(ID,*string)

	// Name of the launch template. Conflicts with id.
	name?: null | string @go(Name,*string)

	// Template version. Can be version number, $Latest, or $Default. (Default: $Default).
	version?: null | string @go(Version,*string)
}

#LaunchTemplateParameters: {
	// ID of the launch template. Conflicts with name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.LaunchTemplate
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Name of the launch template. Conflicts with id.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Template version. Can be version number, $Latest, or $Default. (Default: $Default).
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#LaunchTemplateSpecificationObservation: {
	// ID of the launch template. Conflicts with launch_template_name.
	launchTemplateId?: null | string @go(LaunchTemplateID,*string)

	// Name of the launch template. Conflicts with launch_template_id.
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)

	// Template version. Can be version number, $Latest, or $Default. (Default: $Default).
	version?: null | string @go(Version,*string)
}

#LaunchTemplateSpecificationParameters: {
	// ID of the launch template. Conflicts with launch_template_name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.LaunchTemplate
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	launchTemplateId?: null | string @go(LaunchTemplateID,*string)

	// Name of the launch template. Conflicts with launch_template_id.
	// +kubebuilder:validation:Optional
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)

	// Template version. Can be version number, $Latest, or $Default. (Default: $Default).
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#MemoryGibPerVcpuObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#MemoryGibPerVcpuParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#MemoryMibObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#MemoryMibParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#MixedInstancesPolicyLaunchTemplateObservation: {
	// Nested argument defines the Launch Template. Defined below.
	launchTemplateSpecification?: [...#LaunchTemplateSpecificationObservation] @go(LaunchTemplateSpecification,[]LaunchTemplateSpecificationObservation)

	// List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
	override?: [...#OverrideObservation] @go(Override,[]OverrideObservation)
}

#MixedInstancesPolicyLaunchTemplateParameters: {
	// Nested argument defines the Launch Template. Defined below.
	// +kubebuilder:validation:Required
	launchTemplateSpecification: [...#LaunchTemplateSpecificationParameters] @go(LaunchTemplateSpecification,[]LaunchTemplateSpecificationParameters)

	// List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
	// +kubebuilder:validation:Optional
	override?: [...#OverrideParameters] @go(Override,[]OverrideParameters)
}

#MixedInstancesPolicyObservation: {
	// Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.
	instancesDistribution?: [...#InstancesDistributionObservation] @go(InstancesDistribution,[]InstancesDistributionObservation)

	// Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.
	launchTemplate?: [...#MixedInstancesPolicyLaunchTemplateObservation] @go(LaunchTemplate,[]MixedInstancesPolicyLaunchTemplateObservation)
}

#MixedInstancesPolicyParameters: {
	// Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.
	// +kubebuilder:validation:Optional
	instancesDistribution?: [...#InstancesDistributionParameters] @go(InstancesDistribution,[]InstancesDistributionParameters)

	// Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.
	// +kubebuilder:validation:Required
	launchTemplate: [...#MixedInstancesPolicyLaunchTemplateParameters] @go(LaunchTemplate,[]MixedInstancesPolicyLaunchTemplateParameters)
}

#NetworkInterfaceCountObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#NetworkInterfaceCountParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#OverrideLaunchTemplateSpecificationObservation: {
	// ID of the launch template. Conflicts with launch_template_name.
	launchTemplateId?: null | string @go(LaunchTemplateID,*string)

	// Name of the launch template. Conflicts with launch_template_id.
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)

	// Template version. Can be version number, $Latest, or $Default. (Default: $Default).
	version?: null | string @go(Version,*string)
}

#OverrideLaunchTemplateSpecificationParameters: {
	// ID of the launch template. Conflicts with launch_template_name.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.LaunchTemplate
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	launchTemplateId?: null | string @go(LaunchTemplateID,*string)

	// Name of the launch template. Conflicts with launch_template_id.
	// +kubebuilder:validation:Optional
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)

	// Template version. Can be version number, $Latest, or $Default. (Default: $Default).
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#OverrideObservation: {
	// Override the instance type in the Launch Template with instance types that satisfy the requirements.
	instanceRequirements?: [...#InstanceRequirementsObservation] @go(InstanceRequirements,[]InstanceRequirementsObservation)

	// Override the instance type in the Launch Template.
	instanceType?: null | string @go(InstanceType,*string)

	// Nested argument defines the Launch Template. Defined below.
	launchTemplateSpecification?: [...#OverrideLaunchTemplateSpecificationObservation] @go(LaunchTemplateSpecification,[]OverrideLaunchTemplateSpecificationObservation)

	// Number of capacity units, which gives the instance type a proportional weight to other instance types.
	weightedCapacity?: null | string @go(WeightedCapacity,*string)
}

#OverrideParameters: {
	// Override the instance type in the Launch Template with instance types that satisfy the requirements.
	// +kubebuilder:validation:Optional
	instanceRequirements?: [...#InstanceRequirementsParameters] @go(InstanceRequirements,[]InstanceRequirementsParameters)

	// Override the instance type in the Launch Template.
	// +kubebuilder:validation:Optional
	instanceType?: null | string @go(InstanceType,*string)

	// Nested argument defines the Launch Template. Defined below.
	// +kubebuilder:validation:Optional
	launchTemplateSpecification?: [...#OverrideLaunchTemplateSpecificationParameters] @go(LaunchTemplateSpecification,[]OverrideLaunchTemplateSpecificationParameters)

	// Number of capacity units, which gives the instance type a proportional weight to other instance types.
	// +kubebuilder:validation:Optional
	weightedCapacity?: null | string @go(WeightedCapacity,*string)
}

#PreferencesObservation: {
	// Number of seconds to wait after a checkpoint. Defaults to 3600.
	checkpointDelay?: null | string @go(CheckpointDelay,*string)

	// List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.
	checkpointPercentages?: [...null | float64] @go(CheckpointPercentages,[]*float64)

	// Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.
	instanceWarmup?: null | string @go(InstanceWarmup,*string)

	// Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
	minHealthyPercentage?: null | float64 @go(MinHealthyPercentage,*float64)

	// Replace instances that already have your desired configuration. Defaults to false.
	skipMatching?: null | bool @go(SkipMatching,*bool)
}

#PreferencesParameters: {
	// Number of seconds to wait after a checkpoint. Defaults to 3600.
	// +kubebuilder:validation:Optional
	checkpointDelay?: null | string @go(CheckpointDelay,*string)

	// List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.
	// +kubebuilder:validation:Optional
	checkpointPercentages?: [...null | float64] @go(CheckpointPercentages,[]*float64)

	// Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.
	// +kubebuilder:validation:Optional
	instanceWarmup?: null | string @go(InstanceWarmup,*string)

	// Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
	// +kubebuilder:validation:Optional
	minHealthyPercentage?: null | float64 @go(MinHealthyPercentage,*float64)

	// Replace instances that already have your desired configuration. Defaults to false.
	// +kubebuilder:validation:Optional
	skipMatching?: null | bool @go(SkipMatching,*bool)
}

#TagObservation: {
	// Key
	key?: null | string @go(Key,*string)

	// Enables propagation of the tag to
	// Amazon EC2 instances launched via this ASG
	propagateAtLaunch?: null | bool @go(PropagateAtLaunch,*bool)

	// Value
	value?: null | string @go(Value,*string)
}

#TagParameters: {
	// Key
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)

	// Enables propagation of the tag to
	// Amazon EC2 instances launched via this ASG
	// +kubebuilder:validation:Required
	propagateAtLaunch?: null | bool @go(PropagateAtLaunch,*bool)

	// Value
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#TotalLocalStorageGbObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#TotalLocalStorageGbParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#VcpuCountObservation: {
	// Maximum.
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	min?: null | float64 @go(Min,*float64)
}

#VcpuCountParameters: {
	// Maximum.
	// +kubebuilder:validation:Optional
	max?: null | float64 @go(Max,*float64)

	// Minimum.
	// +kubebuilder:validation:Optional
	min?: null | float64 @go(Min,*float64)
}

#WarmPoolObservation: {
	// Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.
	instanceReusePolicy?: [...#InstanceReusePolicyObservation] @go(InstanceReusePolicy,[]InstanceReusePolicyObservation)

	// Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.
	maxGroupPreparedCapacity?: null | float64 @go(MaxGroupPreparedCapacity,*float64)

	// Minimum size of the Auto Scaling Group.
	// (See also Waiting for Capacity below.)
	minSize?: null | float64 @go(MinSize,*float64)

	// Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.
	poolState?: null | string @go(PoolState,*string)
}

#WarmPoolParameters: {
	// Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.
	// +kubebuilder:validation:Optional
	instanceReusePolicy?: [...#InstanceReusePolicyParameters] @go(InstanceReusePolicy,[]InstanceReusePolicyParameters)

	// Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.
	// +kubebuilder:validation:Optional
	maxGroupPreparedCapacity?: null | float64 @go(MaxGroupPreparedCapacity,*float64)

	// Minimum size of the Auto Scaling Group.
	// (See also Waiting for Capacity below.)
	// +kubebuilder:validation:Optional
	minSize?: null | float64 @go(MinSize,*float64)

	// Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.
	// +kubebuilder:validation:Optional
	poolState?: null | string @go(PoolState,*string)
}

// AutoscalingGroupSpec defines the desired state of AutoscalingGroup
#AutoscalingGroupSpec: {
	forProvider: #AutoscalingGroupParameters @go(ForProvider)
}

// AutoscalingGroupStatus defines the observed state of AutoscalingGroup.
#AutoscalingGroupStatus: {
	atProvider?: #AutoscalingGroupObservation @go(AtProvider)
}

// AutoscalingGroup is the Schema for the AutoscalingGroups API. Provides an Auto Scaling Group resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AutoscalingGroup: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.maxSize)",message="maxSize is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.minSize)",message="minSize is a required parameter"
	spec:    #AutoscalingGroupSpec   @go(Spec)
	status?: #AutoscalingGroupStatus @go(Status)
}

// AutoscalingGroupList contains a list of AutoscalingGroups
#AutoscalingGroupList: {
	items: [...#AutoscalingGroup] @go(Items,[]AutoscalingGroup)
}
