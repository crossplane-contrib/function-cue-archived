// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/xray/v1beta1

package v1beta1

#EncryptionConfigObservation: {
	// Region name.
	id?: null | string @go(ID,*string)
}

#EncryptionConfigParameters: {
	// An AWS KMS customer master key (CMK) ARN.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	keyId?: null | string @go(KeyID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The type of encryption. Set to KMS to use your own key for encryption. Set to NONE for default encryption.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

// EncryptionConfigSpec defines the desired state of EncryptionConfig
#EncryptionConfigSpec: {
	forProvider: #EncryptionConfigParameters @go(ForProvider)
}

// EncryptionConfigStatus defines the observed state of EncryptionConfig.
#EncryptionConfigStatus: {
	atProvider?: #EncryptionConfigObservation @go(AtProvider)
}

// EncryptionConfig is the Schema for the EncryptionConfigs API. Creates and manages an AWS XRay Encryption Config.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EncryptionConfig: {
	spec:    #EncryptionConfigSpec   @go(Spec)
	status?: #EncryptionConfigStatus @go(Status)
}

// EncryptionConfigList contains a list of EncryptionConfigs
#EncryptionConfigList: {
	items: [...#EncryptionConfig] @go(Items,[]EncryptionConfig)
}
