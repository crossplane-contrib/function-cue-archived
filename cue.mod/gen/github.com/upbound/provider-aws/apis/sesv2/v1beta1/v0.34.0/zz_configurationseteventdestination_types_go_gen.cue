// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sesv2/v1beta1

package v1beta1

#CloudWatchDestinationObservation: {
	// An array of objects that define the dimensions to use when you send email events to Amazon CloudWatch. See dimension_configuration below.
	dimensionConfiguration?: [...#DimensionConfigurationObservation] @go(DimensionConfiguration,[]DimensionConfigurationObservation)
}

#CloudWatchDestinationParameters: {
	// An array of objects that define the dimensions to use when you send email events to Amazon CloudWatch. See dimension_configuration below.
	// +kubebuilder:validation:Required
	dimensionConfiguration: [...#DimensionConfigurationParameters] @go(DimensionConfiguration,[]DimensionConfigurationParameters)
}

#ConfigurationSetEventDestinationObservation: {
	// The name of the configuration set.
	configurationSetName?: null | string @go(ConfigurationSetName,*string)

	// A name that identifies the event destination within the configuration set.
	eventDestination?: [...#EventDestinationObservation] @go(EventDestination,[]EventDestinationObservation)

	// An object that defines the event destination. See event_destination below.
	eventDestinationName?: null | string @go(EventDestinationName,*string)

	// A pipe-delimited string combining configuration_set_name and event_destination_name.
	id?: null | string @go(ID,*string)
}

#ConfigurationSetEventDestinationParameters: {
	// The name of the configuration set.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sesv2/v1beta1.ConfigurationSet
	// +kubebuilder:validation:Optional
	configurationSetName?: null | string @go(ConfigurationSetName,*string)

	// A name that identifies the event destination within the configuration set.
	// +kubebuilder:validation:Optional
	eventDestination?: [...#EventDestinationParameters] @go(EventDestination,[]EventDestinationParameters)

	// An object that defines the event destination. See event_destination below.
	// +kubebuilder:validation:Optional
	eventDestinationName?: null | string @go(EventDestinationName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#DimensionConfigurationObservation: {
	// The default value of the dimension that is published to Amazon CloudWatch if you don't provide the value of the dimension when you send an email.
	// ( dimension_name -  The name of an Amazon CloudWatch dimension associated with an email sending metric.
	defaultDimensionValue?: null | string @go(DefaultDimensionValue,*string)
	dimensionName?:         null | string @go(DimensionName,*string)

	// The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. Valid values: MESSAGE_TAG, EMAIL_HEADER, LINK_TAG.
	dimensionValueSource?: null | string @go(DimensionValueSource,*string)
}

#DimensionConfigurationParameters: {
	// The default value of the dimension that is published to Amazon CloudWatch if you don't provide the value of the dimension when you send an email.
	// ( dimension_name -  The name of an Amazon CloudWatch dimension associated with an email sending metric.
	// +kubebuilder:validation:Required
	defaultDimensionValue?: null | string @go(DefaultDimensionValue,*string)

	// +kubebuilder:validation:Required
	dimensionName?: null | string @go(DimensionName,*string)

	// The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. Valid values: MESSAGE_TAG, EMAIL_HEADER, LINK_TAG.
	// +kubebuilder:validation:Required
	dimensionValueSource?: null | string @go(DimensionValueSource,*string)
}

#EventDestinationObservation: {
	// An object that defines an Amazon CloudWatch destination for email events. See cloud_watch_destination below
	cloudWatchDestination?: [...#CloudWatchDestinationObservation] @go(CloudWatchDestination,[]CloudWatchDestinationObservation)

	// When the event destination is enabled, the specified event types are sent to the destinations. Default: false.
	enabled?: null | bool @go(Enabled,*bool)

	// An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesis_firehose_destination below.
	kinesisFirehoseDestination?: [...#KinesisFirehoseDestinationObservation] @go(KinesisFirehoseDestination,[]KinesisFirehoseDestinationObservation)

	// - An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: SEND, REJECT, BOUNCE, COMPLAINT, DELIVERY, OPEN, CLICK, RENDERING_FAILURE, DELIVERY_DELAY, SUBSCRIPTION.
	matchingEventTypes?: [...null | string] @go(MatchingEventTypes,[]*string)

	// An object that defines an Amazon Pinpoint project destination for email events. See pinpoint_destination below.
	pinpointDestination?: [...#PinpointDestinationObservation] @go(PinpointDestination,[]PinpointDestinationObservation)

	// An object that defines an Amazon SNS destination for email events. See sns_destination below.
	snsDestination?: [...#SnsDestinationObservation] @go(SnsDestination,[]SnsDestinationObservation)
}

#EventDestinationParameters: {
	// An object that defines an Amazon CloudWatch destination for email events. See cloud_watch_destination below
	// +kubebuilder:validation:Optional
	cloudWatchDestination?: [...#CloudWatchDestinationParameters] @go(CloudWatchDestination,[]CloudWatchDestinationParameters)

	// When the event destination is enabled, the specified event types are sent to the destinations. Default: false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesis_firehose_destination below.
	// +kubebuilder:validation:Optional
	kinesisFirehoseDestination?: [...#KinesisFirehoseDestinationParameters] @go(KinesisFirehoseDestination,[]KinesisFirehoseDestinationParameters)

	// - An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: SEND, REJECT, BOUNCE, COMPLAINT, DELIVERY, OPEN, CLICK, RENDERING_FAILURE, DELIVERY_DELAY, SUBSCRIPTION.
	// +kubebuilder:validation:Required
	matchingEventTypes: [...null | string] @go(MatchingEventTypes,[]*string)

	// An object that defines an Amazon Pinpoint project destination for email events. See pinpoint_destination below.
	// +kubebuilder:validation:Optional
	pinpointDestination?: [...#PinpointDestinationParameters] @go(PinpointDestination,[]PinpointDestinationParameters)

	// An object that defines an Amazon SNS destination for email events. See sns_destination below.
	// +kubebuilder:validation:Optional
	snsDestination?: [...#SnsDestinationParameters] @go(SnsDestination,[]SnsDestinationParameters)
}

#KinesisFirehoseDestinationObservation: {
	// The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email events to.
	deliveryStreamArn?: null | string @go(DeliveryStreamArn,*string)

	// The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email events to the Amazon Kinesis Data Firehose stream.
	iamRoleArn?: null | string @go(IAMRoleArn,*string)
}

#KinesisFirehoseDestinationParameters: {
	// The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email events to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/firehose/v1beta1.DeliveryStream
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",false)
	// +kubebuilder:validation:Optional
	deliveryStreamArn?: null | string @go(DeliveryStreamArn,*string)

	// The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email events to the Amazon Kinesis Data Firehose stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	iamRoleArn?: null | string @go(IAMRoleArn,*string)
}

#PinpointDestinationObservation: {
	applicationArn?: null | string @go(ApplicationArn,*string)
}

#PinpointDestinationParameters: {
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/pinpoint/v1beta1.App
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	applicationArn?: null | string @go(ApplicationArn,*string)
}

#SnsDestinationObservation: {
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to.
	topicArn?: null | string @go(TopicArn,*string)
}

#SnsDestinationParameters: {
	// The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sns/v1beta1.Topic
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	topicArn?: null | string @go(TopicArn,*string)
}

// ConfigurationSetEventDestinationSpec defines the desired state of ConfigurationSetEventDestination
#ConfigurationSetEventDestinationSpec: {
	forProvider: #ConfigurationSetEventDestinationParameters @go(ForProvider)
}

// ConfigurationSetEventDestinationStatus defines the observed state of ConfigurationSetEventDestination.
#ConfigurationSetEventDestinationStatus: {
	atProvider?: #ConfigurationSetEventDestinationObservation @go(AtProvider)
}

// ConfigurationSetEventDestination is the Schema for the ConfigurationSetEventDestinations API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConfigurationSetEventDestination: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.eventDestination)",message="eventDestination is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.eventDestinationName)",message="eventDestinationName is a required parameter"
	spec:    #ConfigurationSetEventDestinationSpec   @go(Spec)
	status?: #ConfigurationSetEventDestinationStatus @go(Status)
}

// ConfigurationSetEventDestinationList contains a list of ConfigurationSetEventDestinations
#ConfigurationSetEventDestinationList: {
	items: [...#ConfigurationSetEventDestination] @go(Items,[]ConfigurationSetEventDestination)
}
