// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/route53/v1beta1

package v1beta1

#HostedZoneDNSSECObservation: {
	// Identifier of the Route 53 Hosted Zone.
	hostedZoneId?: null | string @go(HostedZoneID,*string)

	// Route 53 Hosted Zone identifier.
	id?: null | string @go(ID,*string)

	// Hosted Zone signing status. Valid values: SIGNING, NOT_SIGNING. Defaults to SIGNING.
	signingStatus?: null | string @go(SigningStatus,*string)
}

#HostedZoneDNSSECParameters: {
	// Identifier of the Route 53 Hosted Zone.
	// +crossplane:generate:reference:type=Zone
	// +kubebuilder:validation:Optional
	hostedZoneId?: null | string @go(HostedZoneID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Hosted Zone signing status. Valid values: SIGNING, NOT_SIGNING. Defaults to SIGNING.
	// +kubebuilder:validation:Optional
	signingStatus?: null | string @go(SigningStatus,*string)
}

// HostedZoneDNSSECSpec defines the desired state of HostedZoneDNSSEC
#HostedZoneDNSSECSpec: {
	forProvider: #HostedZoneDNSSECParameters @go(ForProvider)
}

// HostedZoneDNSSECStatus defines the observed state of HostedZoneDNSSEC.
#HostedZoneDNSSECStatus: {
	atProvider?: #HostedZoneDNSSECObservation @go(AtProvider)
}

// HostedZoneDNSSEC is the Schema for the HostedZoneDNSSECs API. Manages Route 53 Hosted Zone DNSSEC
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#HostedZoneDNSSEC: {
	spec:    #HostedZoneDNSSECSpec   @go(Spec)
	status?: #HostedZoneDNSSECStatus @go(Status)
}

// HostedZoneDNSSECList contains a list of HostedZoneDNSSECs
#HostedZoneDNSSECList: {
	items: [...#HostedZoneDNSSEC] @go(Items,[]HostedZoneDNSSEC)
}
