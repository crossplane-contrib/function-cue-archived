// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/route53/v1beta1

package v1beta1

#AliasObservation: {
}

#AliasParameters: {
	// Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.
	// +kubebuilder:validation:Required
	evaluateTargetHealth?: null | bool @go(EvaluateTargetHealth,*bool)

	// The name of the record.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The ID of the hosted zone to contain this record.
	// +kubebuilder:validation:Required
	zoneId?: null | string @go(ZoneID,*string)
}

#FailoverRoutingPolicyObservation: {
}

#FailoverRoutingPolicyParameters: {
	// The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

#GeolocationRoutingPolicyObservation: {
}

#GeolocationRoutingPolicyParameters: {
	// A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.
	// +kubebuilder:validation:Optional
	continent?: null | string @go(Continent,*string)

	// A two-character country code or * to indicate a default resource record set.
	// +kubebuilder:validation:Optional
	country?: null | string @go(Country,*string)

	// A subdivision code for a country.
	// +kubebuilder:validation:Optional
	subdivision?: null | string @go(Subdivision,*string)
}

#LatencyRoutingPolicyObservation: {
}

#LatencyRoutingPolicyParameters: {
	// An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#RecordObservation: {
	// FQDN built using the zone domain and name.
	fqdn?: null | string @go(Fqdn,*string)
	id?:   null | string @go(ID,*string)
}

#RecordParameters: {
	// An alias block. Conflicts with ttl & records.
	// Documented below.
	// +kubebuilder:validation:Optional
	alias?: [...#AliasParameters] @go(Alias,[]AliasParameters)

	// false by default. This configuration is not recommended for most environments.
	// +kubebuilder:validation:Optional
	allowOverwrite?: null | bool @go(AllowOverwrite,*bool)

	// A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
	// +kubebuilder:validation:Optional
	failoverRoutingPolicy?: [...#FailoverRoutingPolicyParameters] @go(FailoverRoutingPolicy,[]FailoverRoutingPolicyParameters)

	// A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
	// +kubebuilder:validation:Optional
	geolocationRoutingPolicy?: [...#GeolocationRoutingPolicyParameters] @go(GeolocationRoutingPolicy,[]GeolocationRoutingPolicyParameters)

	// The health check the record should be associated with.
	// +crossplane:generate:reference:type=HealthCheck
	// +kubebuilder:validation:Optional
	healthCheckId?: null | string @go(HealthCheckID,*string)

	// A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
	// +kubebuilder:validation:Optional
	latencyRoutingPolicy?: [...#LatencyRoutingPolicyParameters] @go(LatencyRoutingPolicy,[]LatencyRoutingPolicyParameters)

	// Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
	// +kubebuilder:validation:Optional
	multivalueAnswerRoutingPolicy?: null | bool @go(MultivalueAnswerRoutingPolicy,*bool)

	// The name of the record.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// A string list of records.g., "first255characters\"\"morecharacters").
	// +kubebuilder:validation:Optional
	records?: [...null | string] @go(Records,[]*string)

	// An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Unique identifier to differentiate records with routing policies from one another. Required if using failover, geolocation, latency, multivalue_answer, or weighted routing policies documented below.
	// +kubebuilder:validation:Optional
	setIdentifier?: null | string @go(SetIdentifier,*string)

	// The TTL of the record.
	// +kubebuilder:validation:Optional
	ttl?: null | float64 @go(TTL,*float64)

	// The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)

	// A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
	// +kubebuilder:validation:Optional
	weightedRoutingPolicy?: [...#WeightedRoutingPolicyParameters] @go(WeightedRoutingPolicy,[]WeightedRoutingPolicyParameters)

	// The ID of the hosted zone to contain this record.
	// +crossplane:generate:reference:type=Zone
	// +kubebuilder:validation:Optional
	zoneId?: null | string @go(ZoneID,*string)
}

#WeightedRoutingPolicyObservation: {
}

#WeightedRoutingPolicyParameters: {
	// A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
	// +kubebuilder:validation:Required
	weight?: null | float64 @go(Weight,*float64)
}

// RecordSpec defines the desired state of Record
#RecordSpec: {
	forProvider: #RecordParameters @go(ForProvider)
}

// RecordStatus defines the observed state of Record.
#RecordStatus: {
	atProvider?: #RecordObservation @go(AtProvider)
}

// Record is the Schema for the Records API. Provides a Route53 record resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Record: {
	spec:    #RecordSpec   @go(Spec)
	status?: #RecordStatus @go(Status)
}

// RecordList contains a list of Records
#RecordList: {
	items: [...#Record] @go(Items,[]Record)
}
