// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/route53/v1beta1

package v1beta1

#TrafficPolicyObservation: {
	// Comment for the traffic policy.
	comment?: null | string @go(Comment,*string)

	// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the AWS Route53 Traffic Policy document format
	document?: null | string @go(Document,*string)

	// ID of the traffic policy
	id?: null | string @go(ID,*string)

	// Name of the traffic policy.
	name?: null | string @go(Name,*string)

	// DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.
	type?: null | string @go(Type,*string)

	// Version number of the traffic policy. This value is automatically incremented by AWS after each update of this resource.
	version?: null | float64 @go(Version,*float64)
}

#TrafficPolicyParameters: {
	// Comment for the traffic policy.
	// +kubebuilder:validation:Optional
	comment?: null | string @go(Comment,*string)

	// Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the AWS Route53 Traffic Policy document format
	// +kubebuilder:validation:Optional
	document?: null | string @go(Document,*string)

	// Name of the traffic policy.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// TrafficPolicySpec defines the desired state of TrafficPolicy
#TrafficPolicySpec: {
	forProvider: #TrafficPolicyParameters @go(ForProvider)
}

// TrafficPolicyStatus defines the observed state of TrafficPolicy.
#TrafficPolicyStatus: {
	atProvider?: #TrafficPolicyObservation @go(AtProvider)
}

// TrafficPolicy is the Schema for the TrafficPolicys API. Manages a Route53 Traffic Policy
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TrafficPolicy: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.document)",message="document is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #TrafficPolicySpec   @go(Spec)
	status?: #TrafficPolicyStatus @go(Status)
}

// TrafficPolicyList contains a list of TrafficPolicys
#TrafficPolicyList: {
	items: [...#TrafficPolicy] @go(Items,[]TrafficPolicy)
}
