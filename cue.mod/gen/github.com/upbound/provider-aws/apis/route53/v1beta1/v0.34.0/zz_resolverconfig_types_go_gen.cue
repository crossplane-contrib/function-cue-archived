// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/route53/v1beta1

package v1beta1

#ResolverConfigObservation: {
	// Indicates whether or not the Resolver will create autodefined rules for reverse DNS lookups. Valid values: ENABLE, DISABLE.
	autodefinedReverseFlag?: null | string @go(AutodefinedReverseFlag,*string)

	// The ID of the resolver configuration.
	id?: null | string @go(ID,*string)

	// The AWS account ID of the owner of the VPC that this resolver configuration applies to.
	ownerId?: null | string @go(OwnerID,*string)

	// The ID of the VPC that the configuration is for.
	resourceId?: null | string @go(ResourceID,*string)
}

#ResolverConfigParameters: {
	// Indicates whether or not the Resolver will create autodefined rules for reverse DNS lookups. Valid values: ENABLE, DISABLE.
	// +kubebuilder:validation:Optional
	autodefinedReverseFlag?: null | string @go(AutodefinedReverseFlag,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ID of the VPC that the configuration is for.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPC
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	resourceId?: null | string @go(ResourceID,*string)
}

// ResolverConfigSpec defines the desired state of ResolverConfig
#ResolverConfigSpec: {
	forProvider: #ResolverConfigParameters @go(ForProvider)
}

// ResolverConfigStatus defines the observed state of ResolverConfig.
#ResolverConfigStatus: {
	atProvider?: #ResolverConfigObservation @go(AtProvider)
}

// ResolverConfig is the Schema for the ResolverConfigs API. Provides a Route 53 Resolver config resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ResolverConfig: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.autodefinedReverseFlag)",message="autodefinedReverseFlag is a required parameter"
	spec:    #ResolverConfigSpec   @go(Spec)
	status?: #ResolverConfigStatus @go(Status)
}

// ResolverConfigList contains a list of ResolverConfigs
#ResolverConfigList: {
	items: [...#ResolverConfig] @go(Items,[]ResolverConfig)
}
