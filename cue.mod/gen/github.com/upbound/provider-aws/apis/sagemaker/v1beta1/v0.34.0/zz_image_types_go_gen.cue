// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sagemaker/v1beta1

package v1beta1

#ImageObservation: {
	// The Amazon Resource Name (ARN) assigned by AWS to this Image.
	arn?: null | string @go(Arn,*string)

	// The description of the image.
	description?: null | string @go(Description,*string)

	// The display name of the image. When the image is added to a domain (must be unique to the domain).
	displayName?: null | string @go(DisplayName,*string)

	// The name of the Image.
	id?: null | string @go(ID,*string)

	// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
	roleArn?: null | string @go(RoleArn,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ImageParameters: {
	// The description of the image.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The display name of the image. When the image is added to a domain (must be unique to the domain).
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ImageSpec defines the desired state of Image
#ImageSpec: {
	forProvider: #ImageParameters @go(ForProvider)
}

// ImageStatus defines the observed state of Image.
#ImageStatus: {
	atProvider?: #ImageObservation @go(AtProvider)
}

// Image is the Schema for the Images API. Provides a SageMaker Image resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Image: {
	spec:    #ImageSpec   @go(Spec)
	status?: #ImageStatus @go(Status)
}

// ImageList contains a list of Images
#ImageList: {
	items: [...#Image] @go(Items,[]Image)
}
