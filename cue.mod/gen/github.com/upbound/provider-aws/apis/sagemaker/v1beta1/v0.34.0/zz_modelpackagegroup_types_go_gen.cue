// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sagemaker/v1beta1

package v1beta1

#ModelPackageGroupObservation: {
	// The Amazon Resource Name (ARN) assigned by AWS to this Model Package Group.
	arn?: null | string @go(Arn,*string)

	// The name of the Model Package Group.
	id?: null | string @go(ID,*string)

	// A description for the model group.
	modelPackageGroupDescription?: null | string @go(ModelPackageGroupDescription,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ModelPackageGroupParameters: {
	// A description for the model group.
	// +kubebuilder:validation:Optional
	modelPackageGroupDescription?: null | string @go(ModelPackageGroupDescription,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ModelPackageGroupSpec defines the desired state of ModelPackageGroup
#ModelPackageGroupSpec: {
	forProvider: #ModelPackageGroupParameters @go(ForProvider)
}

// ModelPackageGroupStatus defines the observed state of ModelPackageGroup.
#ModelPackageGroupStatus: {
	atProvider?: #ModelPackageGroupObservation @go(AtProvider)
}

// ModelPackageGroup is the Schema for the ModelPackageGroups API. Provides a SageMaker Model Package Group resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ModelPackageGroup: {
	spec:    #ModelPackageGroupSpec   @go(Spec)
	status?: #ModelPackageGroupStatus @go(Status)
}

// ModelPackageGroupList contains a list of ModelPackageGroups
#ModelPackageGroupList: {
	items: [...#ModelPackageGroup] @go(Items,[]ModelPackageGroup)
}
