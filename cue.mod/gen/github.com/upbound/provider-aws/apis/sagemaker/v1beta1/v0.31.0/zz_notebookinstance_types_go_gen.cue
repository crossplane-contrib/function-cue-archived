// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sagemaker/v1beta1

package v1beta1

#InstanceMetadataServiceConfigurationObservation: {
}

#InstanceMetadataServiceConfigurationParameters: {
	// Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are 1 and 2.
	// +kubebuilder:validation:Optional
	minimumInstanceMetadataServiceVersion?: null | string @go(MinimumInstanceMetadataServiceVersion,*string)
}

#NotebookInstanceObservation: {
	// The Amazon Resource Name (ARN) assigned by AWS to this notebook instance.
	arn?: null | string @go(Arn,*string)

	// The name of the notebook instance.
	id?: null | string @go(ID,*string)

	// The network interface ID that Amazon SageMaker created at the time of creating the instance. Only available when setting subnet_id.
	networkInterfaceId?: null | string @go(NetworkInterfaceID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.
	url?: null | string @go(URL,*string)
}

#NotebookInstanceParameters: {
	// A list of Elastic Inference (EI) instance types to associate with this notebook instance. See Elastic Inference Accelerator for more details. Valid values: ml.eia1.medium, ml.eia1.large, ml.eia1.xlarge, ml.eia2.medium, ml.eia2.large, ml.eia2.xlarge.
	// +kubebuilder:validation:Optional
	acceleratorTypes?: [...null | string] @go(AcceleratorTypes,[]*string)

	// An array of up to three Git repositories to associate with the notebook instance.
	// These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in AWS CodeCommit or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
	// +kubebuilder:validation:Optional
	additionalCodeRepositories?: [...null | string] @go(AdditionalCodeRepositories,[]*string)

	// The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in AWS CodeCommit or in any other Git repository.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/sagemaker/v1beta1.CodeRepository
	// +kubebuilder:validation:Optional
	defaultCodeRepository?: null | string @go(DefaultCodeRepository,*string)

	// Set to Disabled to disable internet access to notebook. Requires security_groups and subnet_id to be set. Supported values: Enabled (Default) or Disabled. If set to Disabled, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
	// +kubebuilder:validation:Optional
	directInternetAccess?: null | string @go(DirectInternetAccess,*string)

	// Information on the IMDS configuration of the notebook instance. Conflicts with instance_metadata_service_configuration. see details below.
	// +kubebuilder:validation:Optional
	instanceMetadataServiceConfiguration?: [...#InstanceMetadataServiceConfigurationParameters] @go(InstanceMetadataServiceConfiguration,[]InstanceMetadataServiceConfigurationParameters)

	// The name of ML compute instance type.
	// +kubebuilder:validation:Required
	instanceType?: null | string @go(InstanceType,*string)

	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// The name of a lifecycle configuration to associate with the notebook instance.
	// +kubebuilder:validation:Optional
	lifecycleConfigName?: null | string @go(LifecycleConfigName,*string)

	// The platform identifier of the notebook instance runtime environment. This value can be either notebook-al1-v1, notebook-al2-v1, or  notebook-al2-v2, depending on which version of Amazon Linux you require.
	// +kubebuilder:validation:Optional
	platformIdentifier?: null | string @go(PlatformIdentifier,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Whether root access is Enabled or Disabled for users of the notebook instance. The default value is Enabled.
	// +kubebuilder:validation:Optional
	rootAccess?: null | string @go(RootAccess,*string)

	// The associated security groups.
	// +kubebuilder:validation:Optional
	securityGroups?: [...null | string] @go(SecurityGroups,[]*string)

	// The VPC subnet ID.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +kubebuilder:validation:Optional
	subnetId?: null | string @go(SubnetID,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
	// +kubebuilder:validation:Optional
	volumeSize?: null | float64 @go(VolumeSize,*float64)
}

// NotebookInstanceSpec defines the desired state of NotebookInstance
#NotebookInstanceSpec: {
	forProvider: #NotebookInstanceParameters @go(ForProvider)
}

// NotebookInstanceStatus defines the observed state of NotebookInstance.
#NotebookInstanceStatus: {
	atProvider?: #NotebookInstanceObservation @go(AtProvider)
}

// NotebookInstance is the Schema for the NotebookInstances API. Provides a SageMaker Notebook Instance resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#NotebookInstance: {
	spec:    #NotebookInstanceSpec   @go(Spec)
	status?: #NotebookInstanceStatus @go(Status)
}

// NotebookInstanceList contains a list of NotebookInstances
#NotebookInstanceList: {
	items: [...#NotebookInstance] @go(Items,[]NotebookInstance)
}
