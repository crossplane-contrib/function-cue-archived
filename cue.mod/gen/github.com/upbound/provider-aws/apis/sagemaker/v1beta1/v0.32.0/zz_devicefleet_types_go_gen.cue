// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/sagemaker/v1beta1

package v1beta1

#DeviceFleetObservation: {
	// The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
	arn?: null | string @go(Arn,*string)

	// The name of the Device Fleet.
	id?:           null | string @go(ID,*string)
	iotRoleAlias?: null | string @go(IotRoleAlias,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#DeviceFleetParameters: {
	// A description of the fleet.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
	// +kubebuilder:validation:Optional
	enableIotRoleAlias?: null | bool @go(EnableIotRoleAlias,*bool)

	// Specifies details about the repository. see Output Config details below.
	// +kubebuilder:validation:Required
	outputConfig: [...#OutputConfigParameters] @go(OutputConfig,[]OutputConfigParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#OutputConfigObservation: {
}

#OutputConfigParameters: {
	// The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account.
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// The Amazon Simple Storage (S3) bucker URI.
	// +kubebuilder:validation:Required
	s3OutputLocation?: null | string @go(S3OutputLocation,*string)
}

// DeviceFleetSpec defines the desired state of DeviceFleet
#DeviceFleetSpec: {
	forProvider: #DeviceFleetParameters @go(ForProvider)
}

// DeviceFleetStatus defines the observed state of DeviceFleet.
#DeviceFleetStatus: {
	atProvider?: #DeviceFleetObservation @go(AtProvider)
}

// DeviceFleet is the Schema for the DeviceFleets API. Provides a SageMaker Device Fleet resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DeviceFleet: {
	spec:    #DeviceFleetSpec   @go(Spec)
	status?: #DeviceFleetStatus @go(Status)
}

// DeviceFleetList contains a list of DeviceFleets
#DeviceFleetList: {
	items: [...#DeviceFleet] @go(Items,[]DeviceFleet)
}
