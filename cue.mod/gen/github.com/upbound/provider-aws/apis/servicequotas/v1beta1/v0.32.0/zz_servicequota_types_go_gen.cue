// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/servicequotas/v1beta1

package v1beta1

#ServiceQuotaObservation: {
	// Whether the service quota can be increased.
	adjustable?: null | bool @go(Adjustable,*bool)

	// Amazon Resource Name (ARN) of the service quota.
	arn?: null | string @go(Arn,*string)

	// Default value of the service quota.
	defaultValue?: null | float64 @go(DefaultValue,*float64)

	// Service code and quota code, separated by a front slash (/)
	id?: null | string @go(ID,*string)

	// Name of the quota.
	quotaName?: null | string @go(QuotaName,*string)

	// Service code and quota code, separated by a front slash (/)
	requestId?:     null | string @go(RequestID,*string)
	requestStatus?: null | string @go(RequestStatus,*string)

	// Name of the service.
	serviceName?: null | string @go(ServiceName,*string)
}

#ServiceQuotaParameters: {
	// Code of the service quota to track. For example: L-F678F1CE. Available values can be found with the AWS CLI service-quotas list-service-quotas command.
	// +kubebuilder:validation:Required
	quotaCode?: null | string @go(QuotaCode,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Code of the service to track. For example: vpc. Available values can be found with the AWS CLI service-quotas list-services command.
	// +kubebuilder:validation:Required
	serviceCode?: null | string @go(ServiceCode,*string)

	// Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
	// +kubebuilder:validation:Required
	value?: null | float64 @go(Value,*float64)
}

// ServiceQuotaSpec defines the desired state of ServiceQuota
#ServiceQuotaSpec: {
	forProvider: #ServiceQuotaParameters @go(ForProvider)
}

// ServiceQuotaStatus defines the observed state of ServiceQuota.
#ServiceQuotaStatus: {
	atProvider?: #ServiceQuotaObservation @go(AtProvider)
}

// ServiceQuota is the Schema for the ServiceQuotas API. Manages an individual Service Quota
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ServiceQuota: {
	spec:    #ServiceQuotaSpec   @go(Spec)
	status?: #ServiceQuotaStatus @go(Status)
}

// ServiceQuotaList contains a list of ServiceQuotas
#ServiceQuotaList: {
	items: [...#ServiceQuota] @go(Items,[]ServiceQuota)
}
