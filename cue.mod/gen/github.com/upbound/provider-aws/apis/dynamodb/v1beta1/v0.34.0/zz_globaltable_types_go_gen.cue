// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/dynamodb/v1beta1

package v1beta1

#GlobalTableObservation: {
	// The ARN of the DynamoDB Global Table
	arn?: null | string @go(Arn,*string)

	// The name of the DynamoDB Global Table
	id?: null | string @go(ID,*string)

	// Underlying DynamoDB Table. At least 1 replica must be defined. See below.
	replica?: [...#ReplicaObservation] @go(Replica,[]ReplicaObservation)
}

#GlobalTableParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Underlying DynamoDB Table. At least 1 replica must be defined. See below.
	// +kubebuilder:validation:Optional
	replica?: [...#ReplicaParameters] @go(Replica,[]ReplicaParameters)
}

#ReplicaObservation: {
	// AWS region name of replica DynamoDB TableE.g., us-east-1
	regionName?: null | string @go(RegionName,*string)
}

#ReplicaParameters: {
	// AWS region name of replica DynamoDB TableE.g., us-east-1
	// +kubebuilder:validation:Required
	regionName?: null | string @go(RegionName,*string)
}

// GlobalTableSpec defines the desired state of GlobalTable
#GlobalTableSpec: {
	forProvider: #GlobalTableParameters @go(ForProvider)
}

// GlobalTableStatus defines the observed state of GlobalTable.
#GlobalTableStatus: {
	atProvider?: #GlobalTableObservation @go(AtProvider)
}

// GlobalTable is the Schema for the GlobalTables API. Manages DynamoDB Global Tables V1 (version 2017.11.29)
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GlobalTable: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.replica)",message="replica is a required parameter"
	spec:    #GlobalTableSpec   @go(Spec)
	status?: #GlobalTableStatus @go(Status)
}

// GlobalTableList contains a list of GlobalTables
#GlobalTableList: {
	items: [...#GlobalTable] @go(Items,[]GlobalTable)
}
