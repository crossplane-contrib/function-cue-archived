// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/dynamodb/v1beta1

package v1beta1

#KinesisStreamingDestinationObservation: {
	// The table_name and stream_arn separated by a comma (,).
	id?: null | string @go(ID,*string)

	// The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
	streamArn?: null | string @go(StreamArn,*string)

	// The name of the DynamoDB table. There
	// can only be one Kinesis streaming destination for a given DynamoDB table.
	tableName?: null | string @go(TableName,*string)
}

#KinesisStreamingDestinationParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.TerraformID()
	// +kubebuilder:validation:Optional
	streamArn?: null | string @go(StreamArn,*string)

	// The name of the DynamoDB table. There
	// can only be one Kinesis streaming destination for a given DynamoDB table.
	// +crossplane:generate:reference:type=Table
	// +kubebuilder:validation:Optional
	tableName?: null | string @go(TableName,*string)
}

// KinesisStreamingDestinationSpec defines the desired state of KinesisStreamingDestination
#KinesisStreamingDestinationSpec: {
	forProvider: #KinesisStreamingDestinationParameters @go(ForProvider)
}

// KinesisStreamingDestinationStatus defines the observed state of KinesisStreamingDestination.
#KinesisStreamingDestinationStatus: {
	atProvider?: #KinesisStreamingDestinationObservation @go(AtProvider)
}

// KinesisStreamingDestination is the Schema for the KinesisStreamingDestinations API. Enables a Kinesis streaming destination for a DynamoDB table
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#KinesisStreamingDestination: {
	spec:    #KinesisStreamingDestinationSpec   @go(Spec)
	status?: #KinesisStreamingDestinationStatus @go(Status)
}

// KinesisStreamingDestinationList contains a list of KinesisStreamingDestinations
#KinesisStreamingDestinationList: {
	items: [...#KinesisStreamingDestination] @go(Items,[]KinesisStreamingDestination)
}
