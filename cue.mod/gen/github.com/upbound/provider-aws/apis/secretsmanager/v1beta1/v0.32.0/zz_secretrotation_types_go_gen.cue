// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/secretsmanager/v1beta1

package v1beta1

#SecretRotationObservation: {
	// Amazon Resource Name (ARN) of the secret.
	id?: null | string @go(ID,*string)

	// Specifies whether automatic rotation is enabled for this secret.
	rotationEnabled?: null | bool @go(RotationEnabled,*bool)
}

#SecretRotationParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Specifies the ARN of the Lambda function that can rotate the secret.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	rotationLambdaArn?: null | string @go(RotationLambdaArn,*string)

	// A structure that defines the rotation configuration for this secret. Defined below.
	// +kubebuilder:validation:Required
	rotationRules: [...#SecretRotationRotationRulesParameters] @go(RotationRules,[]SecretRotationRotationRulesParameters)

	// Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/secretsmanager/v1beta1.Secret
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	secretId?: null | string @go(SecretID,*string)
}

#SecretRotationRotationRulesObservation: {
}

#SecretRotationRotationRulesParameters: {
	// Specifies the number of days between automatic scheduled rotations of the secret.
	// +kubebuilder:validation:Required
	automaticallyAfterDays?: null | float64 @go(AutomaticallyAfterDays,*float64)
}

// SecretRotationSpec defines the desired state of SecretRotation
#SecretRotationSpec: {
	forProvider: #SecretRotationParameters @go(ForProvider)
}

// SecretRotationStatus defines the observed state of SecretRotation.
#SecretRotationStatus: {
	atProvider?: #SecretRotationObservation @go(AtProvider)
}

// SecretRotation is the Schema for the SecretRotations API. Provides a resource to manage AWS Secrets Manager secret rotation
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SecretRotation: {
	spec:    #SecretRotationSpec   @go(Spec)
	status?: #SecretRotationStatus @go(Status)
}

// SecretRotationList contains a list of SecretRotations
#SecretRotationList: {
	items: [...#SecretRotation] @go(Items,[]SecretRotation)
}
