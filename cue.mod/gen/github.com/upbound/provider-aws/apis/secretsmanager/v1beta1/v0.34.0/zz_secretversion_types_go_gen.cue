// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/secretsmanager/v1beta1

package v1beta1

#SecretVersionObservation: {
	// The ARN of the secret.
	arn?: null | string @go(Arn,*string)

	// A pipe delimited combination of secret ID and version ID.
	id?: null | string @go(ID,*string)

	// Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.
	secretId?: null | string @go(SecretID,*string)

	// The unique identifier of the version of the secret.
	versionId?: null | string @go(VersionID,*string)

	// Specifies a list of staging labels that are attached to this version of the secret. A staging label must be unique to a single version of the secret. If you specify a staging label that's already associated with a different version of the same secret then that staging label is automatically removed from the other version and attached to this version. If you do not specify a value, then AWS Secrets Manager automatically moves the staging label AWSCURRENT to this new version on creation.
	versionStages?: [...null | string] @go(VersionStages,[]*string)
}

#SecretVersionParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/secretsmanager/v1beta1.Secret
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	secretId?: null | string @go(SecretID,*string)

	// Specifies a list of staging labels that are attached to this version of the secret. A staging label must be unique to a single version of the secret. If you specify a staging label that's already associated with a different version of the same secret then that staging label is automatically removed from the other version and attached to this version. If you do not specify a value, then AWS Secrets Manager automatically moves the staging label AWSCURRENT to this new version on creation.
	// +kubebuilder:validation:Optional
	versionStages?: [...null | string] @go(VersionStages,[]*string)
}

// SecretVersionSpec defines the desired state of SecretVersion
#SecretVersionSpec: {
	forProvider: #SecretVersionParameters @go(ForProvider)
}

// SecretVersionStatus defines the observed state of SecretVersion.
#SecretVersionStatus: {
	atProvider?: #SecretVersionObservation @go(AtProvider)
}

// SecretVersion is the Schema for the SecretVersions API. Provides a resource to manage AWS Secrets Manager secret version including its secret value
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SecretVersion: {
	spec:    #SecretVersionSpec   @go(Spec)
	status?: #SecretVersionStatus @go(Status)
}

// SecretVersionList contains a list of SecretVersions
#SecretVersionList: {
	items: [...#SecretVersion] @go(Items,[]SecretVersion)
}
