// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/appstream/v1beta1

package v1beta1

#UserObservation: {
	// ARN of the appstream user.
	arn?: null | string @go(Arn,*string)

	// Authentication type for the user. You must specify USERPOOL. Valid values: API, SAML, USERPOOL
	authenticationType?: null | string @go(AuthenticationType,*string)

	// Date and time, in UTC and extended RFC 3339 format, when the user was created.
	createdTime?: null | string @go(CreatedTime,*string)

	// Whether the user in the user pool is enabled.
	enabled?: null | bool @go(Enabled,*bool)

	// First name, or given name, of the user.
	firstName?: null | string @go(FirstName,*string)

	// Unique ID of the appstream user.
	id?: null | string @go(ID,*string)

	// Last name, or surname, of the user.
	lastName?: null | string @go(LastName,*string)

	// Send an email notification.
	sendEmailNotification?: null | bool @go(SendEmailNotification,*bool)
}

#UserParameters: {
	// Authentication type for the user. You must specify USERPOOL. Valid values: API, SAML, USERPOOL
	// +kubebuilder:validation:Required
	authenticationType?: null | string @go(AuthenticationType,*string)

	// Whether the user in the user pool is enabled.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// First name, or given name, of the user.
	// +kubebuilder:validation:Optional
	firstName?: null | string @go(FirstName,*string)

	// Last name, or surname, of the user.
	// +kubebuilder:validation:Optional
	lastName?: null | string @go(LastName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Send an email notification.
	// +kubebuilder:validation:Optional
	sendEmailNotification?: null | bool @go(SendEmailNotification,*bool)
}

// UserSpec defines the desired state of User
#UserSpec: {
	forProvider: #UserParameters @go(ForProvider)
}

// UserStatus defines the observed state of User.
#UserStatus: {
	atProvider?: #UserObservation @go(AtProvider)
}

// User is the Schema for the Users API. Provides an AppStream user
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#User: {
	spec:    #UserSpec   @go(Spec)
	status?: #UserStatus @go(Status)
}

// UserList contains a list of Users
#UserList: {
	items: [...#User] @go(Items,[]User)
}
