// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iam/v1beta1

package v1beta1

#VirtualMfaDeviceObservation: {
	// The Amazon Resource Name (ARN) specifying the virtual mfa device.
	arn?: null | string @go(Arn,*string)

	// The base32 seed defined as specified in RFC3548. The base_32_string_seed is base64-encoded.
	base32StringSeed?: null | string @go(Base32StringSeed,*string)
	id?:               null | string @go(ID,*string)

	// A QR code PNG image that encodes otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String where $virtualMFADeviceName is one of the create call arguments. AccountName is the user name if set (otherwise, the account ID otherwise), and Base32String is the seed in base32 format.
	qrCodePng?: null | string @go(QrCodePng,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#VirtualMfaDeviceParameters: {
	// â€“  The path for the virtual MFA device.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.
	// +kubebuilder:validation:Required
	virtualMfaDeviceName?: null | string @go(VirtualMfaDeviceName,*string)
}

// VirtualMfaDeviceSpec defines the desired state of VirtualMfaDevice
#VirtualMfaDeviceSpec: {
	forProvider: #VirtualMfaDeviceParameters @go(ForProvider)
}

// VirtualMfaDeviceStatus defines the observed state of VirtualMfaDevice.
#VirtualMfaDeviceStatus: {
	atProvider?: #VirtualMfaDeviceObservation @go(AtProvider)
}

// VirtualMfaDevice is the Schema for the VirtualMfaDevices API. Provides an IAM Virtual MFA Device
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VirtualMfaDevice: {
	spec:    #VirtualMfaDeviceSpec   @go(Spec)
	status?: #VirtualMfaDeviceStatus @go(Status)
}

// VirtualMfaDeviceList contains a list of VirtualMfaDevices
#VirtualMfaDeviceList: {
	items: [...#VirtualMfaDevice] @go(Items,[]VirtualMfaDevice)
}
