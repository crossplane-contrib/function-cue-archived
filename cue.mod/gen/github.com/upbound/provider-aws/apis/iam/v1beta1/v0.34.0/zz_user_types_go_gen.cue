// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iam/v1beta1

package v1beta1

#UserObservation: {
	// The ARN assigned by AWS for this user.
	arn?: null | string @go(Arn,*string)

	// when destroying this user, destroy even if it
	// has non-Upbound official provider-managed iam access keys, login profile or mfa devices. without force_destroy
	// a user with non-Upbound official provider-managed access keys and login profile will fail to be destroyed.
	// delete user even if it has non-Upbound official provider-managed iam access keys, login profile or mfa devices
	forceDestroy?: null | bool   @go(ForceDestroy,*bool)
	id?:           null | string @go(ID,*string)

	// Path in which to create the user.
	path?: null | string @go(Path,*string)

	// The ARN of the policy that is used to set the permissions boundary for the user.
	permissionsBoundary?: null | string @go(PermissionsBoundary,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The unique ID assigned by AWS.
	uniqueId?: null | string @go(UniqueID,*string)
}

#UserParameters: {
	// when destroying this user, destroy even if it
	// has non-Upbound official provider-managed iam access keys, login profile or mfa devices. without force_destroy
	// a user with non-Upbound official provider-managed access keys and login profile will fail to be destroyed.
	// delete user even if it has non-Upbound official provider-managed iam access keys, login profile or mfa devices
	// +kubebuilder:validation:Optional
	forceDestroy?: null | bool @go(ForceDestroy,*bool)

	// Path in which to create the user.
	// +kubebuilder:validation:Optional
	path?: null | string @go(Path,*string)

	// The ARN of the policy that is used to set the permissions boundary for the user.
	// +kubebuilder:validation:Optional
	permissionsBoundary?: null | string @go(PermissionsBoundary,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// UserSpec defines the desired state of User
#UserSpec: {
	forProvider: #UserParameters @go(ForProvider)
}

// UserStatus defines the observed state of User.
#UserStatus: {
	atProvider?: #UserObservation @go(AtProvider)
}

// User is the Schema for the Users API. Provides an IAM user.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#User: {
	spec:    #UserSpec   @go(Spec)
	status?: #UserStatus @go(Status)
}

// UserList contains a list of Users
#UserList: {
	items: [...#User] @go(Items,[]User)
}
