// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iam/v1beta1

package v1beta1

#GroupMembershipObservation: {
	id?: null | string @go(ID,*string)
}

#GroupMembershipParameters: {
	// â€“  The IAM Group name to attach the list of users to
	// +crossplane:generate:reference:type=Group
	// +kubebuilder:validation:Optional
	group?: null | string @go(Group,*string)

	// The name to identify the Group Membership
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// A list of IAM User names to associate with the Group
	// +crossplane:generate:reference:type=User
	// +crossplane:generate:reference:refFieldName=UserRefs
	// +crossplane:generate:reference:selectorFieldName=UserSelector
	// +kubebuilder:validation:Optional
	users?: [...null | string] @go(Users,[]*string)
}

// GroupMembershipSpec defines the desired state of GroupMembership
#GroupMembershipSpec: {
	forProvider: #GroupMembershipParameters @go(ForProvider)
}

// GroupMembershipStatus defines the observed state of GroupMembership.
#GroupMembershipStatus: {
	atProvider?: #GroupMembershipObservation @go(AtProvider)
}

// GroupMembership is the Schema for the GroupMemberships API. Provides a top level resource to manage IAM Group membership for IAM Users.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GroupMembership: {
	spec:    #GroupMembershipSpec   @go(Spec)
	status?: #GroupMembershipStatus @go(Status)
}

// GroupMembershipList contains a list of GroupMemberships
#GroupMembershipList: {
	items: [...#GroupMembership] @go(Items,[]GroupMembership)
}
