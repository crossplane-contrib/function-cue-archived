// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/mediastore/v1beta1

package v1beta1

#ContainerPolicyObservation: {
	id?: null | string @go(ID,*string)
}

#ContainerPolicyParameters: {
	// The name of the container.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/mediastore/v1beta1.Container
	// +kubebuilder:validation:Optional
	containerName?: null | string @go(ContainerName,*string)

	// The contents of the policy.
	// +kubebuilder:validation:Required
	policy?: null | string @go(Policy,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// ContainerPolicySpec defines the desired state of ContainerPolicy
#ContainerPolicySpec: {
	forProvider: #ContainerPolicyParameters @go(ForProvider)
}

// ContainerPolicyStatus defines the observed state of ContainerPolicy.
#ContainerPolicyStatus: {
	atProvider?: #ContainerPolicyObservation @go(AtProvider)
}

// ContainerPolicy is the Schema for the ContainerPolicys API. Provides a MediaStore Container Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ContainerPolicy: {
	spec:    #ContainerPolicySpec   @go(Spec)
	status?: #ContainerPolicyStatus @go(Status)
}

// ContainerPolicyList contains a list of ContainerPolicys
#ContainerPolicyList: {
	items: [...#ContainerPolicy] @go(Items,[]ContainerPolicy)
}
