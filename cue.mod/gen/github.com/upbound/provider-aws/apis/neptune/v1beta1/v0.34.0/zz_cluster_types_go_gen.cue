// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/neptune/v1beta1

package v1beta1

#ClusterObservation: {
	// Specifies whether upgrades between different major versions are allowed. You must set it to true when providing an engine_version parameter that uses a different major version than the DB cluster's current version. Default is false.
	allowMajorVersionUpgrade?: null | bool @go(AllowMajorVersionUpgrade,*bool)

	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// The Neptune Cluster Amazon Resource Name (ARN)
	arn?: null | string @go(Arn,*string)

	// A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)

	// The days to retain backups for. Default 1
	backupRetentionPeriod?: null | float64 @go(BackupRetentionPeriod,*float64)

	// â€“ List of Neptune Instances that are a part of this cluster
	clusterMembers?: [...null | string] @go(ClusterMembers,[]*string)

	// The Neptune Cluster Resource ID
	clusterResourceId?: null | string @go(ClusterResourceID,*string)

	// If set to true, tags are copied to any snapshot of the DB cluster that is created.
	copyTagsToSnapshot?: null | bool @go(CopyTagsToSnapshot,*bool)

	// A value that indicates whether the DB cluster has deletion protection enabled.The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports audit.
	enableCloudwatchLogsExports?: [...null | string] @go(EnableCloudwatchLogsExports,[]*string)

	// The DNS address of the Neptune instance
	endpoint?: null | string @go(Endpoint,*string)

	// The name of the database engine to be used for this Neptune cluster. Defaults to neptune.
	engine?: null | string @go(Engine,*string)

	// The database engine version.
	engineVersion?: null | string @go(EngineVersion,*string)

	// The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
	finalSnapshotIdentifier?: null | string @go(FinalSnapshotIdentifier,*string)

	// The global cluster identifier specified on aws_neptune_global_cluster.
	globalClusterIdentifier?: null | string @go(GlobalClusterIdentifier,*string)

	// The Route53 Hosted Zone ID of the endpoint
	hostedZoneId?: null | string @go(HostedZoneID,*string)

	// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
	iamDatabaseAuthenticationEnabled?: null | bool @go(IAMDatabaseAuthenticationEnabled,*bool)

	// A List of ARNs for the IAM roles to associate to the Neptune Cluster.
	iamRoles?: [...null | string] @go(IAMRoles,[]*string)

	// The Neptune Cluster Identifier
	id?: null | string @go(ID,*string)

	// The ARN for the KMS encryption key. When specifying kms_key_arn, storage_encrypted needs to be set to true.
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// A cluster parameter group to associate with the cluster.
	neptuneClusterParameterGroupName?: null | string @go(NeptuneClusterParameterGroupName,*string)

	// The name of the DB parameter group to apply to all instances of the DB cluster.
	neptuneInstanceParameterGroupName?: null | string @go(NeptuneInstanceParameterGroupName,*string)

	// A Neptune subnet group to associate with this Neptune instance.
	neptuneSubnetGroupName?: null | string @go(NeptuneSubnetGroupName,*string)

	// The port on which the Neptune accepts connections. Default is 8182.
	port?: null | float64 @go(Port,*float64)

	// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	preferredBackupWindow?: null | string @go(PreferredBackupWindow,*string)

	// The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	preferredMaintenanceWindow?: null | string @go(PreferredMaintenanceWindow,*string)

	// A read-only endpoint for the Neptune cluster, automatically load-balanced across replicas
	readerEndpoint?: null | string @go(ReaderEndpoint,*string)

	// ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
	replicationSourceIdentifier?: null | string @go(ReplicationSourceIdentifier,*string)

	// If set, create the Neptune cluster as a serverless one. See Serverless for example block attributes.
	serverlessV2ScalingConfiguration?: [...#ServerlessV2ScalingConfigurationObservation] @go(ServerlessV2ScalingConfiguration,[]ServerlessV2ScalingConfigurationObservation)

	// Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from final_snapshot_identifier. Default is false.
	skipFinalSnapshot?: null | bool @go(SkipFinalSnapshot,*bool)

	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot.
	snapshotIdentifier?: null | string @go(SnapshotIdentifier,*string)

	// Specifies whether the Neptune cluster is encrypted. The default is false if not specified.
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// List of VPC security groups to associate with the Cluster
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)
}

#ClusterParameters: {
	// Specifies whether upgrades between different major versions are allowed. You must set it to true when providing an engine_version parameter that uses a different major version than the DB cluster's current version. Default is false.
	// +kubebuilder:validation:Optional
	allowMajorVersionUpgrade?: null | bool @go(AllowMajorVersionUpgrade,*bool)

	// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
	// +kubebuilder:validation:Optional
	applyImmediately?: null | bool @go(ApplyImmediately,*bool)

	// A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
	// +kubebuilder:validation:Optional
	availabilityZones?: [...null | string] @go(AvailabilityZones,[]*string)

	// The days to retain backups for. Default 1
	// +kubebuilder:validation:Optional
	backupRetentionPeriod?: null | float64 @go(BackupRetentionPeriod,*float64)

	// If set to true, tags are copied to any snapshot of the DB cluster that is created.
	// +kubebuilder:validation:Optional
	copyTagsToSnapshot?: null | bool @go(CopyTagsToSnapshot,*bool)

	// A value that indicates whether the DB cluster has deletion protection enabled.The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
	// +kubebuilder:validation:Optional
	deletionProtection?: null | bool @go(DeletionProtection,*bool)

	// A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports audit.
	// +kubebuilder:validation:Optional
	enableCloudwatchLogsExports?: [...null | string] @go(EnableCloudwatchLogsExports,[]*string)

	// The name of the database engine to be used for this Neptune cluster. Defaults to neptune.
	// +kubebuilder:validation:Optional
	engine?: null | string @go(Engine,*string)

	// The database engine version.
	// +kubebuilder:validation:Optional
	engineVersion?: null | string @go(EngineVersion,*string)

	// The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
	// +kubebuilder:validation:Optional
	finalSnapshotIdentifier?: null | string @go(FinalSnapshotIdentifier,*string)

	// The global cluster identifier specified on aws_neptune_global_cluster.
	// +kubebuilder:validation:Optional
	globalClusterIdentifier?: null | string @go(GlobalClusterIdentifier,*string)

	// Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
	// +kubebuilder:validation:Optional
	iamDatabaseAuthenticationEnabled?: null | bool @go(IAMDatabaseAuthenticationEnabled,*bool)

	// A List of ARNs for the IAM roles to associate to the Neptune Cluster.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:refFieldName=IAMRoleRefs
	// +crossplane:generate:reference:selectorFieldName=IAMRoleSelector
	// +kubebuilder:validation:Optional
	iamRoles?: [...null | string] @go(IAMRoles,[]*string)

	// The ARN for the KMS encryption key. When specifying kms_key_arn, storage_encrypted needs to be set to true.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// A cluster parameter group to associate with the cluster.
	// +crossplane:generate:reference:type=ClusterParameterGroup
	// +kubebuilder:validation:Optional
	neptuneClusterParameterGroupName?: null | string @go(NeptuneClusterParameterGroupName,*string)

	// The name of the DB parameter group to apply to all instances of the DB cluster.
	// +kubebuilder:validation:Optional
	neptuneInstanceParameterGroupName?: null | string @go(NeptuneInstanceParameterGroupName,*string)

	// A Neptune subnet group to associate with this Neptune instance.
	// +crossplane:generate:reference:type=SubnetGroup
	// +kubebuilder:validation:Optional
	neptuneSubnetGroupName?: null | string @go(NeptuneSubnetGroupName,*string)

	// The port on which the Neptune accepts connections. Default is 8182.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
	// +kubebuilder:validation:Optional
	preferredBackupWindow?: null | string @go(PreferredBackupWindow,*string)

	// The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
	// +kubebuilder:validation:Optional
	preferredMaintenanceWindow?: null | string @go(PreferredMaintenanceWindow,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
	// +crossplane:generate:reference:type=Cluster
	// +kubebuilder:validation:Optional
	replicationSourceIdentifier?: null | string @go(ReplicationSourceIdentifier,*string)

	// If set, create the Neptune cluster as a serverless one. See Serverless for example block attributes.
	// +kubebuilder:validation:Optional
	serverlessV2ScalingConfiguration?: [...#ServerlessV2ScalingConfigurationParameters] @go(ServerlessV2ScalingConfiguration,[]ServerlessV2ScalingConfigurationParameters)

	// Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from final_snapshot_identifier. Default is false.
	// +kubebuilder:validation:Optional
	skipFinalSnapshot?: null | bool @go(SkipFinalSnapshot,*bool)

	// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot.
	// +crossplane:generate:reference:type=ClusterSnapshot
	// +kubebuilder:validation:Optional
	snapshotIdentifier?: null | string @go(SnapshotIdentifier,*string)

	// Specifies whether the Neptune cluster is encrypted. The default is false if not specified.
	// +kubebuilder:validation:Optional
	storageEncrypted?: null | bool @go(StorageEncrypted,*bool)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// List of VPC security groups to associate with the Cluster
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=VPCSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=VPCSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)
}

#ServerlessV2ScalingConfigurationObservation: {
	// : (default: 128) The maximum Neptune Capacity Units (NCUs) for this cluster. Must be lower or equal than 128. See AWS Documentation for more details.
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// : (default: 2.5) The minimum Neptune Capacity Units (NCUs) for this cluster. Must be greater or equal than 2.5. See AWS Documentation for more details.
	minCapacity?: null | float64 @go(MinCapacity,*float64)
}

#ServerlessV2ScalingConfigurationParameters: {
	// : (default: 128) The maximum Neptune Capacity Units (NCUs) for this cluster. Must be lower or equal than 128. See AWS Documentation for more details.
	// +kubebuilder:validation:Optional
	maxCapacity?: null | float64 @go(MaxCapacity,*float64)

	// : (default: 2.5) The minimum Neptune Capacity Units (NCUs) for this cluster. Must be greater or equal than 2.5. See AWS Documentation for more details.
	// +kubebuilder:validation:Optional
	minCapacity?: null | float64 @go(MinCapacity,*float64)
}

// ClusterSpec defines the desired state of Cluster
#ClusterSpec: {
	forProvider: #ClusterParameters @go(ForProvider)
}

// ClusterStatus defines the observed state of Cluster.
#ClusterStatus: {
	atProvider?: #ClusterObservation @go(AtProvider)
}

// Cluster is the Schema for the Clusters API. Provides an Neptune Cluster Resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Cluster: {
	spec:    #ClusterSpec   @go(Spec)
	status?: #ClusterStatus @go(Status)
}

// ClusterList contains a list of Clusters
#ClusterList: {
	items: [...#Cluster] @go(Items,[]Cluster)
}
