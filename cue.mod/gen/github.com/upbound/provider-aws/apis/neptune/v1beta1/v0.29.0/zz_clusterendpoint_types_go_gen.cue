// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/neptune/v1beta1

package v1beta1

#ClusterEndpointObservation: {
	// The Neptune Cluster Endpoint Amazon Resource Name (ARN).
	arn?: null | string @go(Arn,*string)

	// The DNS address of the endpoint.
	endpoint?: null | string @go(Endpoint,*string)

	// The Neptune Cluster Endpoint Identifier.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ClusterEndpointParameters: {
	// The DB cluster identifier of the DB cluster associated with the endpoint.
	// +crossplane:generate:reference:type=Cluster
	// +kubebuilder:validation:Optional
	clusterIdentifier?: null | string @go(ClusterIdentifier,*string)

	// The type of the endpoint. One of: READER, WRITER, ANY.
	// +kubebuilder:validation:Required
	endpointType?: null | string @go(EndpointType,*string)

	// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
	// +kubebuilder:validation:Optional
	excludedMembers?: [...null | string] @go(ExcludedMembers,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// List of DB instance identifiers that are part of the custom endpoint group.
	// +kubebuilder:validation:Optional
	staticMembers?: [...null | string] @go(StaticMembers,[]*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ClusterEndpointSpec defines the desired state of ClusterEndpoint
#ClusterEndpointSpec: {
	forProvider: #ClusterEndpointParameters @go(ForProvider)
}

// ClusterEndpointStatus defines the observed state of ClusterEndpoint.
#ClusterEndpointStatus: {
	atProvider?: #ClusterEndpointObservation @go(AtProvider)
}

// ClusterEndpoint is the Schema for the ClusterEndpoints API. Provides an Neptune Cluster Endpoint Resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ClusterEndpoint: {
	spec:    #ClusterEndpointSpec   @go(Spec)
	status?: #ClusterEndpointStatus @go(Status)
}

// ClusterEndpointList contains a list of ClusterEndpoints
#ClusterEndpointList: {
	items: [...#ClusterEndpoint] @go(Items,[]ClusterEndpoint)
}
