// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/waf/v1beta1

package v1beta1

#GeoMatchConstraintObservation: {
}

#GeoMatchConstraintParameters: {
	// The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)

	// The country that you want AWS WAF to search for.
	// This is the two-letter country code, e.g., US, CA, RU, CN, etc.
	// See docs for all supported values.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#GeoMatchSetObservation: {
	// Amazon Resource Name (ARN)
	arn?: null | string @go(Arn,*string)

	// The ID of the WAF GeoMatchSet.
	id?: null | string @go(ID,*string)
}

#GeoMatchSetParameters: {
	// The GeoMatchConstraint objects which contain the country that you want AWS WAF to search for.
	// +kubebuilder:validation:Optional
	geoMatchConstraint?: [...#GeoMatchConstraintParameters] @go(GeoMatchConstraint,[]GeoMatchConstraintParameters)

	// The name or description of the GeoMatchSet.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// GeoMatchSetSpec defines the desired state of GeoMatchSet
#GeoMatchSetSpec: {
	forProvider: #GeoMatchSetParameters @go(ForProvider)
}

// GeoMatchSetStatus defines the observed state of GeoMatchSet.
#GeoMatchSetStatus: {
	atProvider?: #GeoMatchSetObservation @go(AtProvider)
}

// GeoMatchSet is the Schema for the GeoMatchSets API. Provides a AWS WAF GeoMatchSet resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GeoMatchSet: {
	spec:    #GeoMatchSetSpec   @go(Spec)
	status?: #GeoMatchSetStatus @go(Status)
}

// GeoMatchSetList contains a list of GeoMatchSets
#GeoMatchSetList: {
	items: [...#GeoMatchSet] @go(Items,[]GeoMatchSet)
}
