// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/kms/v1beta1

package v1beta1

#ConstraintsObservation: {
}

#ConstraintsParameters: {
	// A list of key-value pairs that must match the encryption context in subsequent cryptographic operation requests. The grant allows the operation only when the encryption context in the request is the same as the encryption context specified in this constraint. Conflicts with encryption_context_subset.
	// +kubebuilder:validation:Optional
	encryptionContextEquals?: {[string]: null | string} @go(EncryptionContextEquals,map[string]*string)

	// A list of key-value pairs that must be included in the encryption context of subsequent cryptographic operation requests. The grant allows the cryptographic operation only when the encryption context in the request includes the key-value pairs specified in this constraint, although it can include additional key-value pairs. Conflicts with encryption_context_equals.
	// +kubebuilder:validation:Optional
	encryptionContextSubset?: {[string]: null | string} @go(EncryptionContextSubset,map[string]*string)
}

#GrantObservation: {
	// The unique identifier for the grant.
	grantId?: null | string @go(GrantID,*string)

	// The grant token for the created grant. For more information, see Grant Tokens.
	grantToken?: null | string @go(GrantToken,*string)
	id?:         null | string @go(ID,*string)
}

#GrantParameters: {
	// A structure that you can use to allow certain operations in the grant only when the desired encryption context is present. For more information about encryption context, see Encryption Context.
	// +kubebuilder:validation:Optional
	constraints?: [...#ConstraintsParameters] @go(Constraints,[]ConstraintsParameters)

	// A list of grant tokens to be used when creating the grant. See Grant Tokens for more information about grant tokens.
	// +kubebuilder:validation:Optional
	grantCreationTokens?: [...null | string] @go(GrantCreationTokens,[]*string)

	// The principal that is given permission to perform the operations that the grant permits in ARN format.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	granteePrincipal?: null | string @go(GranteePrincipal,*string)

	// The unique identifier for the customer master key (CMK) that the grant applies to. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a different AWS account, you must use the key ARN.
	// +crossplane:generate:reference:type=Key
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	keyId?: null | string @go(KeyID,*string)

	// A friendly name for identifying the grant.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// A list of operations that the grant permits. The permitted values are: Decrypt, Encrypt, GenerateDataKey, GenerateDataKeyWithoutPlaintext, ReEncryptFrom, ReEncryptTo, Sign, Verify, GetPublicKey, CreateGrant, RetireGrant, DescribeKey, GenerateDataKeyPair, or GenerateDataKeyPairWithoutPlaintext.
	// +kubebuilder:validation:Required
	operations: [...null | string] @go(Operations,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// (Defaults to false, Forces new resources) If set to false (the default) the grants will be revoked upon deletion, and if set to true the grants will try to be retired upon deletion. Note that retiring grants requires special permissions, hence why we default to revoking grants.
	// See RetireGrant for more information.
	// +kubebuilder:validation:Optional
	retireOnDelete?: null | bool @go(RetireOnDelete,*bool)

	// The principal that is given permission to retire the grant by using RetireGrant operation in ARN format.
	// +kubebuilder:validation:Optional
	retiringPrincipal?: null | string @go(RetiringPrincipal,*string)
}

// GrantSpec defines the desired state of Grant
#GrantSpec: {
	forProvider: #GrantParameters @go(ForProvider)
}

// GrantStatus defines the observed state of Grant.
#GrantStatus: {
	atProvider?: #GrantObservation @go(AtProvider)
}

// Grant is the Schema for the Grants API. Provides a resource-based access control mechanism for KMS Customer Master Keys.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Grant: {
	spec:    #GrantSpec   @go(Spec)
	status?: #GrantStatus @go(Status)
}

// GrantList contains a list of Grants
#GrantList: {
	items: [...#Grant] @go(Items,[]Grant)
}
