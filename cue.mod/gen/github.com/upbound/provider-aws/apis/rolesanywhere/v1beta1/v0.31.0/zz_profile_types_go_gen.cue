// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rolesanywhere/v1beta1

package v1beta1

#ProfileObservation: {
	// Amazon Resource Name (ARN) of the Profile
	arn?: null | string @go(Arn,*string)

	// The Profile ID.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ProfileParameters: {
	// The number of seconds the vended session credentials are valid for. Defaults to 3600.
	// +kubebuilder:validation:Optional
	durationSeconds?: null | float64 @go(DurationSeconds,*float64)

	// Whether or not the Profile is enabled.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// A list of managed policy ARNs that apply to the vended session credentials.
	// +kubebuilder:validation:Optional
	managedPolicyArns?: [...null | string] @go(ManagedPolicyArns,[]*string)

	// The name of the Profile.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Specifies whether instance properties are required in CreateSession requests with this profile.
	// +kubebuilder:validation:Optional
	requireInstanceProperties?: null | bool @go(RequireInstanceProperties,*bool)

	// A list of IAM roles that this profile can assume
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArns?: [...null | string] @go(RoleArns,[]*string)

	// A session policy that applies to the trust boundary of the vended session credentials.
	// +kubebuilder:validation:Optional
	sessionPolicy?: null | string @go(SessionPolicy,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ProfileSpec defines the desired state of Profile
#ProfileSpec: {
	forProvider: #ProfileParameters @go(ForProvider)
}

// ProfileStatus defines the observed state of Profile.
#ProfileStatus: {
	atProvider?: #ProfileObservation @go(AtProvider)
}

// Profile is the Schema for the Profiles API. Provides a Roles Anywhere Profile resource
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Profile: {
	spec:    #ProfileSpec   @go(Spec)
	status?: #ProfileStatus @go(Status)
}

// ProfileList contains a list of Profiles
#ProfileList: {
	items: [...#Profile] @go(Items,[]Profile)
}
