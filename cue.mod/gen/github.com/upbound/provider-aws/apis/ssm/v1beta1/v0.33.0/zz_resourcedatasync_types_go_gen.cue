// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ssm/v1beta1

package v1beta1

#ResourceDataSyncObservation: {
	id?: null | string @go(ID,*string)
}

#ResourceDataSyncParameters: {
	// Region with the bucket targeted by the Resource Data Sync.
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Amazon S3 configuration details for the sync.
	// +kubebuilder:validation:Required
	s3Destination: [...#S3DestinationParameters] @go(S3Destination,[]S3DestinationParameters)
}

#S3DestinationObservation: {
}

#S3DestinationParameters: {
	// Name of S3 bucket where the aggregated data is stored.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	bucketName?: null | string @go(BucketName,*string)

	// ARN of an encryption key for a destination in Amazon S3.
	// +kubebuilder:validation:Optional
	kmsKeyArn?: null | string @go(KMSKeyArn,*string)

	// Prefix for the bucket.
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// Region with the bucket targeted by the Resource Data Sync.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("region",false)
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)

	// A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.
	// +kubebuilder:validation:Optional
	syncFormat?: null | string @go(SyncFormat,*string)
}

// ResourceDataSyncSpec defines the desired state of ResourceDataSync
#ResourceDataSyncSpec: {
	forProvider: #ResourceDataSyncParameters @go(ForProvider)
}

// ResourceDataSyncStatus defines the observed state of ResourceDataSync.
#ResourceDataSyncStatus: {
	atProvider?: #ResourceDataSyncObservation @go(AtProvider)
}

// ResourceDataSync is the Schema for the ResourceDataSyncs API. Provides a SSM resource data sync.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ResourceDataSync: {
	spec:    #ResourceDataSyncSpec   @go(Spec)
	status?: #ResourceDataSyncStatus @go(Status)
}

// ResourceDataSyncList contains a list of ResourceDataSyncs
#ResourceDataSyncList: {
	items: [...#ResourceDataSync] @go(Items,[]ResourceDataSync)
}
