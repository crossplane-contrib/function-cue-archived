// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ssm/v1beta1

package v1beta1

#ActivationObservation: {
	// The code the system generates when it processes the activation.
	activationCode?: null | string @go(ActivationCode,*string)

	// The description of the resource that you want to register.
	description?: null | string @go(Description,*string)

	// UTC timestamp in RFC3339 format by which this activation request should expire. The default value is 24 hours from resource creation time.
	expirationDate?: null | string @go(ExpirationDate,*string)

	// If the current activation has expired.
	expired?: null | bool @go(Expired,*bool)

	// The IAM Role to attach to the managed instance.
	iamRole?: null | string @go(IAMRole,*string)

	// The activation ID.
	id?: null | string @go(ID,*string)

	// The default name of the registered managed instance.
	name?: null | string @go(Name,*string)

	// The number of managed instances that are currently registered using this activation.
	registrationCount?: null | float64 @go(RegistrationCount,*float64)

	// The maximum number of managed instances you want to register. The default value is 1 instance.
	registrationLimit?: null | float64 @go(RegistrationLimit,*float64)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ActivationParameters: {
	// The description of the resource that you want to register.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// UTC timestamp in RFC3339 format by which this activation request should expire. The default value is 24 hours from resource creation time.
	// +kubebuilder:validation:Optional
	expirationDate?: null | string @go(ExpirationDate,*string)

	// The IAM Role to attach to the managed instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	iamRole?: null | string @go(IAMRole,*string)

	// The default name of the registered managed instance.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The maximum number of managed instances you want to register. The default value is 1 instance.
	// +kubebuilder:validation:Optional
	registrationLimit?: null | float64 @go(RegistrationLimit,*float64)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ActivationSpec defines the desired state of Activation
#ActivationSpec: {
	forProvider: #ActivationParameters @go(ForProvider)
}

// ActivationStatus defines the observed state of Activation.
#ActivationStatus: {
	atProvider?: #ActivationObservation @go(AtProvider)
}

// Activation is the Schema for the Activations API. Registers an on-premises server or virtual machine with Amazon EC2 so that it can be managed using Run Command.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Activation: {
	spec:    #ActivationSpec   @go(Spec)
	status?: #ActivationStatus @go(Status)
}

// ActivationList contains a list of Activations
#ActivationList: {
	items: [...#Activation] @go(Items,[]Activation)
}
