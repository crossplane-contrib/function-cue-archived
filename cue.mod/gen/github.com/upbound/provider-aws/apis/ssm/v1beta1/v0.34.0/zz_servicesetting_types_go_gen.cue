// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ssm/v1beta1

package v1beta1

#ServiceSettingObservation: {
	// ARN of the service setting.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// ID of the service setting.
	settingId?: null | string @go(SettingID,*string)

	// Value of the service setting.
	settingValue?: null | string @go(SettingValue,*string)

	// Status of the service setting. Value can be Default, Customized or PendingUpdate.
	status?: null | string @go(Status,*string)
}

#ServiceSettingParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// ID of the service setting.
	// +kubebuilder:validation:Optional
	settingId?: null | string @go(SettingID,*string)

	// Value of the service setting.
	// +kubebuilder:validation:Optional
	settingValue?: null | string @go(SettingValue,*string)
}

// ServiceSettingSpec defines the desired state of ServiceSetting
#ServiceSettingSpec: {
	forProvider: #ServiceSettingParameters @go(ForProvider)
}

// ServiceSettingStatus defines the observed state of ServiceSetting.
#ServiceSettingStatus: {
	atProvider?: #ServiceSettingObservation @go(AtProvider)
}

// ServiceSetting is the Schema for the ServiceSettings API. Defines how a user interacts with or uses a service or a feature of a service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ServiceSetting: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.settingId)",message="settingId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.settingValue)",message="settingValue is a required parameter"
	spec:    #ServiceSettingSpec   @go(Spec)
	status?: #ServiceSettingStatus @go(Status)
}

// ServiceSettingList contains a list of ServiceSettings
#ServiceSettingList: {
	items: [...#ServiceSetting] @go(Items,[]ServiceSetting)
}
