// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/kendra/v1beta1

package v1beta1

#AccessControlListConfigurationObservation: {
	// Path to the AWS S3 bucket that contains the ACL files.
	keyPath?: null | string @go(KeyPath,*string)
}

#AccessControlListConfigurationParameters: {
	// Path to the AWS S3 bucket that contains the ACL files.
	// +kubebuilder:validation:Optional
	keyPath?: null | string @go(KeyPath,*string)
}

#AuthenticationConfigurationObservation: {
	// The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials. The list includes the name and port number of the website host. Detailed below.
	basicAuthentication?: [...#BasicAuthenticationObservation] @go(BasicAuthentication,[]BasicAuthenticationObservation)
}

#AuthenticationConfigurationParameters: {
	// The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials. The list includes the name and port number of the website host. Detailed below.
	// +kubebuilder:validation:Optional
	basicAuthentication?: [...#BasicAuthenticationParameters] @go(BasicAuthentication,[]BasicAuthenticationParameters)
}

#BasicAuthenticationObservation: {
	// Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
	credentials?: null | string @go(Credentials,*string)

	// The name of the website host you want to connect to using authentication credentials. For example, the host name of https://a.example.com/page1.html is "a.example.com".
	host?: null | string @go(Host,*string)

	// The port number of the website host you want to connect to using authentication credentials. For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.
	port?: null | float64 @go(Port,*float64)
}

#BasicAuthenticationParameters: {
	// Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/secretsmanager/v1beta1.Secret
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	credentials?: null | string @go(Credentials,*string)

	// The name of the website host you want to connect to using authentication credentials. For example, the host name of https://a.example.com/page1.html is "a.example.com".
	// +kubebuilder:validation:Required
	host?: null | string @go(Host,*string)

	// The port number of the website host you want to connect to using authentication credentials. For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.
	// +kubebuilder:validation:Required
	port?: null | float64 @go(Port,*float64)
}

#ConditionObservation: {
	// The identifier of the document attribute used for the condition. For example, _source_uri could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support _document_body as an attribute key used for the condition.
	conditionDocumentAttributeKey?: null | string @go(ConditionDocumentAttributeKey,*string)

	// The value used by the operator. For example, you can specify the value 'financial' for strings in the _source_uri field that partially match or contain this value. See Document Attribute Value.
	conditionOnValue?: [...#ConditionOnValueObservation] @go(ConditionOnValue,[]ConditionOnValueObservation)

	// The condition operator. For example, you can use Contains to partially match a string. Valid Values: GreaterThan | GreaterThanOrEquals | LessThan | LessThanOrEquals | Equals | NotEquals | Contains | NotContains | Exists | NotExists | BeginsWith.
	operator?: null | string @go(Operator,*string)
}

#ConditionOnValueObservation: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	stringListValue?: [...null | string] @go(StringListValue,[]*string)
	stringValue?: null | string @go(StringValue,*string)
}

#ConditionOnValueParameters: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	// +kubebuilder:validation:Optional
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	// +kubebuilder:validation:Optional
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	// +kubebuilder:validation:Optional
	stringListValue?: [...null | string] @go(StringListValue,[]*string)

	// +kubebuilder:validation:Optional
	stringValue?: null | string @go(StringValue,*string)
}

#ConditionParameters: {
	// The identifier of the document attribute used for the condition. For example, _source_uri could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support _document_body as an attribute key used for the condition.
	// +kubebuilder:validation:Required
	conditionDocumentAttributeKey?: null | string @go(ConditionDocumentAttributeKey,*string)

	// The value used by the operator. For example, you can specify the value 'financial' for strings in the _source_uri field that partially match or contain this value. See Document Attribute Value.
	// +kubebuilder:validation:Optional
	conditionOnValue?: [...#ConditionOnValueParameters] @go(ConditionOnValue,[]ConditionOnValueParameters)

	// The condition operator. For example, you can use Contains to partially match a string. Valid Values: GreaterThan | GreaterThanOrEquals | LessThan | LessThanOrEquals | Equals | NotEquals | Contains | NotContains | Exists | NotExists | BeginsWith.
	// +kubebuilder:validation:Required
	operator?: null | string @go(Operator,*string)
}

#ConfigurationObservation: {
	// A block that provides the configuration information to connect to an Amazon S3 bucket as your data source. Detailed below.
	s3Configuration?: [...#S3ConfigurationObservation] @go(S3Configuration,[]S3ConfigurationObservation)

	// A block that provides the configuration information required for Amazon Kendra Web Crawler. Detailed below.
	webCrawlerConfiguration?: [...#WebCrawlerConfigurationObservation] @go(WebCrawlerConfiguration,[]WebCrawlerConfigurationObservation)
}

#ConfigurationParameters: {
	// A block that provides the configuration information to connect to an Amazon S3 bucket as your data source. Detailed below.
	// +kubebuilder:validation:Optional
	s3Configuration?: [...#S3ConfigurationParameters] @go(S3Configuration,[]S3ConfigurationParameters)

	// A block that provides the configuration information required for Amazon Kendra Web Crawler. Detailed below.
	// +kubebuilder:validation:Optional
	webCrawlerConfiguration?: [...#WebCrawlerConfigurationParameters] @go(WebCrawlerConfiguration,[]WebCrawlerConfigurationParameters)
}

#CustomDocumentEnrichmentConfigurationObservation: {
	// Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of 0 items. Maximum number of 100 items. Detailed below.
	inlineConfigurations?: [...#InlineConfigurationsObservation] @go(InlineConfigurations,[]InlineConfigurationsObservation)

	// A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see Advanced data manipulation. Detailed below.
	postExtractionHookConfiguration?: [...#PostExtractionHookConfigurationObservation] @go(PostExtractionHookConfiguration,[]PostExtractionHookConfigurationObservation)

	// Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see Advanced data manipulation. Detailed below.
	preExtractionHookConfiguration?: [...#PreExtractionHookConfigurationObservation] @go(PreExtractionHookConfiguration,[]PreExtractionHookConfigurationObservation)

	// The Amazon Resource Name (ARN) of a role with permission to run pre_extraction_hook_configuration and post_extraction_hook_configuration for altering document metadata and content during the document ingestion process. For more information, see IAM roles for Amazon Kendra.
	roleArn?: null | string @go(RoleArn,*string)
}

#CustomDocumentEnrichmentConfigurationParameters: {
	// Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra. Minimum number of 0 items. Maximum number of 100 items. Detailed below.
	// +kubebuilder:validation:Optional
	inlineConfigurations?: [...#InlineConfigurationsParameters] @go(InlineConfigurations,[]InlineConfigurationsParameters)

	// A block that specifies the configuration information for invoking a Lambda function in AWS Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see Advanced data manipulation. Detailed below.
	// +kubebuilder:validation:Optional
	postExtractionHookConfiguration?: [...#PostExtractionHookConfigurationParameters] @go(PostExtractionHookConfiguration,[]PostExtractionHookConfigurationParameters)

	// Configuration information for invoking a Lambda function in AWS Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see Advanced data manipulation. Detailed below.
	// +kubebuilder:validation:Optional
	preExtractionHookConfiguration?: [...#PreExtractionHookConfigurationParameters] @go(PreExtractionHookConfiguration,[]PreExtractionHookConfigurationParameters)

	// The Amazon Resource Name (ARN) of a role with permission to run pre_extraction_hook_configuration and post_extraction_hook_configuration for altering document metadata and content during the document ingestion process. For more information, see IAM roles for Amazon Kendra.
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

#DataSourceObservation: {
	// ARN of the Data Source.
	arn?: null | string @go(Arn,*string)

	// A block with the configuration information to connect to your Data Source repository. You can't specify the configuration argument when the type parameter is set to CUSTOM. Detailed below.
	configuration?: [...#ConfigurationObservation] @go(Configuration,[]ConfigurationObservation)

	// The Unix timestamp of when the Data Source was created.
	createdAt?: null | string @go(CreatedAt,*string)

	// A block with the configuration information for altering document metadata and content during the document ingestion process. For more information on how to create, modify and delete document metadata, or make other content alterations when you ingest documents into Amazon Kendra, see Customizing document metadata during the ingestion process. Detailed below.
	customDocumentEnrichmentConfiguration?: [...#CustomDocumentEnrichmentConfigurationObservation] @go(CustomDocumentEnrichmentConfiguration,[]CustomDocumentEnrichmentConfigurationObservation)

	// The unique identifiers of the Data Source.
	dataSourceId?: null | string @go(DataSourceID,*string)

	// A description for the Data Source connector.
	description?: null | string @go(Description,*string)

	// When the Status field value is FAILED, the ErrorMessage field contains a description of the error that caused the Data Source to fail.
	errorMessage?: null | string @go(ErrorMessage,*string)

	// The unique identifiers of the Data Source and index separated by a slash (/).
	id?: null | string @go(ID,*string)

	// The identifier of the index for your Amazon Kendra data_source.
	indexId?: null | string @go(IndexID,*string)

	// The code for a language. This allows you to support a language for all documents when creating the Data Source connector. English is supported by default. For more information on supported languages, including their codes, see Adding documents in languages other than English.
	languageCode?: null | string @go(LanguageCode,*string)

	// A name for your Data Source connector.
	name?: null | string @go(Name,*string)

	// The Amazon Resource Name (ARN) of a role with permission to access the data source connector. For more information, see IAM roles for Amazon Kendra. You can't specify the role_arn parameter when the type parameter is set to CUSTOM. The role_arn parameter is required for all other data sources.
	roleArn?: null | string @go(RoleArn,*string)

	// Sets the frequency for Amazon Kendra to check the documents in your Data Source repository and update the index. If you don't set a schedule Amazon Kendra will not periodically update the index. You can call the StartDataSourceSyncJob API to update the index.
	schedule?: null | string @go(Schedule,*string)

	// The current status of the Data Source. When the status is ACTIVE the Data Source is ready to use. When the status is FAILED, the error_message field contains the reason that the Data Source failed.
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The type of data source repository. For an updated list of values, refer to Valid Values for Type.
	type?: null | string @go(Type,*string)

	// The Unix timestamp of when the Data Source was last updated.
	updatedAt?: null | string @go(UpdatedAt,*string)
}

#DataSourceParameters: {
	// A block with the configuration information to connect to your Data Source repository. You can't specify the configuration argument when the type parameter is set to CUSTOM. Detailed below.
	// +kubebuilder:validation:Optional
	configuration?: [...#ConfigurationParameters] @go(Configuration,[]ConfigurationParameters)

	// A block with the configuration information for altering document metadata and content during the document ingestion process. For more information on how to create, modify and delete document metadata, or make other content alterations when you ingest documents into Amazon Kendra, see Customizing document metadata during the ingestion process. Detailed below.
	// +kubebuilder:validation:Optional
	customDocumentEnrichmentConfiguration?: [...#CustomDocumentEnrichmentConfigurationParameters] @go(CustomDocumentEnrichmentConfiguration,[]CustomDocumentEnrichmentConfigurationParameters)

	// A description for the Data Source connector.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The identifier of the index for your Amazon Kendra data_source.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kendra/v1beta1.Index
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	indexId?: null | string @go(IndexID,*string)

	// The code for a language. This allows you to support a language for all documents when creating the Data Source connector. English is supported by default. For more information on supported languages, including their codes, see Adding documents in languages other than English.
	// +kubebuilder:validation:Optional
	languageCode?: null | string @go(LanguageCode,*string)

	// A name for your Data Source connector.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) of a role with permission to access the data source connector. For more information, see IAM roles for Amazon Kendra. You can't specify the role_arn parameter when the type parameter is set to CUSTOM. The role_arn parameter is required for all other data sources.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// Sets the frequency for Amazon Kendra to check the documents in your Data Source repository and update the index. If you don't set a schedule Amazon Kendra will not periodically update the index. You can call the StartDataSourceSyncJob API to update the index.
	// +kubebuilder:validation:Optional
	schedule?: null | string @go(Schedule,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The type of data source repository. For an updated list of values, refer to Valid Values for Type.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#DocumentsMetadataConfigurationObservation: {
	// A prefix used to filter metadata configuration files in the AWS S3 bucket. The S3 bucket might contain multiple metadata files. Use s3_prefix to include only the desired metadata files.
	s3Prefix?: null | string @go(S3Prefix,*string)
}

#DocumentsMetadataConfigurationParameters: {
	// A prefix used to filter metadata configuration files in the AWS S3 bucket. The S3 bucket might contain multiple metadata files. Use s3_prefix to include only the desired metadata files.
	// +kubebuilder:validation:Optional
	s3Prefix?: null | string @go(S3Prefix,*string)
}

#InlineConfigurationsObservation: {
	// Configuration of the condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. See Document Attribute Condition.
	condition?: [...#ConditionObservation] @go(Condition,[]ConditionObservation)

	// TRUE to delete content if the condition used for the target attribute is met.
	documentContentDeletion?: null | bool @go(DocumentContentDeletion,*bool)

	// Configuration of the target document attribute or metadata field when ingesting documents into Amazon Kendra. You can also include a value. Detailed below.
	target?: [...#TargetObservation] @go(Target,[]TargetObservation)
}

#InlineConfigurationsParameters: {
	// Configuration of the condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. See Document Attribute Condition.
	// +kubebuilder:validation:Optional
	condition?: [...#ConditionParameters] @go(Condition,[]ConditionParameters)

	// TRUE to delete content if the condition used for the target attribute is met.
	// +kubebuilder:validation:Optional
	documentContentDeletion?: null | bool @go(DocumentContentDeletion,*bool)

	// Configuration of the target document attribute or metadata field when ingesting documents into Amazon Kendra. You can also include a value. Detailed below.
	// +kubebuilder:validation:Optional
	target?: [...#TargetParameters] @go(Target,[]TargetParameters)
}

#InvocationConditionConditionOnValueObservation: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	stringListValue?: [...null | string] @go(StringListValue,[]*string)
	stringValue?: null | string @go(StringValue,*string)
}

#InvocationConditionConditionOnValueParameters: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	// +kubebuilder:validation:Optional
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	// +kubebuilder:validation:Optional
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	// +kubebuilder:validation:Optional
	stringListValue?: [...null | string] @go(StringListValue,[]*string)

	// +kubebuilder:validation:Optional
	stringValue?: null | string @go(StringValue,*string)
}

#InvocationConditionObservation: {
	// The identifier of the document attribute used for the condition. For example, _source_uri could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support _document_body as an attribute key used for the condition.
	conditionDocumentAttributeKey?: null | string @go(ConditionDocumentAttributeKey,*string)

	// The value used by the operator. For example, you can specify the value 'financial' for strings in the _source_uri field that partially match or contain this value. See Document Attribute Value.
	conditionOnValue?: [...#InvocationConditionConditionOnValueObservation] @go(ConditionOnValue,[]InvocationConditionConditionOnValueObservation)

	// The condition operator. For example, you can use Contains to partially match a string. Valid Values: GreaterThan | GreaterThanOrEquals | LessThan | LessThanOrEquals | Equals | NotEquals | Contains | NotContains | Exists | NotExists | BeginsWith.
	operator?: null | string @go(Operator,*string)
}

#InvocationConditionParameters: {
	// The identifier of the document attribute used for the condition. For example, _source_uri could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support _document_body as an attribute key used for the condition.
	// +kubebuilder:validation:Required
	conditionDocumentAttributeKey?: null | string @go(ConditionDocumentAttributeKey,*string)

	// The value used by the operator. For example, you can specify the value 'financial' for strings in the _source_uri field that partially match or contain this value. See Document Attribute Value.
	// +kubebuilder:validation:Optional
	conditionOnValue?: [...#InvocationConditionConditionOnValueParameters] @go(ConditionOnValue,[]InvocationConditionConditionOnValueParameters)

	// The condition operator. For example, you can use Contains to partially match a string. Valid Values: GreaterThan | GreaterThanOrEquals | LessThan | LessThanOrEquals | Equals | NotEquals | Contains | NotContains | Exists | NotExists | BeginsWith.
	// +kubebuilder:validation:Required
	operator?: null | string @go(Operator,*string)
}

#PostExtractionHookConfigurationObservation: {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See Document Attribute Condition.
	invocationCondition?: [...#InvocationConditionObservation] @go(InvocationCondition,[]InvocationConditionObservation)

	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	lambdaArn?: null | string @go(LambdaArn,*string)

	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see Data contracts for Lambda functions.
	s3Bucket?: null | string @go(S3Bucket,*string)
}

#PostExtractionHookConfigurationParameters: {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See Document Attribute Condition.
	// +kubebuilder:validation:Optional
	invocationCondition?: [...#InvocationConditionParameters] @go(InvocationCondition,[]InvocationConditionParameters)

	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	// +kubebuilder:validation:Required
	lambdaArn?: null | string @go(LambdaArn,*string)

	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see Data contracts for Lambda functions.
	// +kubebuilder:validation:Required
	s3Bucket?: null | string @go(S3Bucket,*string)
}

#PreExtractionHookConfigurationInvocationConditionConditionOnValueObservation: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	stringListValue?: [...null | string] @go(StringListValue,[]*string)
	stringValue?: null | string @go(StringValue,*string)
}

#PreExtractionHookConfigurationInvocationConditionConditionOnValueParameters: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	// +kubebuilder:validation:Optional
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	// +kubebuilder:validation:Optional
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	// +kubebuilder:validation:Optional
	stringListValue?: [...null | string] @go(StringListValue,[]*string)

	// +kubebuilder:validation:Optional
	stringValue?: null | string @go(StringValue,*string)
}

#PreExtractionHookConfigurationInvocationConditionObservation: {
	// The identifier of the document attribute used for the condition. For example, _source_uri could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support _document_body as an attribute key used for the condition.
	conditionDocumentAttributeKey?: null | string @go(ConditionDocumentAttributeKey,*string)

	// The value used by the operator. For example, you can specify the value 'financial' for strings in the _source_uri field that partially match or contain this value. See Document Attribute Value.
	conditionOnValue?: [...#PreExtractionHookConfigurationInvocationConditionConditionOnValueObservation] @go(ConditionOnValue,[]PreExtractionHookConfigurationInvocationConditionConditionOnValueObservation)

	// The condition operator. For example, you can use Contains to partially match a string. Valid Values: GreaterThan | GreaterThanOrEquals | LessThan | LessThanOrEquals | Equals | NotEquals | Contains | NotContains | Exists | NotExists | BeginsWith.
	operator?: null | string @go(Operator,*string)
}

#PreExtractionHookConfigurationInvocationConditionParameters: {
	// The identifier of the document attribute used for the condition. For example, _source_uri could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support _document_body as an attribute key used for the condition.
	// +kubebuilder:validation:Required
	conditionDocumentAttributeKey?: null | string @go(ConditionDocumentAttributeKey,*string)

	// The value used by the operator. For example, you can specify the value 'financial' for strings in the _source_uri field that partially match or contain this value. See Document Attribute Value.
	// +kubebuilder:validation:Optional
	conditionOnValue?: [...#PreExtractionHookConfigurationInvocationConditionConditionOnValueParameters] @go(ConditionOnValue,[]PreExtractionHookConfigurationInvocationConditionConditionOnValueParameters)

	// The condition operator. For example, you can use Contains to partially match a string. Valid Values: GreaterThan | GreaterThanOrEquals | LessThan | LessThanOrEquals | Equals | NotEquals | Contains | NotContains | Exists | NotExists | BeginsWith.
	// +kubebuilder:validation:Required
	operator?: null | string @go(Operator,*string)
}

#PreExtractionHookConfigurationObservation: {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See Document Attribute Condition.
	invocationCondition?: [...#PreExtractionHookConfigurationInvocationConditionObservation] @go(InvocationCondition,[]PreExtractionHookConfigurationInvocationConditionObservation)

	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	lambdaArn?: null | string @go(LambdaArn,*string)

	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see Data contracts for Lambda functions.
	s3Bucket?: null | string @go(S3Bucket,*string)
}

#PreExtractionHookConfigurationParameters: {
	// A block that specifies the condition used for when a Lambda function should be invoked. For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time. See Document Attribute Condition.
	// +kubebuilder:validation:Optional
	invocationCondition?: [...#PreExtractionHookConfigurationInvocationConditionParameters] @go(InvocationCondition,[]PreExtractionHookConfigurationInvocationConditionParameters)

	// The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.
	// +kubebuilder:validation:Required
	lambdaArn?: null | string @go(LambdaArn,*string)

	// Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see Data contracts for Lambda functions.
	// +kubebuilder:validation:Required
	s3Bucket?: null | string @go(S3Bucket,*string)
}

#ProxyConfigurationObservation: {
	// Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
	credentials?: null | string @go(Credentials,*string)

	// The name of the website host you want to connect to using authentication credentials. For example, the host name of https://a.example.com/page1.html is "a.example.com".
	host?: null | string @go(Host,*string)

	// The port number of the website host you want to connect to using authentication credentials. For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.
	port?: null | float64 @go(Port,*float64)
}

#ProxyConfigurationParameters: {
	// Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/secretsmanager/v1beta1.Secret
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	credentials?: null | string @go(Credentials,*string)

	// The name of the website host you want to connect to using authentication credentials. For example, the host name of https://a.example.com/page1.html is "a.example.com".
	// +kubebuilder:validation:Required
	host?: null | string @go(Host,*string)

	// The port number of the website host you want to connect to using authentication credentials. For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.
	// +kubebuilder:validation:Required
	port?: null | float64 @go(Port,*float64)
}

#S3ConfigurationObservation: {
	// A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see Access control for S3 data sources. Detailed below.
	accessControlListConfiguration?: [...#AccessControlListConfigurationObservation] @go(AccessControlListConfiguration,[]AccessControlListConfigurationObservation)

	// The name of the bucket that contains the documents.
	bucketName?: null | string @go(BucketName,*string)

	// A block that defines the Ddcument metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
	documentsMetadataConfiguration?: [...#DocumentsMetadataConfigurationObservation] @go(DocumentsMetadataConfiguration,[]DocumentsMetadataConfigurationObservation)

	// A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to Exclusion Patterns for more examples.
	exclusionPatterns?: [...null | string] @go(ExclusionPatterns,[]*string)

	// A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to Inclusion Patterns for more examples.
	inclusionPatterns?: [...null | string] @go(InclusionPatterns,[]*string)

	// A list of S3 prefixes for the documents that should be included in the index.
	inclusionPrefixes?: [...null | string] @go(InclusionPrefixes,[]*string)
}

#S3ConfigurationParameters: {
	// A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see Access control for S3 data sources. Detailed below.
	// +kubebuilder:validation:Optional
	accessControlListConfiguration?: [...#AccessControlListConfigurationParameters] @go(AccessControlListConfiguration,[]AccessControlListConfigurationParameters)

	// The name of the bucket that contains the documents.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucketName?: null | string @go(BucketName,*string)

	// A block that defines the Ddcument metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
	// +kubebuilder:validation:Optional
	documentsMetadataConfiguration?: [...#DocumentsMetadataConfigurationParameters] @go(DocumentsMetadataConfiguration,[]DocumentsMetadataConfigurationParameters)

	// A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to Exclusion Patterns for more examples.
	// +kubebuilder:validation:Optional
	exclusionPatterns?: [...null | string] @go(ExclusionPatterns,[]*string)

	// A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to Inclusion Patterns for more examples.
	// +kubebuilder:validation:Optional
	inclusionPatterns?: [...null | string] @go(InclusionPatterns,[]*string)

	// A list of S3 prefixes for the documents that should be included in the index.
	// +kubebuilder:validation:Optional
	inclusionPrefixes?: [...null | string] @go(InclusionPrefixes,[]*string)
}

#SeedURLConfigurationObservation: {
	// The list of seed or starting point URLs of the websites you want to crawl. The list can include a maximum of 100 seed URLs. Array Members: Minimum number of 0 items. Maximum number of 100 items. Length Constraints: Minimum length of 1. Maximum length of 2048.
	seedUrls?: [...null | string] @go(SeedUrls,[]*string)

	// The default mode is set to HOST_ONLY. You can choose one of the following modes:
	webCrawlerMode?: null | string @go(WebCrawlerMode,*string)
}

#SeedURLConfigurationParameters: {
	// The list of seed or starting point URLs of the websites you want to crawl. The list can include a maximum of 100 seed URLs. Array Members: Minimum number of 0 items. Maximum number of 100 items. Length Constraints: Minimum length of 1. Maximum length of 2048.
	// +kubebuilder:validation:Required
	seedUrls: [...null | string] @go(SeedUrls,[]*string)

	// The default mode is set to HOST_ONLY. You can choose one of the following modes:
	// +kubebuilder:validation:Optional
	webCrawlerMode?: null | string @go(WebCrawlerMode,*string)
}

#SiteMapsConfigurationObservation: {
	// The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of 3 sitemap URLs.
	siteMaps?: [...null | string] @go(SiteMaps,[]*string)
}

#SiteMapsConfigurationParameters: {
	// The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of 3 sitemap URLs.
	// +kubebuilder:validation:Required
	siteMaps: [...null | string] @go(SiteMaps,[]*string)
}

#TargetDocumentAttributeValueObservation: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	stringListValue?: [...null | string] @go(StringListValue,[]*string)
	stringValue?: null | string @go(StringValue,*string)
}

#TargetDocumentAttributeValueParameters: {
	// A date expressed as an ISO 8601 string. It is important for the time zone to be included in the ISO 8601 date-time format. As of this writing only UTC is supported. For example, 2012-03-25T12:30:10+00:00.
	// +kubebuilder:validation:Optional
	dateValue?: null | string @go(DateValue,*string)

	// A long integer value.
	// +kubebuilder:validation:Optional
	longValue?: null | float64 @go(LongValue,*float64)

	// A list of strings.
	// +kubebuilder:validation:Optional
	stringListValue?: [...null | string] @go(StringListValue,[]*string)

	// +kubebuilder:validation:Optional
	stringValue?: null | string @go(StringValue,*string)
}

#TargetObservation: {
	// The identifier of the target document attribute or metadata field. For example, 'Department' could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
	targetDocumentAttributeKey?: null | string @go(TargetDocumentAttributeKey,*string)

	// The target value you want to create for the target attribute. For example, 'Finance' could be the target value for the target attribute key 'Department'.
	// See Document Attribute Value.
	targetDocumentAttributeValue?: [...#TargetDocumentAttributeValueObservation] @go(TargetDocumentAttributeValue,[]TargetDocumentAttributeValueObservation)

	// TRUE to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to TRUE. To create a target value (TargetDocumentAttributeValue), set this to FALSE.
	targetDocumentAttributeValueDeletion?: null | bool @go(TargetDocumentAttributeValueDeletion,*bool)
}

#TargetParameters: {
	// The identifier of the target document attribute or metadata field. For example, 'Department' could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.
	// +kubebuilder:validation:Optional
	targetDocumentAttributeKey?: null | string @go(TargetDocumentAttributeKey,*string)

	// The target value you want to create for the target attribute. For example, 'Finance' could be the target value for the target attribute key 'Department'.
	// See Document Attribute Value.
	// +kubebuilder:validation:Optional
	targetDocumentAttributeValue?: [...#TargetDocumentAttributeValueParameters] @go(TargetDocumentAttributeValue,[]TargetDocumentAttributeValueParameters)

	// TRUE to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to TRUE. To create a target value (TargetDocumentAttributeValue), set this to FALSE.
	// +kubebuilder:validation:Optional
	targetDocumentAttributeValueDeletion?: null | bool @go(TargetDocumentAttributeValueDeletion,*bool)
}

#UrlsObservation: {
	// A block that specifies the configuration of the seed or starting point URLs of the websites you want to crawl. You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to. You can list up to 100 seed URLs. Detailed below.
	seedUrlConfiguration?: [...#SeedURLConfigurationObservation] @go(SeedURLConfiguration,[]SeedURLConfigurationObservation)

	// A block that specifies the configuration of the sitemap URLs of the websites you want to crawl. Only URLs belonging to the same website host names are crawled. You can list up to 3 sitemap URLs. Detailed below.
	siteMapsConfiguration?: [...#SiteMapsConfigurationObservation] @go(SiteMapsConfiguration,[]SiteMapsConfigurationObservation)
}

#UrlsParameters: {
	// A block that specifies the configuration of the seed or starting point URLs of the websites you want to crawl. You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to. You can list up to 100 seed URLs. Detailed below.
	// +kubebuilder:validation:Optional
	seedUrlConfiguration?: [...#SeedURLConfigurationParameters] @go(SeedURLConfiguration,[]SeedURLConfigurationParameters)

	// A block that specifies the configuration of the sitemap URLs of the websites you want to crawl. Only URLs belonging to the same website host names are crawled. You can list up to 3 sitemap URLs. Detailed below.
	// +kubebuilder:validation:Optional
	siteMapsConfiguration?: [...#SiteMapsConfigurationParameters] @go(SiteMapsConfiguration,[]SiteMapsConfigurationParameters)
}

#WebCrawlerConfigurationObservation: {
	// A block with the configuration information required to connect to websites using authentication. You can connect to websites using basic authentication of user name and password. You use a secret in AWS Secrets Manager to store your authentication credentials. You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. Detailed below.
	authenticationConfiguration?: [...#AuthenticationConfigurationObservation] @go(AuthenticationConfiguration,[]AuthenticationConfigurationObservation)

	// Specifies the number of levels in a website that you want to crawl. The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1. The default crawl depth is set to 2. Minimum value of 0. Maximum value of 10.
	crawlDepth?: null | float64 @go(CrawlDepth,*float64)

	// The maximum size (in MB) of a webpage or attachment to crawl. Files larger than this size (in MB) are skipped/not crawled. The default maximum size of a webpage or attachment is set to 50 MB. Minimum value of 1.0e-06. Maximum value of 50.
	maxContentSizePerPageInMegaBytes?: null | float64 @go(MaxContentSizePerPageInMegaBytes,*float64)

	// The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage. As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance. The default maximum links per page is 100. Minimum value of 1. Maximum value of 1000.
	maxLinksPerPage?: null | float64 @go(MaxLinksPerPage,*float64)

	// The maximum number of URLs crawled per website host per minute. The default maximum number of URLs crawled per website host per minute is 300. Minimum value of 1. Maximum value of 300.
	maxUrlsPerMinuteCrawlRate?: null | float64 @go(MaxUrlsPerMinuteCrawlRate,*float64)

	// Configuration information required to connect to your internal websites via a web proxy. You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in AWS Secrets Manager. Detailed below.
	proxyConfiguration?: [...#ProxyConfigurationObservation] @go(ProxyConfiguration,[]ProxyConfigurationObservation)

	// A list of regular expression patterns to exclude certain URLs to crawl. URLs that match the patterns are excluded from the index. URLs that don't match the patterns are included in the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of 0 items. Maximum number of 100 items. Length Constraints: Minimum length of 1. Maximum length of 150.
	urlExclusionPatterns?: [...null | string] @go(URLExclusionPatterns,[]*string)

	// A list of regular expression patterns to include certain URLs to crawl. URLs that match the patterns are included in the index. URLs that don't match the patterns are excluded from the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of 0 items. Maximum number of 100 items. Length Constraints: Minimum length of 1. Maximum length of 150.
	urlInclusionPatterns?: [...null | string] @go(URLInclusionPatterns,[]*string)

	// A block that specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl. You can include website subdomains. You can list up to 100 seed URLs and up to 3 sitemap URLs. You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling. When selecting websites to index, you must adhere to the Amazon Acceptable Use Policy and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index. Detailed below.
	urls?: [...#UrlsObservation] @go(Urls,[]UrlsObservation)
}

#WebCrawlerConfigurationParameters: {
	// A block with the configuration information required to connect to websites using authentication. You can connect to websites using basic authentication of user name and password. You use a secret in AWS Secrets Manager to store your authentication credentials. You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. Detailed below.
	// +kubebuilder:validation:Optional
	authenticationConfiguration?: [...#AuthenticationConfigurationParameters] @go(AuthenticationConfiguration,[]AuthenticationConfigurationParameters)

	// Specifies the number of levels in a website that you want to crawl. The first level begins from the website seed or starting point URL. For example, if a website has 3 levels – index level (i.e. seed in this example), sections level, and subsections level – and you are only interested in crawling information up to the sections level (i.e. levels 0-1), you can set your depth to 1. The default crawl depth is set to 2. Minimum value of 0. Maximum value of 10.
	// +kubebuilder:validation:Optional
	crawlDepth?: null | float64 @go(CrawlDepth,*float64)

	// The maximum size (in MB) of a webpage or attachment to crawl. Files larger than this size (in MB) are skipped/not crawled. The default maximum size of a webpage or attachment is set to 50 MB. Minimum value of 1.0e-06. Maximum value of 50.
	// +kubebuilder:validation:Optional
	maxContentSizePerPageInMegaBytes?: null | float64 @go(MaxContentSizePerPageInMegaBytes,*float64)

	// The maximum number of URLs on a webpage to include when crawling a website. This number is per webpage. As a website’s webpages are crawled, any URLs the webpages link to are also crawled. URLs on a webpage are crawled in order of appearance. The default maximum links per page is 100. Minimum value of 1. Maximum value of 1000.
	// +kubebuilder:validation:Optional
	maxLinksPerPage?: null | float64 @go(MaxLinksPerPage,*float64)

	// The maximum number of URLs crawled per website host per minute. The default maximum number of URLs crawled per website host per minute is 300. Minimum value of 1. Maximum value of 300.
	// +kubebuilder:validation:Optional
	maxUrlsPerMinuteCrawlRate?: null | float64 @go(MaxUrlsPerMinuteCrawlRate,*float64)

	// Configuration information required to connect to your internal websites via a web proxy. You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS. Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in AWS Secrets Manager. Detailed below.
	// +kubebuilder:validation:Optional
	proxyConfiguration?: [...#ProxyConfigurationParameters] @go(ProxyConfiguration,[]ProxyConfigurationParameters)

	// A list of regular expression patterns to exclude certain URLs to crawl. URLs that match the patterns are excluded from the index. URLs that don't match the patterns are included in the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of 0 items. Maximum number of 100 items. Length Constraints: Minimum length of 1. Maximum length of 150.
	// +kubebuilder:validation:Optional
	urlExclusionPatterns?: [...null | string] @go(URLExclusionPatterns,[]*string)

	// A list of regular expression patterns to include certain URLs to crawl. URLs that match the patterns are included in the index. URLs that don't match the patterns are excluded from the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index. Array Members: Minimum number of 0 items. Maximum number of 100 items. Length Constraints: Minimum length of 1. Maximum length of 150.
	// +kubebuilder:validation:Optional
	urlInclusionPatterns?: [...null | string] @go(URLInclusionPatterns,[]*string)

	// A block that specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl. You can include website subdomains. You can list up to 100 seed URLs and up to 3 sitemap URLs. You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling. When selecting websites to index, you must adhere to the Amazon Acceptable Use Policy and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index. Detailed below.
	// +kubebuilder:validation:Required
	urls: [...#UrlsParameters] @go(Urls,[]UrlsParameters)
}

// DataSourceSpec defines the desired state of DataSource
#DataSourceSpec: {
	forProvider: #DataSourceParameters @go(ForProvider)
}

// DataSourceStatus defines the observed state of DataSource.
#DataSourceStatus: {
	atProvider?: #DataSourceObservation @go(AtProvider)
}

// DataSource is the Schema for the DataSources API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DataSource: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.type)",message="type is a required parameter"
	spec:    #DataSourceSpec   @go(Spec)
	status?: #DataSourceStatus @go(Status)
}

// DataSourceList contains a list of DataSources
#DataSourceList: {
	items: [...#DataSource] @go(Items,[]DataSource)
}
