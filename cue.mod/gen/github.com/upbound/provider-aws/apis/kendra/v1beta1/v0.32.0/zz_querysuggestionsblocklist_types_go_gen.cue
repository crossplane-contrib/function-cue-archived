// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/kendra/v1beta1

package v1beta1

#QuerySuggestionsBlockListObservation: {
	// ARN of the block list.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// The unique indentifier of the block list.
	querySuggestionsBlockListId?: null | string @go(QuerySuggestionsBlockListID,*string)
	status?:                      null | string @go(Status,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#QuerySuggestionsBlockListParameters: {
	// The description for a block list.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The identifier of the index for a block list.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kendra/v1beta1.Index
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	indexId?: null | string @go(IndexID,*string)

	// The name for the block list.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The IAM (Identity and Access Management) role used to access the block list text file in S3.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The S3 path where your block list text file sits in S3. Detailed below.
	// +kubebuilder:validation:Required
	sourceS3Path: [...#SourceS3PathParameters] @go(SourceS3Path,[]SourceS3PathParameters)

	// Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SourceS3PathObservation: {
}

#SourceS3PathParameters: {
	// The name of the S3 bucket that contains the file.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// The name of the file.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)
}

// QuerySuggestionsBlockListSpec defines the desired state of QuerySuggestionsBlockList
#QuerySuggestionsBlockListSpec: {
	forProvider: #QuerySuggestionsBlockListParameters @go(ForProvider)
}

// QuerySuggestionsBlockListStatus defines the observed state of QuerySuggestionsBlockList.
#QuerySuggestionsBlockListStatus: {
	atProvider?: #QuerySuggestionsBlockListObservation @go(AtProvider)
}

// QuerySuggestionsBlockList is the Schema for the QuerySuggestionsBlockLists API. Upbound official provider resource for managing an aws kendra block list used for query suggestions for an index
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#QuerySuggestionsBlockList: {
	spec:    #QuerySuggestionsBlockListSpec   @go(Spec)
	status?: #QuerySuggestionsBlockListStatus @go(Status)
}

// QuerySuggestionsBlockListList contains a list of QuerySuggestionsBlockLists
#QuerySuggestionsBlockListList: {
	items: [...#QuerySuggestionsBlockList] @go(Items,[]QuerySuggestionsBlockList)
}
