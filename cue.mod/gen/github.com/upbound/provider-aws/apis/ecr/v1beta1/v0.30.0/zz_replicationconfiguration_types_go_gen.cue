// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ecr/v1beta1

package v1beta1

#DestinationObservation: {
}

#DestinationParameters: {
	// A Region to replicate to.
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The account ID of the destination registry to replicate to.
	// +kubebuilder:validation:Required
	registryId?: null | string @go(RegistryID,*string)
}

#ReplicationConfigurationObservation: {
	id?: null | string @go(ID,*string)

	// The account ID of the destination registry to replicate to.
	registryId?: null | string @go(RegistryID,*string)
}

#ReplicationConfigurationParameters: {
	// A Region to replicate to.
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Replication configuration for a registry. See Replication Configuration.
	// +kubebuilder:validation:Optional
	replicationConfiguration?: [...#ReplicationConfigurationReplicationConfigurationParameters] @go(ReplicationConfiguration,[]ReplicationConfigurationReplicationConfigurationParameters)
}

#ReplicationConfigurationReplicationConfigurationObservation: {
}

#ReplicationConfigurationReplicationConfigurationParameters: {
	// The replication rules for a replication configuration. A maximum of 10 are allowed per replication_configuration. See Rule
	// +kubebuilder:validation:Required
	rule: [...#ReplicationConfigurationRuleParameters] @go(Rule,[]ReplicationConfigurationRuleParameters)
}

#ReplicationConfigurationRuleObservation: {
}

#ReplicationConfigurationRuleParameters: {
	// the details of a replication destination. A maximum of 25 are allowed per rule. See Destination.
	// +kubebuilder:validation:Required
	destination: [...#DestinationParameters] @go(Destination,[]DestinationParameters)

	// filters for a replication rule. See Repository Filter.
	// +kubebuilder:validation:Optional
	repositoryFilter?: [...#RuleRepositoryFilterParameters] @go(RepositoryFilter,[]RuleRepositoryFilterParameters)
}

#RuleRepositoryFilterObservation: {
}

#RuleRepositoryFilterParameters: {
	// The repository filter details.
	// +kubebuilder:validation:Required
	filter?: null | string @go(Filter,*string)

	// The repository filter type. The only supported value is PREFIX_MATCH, which is a repository name prefix specified with the filter parameter.
	// +kubebuilder:validation:Required
	filterType?: null | string @go(FilterType,*string)
}

// ReplicationConfigurationSpec defines the desired state of ReplicationConfiguration
#ReplicationConfigurationSpec: {
	forProvider: #ReplicationConfigurationParameters @go(ForProvider)
}

// ReplicationConfigurationStatus defines the observed state of ReplicationConfiguration.
#ReplicationConfigurationStatus: {
	atProvider?: #ReplicationConfigurationObservation @go(AtProvider)
}

// ReplicationConfiguration is the Schema for the ReplicationConfigurations API. Provides an Elastic Container Registry Replication Configuration.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ReplicationConfiguration: {
	spec:    #ReplicationConfigurationSpec   @go(Spec)
	status?: #ReplicationConfigurationStatus @go(Status)
}

// ReplicationConfigurationList contains a list of ReplicationConfigurations
#ReplicationConfigurationList: {
	items: [...#ReplicationConfiguration] @go(Items,[]ReplicationConfiguration)
}
