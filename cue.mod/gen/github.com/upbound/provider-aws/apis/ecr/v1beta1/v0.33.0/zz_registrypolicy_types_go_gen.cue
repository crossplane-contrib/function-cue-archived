// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ecr/v1beta1

package v1beta1

#RegistryPolicyObservation: {
	id?: null | string @go(ID,*string)

	// The registry ID where the registry was created.
	registryId?: null | string @go(RegistryID,*string)
}

#RegistryPolicyParameters: {
	// The policy document. This is a JSON formatted string
	// +kubebuilder:validation:Required
	policy?: null | string @go(Policy,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// RegistryPolicySpec defines the desired state of RegistryPolicy
#RegistryPolicySpec: {
	forProvider: #RegistryPolicyParameters @go(ForProvider)
}

// RegistryPolicyStatus defines the observed state of RegistryPolicy.
#RegistryPolicyStatus: {
	atProvider?: #RegistryPolicyObservation @go(AtProvider)
}

// RegistryPolicy is the Schema for the RegistryPolicys API. Provides an Elastic Container Registry Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RegistryPolicy: {
	spec:    #RegistryPolicySpec   @go(Spec)
	status?: #RegistryPolicyStatus @go(Status)
}

// RegistryPolicyList contains a list of RegistryPolicys
#RegistryPolicyList: {
	items: [...#RegistryPolicy] @go(Items,[]RegistryPolicy)
}
