// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudfront/v1beta1

package v1beta1

#CustomErrorResponseObservation: {
	// Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
	errorCachingMinTtl?: null | float64 @go(ErrorCachingMinTTL,*float64)

	// 4xx or 5xx HTTP status code that you want to customize.
	errorCode?: null | float64 @go(ErrorCode,*float64)

	// HTTP status code that you want CloudFront to return with the custom error page to the viewer.
	responseCode?: null | float64 @go(ResponseCode,*float64)

	// Path of the custom error page (for example, /custom_404.html).
	responsePagePath?: null | string @go(ResponsePagePath,*string)
}

#CustomErrorResponseParameters: {
	// Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
	// +kubebuilder:validation:Optional
	errorCachingMinTtl?: null | float64 @go(ErrorCachingMinTTL,*float64)

	// 4xx or 5xx HTTP status code that you want to customize.
	// +kubebuilder:validation:Required
	errorCode?: null | float64 @go(ErrorCode,*float64)

	// HTTP status code that you want CloudFront to return with the custom error page to the viewer.
	// +kubebuilder:validation:Optional
	responseCode?: null | float64 @go(ResponseCode,*float64)

	// Path of the custom error page (for example, /custom_404.html).
	// +kubebuilder:validation:Optional
	responsePagePath?: null | string @go(ResponsePagePath,*string)
}

#CustomHeaderObservation: {
	name?:  null | string @go(Name,*string)
	value?: null | string @go(Value,*string)
}

#CustomHeaderParameters: {
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#CustomOriginConfigObservation: {
	// HTTP port the custom origin listens on.
	httpPort?: null | float64 @go(HTTPPort,*float64)

	// HTTPS port the custom origin listens on.
	httpsPort?: null | float64 @go(HTTPSPort,*float64)

	// The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.
	originKeepaliveTimeout?: null | float64 @go(OriginKeepaliveTimeout,*float64)

	// Origin protocol policy to apply to your origin. One of http-only, https-only, or match-viewer.
	originProtocolPolicy?: null | string @go(OriginProtocolPolicy,*string)

	// The Custom Read timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.
	originReadTimeout?: null | float64 @go(OriginReadTimeout,*float64)

	// SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS. A list of one or more of SSLv3, TLSv1, TLSv1.1, and TLSv1.2.
	originSslProtocols?: [...null | string] @go(OriginSSLProtocols,[]*string)
}

#CustomOriginConfigParameters: {
	// HTTP port the custom origin listens on.
	// +kubebuilder:validation:Required
	httpPort?: null | float64 @go(HTTPPort,*float64)

	// HTTPS port the custom origin listens on.
	// +kubebuilder:validation:Required
	httpsPort?: null | float64 @go(HTTPSPort,*float64)

	// The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.
	// +kubebuilder:validation:Optional
	originKeepaliveTimeout?: null | float64 @go(OriginKeepaliveTimeout,*float64)

	// Origin protocol policy to apply to your origin. One of http-only, https-only, or match-viewer.
	// +kubebuilder:validation:Required
	originProtocolPolicy?: null | string @go(OriginProtocolPolicy,*string)

	// The Custom Read timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.
	// +kubebuilder:validation:Optional
	originReadTimeout?: null | float64 @go(OriginReadTimeout,*float64)

	// SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS. A list of one or more of SSLv3, TLSv1, TLSv1.1, and TLSv1.2.
	// +kubebuilder:validation:Required
	originSslProtocols: [...null | string] @go(OriginSSLProtocols,[]*string)
}

#DefaultCacheBehaviorObservation: {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
	cachePolicyId?: null | string @go(CachePolicyID,*string)

	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	cachedMethods?: [...null | string] @go(CachedMethods,[]*string)

	// Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
	compress?: null | bool @go(Compress,*bool)

	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
	defaultTtl?: null | float64 @go(DefaultTTL,*float64)

	// Field level encryption configuration ID.
	fieldLevelEncryptionId?: null | string @go(FieldLevelEncryptionID,*string)

	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	forwardedValues?: [...#ForwardedValuesObservation] @go(ForwardedValues,[]ForwardedValuesObservation)

	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	functionAssociation?: [...#FunctionAssociationObservation] @go(FunctionAssociation,[]FunctionAssociationObservation)

	// A config block that triggers a lambda function with specific actions (maximum 4).
	lambdaFunctionAssociation?: [...#LambdaFunctionAssociationObservation] @go(LambdaFunctionAssociation,[]LambdaFunctionAssociationObservation)

	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
	maxTtl?: null | float64 @go(MaxTTL,*float64)

	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	minTtl?: null | float64 @go(MinTTL,*float64)

	// Unique identifier of the origin request policy that is attached to the behavior.
	originRequestPolicyId?: null | string @go(OriginRequestPolicyID,*string)

	// ARN of the real-time log configuration that is attached to this cache behavior.
	realtimeLogConfigArn?: null | string @go(RealtimeLogConfigArn,*string)

	// Identifier for a response headers policy.
	responseHeadersPolicyId?: null | string @go(ResponseHeadersPolicyID,*string)

	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	smoothStreaming?: null | bool @go(SmoothStreaming,*bool)

	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	targetOriginId?: null | string @go(TargetOriginID,*string)

	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
	trustedKeyGroups?: [...null | string] @go(TrustedKeyGroups,[]*string)

	// List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
	trustedSigners?: [...null | string] @go(TrustedSigners,[]*string)

	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
	viewerProtocolPolicy?: null | string @go(ViewerProtocolPolicy,*string)
}

#DefaultCacheBehaviorParameters: {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	// +kubebuilder:validation:Required
	allowedMethods: [...null | string] @go(AllowedMethods,[]*string)

	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
	// +kubebuilder:validation:Optional
	cachePolicyId?: null | string @go(CachePolicyID,*string)

	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	// +kubebuilder:validation:Required
	cachedMethods: [...null | string] @go(CachedMethods,[]*string)

	// Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
	// +kubebuilder:validation:Optional
	compress?: null | bool @go(Compress,*bool)

	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
	// +kubebuilder:validation:Optional
	defaultTtl?: null | float64 @go(DefaultTTL,*float64)

	// Field level encryption configuration ID.
	// +kubebuilder:validation:Optional
	fieldLevelEncryptionId?: null | string @go(FieldLevelEncryptionID,*string)

	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	// +kubebuilder:validation:Optional
	forwardedValues?: [...#ForwardedValuesParameters] @go(ForwardedValues,[]ForwardedValuesParameters)

	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	// +kubebuilder:validation:Optional
	functionAssociation?: [...#FunctionAssociationParameters] @go(FunctionAssociation,[]FunctionAssociationParameters)

	// A config block that triggers a lambda function with specific actions (maximum 4).
	// +kubebuilder:validation:Optional
	lambdaFunctionAssociation?: [...#LambdaFunctionAssociationParameters] @go(LambdaFunctionAssociation,[]LambdaFunctionAssociationParameters)

	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
	// +kubebuilder:validation:Optional
	maxTtl?: null | float64 @go(MaxTTL,*float64)

	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	// +kubebuilder:validation:Optional
	minTtl?: null | float64 @go(MinTTL,*float64)

	// Unique identifier of the origin request policy that is attached to the behavior.
	// +kubebuilder:validation:Optional
	originRequestPolicyId?: null | string @go(OriginRequestPolicyID,*string)

	// ARN of the real-time log configuration that is attached to this cache behavior.
	// +kubebuilder:validation:Optional
	realtimeLogConfigArn?: null | string @go(RealtimeLogConfigArn,*string)

	// Identifier for a response headers policy.
	// +kubebuilder:validation:Optional
	responseHeadersPolicyId?: null | string @go(ResponseHeadersPolicyID,*string)

	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	// +kubebuilder:validation:Optional
	smoothStreaming?: null | bool @go(SmoothStreaming,*bool)

	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	// +kubebuilder:validation:Required
	targetOriginId?: null | string @go(TargetOriginID,*string)

	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
	// +kubebuilder:validation:Optional
	trustedKeyGroups?: [...null | string] @go(TrustedKeyGroups,[]*string)

	// List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
	// +kubebuilder:validation:Optional
	trustedSigners?: [...null | string] @go(TrustedSigners,[]*string)

	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
	// +kubebuilder:validation:Required
	viewerProtocolPolicy?: null | string @go(ViewerProtocolPolicy,*string)
}

#DistributionObservation: {
	// Extra CNAMEs (alternate domain names), if any, for this distribution.
	aliases?: [...null | string] @go(Aliases,[]*string)

	// ARN for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account ID.
	arn?: null | string @go(Arn,*string)

	// Internal value used by CloudFront to allow future updates to the distribution configuration.
	callerReference?: null | string @go(CallerReference,*string)

	// Any comments you want to include about the distribution.
	comment?: null | string @go(Comment,*string)

	// One or more custom error response elements (multiples allowed).
	customErrorResponse?: [...#CustomErrorResponseObservation] @go(CustomErrorResponse,[]CustomErrorResponseObservation)

	// Default cache behavior for this distribution (maximum one). Requires either cache_policy_id (preferred) or forwarded_values (deprecated) be set.
	defaultCacheBehavior?: [...#DefaultCacheBehaviorObservation] @go(DefaultCacheBehavior,[]DefaultCacheBehaviorObservation)

	// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
	defaultRootObject?: null | string @go(DefaultRootObject,*string)

	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	domainName?: null | string @go(DomainName,*string)

	// Whether the distribution is enabled to accept end user requests for content.
	enabled?: null | bool @go(Enabled,*bool)

	// Current version of the distribution's information. For example: E2QWRUHAPOMQZL.
	etag?: null | string @go(Etag,*string)

	// Maximum HTTP version to support on the distribution. Allowed values are http1.1, http2, http2and3 and http3. The default is http2.
	httpVersion?: null | string @go(HTTPVersion,*string)

	// CloudFront Route 53 zone ID that can be used to route an Alias Resource Record Set to. This attribute is simply an alias for the zone ID Z2FDTNDATAQYW2.
	hostedZoneId?: null | string @go(HostedZoneID,*string)

	// Identifier for the distribution. For example: EDFDVBD632BHDS5.
	id?: null | string @go(ID,*string)

	// Number of invalidation batches currently in progress.
	inProgressValidationBatches?: null | float64 @go(InProgressValidationBatches,*float64)

	// Whether the IPv6 is enabled for the distribution.
	isIpv6Enabled?: null | bool @go(IsIPv6Enabled,*bool)

	// Date and time the distribution was last modified.
	lastModifiedTime?: null | string @go(LastModifiedTime,*string)

	// The logging configuration that controls how logs are written to your distribution (maximum one).
	loggingConfig?: [...#LoggingConfigObservation] @go(LoggingConfig,[]LoggingConfigObservation)

	// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
	orderedCacheBehavior?: [...#OrderedCacheBehaviorObservation] @go(OrderedCacheBehavior,[]OrderedCacheBehaviorObservation)

	// One or more origins for this distribution (multiples allowed).
	origin?: [...#OriginObservation] @go(Origin,[]OriginObservation)

	// One or more origin_group for this distribution (multiples allowed).
	originGroup?: [...#OriginGroupObservation] @go(OriginGroup,[]OriginGroupObservation)

	// Price class for this distribution. One of PriceClass_All, PriceClass_200, PriceClass_100.
	priceClass?: null | string @go(PriceClass,*string)

	// The restriction configuration for this distribution (maximum one).
	restrictions?: [...#RestrictionsObservation] @go(Restrictions,[]RestrictionsObservation)

	// If this is set, the distribution needs to be deleted manually afterwards. Default: false.
	retainOnDelete?: null | bool @go(RetainOnDelete,*bool)

	// Current status of the distribution. Deployed if the distribution's information is fully propagated throughout the Amazon CloudFront system.
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
	trustedKeyGroups?: [...#TrustedKeyGroupsObservation] @go(TrustedKeyGroups,[]TrustedKeyGroupsObservation)

	// List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
	trustedSigners?: [...#TrustedSignersObservation] @go(TrustedSigners,[]TrustedSignersObservation)

	// The SSL configuration for this distribution (maximum one).
	viewerCertificate?: [...#ViewerCertificateObservation] @go(ViewerCertificate,[]ViewerCertificateObservation)

	// If enabled, the resource will wait for the distribution status to change from InProgress to Deployed. Setting this tofalse will skip the process. Default: true.
	waitForDeployment?: null | bool @go(WaitForDeployment,*bool)

	// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example aws_wafv2_web_acl.example.arn. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example aws_waf_web_acl.example.id. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have waf:GetWebACL permissions assigned.
	webAclId?: null | string @go(WebACLID,*string)
}

#DistributionParameters: {
	// Extra CNAMEs (alternate domain names), if any, for this distribution.
	// +kubebuilder:validation:Optional
	aliases?: [...null | string] @go(Aliases,[]*string)

	// Any comments you want to include about the distribution.
	// +kubebuilder:validation:Optional
	comment?: null | string @go(Comment,*string)

	// One or more custom error response elements (multiples allowed).
	// +kubebuilder:validation:Optional
	customErrorResponse?: [...#CustomErrorResponseParameters] @go(CustomErrorResponse,[]CustomErrorResponseParameters)

	// Default cache behavior for this distribution (maximum one). Requires either cache_policy_id (preferred) or forwarded_values (deprecated) be set.
	// +kubebuilder:validation:Optional
	defaultCacheBehavior?: [...#DefaultCacheBehaviorParameters] @go(DefaultCacheBehavior,[]DefaultCacheBehaviorParameters)

	// Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
	// +kubebuilder:validation:Optional
	defaultRootObject?: null | string @go(DefaultRootObject,*string)

	// Whether the distribution is enabled to accept end user requests for content.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Maximum HTTP version to support on the distribution. Allowed values are http1.1, http2, http2and3 and http3. The default is http2.
	// +kubebuilder:validation:Optional
	httpVersion?: null | string @go(HTTPVersion,*string)

	// Whether the IPv6 is enabled for the distribution.
	// +kubebuilder:validation:Optional
	isIpv6Enabled?: null | bool @go(IsIPv6Enabled,*bool)

	// The logging configuration that controls how logs are written to your distribution (maximum one).
	// +kubebuilder:validation:Optional
	loggingConfig?: [...#LoggingConfigParameters] @go(LoggingConfig,[]LoggingConfigParameters)

	// Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
	// +kubebuilder:validation:Optional
	orderedCacheBehavior?: [...#OrderedCacheBehaviorParameters] @go(OrderedCacheBehavior,[]OrderedCacheBehaviorParameters)

	// One or more origins for this distribution (multiples allowed).
	// +kubebuilder:validation:Optional
	origin?: [...#OriginParameters] @go(Origin,[]OriginParameters)

	// One or more origin_group for this distribution (multiples allowed).
	// +kubebuilder:validation:Optional
	originGroup?: [...#OriginGroupParameters] @go(OriginGroup,[]OriginGroupParameters)

	// Price class for this distribution. One of PriceClass_All, PriceClass_200, PriceClass_100.
	// +kubebuilder:validation:Optional
	priceClass?: null | string @go(PriceClass,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The restriction configuration for this distribution (maximum one).
	// +kubebuilder:validation:Optional
	restrictions?: [...#RestrictionsParameters] @go(Restrictions,[]RestrictionsParameters)

	// If this is set, the distribution needs to be deleted manually afterwards. Default: false.
	// +kubebuilder:validation:Optional
	retainOnDelete?: null | bool @go(RetainOnDelete,*bool)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The SSL configuration for this distribution (maximum one).
	// +kubebuilder:validation:Optional
	viewerCertificate?: [...#ViewerCertificateParameters] @go(ViewerCertificate,[]ViewerCertificateParameters)

	// If enabled, the resource will wait for the distribution status to change from InProgress to Deployed. Setting this tofalse will skip the process. Default: true.
	// +kubebuilder:validation:Optional
	waitForDeployment?: null | bool @go(WaitForDeployment,*bool)

	// Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example aws_wafv2_web_acl.example.arn. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example aws_waf_web_acl.example.id. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have waf:GetWebACL permissions assigned.
	// +kubebuilder:validation:Optional
	webAclId?: null | string @go(WebACLID,*string)
}

#FailoverCriteriaObservation: {
	// List of HTTP status codes for the origin group.
	statusCodes?: [...null | float64] @go(StatusCodes,[]*float64)
}

#FailoverCriteriaParameters: {
	// List of HTTP status codes for the origin group.
	// +kubebuilder:validation:Required
	statusCodes: [...null | float64] @go(StatusCodes,[]*float64)
}

#ForwardedValuesCookiesObservation: {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
	forward?: null | string @go(Forward,*string)

	// If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
	whitelistedNames?: [...null | string] @go(WhitelistedNames,[]*string)
}

#ForwardedValuesCookiesParameters: {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
	// +kubebuilder:validation:Required
	forward?: null | string @go(Forward,*string)

	// If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
	// +kubebuilder:validation:Optional
	whitelistedNames?: [...null | string] @go(WhitelistedNames,[]*string)
}

#ForwardedValuesObservation: {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	cookies?: [...#ForwardedValuesCookiesObservation] @go(Cookies,[]ForwardedValuesCookiesObservation)

	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
	headers?: [...null | string] @go(Headers,[]*string)

	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	queryString?: null | bool @go(QueryString,*bool)

	// When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
	queryStringCacheKeys?: [...null | string] @go(QueryStringCacheKeys,[]*string)
}

#ForwardedValuesParameters: {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	// +kubebuilder:validation:Required
	cookies: [...#ForwardedValuesCookiesParameters] @go(Cookies,[]ForwardedValuesCookiesParameters)

	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
	// +kubebuilder:validation:Optional
	headers?: [...null | string] @go(Headers,[]*string)

	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	// +kubebuilder:validation:Required
	queryString?: null | bool @go(QueryString,*bool)

	// When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
	// +kubebuilder:validation:Optional
	queryStringCacheKeys?: [...null | string] @go(QueryStringCacheKeys,[]*string)
}

#FunctionAssociationObservation: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	eventType?: null | string @go(EventType,*string)

	// ARN of the CloudFront function.
	functionArn?: null | string @go(FunctionArn,*string)
}

#FunctionAssociationParameters: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	// +kubebuilder:validation:Required
	eventType?: null | string @go(EventType,*string)

	// ARN of the CloudFront function.
	// +kubebuilder:validation:Required
	functionArn?: null | string @go(FunctionArn,*string)
}

#GeoRestrictionObservation: {
	// ISO 3166-1-alpha-2 codes for which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). If the type is specified as none an empty array can be used.
	locations?: [...null | string] @go(Locations,[]*string)

	// Method that you want to use to restrict distribution of your content by country: none, whitelist, or blacklist.
	restrictionType?: null | string @go(RestrictionType,*string)
}

#GeoRestrictionParameters: {
	// ISO 3166-1-alpha-2 codes for which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). If the type is specified as none an empty array can be used.
	// +kubebuilder:validation:Optional
	locations?: [...null | string] @go(Locations,[]*string)

	// Method that you want to use to restrict distribution of your content by country: none, whitelist, or blacklist.
	// +kubebuilder:validation:Required
	restrictionType?: null | string @go(RestrictionType,*string)
}

#ItemsObservation: {
	// ID of the key group that contains the public keys.
	keyGroupId?: null | string @go(KeyGroupID,*string)

	// Set of CloudFront key pair IDs.
	keyPairIds?: [...null | string] @go(KeyPairIds,[]*string)
}

#ItemsParameters: {
}

#LambdaFunctionAssociationObservation: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	eventType?: null | string @go(EventType,*string)

	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
	includeBody?: null | bool @go(IncludeBody,*bool)

	// ARN of the Lambda function.
	lambdaArn?: null | string @go(LambdaArn,*string)
}

#LambdaFunctionAssociationParameters: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	// +kubebuilder:validation:Required
	eventType?: null | string @go(EventType,*string)

	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
	// +kubebuilder:validation:Optional
	includeBody?: null | bool @go(IncludeBody,*bool)

	// ARN of the Lambda function.
	// +kubebuilder:validation:Required
	lambdaArn?: null | string @go(LambdaArn,*string)
}

#LoggingConfigObservation: {
	// Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.
	bucket?: null | string @go(Bucket,*string)

	// Whether to include cookies in access logs (default: false).
	includeCookies?: null | bool @go(IncludeCookies,*bool)

	// Prefix to the access log filenames for this distribution, for example, myprefix/.
	prefix?: null | string @go(Prefix,*string)
}

#LoggingConfigParameters: {
	// Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.
	// +kubebuilder:validation:Required
	bucket?: null | string @go(Bucket,*string)

	// Whether to include cookies in access logs (default: false).
	// +kubebuilder:validation:Optional
	includeCookies?: null | bool @go(IncludeCookies,*bool)

	// Prefix to the access log filenames for this distribution, for example, myprefix/.
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)
}

#MemberObservation: {
	// Unique identifier for the origin.
	originId?: null | string @go(OriginID,*string)
}

#MemberParameters: {
	// Unique identifier for the origin.
	// +kubebuilder:validation:Required
	originId?: null | string @go(OriginID,*string)
}

#OrderedCacheBehaviorForwardedValuesCookiesObservation: {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
	forward?: null | string @go(Forward,*string)

	// If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
	whitelistedNames?: [...null | string] @go(WhitelistedNames,[]*string)
}

#OrderedCacheBehaviorForwardedValuesCookiesParameters: {
	// Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
	// +kubebuilder:validation:Required
	forward?: null | string @go(Forward,*string)

	// If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
	// +kubebuilder:validation:Optional
	whitelistedNames?: [...null | string] @go(WhitelistedNames,[]*string)
}

#OrderedCacheBehaviorForwardedValuesObservation: {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	cookies?: [...#OrderedCacheBehaviorForwardedValuesCookiesObservation] @go(Cookies,[]OrderedCacheBehaviorForwardedValuesCookiesObservation)

	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
	headers?: [...null | string] @go(Headers,[]*string)

	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	queryString?: null | bool @go(QueryString,*bool)

	// When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
	queryStringCacheKeys?: [...null | string] @go(QueryStringCacheKeys,[]*string)
}

#OrderedCacheBehaviorForwardedValuesParameters: {
	// The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
	// +kubebuilder:validation:Required
	cookies: [...#OrderedCacheBehaviorForwardedValuesCookiesParameters] @go(Cookies,[]OrderedCacheBehaviorForwardedValuesCookiesParameters)

	// Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
	// +kubebuilder:validation:Optional
	headers?: [...null | string] @go(Headers,[]*string)

	// Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
	// +kubebuilder:validation:Required
	queryString?: null | bool @go(QueryString,*bool)

	// When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
	// +kubebuilder:validation:Optional
	queryStringCacheKeys?: [...null | string] @go(QueryStringCacheKeys,[]*string)
}

#OrderedCacheBehaviorFunctionAssociationObservation: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	eventType?: null | string @go(EventType,*string)

	// ARN of the CloudFront function.
	functionArn?: null | string @go(FunctionArn,*string)
}

#OrderedCacheBehaviorFunctionAssociationParameters: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	// +kubebuilder:validation:Required
	eventType?: null | string @go(EventType,*string)

	// ARN of the CloudFront function.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudfront/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	functionArn?: null | string @go(FunctionArn,*string)
}

#OrderedCacheBehaviorLambdaFunctionAssociationObservation: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	eventType?: null | string @go(EventType,*string)

	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
	includeBody?: null | bool @go(IncludeBody,*bool)

	// ARN of the Lambda function.
	lambdaArn?: null | string @go(LambdaArn,*string)
}

#OrderedCacheBehaviorLambdaFunctionAssociationParameters: {
	// Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
	// +kubebuilder:validation:Required
	eventType?: null | string @go(EventType,*string)

	// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
	// +kubebuilder:validation:Optional
	includeBody?: null | bool @go(IncludeBody,*bool)

	// ARN of the Lambda function.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/lambda/v1beta1.Function
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("qualified_arn",true)
	// +kubebuilder:validation:Optional
	lambdaArn?: null | string @go(LambdaArn,*string)
}

#OrderedCacheBehaviorObservation: {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	allowedMethods?: [...null | string] @go(AllowedMethods,[]*string)

	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
	cachePolicyId?: null | string @go(CachePolicyID,*string)

	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	cachedMethods?: [...null | string] @go(CachedMethods,[]*string)

	// Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
	compress?: null | bool @go(Compress,*bool)

	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
	defaultTtl?: null | float64 @go(DefaultTTL,*float64)

	// Field level encryption configuration ID.
	fieldLevelEncryptionId?: null | string @go(FieldLevelEncryptionID,*string)

	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	forwardedValues?: [...#OrderedCacheBehaviorForwardedValuesObservation] @go(ForwardedValues,[]OrderedCacheBehaviorForwardedValuesObservation)

	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	functionAssociation?: [...#OrderedCacheBehaviorFunctionAssociationObservation] @go(FunctionAssociation,[]OrderedCacheBehaviorFunctionAssociationObservation)

	// A config block that triggers a lambda function with specific actions (maximum 4).
	lambdaFunctionAssociation?: [...#OrderedCacheBehaviorLambdaFunctionAssociationObservation] @go(LambdaFunctionAssociation,[]OrderedCacheBehaviorLambdaFunctionAssociationObservation)

	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
	maxTtl?: null | float64 @go(MaxTTL,*float64)

	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	minTtl?: null | float64 @go(MinTTL,*float64)

	// Unique identifier of the origin request policy that is attached to the behavior.
	originRequestPolicyId?: null | string @go(OriginRequestPolicyID,*string)

	// Pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to.
	pathPattern?: null | string @go(PathPattern,*string)

	// ARN of the real-time log configuration that is attached to this cache behavior.
	realtimeLogConfigArn?: null | string @go(RealtimeLogConfigArn,*string)

	// Identifier for a response headers policy.
	responseHeadersPolicyId?: null | string @go(ResponseHeadersPolicyID,*string)

	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	smoothStreaming?: null | bool @go(SmoothStreaming,*bool)

	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	targetOriginId?: null | string @go(TargetOriginID,*string)

	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
	trustedKeyGroups?: [...null | string] @go(TrustedKeyGroups,[]*string)

	// List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
	trustedSigners?: [...null | string] @go(TrustedSigners,[]*string)

	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
	viewerProtocolPolicy?: null | string @go(ViewerProtocolPolicy,*string)
}

#OrderedCacheBehaviorParameters: {
	// Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
	// +kubebuilder:validation:Required
	allowedMethods: [...null | string] @go(AllowedMethods,[]*string)

	// Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
	// +kubebuilder:validation:Optional
	cachePolicyId?: null | string @go(CachePolicyID,*string)

	// Controls whether CloudFront caches the response to requests using the specified HTTP methods.
	// +kubebuilder:validation:Required
	cachedMethods: [...null | string] @go(CachedMethods,[]*string)

	// Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
	// +kubebuilder:validation:Optional
	compress?: null | bool @go(Compress,*bool)

	// Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
	// +kubebuilder:validation:Optional
	defaultTtl?: null | float64 @go(DefaultTTL,*float64)

	// Field level encryption configuration ID.
	// +kubebuilder:validation:Optional
	fieldLevelEncryptionId?: null | string @go(FieldLevelEncryptionID,*string)

	// The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
	// +kubebuilder:validation:Optional
	forwardedValues?: [...#OrderedCacheBehaviorForwardedValuesParameters] @go(ForwardedValues,[]OrderedCacheBehaviorForwardedValuesParameters)

	// A config block that triggers a cloudfront function with specific actions (maximum 2).
	// +kubebuilder:validation:Optional
	functionAssociation?: [...#OrderedCacheBehaviorFunctionAssociationParameters] @go(FunctionAssociation,[]OrderedCacheBehaviorFunctionAssociationParameters)

	// A config block that triggers a lambda function with specific actions (maximum 4).
	// +kubebuilder:validation:Optional
	lambdaFunctionAssociation?: [...#OrderedCacheBehaviorLambdaFunctionAssociationParameters] @go(LambdaFunctionAssociation,[]OrderedCacheBehaviorLambdaFunctionAssociationParameters)

	// Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
	// +kubebuilder:validation:Optional
	maxTtl?: null | float64 @go(MaxTTL,*float64)

	// Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
	// +kubebuilder:validation:Optional
	minTtl?: null | float64 @go(MinTTL,*float64)

	// Unique identifier of the origin request policy that is attached to the behavior.
	// +kubebuilder:validation:Optional
	originRequestPolicyId?: null | string @go(OriginRequestPolicyID,*string)

	// Pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to.
	// +kubebuilder:validation:Required
	pathPattern?: null | string @go(PathPattern,*string)

	// ARN of the real-time log configuration that is attached to this cache behavior.
	// +kubebuilder:validation:Optional
	realtimeLogConfigArn?: null | string @go(RealtimeLogConfigArn,*string)

	// Identifier for a response headers policy.
	// +kubebuilder:validation:Optional
	responseHeadersPolicyId?: null | string @go(ResponseHeadersPolicyID,*string)

	// Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
	// +kubebuilder:validation:Optional
	smoothStreaming?: null | bool @go(SmoothStreaming,*bool)

	// Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
	// +kubebuilder:validation:Required
	targetOriginId?: null | string @go(TargetOriginID,*string)

	// List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
	// +kubebuilder:validation:Optional
	trustedKeyGroups?: [...null | string] @go(TrustedKeyGroups,[]*string)

	// List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
	// +kubebuilder:validation:Optional
	trustedSigners?: [...null | string] @go(TrustedSigners,[]*string)

	// Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
	// +kubebuilder:validation:Required
	viewerProtocolPolicy?: null | string @go(ViewerProtocolPolicy,*string)
}

#OriginGroupObservation: {
	// The failover criteria for when to failover to the secondary origin.
	failoverCriteria?: [...#FailoverCriteriaObservation] @go(FailoverCriteria,[]FailoverCriteriaObservation)

	// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
	member?: [...#MemberObservation] @go(Member,[]MemberObservation)

	// Unique identifier for the origin.
	originId?: null | string @go(OriginID,*string)
}

#OriginGroupParameters: {
	// The failover criteria for when to failover to the secondary origin.
	// +kubebuilder:validation:Required
	failoverCriteria: [...#FailoverCriteriaParameters] @go(FailoverCriteria,[]FailoverCriteriaParameters)

	// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
	// +kubebuilder:validation:Required
	member: [...#MemberParameters] @go(Member,[]MemberParameters)

	// Unique identifier for the origin.
	// +kubebuilder:validation:Required
	originId?: null | string @go(OriginID,*string)
}

#OriginObservation: {
	// Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
	connectionAttempts?: null | float64 @go(ConnectionAttempts,*float64)

	// Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
	connectionTimeout?: null | float64 @go(ConnectionTimeout,*float64)

	// One or more sub-resources with name and value parameters that specify header data that will be sent to the origin (multiples allowed).
	customHeader?: [...#CustomHeaderObservation] @go(CustomHeader,[]CustomHeaderObservation)

	// The CloudFront custom origin configuration information. If an S3 origin is required, use origin_access_control_id or s3_origin_config instead.
	customOriginConfig?: [...#CustomOriginConfigObservation] @go(CustomOriginConfig,[]CustomOriginConfigObservation)

	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	domainName?: null | string @go(DomainName,*string)

	// Unique identifier of a CloudFront origin access control for this origin.
	originAccessControlId?: null | string @go(OriginAccessControlID,*string)

	// Unique identifier for the origin.
	originId?: null | string @go(OriginID,*string)

	// Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
	originPath?: null | string @go(OriginPath,*string)

	// The CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see Using Origin Shield in the Amazon CloudFront Developer Guide.
	originShield?: [...#OriginShieldObservation] @go(OriginShield,[]OriginShieldObservation)

	// The CloudFront S3 origin configuration information. If a custom origin is required, use custom_origin_config instead.
	s3OriginConfig?: [...#S3OriginConfigObservation] @go(S3OriginConfig,[]S3OriginConfigObservation)
}

#OriginParameters: {
	// Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
	// +kubebuilder:validation:Optional
	connectionAttempts?: null | float64 @go(ConnectionAttempts,*float64)

	// Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
	// +kubebuilder:validation:Optional
	connectionTimeout?: null | float64 @go(ConnectionTimeout,*float64)

	// One or more sub-resources with name and value parameters that specify header data that will be sent to the origin (multiples allowed).
	// +kubebuilder:validation:Optional
	customHeader?: [...#CustomHeaderParameters] @go(CustomHeader,[]CustomHeaderParameters)

	// The CloudFront custom origin configuration information. If an S3 origin is required, use origin_access_control_id or s3_origin_config instead.
	// +kubebuilder:validation:Optional
	customOriginConfig?: [...#CustomOriginConfigParameters] @go(CustomOriginConfig,[]CustomOriginConfigParameters)

	// DNS domain name of either the S3 bucket, or web site of your custom origin.
	// +kubebuilder:validation:Required
	domainName?: null | string @go(DomainName,*string)

	// Unique identifier of a CloudFront origin access control for this origin.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudfront/v1beta1.OriginAccessControl
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	originAccessControlId?: null | string @go(OriginAccessControlID,*string)

	// Unique identifier for the origin.
	// +kubebuilder:validation:Required
	originId?: null | string @go(OriginID,*string)

	// Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
	// +kubebuilder:validation:Optional
	originPath?: null | string @go(OriginPath,*string)

	// The CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see Using Origin Shield in the Amazon CloudFront Developer Guide.
	// +kubebuilder:validation:Optional
	originShield?: [...#OriginShieldParameters] @go(OriginShield,[]OriginShieldParameters)

	// The CloudFront S3 origin configuration information. If a custom origin is required, use custom_origin_config instead.
	// +kubebuilder:validation:Optional
	s3OriginConfig?: [...#S3OriginConfigParameters] @go(S3OriginConfig,[]S3OriginConfigParameters)
}

#OriginShieldObservation: {
	// Whether the distribution is enabled to accept end user requests for content.
	enabled?: null | bool @go(Enabled,*bool)

	// AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
	originShieldRegion?: null | string @go(OriginShieldRegion,*string)
}

#OriginShieldParameters: {
	// Whether the distribution is enabled to accept end user requests for content.
	// +kubebuilder:validation:Required
	enabled?: null | bool @go(Enabled,*bool)

	// AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
	// +kubebuilder:validation:Required
	originShieldRegion?: null | string @go(OriginShieldRegion,*string)
}

#RestrictionsObservation: {
	geoRestriction?: [...#GeoRestrictionObservation] @go(GeoRestriction,[]GeoRestrictionObservation)
}

#RestrictionsParameters: {
	// +kubebuilder:validation:Required
	geoRestriction: [...#GeoRestrictionParameters] @go(GeoRestriction,[]GeoRestrictionParameters)
}

#S3OriginConfigObservation: {
	// The CloudFront origin access identity to associate with the origin.
	originAccessIdentity?: null | string @go(OriginAccessIdentity,*string)
}

#S3OriginConfigParameters: {
	// The CloudFront origin access identity to associate with the origin.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudfront/v1beta1.OriginAccessIdentity
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("cloudfront_access_identity_path",true)
	// +kubebuilder:validation:Optional
	originAccessIdentity?: null | string @go(OriginAccessIdentity,*string)
}

#TrustedKeyGroupsObservation: {
	// Whether the distribution is enabled to accept end user requests for content.
	enabled?: null | bool @go(Enabled,*bool)

	// List of nested attributes for each key group.
	items?: [...#ItemsObservation] @go(Items,[]ItemsObservation)
}

#TrustedKeyGroupsParameters: {
}

#TrustedSignersItemsObservation: {
	// AWS account ID or self
	awsAccountNumber?: null | string @go(AwsAccountNumber,*string)

	// Set of CloudFront key pair IDs.
	keyPairIds?: [...null | string] @go(KeyPairIds,[]*string)
}

#TrustedSignersItemsParameters: {
}

#TrustedSignersObservation: {
	// Whether the distribution is enabled to accept end user requests for content.
	enabled?: null | bool @go(Enabled,*bool)

	// List of nested attributes for each key group.
	items?: [...#TrustedSignersItemsObservation] @go(Items,[]TrustedSignersItemsObservation)
}

#TrustedSignersParameters: {
}

#ViewerCertificateObservation: {
	// ARN of the AWS Certificate Manager certificate that you wish to use with this distribution. Specify this, cloudfront_default_certificate, or iam_certificate_id.  The ACM certificate must be in  US-EAST-1.
	acmCertificateArn?: null | string @go(AcmCertificateArn,*string)

	// true if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, acm_certificate_arn, or iam_certificate_id.
	cloudfrontDefaultCertificate?: null | bool @go(CloudfrontDefaultCertificate,*bool)

	// IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, acm_certificate_arn, or cloudfront_default_certificate.
	iamCertificateId?: null | string @go(IAMCertificateID,*string)

	// Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if cloudfront_default_certificate = false. See all possible values in this table under "Security policy." Some examples include: TLSv1.2_2019 and TLSv1.2_2021. Default: TLSv1. NOTE: If you are using a custom certificate (specified with acm_certificate_arn or iam_certificate_id), and have specified sni-only in ssl_support_method, TLSv1 or later must be specified. If you have specified vip in ssl_support_method, only SSLv3 or TLSv1 can be specified. If you have specified cloudfront_default_certificate, TLSv1 must be specified.
	minimumProtocolVersion?: null | string @go(MinimumProtocolVersion,*string)

	// How you want CloudFront to serve HTTPS requests. One of vip or sni-only. Required if you specify acm_certificate_arn or iam_certificate_id. NOTE: vip causes CloudFront to use a dedicated IP address and may incur extra charges.
	sslSupportMethod?: null | string @go(SSLSupportMethod,*string)
}

#ViewerCertificateParameters: {
	// ARN of the AWS Certificate Manager certificate that you wish to use with this distribution. Specify this, cloudfront_default_certificate, or iam_certificate_id.  The ACM certificate must be in  US-EAST-1.
	// +kubebuilder:validation:Optional
	acmCertificateArn?: null | string @go(AcmCertificateArn,*string)

	// true if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, acm_certificate_arn, or iam_certificate_id.
	// +kubebuilder:validation:Optional
	cloudfrontDefaultCertificate?: null | bool @go(CloudfrontDefaultCertificate,*bool)

	// IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, acm_certificate_arn, or cloudfront_default_certificate.
	// +kubebuilder:validation:Optional
	iamCertificateId?: null | string @go(IAMCertificateID,*string)

	// Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if cloudfront_default_certificate = false. See all possible values in this table under "Security policy." Some examples include: TLSv1.2_2019 and TLSv1.2_2021. Default: TLSv1. NOTE: If you are using a custom certificate (specified with acm_certificate_arn or iam_certificate_id), and have specified sni-only in ssl_support_method, TLSv1 or later must be specified. If you have specified vip in ssl_support_method, only SSLv3 or TLSv1 can be specified. If you have specified cloudfront_default_certificate, TLSv1 must be specified.
	// +kubebuilder:validation:Optional
	minimumProtocolVersion?: null | string @go(MinimumProtocolVersion,*string)

	// How you want CloudFront to serve HTTPS requests. One of vip or sni-only. Required if you specify acm_certificate_arn or iam_certificate_id. NOTE: vip causes CloudFront to use a dedicated IP address and may incur extra charges.
	// +kubebuilder:validation:Optional
	sslSupportMethod?: null | string @go(SSLSupportMethod,*string)
}

// DistributionSpec defines the desired state of Distribution
#DistributionSpec: {
	forProvider: #DistributionParameters @go(ForProvider)
}

// DistributionStatus defines the observed state of Distribution.
#DistributionStatus: {
	atProvider?: #DistributionObservation @go(AtProvider)
}

// Distribution is the Schema for the Distributions API. Provides a CloudFront web distribution resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Distribution: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.defaultCacheBehavior)",message="defaultCacheBehavior is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.enabled)",message="enabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.origin)",message="origin is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.restrictions)",message="restrictions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.viewerCertificate)",message="viewerCertificate is a required parameter"
	spec:    #DistributionSpec   @go(Spec)
	status?: #DistributionStatus @go(Status)
}

// DistributionList contains a list of Distributions
#DistributionList: {
	items: [...#Distribution] @go(Items,[]Distribution)
}
