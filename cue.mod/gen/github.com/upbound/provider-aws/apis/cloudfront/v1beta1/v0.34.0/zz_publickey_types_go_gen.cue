// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudfront/v1beta1

package v1beta1

#PublicKeyObservation: {
	// Internal value used by CloudFront to allow future updates to the public key configuration.
	callerReference?: null | string @go(CallerReference,*string)

	// An optional comment about the public key.
	comment?: null | string @go(Comment,*string)

	// The current version of the public key. For example: E2QWRUHAPOMQZL.
	etag?: null | string @go(Etag,*string)

	// The identifier for the public key. For example: K3D5EWEUDCCXON.
	id?: null | string @go(ID,*string)

	// The name for the public key.
	name?: null | string @go(Name,*string)
}

#PublicKeyParameters: {
	// An optional comment about the public key.
	// +kubebuilder:validation:Optional
	comment?: null | string @go(Comment,*string)

	// The name for the public key.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// PublicKeySpec defines the desired state of PublicKey
#PublicKeySpec: {
	forProvider: #PublicKeyParameters @go(ForProvider)
}

// PublicKeyStatus defines the observed state of PublicKey.
#PublicKeyStatus: {
	atProvider?: #PublicKeyObservation @go(AtProvider)
}

// PublicKey is the Schema for the PublicKeys API. Provides a CloudFront Public Key which you add to CloudFront to use with features like field-level encryption.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#PublicKey: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.encodedKeySecretRef)",message="encodedKeySecretRef is a required parameter"
	spec:    #PublicKeySpec   @go(Spec)
	status?: #PublicKeyStatus @go(Status)
}

// PublicKeyList contains a list of PublicKeys
#PublicKeyList: {
	items: [...#PublicKey] @go(Items,[]PublicKey)
}
