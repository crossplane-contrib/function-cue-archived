// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudfront/v1beta1

package v1beta1

#FunctionObservation: {
	// Amazon Resource Name (ARN) identifying your CloudFront Function.
	arn?: null | string @go(Arn,*string)

	// ETag hash of the function. This is the value for the DEVELOPMENT stage of the function.
	etag?: null | string @go(Etag,*string)
	id?:   null | string @go(ID,*string)

	// ETag hash of any LIVE stage of the function.
	liveStageEtag?: null | string @go(LiveStageEtag,*string)

	// Status of the function. Can be UNPUBLISHED, UNASSOCIATED or ASSOCIATED.
	status?: null | string @go(Status,*string)
}

#FunctionParameters: {
	// Comment.
	// +kubebuilder:validation:Optional
	comment?: null | string @go(Comment,*string)

	// Whether to publish creation/change as Live CloudFront Function Version. Defaults to true.
	// +kubebuilder:validation:Optional
	publish?: null | bool @go(Publish,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Identifier of the function's runtime. Currently only cloudfront-js-1.0 is valid.
	// +kubebuilder:validation:Required
	runtime?: null | string @go(Runtime,*string)
}

// FunctionSpec defines the desired state of Function
#FunctionSpec: {
	forProvider: #FunctionParameters @go(ForProvider)
}

// FunctionStatus defines the observed state of Function.
#FunctionStatus: {
	atProvider?: #FunctionObservation @go(AtProvider)
}

// Function is the Schema for the Functions API. Provides a CloudFront Function resource. With CloudFront Functions in Amazon CloudFront, you can write lightweight functions in JavaScript for high-scale, latency-sensitive CDN customizations.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Function: {
	spec:    #FunctionSpec   @go(Spec)
	status?: #FunctionStatus @go(Status)
}

// FunctionList contains a list of Functions
#FunctionList: {
	items: [...#Function] @go(Items,[]Function)
}
