// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudfront/v1beta1

package v1beta1

#EndpointObservation: {
	// The Amazon Kinesis data stream configuration.
	kinesisStreamConfig?: [...#KinesisStreamConfigObservation] @go(KinesisStreamConfig,[]KinesisStreamConfigObservation)

	// The type of data stream where real-time log data is sent. The only valid value is Kinesis.
	streamType?: null | string @go(StreamType,*string)
}

#EndpointParameters: {
	// The Amazon Kinesis data stream configuration.
	// +kubebuilder:validation:Required
	kinesisStreamConfig: [...#KinesisStreamConfigParameters] @go(KinesisStreamConfig,[]KinesisStreamConfigParameters)

	// The type of data stream where real-time log data is sent. The only valid value is Kinesis.
	// +kubebuilder:validation:Required
	streamType?: null | string @go(StreamType,*string)
}

#KinesisStreamConfigObservation: {
	// The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
	// See the AWS documentation for more information.
	roleArn?: null | string @go(RoleArn,*string)

	// The ARN of the Kinesis data stream.
	streamArn?: null | string @go(StreamArn,*string)
}

#KinesisStreamConfigParameters: {
	// The ARN of an IAM role that CloudFront can use to send real-time log data to the Kinesis data stream.
	// See the AWS documentation for more information.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The ARN of the Kinesis data stream.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kinesis/v1beta1.Stream
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.TerraformID()
	// +kubebuilder:validation:Optional
	streamArn?: null | string @go(StreamArn,*string)
}

#RealtimeLogConfigObservation: {
	// The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.
	arn?: null | string @go(Arn,*string)

	// The Amazon Kinesis data streams where real-time log data is sent.
	endpoint?: [...#EndpointObservation] @go(Endpoint,[]EndpointObservation)

	// The fields that are included in each real-time log record. See the AWS documentation for supported values.
	fields?: [...null | string] @go(Fields,[]*string)

	// The ID of the CloudFront real-time log configuration.
	id?: null | string @go(ID,*string)

	// The unique name to identify this real-time log configuration.
	name?: null | string @go(Name,*string)

	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between 1 and 100, inclusive.
	samplingRate?: null | float64 @go(SamplingRate,*float64)
}

#RealtimeLogConfigParameters: {
	// The Amazon Kinesis data streams where real-time log data is sent.
	// +kubebuilder:validation:Optional
	endpoint?: [...#EndpointParameters] @go(Endpoint,[]EndpointParameters)

	// The fields that are included in each real-time log record. See the AWS documentation for supported values.
	// +kubebuilder:validation:Optional
	fields?: [...null | string] @go(Fields,[]*string)

	// The unique name to identify this real-time log configuration.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between 1 and 100, inclusive.
	// +kubebuilder:validation:Optional
	samplingRate?: null | float64 @go(SamplingRate,*float64)
}

// RealtimeLogConfigSpec defines the desired state of RealtimeLogConfig
#RealtimeLogConfigSpec: {
	forProvider: #RealtimeLogConfigParameters @go(ForProvider)
}

// RealtimeLogConfigStatus defines the observed state of RealtimeLogConfig.
#RealtimeLogConfigStatus: {
	atProvider?: #RealtimeLogConfigObservation @go(AtProvider)
}

// RealtimeLogConfig is the Schema for the RealtimeLogConfigs API. Provides a CloudFront real-time log configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RealtimeLogConfig: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.endpoint)",message="endpoint is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.fields)",message="fields is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.samplingRate)",message="samplingRate is a required parameter"
	spec:    #RealtimeLogConfigSpec   @go(Spec)
	status?: #RealtimeLogConfigStatus @go(Status)
}

// RealtimeLogConfigList contains a list of RealtimeLogConfigs
#RealtimeLogConfigList: {
	items: [...#RealtimeLogConfig] @go(Items,[]RealtimeLogConfig)
}
