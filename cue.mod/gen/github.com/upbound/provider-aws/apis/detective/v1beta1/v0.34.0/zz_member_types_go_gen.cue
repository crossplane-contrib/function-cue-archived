// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/detective/v1beta1

package v1beta1

#MemberObservation: {
	// AWS account ID for the account.
	accountId?: null | string @go(AccountID,*string)

	// AWS account ID for the administrator account.
	administratorId?: null | string @go(AdministratorID,*string)

	// If set to true, then the root user of the invited account will not receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to false.
	disableEmailNotification?: null | bool   @go(DisableEmailNotification,*bool)
	disabledReason?:           null | string @go(DisabledReason,*string)

	// Email address for the account.
	emailAddress?: null | string @go(EmailAddress,*string)

	// ARN of the behavior graph to invite the member accounts to contribute their data to.
	graphArn?: null | string @go(GraphArn,*string)

	// Unique identifier (ID) of the Detective.
	id?: null | string @go(ID,*string)

	// Date and time, in UTC and extended RFC 3339 format, when an Amazon Detective membership invitation was last sent to the account.
	invitedTime?: null | string @go(InvitedTime,*string)

	// A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
	message?: null | string @go(Message,*string)

	// Current membership status of the member account.
	status?: null | string @go(Status,*string)

	// Date and time, in UTC and extended RFC 3339 format, of the most recent change to the member account's status.
	updatedTime?: null | string @go(UpdatedTime,*string)

	// Data volume in bytes per day for the member account.
	volumeUsageInBytes?: null | string @go(VolumeUsageInBytes,*string)
}

#MemberParameters: {
	// AWS account ID for the account.
	// +kubebuilder:validation:Optional
	accountId?: null | string @go(AccountID,*string)

	// If set to true, then the root user of the invited account will not receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to false.
	// +kubebuilder:validation:Optional
	disableEmailNotification?: null | bool @go(DisableEmailNotification,*bool)

	// Email address for the account.
	// +kubebuilder:validation:Optional
	emailAddress?: null | string @go(EmailAddress,*string)

	// ARN of the behavior graph to invite the member accounts to contribute their data to.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/detective/v1beta1.Graph
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	graphArn?: null | string @go(GraphArn,*string)

	// A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
	// +kubebuilder:validation:Optional
	message?: null | string @go(Message,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// MemberSpec defines the desired state of Member
#MemberSpec: {
	forProvider: #MemberParameters @go(ForProvider)
}

// MemberStatus defines the observed state of Member.
#MemberStatus: {
	atProvider?: #MemberObservation @go(AtProvider)
}

// Member is the Schema for the Members API. Provides a resource to manage an Amazon Detective member.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Member: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.accountId)",message="accountId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.emailAddress)",message="emailAddress is a required parameter"
	spec:    #MemberSpec   @go(Spec)
	status?: #MemberStatus @go(Status)
}

// MemberList contains a list of Members
#MemberList: {
	items: [...#Member] @go(Items,[]Member)
}
