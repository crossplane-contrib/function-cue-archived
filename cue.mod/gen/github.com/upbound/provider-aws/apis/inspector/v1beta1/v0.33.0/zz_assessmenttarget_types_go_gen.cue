// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/inspector/v1beta1

package v1beta1

#AssessmentTargetObservation: {
	// The target assessment ARN.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)
}

#AssessmentTargetParameters: {
	// The name of the assessment target.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Inspector Resource Group Amazon Resource Name (ARN) stating tags for instance matching. If not specified, all EC2 instances in the current AWS account and region are included in the assessment target.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/inspector/v1beta1.ResourceGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	resourceGroupArn?: null | string @go(ResourceGroupArn,*string)
}

// AssessmentTargetSpec defines the desired state of AssessmentTarget
#AssessmentTargetSpec: {
	forProvider: #AssessmentTargetParameters @go(ForProvider)
}

// AssessmentTargetStatus defines the observed state of AssessmentTarget.
#AssessmentTargetStatus: {
	atProvider?: #AssessmentTargetObservation @go(AtProvider)
}

// AssessmentTarget is the Schema for the AssessmentTargets API. Provides a Inspector assessment target.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AssessmentTarget: {
	spec:    #AssessmentTargetSpec   @go(Spec)
	status?: #AssessmentTargetStatus @go(Status)
}

// AssessmentTargetList contains a list of AssessmentTargets
#AssessmentTargetList: {
	items: [...#AssessmentTarget] @go(Items,[]AssessmentTarget)
}
