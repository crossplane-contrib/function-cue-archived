// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudformation/v1beta1

package v1beta1

#AutoDeploymentObservation: {
	// Whether or not auto-deployment is enabled.
	enabled?: null | bool @go(Enabled,*bool)

	// Whether or not to retain stacks when the account is removed.
	retainStacksOnAccountRemoval?: null | bool @go(RetainStacksOnAccountRemoval,*bool)
}

#AutoDeploymentParameters: {
	// Whether or not auto-deployment is enabled.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Whether or not to retain stacks when the account is removed.
	// +kubebuilder:validation:Optional
	retainStacksOnAccountRemoval?: null | bool @go(RetainStacksOnAccountRemoval,*bool)
}

#OperationPreferencesObservation: {
	// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
	failureToleranceCount?: null | float64 @go(FailureToleranceCount,*float64)

	// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
	failureTolerancePercentage?: null | float64 @go(FailureTolerancePercentage,*float64)

	// The maximum number of accounts in which to perform this operation at one time.
	maxConcurrentCount?: null | float64 @go(MaxConcurrentCount,*float64)

	// The maximum percentage of accounts in which to perform this operation at one time.
	maxConcurrentPercentage?: null | float64 @go(MaxConcurrentPercentage,*float64)

	// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
	regionConcurrencyType?: null | string @go(RegionConcurrencyType,*string)

	// The order of the Regions in where you want to perform the stack operation.
	regionOrder?: [...null | string] @go(RegionOrder,[]*string)
}

#OperationPreferencesParameters: {
	// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
	// +kubebuilder:validation:Optional
	failureToleranceCount?: null | float64 @go(FailureToleranceCount,*float64)

	// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
	// +kubebuilder:validation:Optional
	failureTolerancePercentage?: null | float64 @go(FailureTolerancePercentage,*float64)

	// The maximum number of accounts in which to perform this operation at one time.
	// +kubebuilder:validation:Optional
	maxConcurrentCount?: null | float64 @go(MaxConcurrentCount,*float64)

	// The maximum percentage of accounts in which to perform this operation at one time.
	// +kubebuilder:validation:Optional
	maxConcurrentPercentage?: null | float64 @go(MaxConcurrentPercentage,*float64)

	// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
	// +kubebuilder:validation:Optional
	regionConcurrencyType?: null | string @go(RegionConcurrencyType,*string)

	// The order of the Regions in where you want to perform the stack operation.
	// +kubebuilder:validation:Optional
	regionOrder?: [...null | string] @go(RegionOrder,[]*string)
}

#StackSetObservation: {
	// Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the SELF_MANAGED permission model.
	administrationRoleArn?: null | string @go(AdministrationRoleArn,*string)

	// Amazon Resource Name (ARN) of the StackSet.
	arn?: null | string @go(Arn,*string)

	// Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the SERVICE_MANAGED permission model.
	autoDeployment?: [...#AutoDeploymentObservation] @go(AutoDeployment,[]AutoDeploymentObservation)

	// Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account. Valid values: SELF (default), DELEGATED_ADMIN.
	callAs?: null | string @go(CallAs,*string)

	// A list of capabilities. Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND.
	capabilities?: [...null | string] @go(Capabilities,[]*string)

	// Description of the StackSet.
	description?: null | string @go(Description,*string)

	// Name of the IAM Role in all target accounts for StackSet operations. Defaults to AWSCloudFormationStackSetExecutionRole when using the SELF_MANAGED permission model. This should not be defined when using the SERVICE_MANAGED permission model.
	executionRoleName?: null | string @go(ExecutionRoleName,*string)

	// Name of the StackSet.
	id?: null | string @go(ID,*string)

	// Preferences for how AWS CloudFormation performs a stack set update.
	operationPreferences?: [...#OperationPreferencesObservation] @go(OperationPreferences,[]OperationPreferencesObservation)

	// Key-value map of input parameters for the StackSet template. All template parameters, including those with a Default, must be configured or ignored with lifecycle configuration block ignore_changes argument. All NoEcho template parameters must be ignored with the lifecycle configuration block ignore_changes argument.
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// Describes how the IAM roles required for your StackSet are created. Valid values: SELF_MANAGED (default), SERVICE_MANAGED.
	permissionModel?: null | string @go(PermissionModel,*string)

	// Unique identifier of the StackSet.
	stackSetId?: null | string @go(StackSetID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with template_url.
	templateBody?: null | string @go(TemplateBody,*string)

	// String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with template_body.
	templateUrl?: null | string @go(TemplateURL,*string)
}

#StackSetParameters: {
	// Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the SELF_MANAGED permission model.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	administrationRoleArn?: null | string @go(AdministrationRoleArn,*string)

	// Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the SERVICE_MANAGED permission model.
	// +kubebuilder:validation:Optional
	autoDeployment?: [...#AutoDeploymentParameters] @go(AutoDeployment,[]AutoDeploymentParameters)

	// Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account. Valid values: SELF (default), DELEGATED_ADMIN.
	// +kubebuilder:validation:Optional
	callAs?: null | string @go(CallAs,*string)

	// A list of capabilities. Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND.
	// +kubebuilder:validation:Optional
	capabilities?: [...null | string] @go(Capabilities,[]*string)

	// Description of the StackSet.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Name of the IAM Role in all target accounts for StackSet operations. Defaults to AWSCloudFormationStackSetExecutionRole when using the SELF_MANAGED permission model. This should not be defined when using the SERVICE_MANAGED permission model.
	// +kubebuilder:validation:Optional
	executionRoleName?: null | string @go(ExecutionRoleName,*string)

	// Preferences for how AWS CloudFormation performs a stack set update.
	// +kubebuilder:validation:Optional
	operationPreferences?: [...#OperationPreferencesParameters] @go(OperationPreferences,[]OperationPreferencesParameters)

	// Key-value map of input parameters for the StackSet template. All template parameters, including those with a Default, must be configured or ignored with lifecycle configuration block ignore_changes argument. All NoEcho template parameters must be ignored with the lifecycle configuration block ignore_changes argument.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// Describes how the IAM roles required for your StackSet are created. Valid values: SELF_MANAGED (default), SERVICE_MANAGED.
	// +kubebuilder:validation:Optional
	permissionModel?: null | string @go(PermissionModel,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with template_url.
	// +kubebuilder:validation:Optional
	templateBody?: null | string @go(TemplateBody,*string)

	// String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with template_body.
	// +kubebuilder:validation:Optional
	templateUrl?: null | string @go(TemplateURL,*string)
}

// StackSetSpec defines the desired state of StackSet
#StackSetSpec: {
	forProvider: #StackSetParameters @go(ForProvider)
}

// StackSetStatus defines the observed state of StackSet.
#StackSetStatus: {
	atProvider?: #StackSetObservation @go(AtProvider)
}

// StackSet is the Schema for the StackSets API. Manages a CloudFormation StackSet.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#StackSet: {
	spec:    #StackSetSpec   @go(Spec)
	status?: #StackSetStatus @go(Status)
}

// StackSetList contains a list of StackSets
#StackSetList: {
	items: [...#StackSet] @go(Items,[]StackSet)
}
