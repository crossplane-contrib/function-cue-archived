// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudformation/v1beta1

package v1beta1

#StackObservation: {
	// A unique identifier of the stack.
	id?: null | string @go(ID,*string)

	// A map of outputs from the stack.
	outputs?: {[string]: null | string} @go(Outputs,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#StackParameters: {
	// A list of capabilities.
	// Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, or CAPABILITY_AUTO_EXPAND
	// +kubebuilder:validation:Optional
	capabilities?: [...null | string] @go(Capabilities,[]*string)

	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with on_failure.
	// +kubebuilder:validation:Optional
	disableRollback?: null | bool @go(DisableRollback,*bool)

	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	iamRoleArn?: null | string @go(IAMRoleArn,*string)

	// Stack name.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// A list of SNS topic ARNs to publish stack related events.
	// +kubebuilder:validation:Optional
	notificationArns?: [...null | string] @go(NotificationArns,[]*string)

	// Action to be taken if stack creation fails. This must be
	// one of: DO_NOTHING, ROLLBACK, or DELETE. Conflicts with disable_rollback.
	// +kubebuilder:validation:Optional
	onFailure?: null | string @go(OnFailure,*string)

	// A map of Parameter structures that specify input parameters for the stack.
	// +kubebuilder:validation:Optional
	parameters?: {[string]: null | string} @go(Parameters,map[string]*string)

	// Structure containing the stack policy body.
	// Conflicts w/ policy_url.
	// +kubebuilder:validation:Optional
	policyBody?: null | string @go(PolicyBody,*string)

	// Location of a file containing the stack policy.
	// Conflicts w/ policy_body.
	// +kubebuilder:validation:Optional
	policyUrl?: null | string @go(PolicyURL,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Structure containing the template body (max size: 51,200 bytes).
	// +kubebuilder:validation:Optional
	templateBody?: null | string @go(TemplateBody,*string)

	// Location of a file containing the template body (max size: 460,800 bytes).
	// +kubebuilder:validation:Optional
	templateUrl?: null | string @go(TemplateURL,*string)

	// The amount of time that can pass before the stack status becomes CREATE_FAILED.
	// +kubebuilder:validation:Optional
	timeoutInMinutes?: null | float64 @go(TimeoutInMinutes,*float64)
}

// StackSpec defines the desired state of Stack
#StackSpec: {
	forProvider: #StackParameters @go(ForProvider)
}

// StackStatus defines the observed state of Stack.
#StackStatus: {
	atProvider?: #StackObservation @go(AtProvider)
}

// Stack is the Schema for the Stacks API. Provides a CloudFormation Stack resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Stack: {
	spec:    #StackSpec   @go(Spec)
	status?: #StackStatus @go(Status)
}

// StackList contains a list of Stacks
#StackList: {
	items: [...#Stack] @go(Items,[]Stack)
}
