// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

#BucketRequestPaymentConfigurationObservation: {
	// The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.
	id?: null | string @go(ID,*string)
}

#BucketRequestPaymentConfigurationParameters: {
	// Name of the bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Account ID of the expected bucket owner.
	// +kubebuilder:validation:Optional
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// Specifies who pays for the download and request fees. Valid values: BucketOwner, Requester.
	// +kubebuilder:validation:Required
	payer?: null | string @go(Payer,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// BucketRequestPaymentConfigurationSpec defines the desired state of BucketRequestPaymentConfiguration
#BucketRequestPaymentConfigurationSpec: {
	forProvider: #BucketRequestPaymentConfigurationParameters @go(ForProvider)
}

// BucketRequestPaymentConfigurationStatus defines the observed state of BucketRequestPaymentConfiguration.
#BucketRequestPaymentConfigurationStatus: {
	atProvider?: #BucketRequestPaymentConfigurationObservation @go(AtProvider)
}

// BucketRequestPaymentConfiguration is the Schema for the BucketRequestPaymentConfigurations API. Provides an S3 bucket request payment configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketRequestPaymentConfiguration: {
	spec:    #BucketRequestPaymentConfigurationSpec   @go(Spec)
	status?: #BucketRequestPaymentConfigurationStatus @go(Status)
}

// BucketRequestPaymentConfigurationList contains a list of BucketRequestPaymentConfigurations
#BucketRequestPaymentConfigurationList: {
	items: [...#BucketRequestPaymentConfiguration] @go(Items,[]BucketRequestPaymentConfiguration)
}
