// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

#BucketMetricFilterObservation: {
	// Object prefix for filtering (singular).
	prefix?: null | string @go(Prefix,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#BucketMetricFilterParameters: {
	// Object prefix for filtering (singular).
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#BucketMetricObservation: {
	// Name of the bucket to put metric configuration.
	bucket?: null | string @go(Bucket,*string)

	// Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
	filter?: [...#BucketMetricFilterObservation] @go(Filter,[]BucketMetricFilterObservation)
	id?: null | string @go(ID,*string)

	// Unique identifier of the metrics configuration for the bucket. Must be less than or equal to 64 characters in length.
	name?: null | string @go(Name,*string)
}

#BucketMetricParameters: {
	// Name of the bucket to put metric configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
	// +kubebuilder:validation:Optional
	filter?: [...#BucketMetricFilterParameters] @go(Filter,[]BucketMetricFilterParameters)

	// Unique identifier of the metrics configuration for the bucket. Must be less than or equal to 64 characters in length.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// BucketMetricSpec defines the desired state of BucketMetric
#BucketMetricSpec: {
	forProvider: #BucketMetricParameters @go(ForProvider)
}

// BucketMetricStatus defines the observed state of BucketMetric.
#BucketMetricStatus: {
	atProvider?: #BucketMetricObservation @go(AtProvider)
}

// BucketMetric is the Schema for the BucketMetrics API. Provides a S3 bucket metrics configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketMetric: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #BucketMetricSpec   @go(Spec)
	status?: #BucketMetricStatus @go(Status)
}

// BucketMetricList contains a list of BucketMetrics
#BucketMetricList: {
	items: [...#BucketMetric] @go(Items,[]BucketMetric)
}
