// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

#BucketPublicAccessBlockObservation: {
	// Name of the S3 bucket the configuration is attached to
	id?: null | string @go(ID,*string)
}

#BucketPublicAccessBlockParameters: {
	// Whether Amazon S3 should block public ACLs for this bucket. Defaults to false. Enabling this setting does not affect existing policies or ACLs. When set to true causes the following behavior:
	// +kubebuilder:validation:Optional
	blockPublicAcls?: null | bool @go(BlockPublicAcls,*bool)

	// Whether Amazon S3 should block public bucket policies for this bucket. Defaults to false. Enabling this setting does not affect the existing bucket policy. When set to true causes Amazon S3 to:
	// +kubebuilder:validation:Optional
	blockPublicPolicy?: null | bool @go(BlockPublicPolicy,*bool)

	// S3 Bucket to which this Public Access Block configuration should be applied.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Whether Amazon S3 should ignore public ACLs for this bucket. Defaults to false. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to true causes Amazon S3 to:
	// +kubebuilder:validation:Optional
	ignorePublicAcls?: null | bool @go(IgnorePublicAcls,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Whether Amazon S3 should restrict public bucket policies for this bucket. Defaults to false. Enabling this setting does not affect the previously stored bucket policy, except that public and cross-account access within the public bucket policy, including non-public delegation to specific accounts, is blocked. When set to true:
	// +kubebuilder:validation:Optional
	restrictPublicBuckets?: null | bool @go(RestrictPublicBuckets,*bool)
}

// BucketPublicAccessBlockSpec defines the desired state of BucketPublicAccessBlock
#BucketPublicAccessBlockSpec: {
	forProvider: #BucketPublicAccessBlockParameters @go(ForProvider)
}

// BucketPublicAccessBlockStatus defines the observed state of BucketPublicAccessBlock.
#BucketPublicAccessBlockStatus: {
	atProvider?: #BucketPublicAccessBlockObservation @go(AtProvider)
}

// BucketPublicAccessBlock is the Schema for the BucketPublicAccessBlocks API. Manages S3 bucket-level Public Access Block Configuration
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketPublicAccessBlock: {
	spec:    #BucketPublicAccessBlockSpec   @go(Spec)
	status?: #BucketPublicAccessBlockStatus @go(Status)
}

// BucketPublicAccessBlockList contains a list of BucketPublicAccessBlocks
#BucketPublicAccessBlockList: {
	items: [...#BucketPublicAccessBlock] @go(Items,[]BucketPublicAccessBlock)
}
