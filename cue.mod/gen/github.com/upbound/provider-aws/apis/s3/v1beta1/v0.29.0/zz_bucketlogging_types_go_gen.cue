// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

#BucketLoggingObservation: {
	// The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.
	id?: null | string @go(ID,*string)

	// Set of configuration blocks with information for granting permissions documented below.
	// +kubebuilder:validation:Optional
	targetGrant?: [...#TargetGrantObservation] @go(TargetGrant,[]TargetGrantObservation)
}

#BucketLoggingParameters: {
	// The name of the bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// The account ID of the expected bucket owner.
	// +kubebuilder:validation:Optional
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The name of the bucket where you want Amazon S3 to store server access logs.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	targetBucket?: null | string @go(TargetBucket,*string)

	// Set of configuration blocks with information for granting permissions documented below.
	// +kubebuilder:validation:Optional
	targetGrant?: [...#TargetGrantParameters] @go(TargetGrant,[]TargetGrantParameters)

	// A prefix for all log object keys.
	// +kubebuilder:validation:Required
	targetPrefix?: null | string @go(TargetPrefix,*string)
}

#TargetGrantGranteeObservation: {
	displayName?: null | string @go(DisplayName,*string)
}

#TargetGrantGranteeParameters: {
	// Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.
	// +kubebuilder:validation:Optional
	emailAddress?: null | string @go(EmailAddress,*string)

	// The canonical user ID of the grantee.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)

	// URI of the grantee group.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#TargetGrantObservation: {
	// A configuration block for the person being granted permissions documented below.
	// +kubebuilder:validation:Required
	grantee?: [...#TargetGrantGranteeObservation] @go(Grantee,[]TargetGrantGranteeObservation)
}

#TargetGrantParameters: {
	// A configuration block for the person being granted permissions documented below.
	// +kubebuilder:validation:Required
	grantee: [...#TargetGrantGranteeParameters] @go(Grantee,[]TargetGrantGranteeParameters)

	// Logging permissions assigned to the grantee for the bucket. Valid values: FULL_CONTROL, READ, WRITE.
	// +kubebuilder:validation:Required
	permission?: null | string @go(Permission,*string)
}

// BucketLoggingSpec defines the desired state of BucketLogging
#BucketLoggingSpec: {
	forProvider: #BucketLoggingParameters @go(ForProvider)
}

// BucketLoggingStatus defines the observed state of BucketLogging.
#BucketLoggingStatus: {
	atProvider?: #BucketLoggingObservation @go(AtProvider)
}

// BucketLogging is the Schema for the BucketLoggings API. Provides an S3 bucket (server access) logging resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketLogging: {
	spec:    #BucketLoggingSpec   @go(Spec)
	status?: #BucketLoggingStatus @go(Status)
}

// BucketLoggingList contains a list of BucketLoggings
#BucketLoggingList: {
	items: [...#BucketLogging] @go(Items,[]BucketLogging)
}
