// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

#BucketInventoryDestinationObservation: {
}

#BucketInventoryDestinationParameters: {
	// The name of the source bucket that inventory lists the objects for.
	// +kubebuilder:validation:Required
	bucket: [...#DestinationBucketParameters] @go(Bucket,[]DestinationBucketParameters)
}

#BucketInventoryFilterObservation: {
}

#BucketInventoryFilterParameters: {
	// The prefix that an object must have to be included in the inventory results.
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)
}

#BucketInventoryObservation: {
	id?: null | string @go(ID,*string)
}

#BucketInventoryParameters: {
	// The name of the source bucket that inventory lists the objects for.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Contains information about where to publish the inventory results (documented below).
	// +kubebuilder:validation:Required
	destination: [...#BucketInventoryDestinationParameters] @go(Destination,[]BucketInventoryDestinationParameters)

	// Specifies whether the inventory is enabled or disabled.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria (documented below).
	// +kubebuilder:validation:Optional
	filter?: [...#BucketInventoryFilterParameters] @go(Filter,[]BucketInventoryFilterParameters)

	// Object versions to include in the inventory list. Valid values: All, Current.
	// +kubebuilder:validation:Required
	includedObjectVersions?: null | string @go(IncludedObjectVersions,*string)

	// Unique identifier of the inventory configuration for the bucket.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// List of optional fields that are included in the inventory results. Please refer to the S3 documentation for more details.
	// +kubebuilder:validation:Optional
	optionalFields?: [...null | string] @go(OptionalFields,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Specifies the schedule for generating inventory results (documented below).
	// +kubebuilder:validation:Required
	schedule: [...#ScheduleParameters] @go(Schedule,[]ScheduleParameters)
}

#DestinationBucketObservation: {
}

#DestinationBucketParameters: {
	// The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
	// +kubebuilder:validation:Optional
	accountId?: null | string @go(AccountID,*string)

	// The Amazon S3 bucket ARN of the destination.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	bucketArn?: null | string @go(BucketArn,*string)

	// Contains the type of server-side encryption to use to encrypt the inventory (documented below).
	// +kubebuilder:validation:Optional
	encryption?: [...#EncryptionParameters] @go(Encryption,[]EncryptionParameters)

	// Specifies the output format of the inventory results. Can be CSV, ORC or Parquet.
	// +kubebuilder:validation:Required
	format?: null | string @go(Format,*string)

	// The prefix that an object must have to be included in the inventory results.
	// +kubebuilder:validation:Optional
	prefix?: null | string @go(Prefix,*string)
}

#EncryptionObservation: {
}

#EncryptionParameters: {
	// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
	// +kubebuilder:validation:Optional
	sseKms?: [...#SseKMSParameters] @go(SseKMS,[]SseKMSParameters)

	// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
	// +kubebuilder:validation:Optional
	sseS3?: [...#SseS3Parameters] @go(SseS3,[]SseS3Parameters)
}

#ScheduleObservation: {
}

#ScheduleParameters: {
	// Specifies how frequently inventory results are produced. Valid values: Daily, Weekly.
	// +kubebuilder:validation:Required
	frequency?: null | string @go(Frequency,*string)
}

#SseKMSObservation: {
}

#SseKMSParameters: {
	// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
	// +kubebuilder:validation:Required
	keyId?: null | string @go(KeyID,*string)
}

#SseS3Observation: {
}

#SseS3Parameters: {
}

// BucketInventorySpec defines the desired state of BucketInventory
#BucketInventorySpec: {
	forProvider: #BucketInventoryParameters @go(ForProvider)
}

// BucketInventoryStatus defines the observed state of BucketInventory.
#BucketInventoryStatus: {
	atProvider?: #BucketInventoryObservation @go(AtProvider)
}

// BucketInventory is the Schema for the BucketInventorys API. Provides a S3 bucket inventory configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketInventory: {
	spec:    #BucketInventorySpec   @go(Spec)
	status?: #BucketInventoryStatus @go(Status)
}

// BucketInventoryList contains a list of BucketInventorys
#BucketInventoryList: {
	items: [...#BucketInventory] @go(Items,[]BucketInventory)
}
