// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/gamelift/v1beta1

package v1beta1

#BuildObservation: {
	// GameLift Build ARN.
	arn?: null | string @go(Arn,*string)

	// GameLift Build ID.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#BuildParameters: {
	// Name of the build
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Operating system that the game server binaries are built to run onE.g., WINDOWS_2012, AMAZON_LINUX or AMAZON_LINUX_2.
	// +kubebuilder:validation:Required
	operatingSystem?: null | string @go(OperatingSystem,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Information indicating where your game build files are stored. See below.
	// +kubebuilder:validation:Required
	storageLocation: [...#StorageLocationParameters] @go(StorageLocation,[]StorageLocationParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Version that is associated with this build.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#StorageLocationObservation: {
}

#StorageLocationParameters: {
	// Name of your S3 bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Name of the zip file containing your build files.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Object
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("key",false)
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// A specific version of the file. If not set, the latest version of the file is retrieved.
	// +kubebuilder:validation:Optional
	objectVersion?: null | string @go(ObjectVersion,*string)

	// ARN of the access role that allows Amazon GameLift to access your S3 bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

// BuildSpec defines the desired state of Build
#BuildSpec: {
	forProvider: #BuildParameters @go(ForProvider)
}

// BuildStatus defines the observed state of Build.
#BuildStatus: {
	atProvider?: #BuildObservation @go(AtProvider)
}

// Build is the Schema for the Builds API. Provides a GameLift Build resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Build: {
	spec:    #BuildSpec   @go(Spec)
	status?: #BuildStatus @go(Status)
}

// BuildList contains a list of Builds
#BuildList: {
	items: [...#Build] @go(Items,[]Build)
}
