// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/gamelift/v1beta1

package v1beta1

#ScriptObservation: {
	// GameLift Script ARN.
	arn?: null | string @go(Arn,*string)

	// GameLift Script ID.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ScriptParameters: {
	// Name of the script
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Information indicating where your game script files are stored. See below.
	// +kubebuilder:validation:Optional
	storageLocation?: [...#ScriptStorageLocationParameters] @go(StorageLocation,[]ScriptStorageLocationParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Version that is associated with this script.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)

	// A data object containing your Realtime scripts and dependencies as a zip  file. The zip file can have one or multiple files. Maximum size of a zip file is 5 MB.
	// +kubebuilder:validation:Optional
	zipFile?: null | string @go(ZipFile,*string)
}

#ScriptStorageLocationObservation: {
}

#ScriptStorageLocationParameters: {
	// Name of your S3 bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Name of the zip file containing your script files.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Object
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("key",false)
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// A specific version of the file. If not set, the latest version of the file is retrieved.
	// +kubebuilder:validation:Optional
	objectVersion?: null | string @go(ObjectVersion,*string)

	// ARN of the access role that allows Amazon GameLift to access your S3 bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

// ScriptSpec defines the desired state of Script
#ScriptSpec: {
	forProvider: #ScriptParameters @go(ForProvider)
}

// ScriptStatus defines the observed state of Script.
#ScriptStatus: {
	atProvider?: #ScriptObservation @go(AtProvider)
}

// Script is the Schema for the Scripts API. Provides a GameLift Script resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Script: {
	spec:    #ScriptSpec   @go(Spec)
	status?: #ScriptStatus @go(Status)
}

// ScriptList contains a list of Scripts
#ScriptList: {
	items: [...#Script] @go(Items,[]Script)
}
