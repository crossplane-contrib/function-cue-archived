// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/inspector2/v1beta1

package v1beta1

#EnablerObservation: {
	id?: null | string @go(ID,*string)
}

#EnablerParameters: {
	// Set of account IDs.
	// +kubebuilder:validation:Required
	accountIds: [...null | string] @go(AccountIds,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Type of resources to scan. Valid values are EC2, ECR, and LAMBDA.
	// +kubebuilder:validation:Required
	resourceTypes: [...null | string] @go(ResourceTypes,[]*string)
}

// EnablerSpec defines the desired state of Enabler
#EnablerSpec: {
	forProvider: #EnablerParameters @go(ForProvider)
}

// EnablerStatus defines the observed state of Enabler.
#EnablerStatus: {
	atProvider?: #EnablerObservation @go(AtProvider)
}

// Enabler is the Schema for the Enablers API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Enabler: {
	spec:    #EnablerSpec   @go(Spec)
	status?: #EnablerStatus @go(Status)
}

// EnablerList contains a list of Enablers
#EnablerList: {
	items: [...#Enabler] @go(Items,[]Enabler)
}
