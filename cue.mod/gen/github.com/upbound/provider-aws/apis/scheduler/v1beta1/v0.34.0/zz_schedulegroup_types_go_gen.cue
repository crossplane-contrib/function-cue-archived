// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/scheduler/v1beta1

package v1beta1

#ScheduleGroupObservation: {
	// ARN of the schedule group.
	arn?: null | string @go(Arn,*string)

	// Time at which the schedule group was created.
	creationDate?: null | string @go(CreationDate,*string)

	// Name of the schedule group.
	id?: null | string @go(ID,*string)

	// Time at which the schedule group was last modified.
	lastModificationDate?: null | string @go(LastModificationDate,*string)

	// Name of the schedule group. Conflicts with name_prefix.
	name?: null | string @go(Name,*string)

	// State of the schedule group. Can be ACTIVE or DELETING.
	state?: null | string @go(State,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ScheduleGroupParameters: {
	// Name of the schedule group. Conflicts with name_prefix.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ScheduleGroupSpec defines the desired state of ScheduleGroup
#ScheduleGroupSpec: {
	forProvider: #ScheduleGroupParameters @go(ForProvider)
}

// ScheduleGroupStatus defines the observed state of ScheduleGroup.
#ScheduleGroupStatus: {
	atProvider?: #ScheduleGroupObservation @go(AtProvider)
}

// ScheduleGroup is the Schema for the ScheduleGroups API. Provides an EventBridge Scheduler Schedule Group resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ScheduleGroup: {
	spec:    #ScheduleGroupSpec   @go(Spec)
	status?: #ScheduleGroupStatus @go(Status)
}

// ScheduleGroupList contains a list of ScheduleGroups
#ScheduleGroupList: {
	items: [...#ScheduleGroup] @go(Items,[]ScheduleGroup)
}
