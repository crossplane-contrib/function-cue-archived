// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/kinesisvideo/v1beta1

package v1beta1

#StreamObservation: {
	// The Amazon Resource Name (ARN) specifying the Stream (same as id)
	arn?: null | string @go(Arn,*string)

	// A time stamp that indicates when the stream was created.
	creationTime?: null | string @go(CreationTime,*string)

	// The unique Stream id
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The version of the stream.
	version?: null | string @go(Version,*string)
}

#StreamParameters: {
	// â€“  The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. The default value is 0, indicating that the stream does not persist data.
	// +kubebuilder:validation:Optional
	dataRetentionInHours?: null | float64 @go(DataRetentionInHours,*float64)

	// The name of the device that is writing to the stream. In the current implementation, Kinesis Video Streams does not use this name.
	// +kubebuilder:validation:Optional
	deviceName?: null | string @go(DeviceName,*string)

	// The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data. If no key ID is specified, the default, Kinesis Video-managed key (aws/kinesisvideo) is used.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see Media Types. If you choose to specify the MediaType, see Naming Requirements for guidelines.
	// +kubebuilder:validation:Optional
	mediaType?: null | string @go(MediaType,*string)

	// A name to identify the stream. This is unique to the
	// AWS account and region the Stream is created in.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// StreamSpec defines the desired state of Stream
#StreamSpec: {
	forProvider: #StreamParameters @go(ForProvider)
}

// StreamStatus defines the observed state of Stream.
#StreamStatus: {
	atProvider?: #StreamObservation @go(AtProvider)
}

// Stream is the Schema for the Streams API. Provides a AWS Kinesis Video Stream
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Stream: {
	spec:    #StreamSpec   @go(Spec)
	status?: #StreamStatus @go(Status)
}

// StreamList contains a list of Streams
#StreamList: {
	items: [...#Stream] @go(Items,[]Stream)
}
