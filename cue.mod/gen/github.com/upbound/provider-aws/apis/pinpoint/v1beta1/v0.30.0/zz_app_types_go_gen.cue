// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/pinpoint/v1beta1

package v1beta1

#AppObservation: {
	// The Application ID of the Pinpoint App.
	applicationId?: null | string @go(ApplicationID,*string)

	// Amazon Resource Name (ARN) of the PinPoint Application
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#AppParameters: {
	// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
	// +kubebuilder:validation:Optional
	campaignHook?: [...#CampaignHookParameters] @go(CampaignHook,[]CampaignHookParameters)

	// The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
	// +kubebuilder:validation:Optional
	limits?: [...#LimitsParameters] @go(Limits,[]LimitsParameters)

	// The application name
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
	// +kubebuilder:validation:Optional
	quietTime?: [...#QuietTimeParameters] @go(QuietTime,[]QuietTimeParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#CampaignHookObservation: {
}

#CampaignHookParameters: {
	// Lambda function name or ARN to be called for delivery. Conflicts with web_url
	// +kubebuilder:validation:Optional
	lambdaFunctionName?: null | string @go(LambdaFunctionName,*string)

	// What mode Lambda should be invoked in. Valid values for this parameter are DELIVERY, FILTER.
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with lambda_function_name
	// +kubebuilder:validation:Optional
	webUrl?: null | string @go(WebURL,*string)
}

#LimitsObservation: {
}

#LimitsParameters: {
	// The maximum number of messages that the campaign can send daily.
	// +kubebuilder:validation:Optional
	daily?: null | float64 @go(Daily,*float64)

	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	// +kubebuilder:validation:Optional
	maximumDuration?: null | float64 @go(MaximumDuration,*float64)

	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	// +kubebuilder:validation:Optional
	messagesPerSecond?: null | float64 @go(MessagesPerSecond,*float64)

	// The maximum total number of messages that the campaign can send.
	// +kubebuilder:validation:Optional
	total?: null | float64 @go(Total,*float64)
}

#QuietTimeObservation: {
}

#QuietTimeParameters: {
	// The default end time for quiet time in ISO 8601 format. Required if start is set
	// +kubebuilder:validation:Optional
	end?: null | string @go(End,*string)

	// The default start time for quiet time in ISO 8601 format. Required if end is set
	// +kubebuilder:validation:Optional
	start?: null | string @go(Start,*string)
}

// AppSpec defines the desired state of App
#AppSpec: {
	forProvider: #AppParameters @go(ForProvider)
}

// AppStatus defines the observed state of App.
#AppStatus: {
	atProvider?: #AppObservation @go(AtProvider)
}

// App is the Schema for the Apps API. Provides a Pinpoint App resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#App: {
	spec:    #AppSpec   @go(Spec)
	status?: #AppStatus @go(Status)
}

// AppList contains a list of Apps
#AppList: {
	items: [...#App] @go(Items,[]App)
}
