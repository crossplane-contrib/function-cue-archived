// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/organizations/v1beta1

package v1beta1

#OrganizationalUnitAccountsObservation: {
	// ARN of the account
	arn?: null | string @go(Arn,*string)

	// Email of the account
	email?: null | string @go(Email,*string)

	// Identifier of the account
	id?: null | string @go(ID,*string)

	// The name for the organizational unit
	name?: null | string @go(Name,*string)
}

#OrganizationalUnitAccountsParameters: {
}

#OrganizationalUnitObservation: {
	// List of child accounts for this Organizational Unit. Does not return account information for child Organizational Units. All elements have these attributes:
	accounts?: [...#OrganizationalUnitAccountsObservation] @go(Accounts,[]OrganizationalUnitAccountsObservation)

	// ARN of the account
	arn?: null | string @go(Arn,*string)

	// Identifier of the account
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#OrganizationalUnitParameters: {
	// The name for the organizational unit
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// ID of the parent organizational unit, which may be the root
	// +kubebuilder:validation:Required
	parentId?: null | string @go(ParentID,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// OrganizationalUnitSpec defines the desired state of OrganizationalUnit
#OrganizationalUnitSpec: {
	forProvider: #OrganizationalUnitParameters @go(ForProvider)
}

// OrganizationalUnitStatus defines the observed state of OrganizationalUnit.
#OrganizationalUnitStatus: {
	atProvider?: #OrganizationalUnitObservation @go(AtProvider)
}

// OrganizationalUnit is the Schema for the OrganizationalUnits API. Provides a resource to create an organizational unit.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#OrganizationalUnit: {
	spec:    #OrganizationalUnitSpec   @go(Spec)
	status?: #OrganizationalUnitStatus @go(Status)
}

// OrganizationalUnitList contains a list of OrganizationalUnits
#OrganizationalUnitList: {
	items: [...#OrganizationalUnit] @go(Items,[]OrganizationalUnit)
}
