// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigatewayv2/v1beta1

package v1beta1

#AccessLogSettingsObservation: {
}

#AccessLogSettingsParameters: {
	// ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.
	// +kubebuilder:validation:Required
	destinationArn?: null | string @go(DestinationArn,*string)

	// Single line format of the access logs of data. Refer to log settings for HTTP or Websocket.
	// +kubebuilder:validation:Required
	format?: null | string @go(Format,*string)
}

#DefaultRouteSettingsObservation: {
}

#DefaultRouteSettingsParameters: {
	// Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Defaults to false. Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	dataTraceEnabled?: null | bool @go(DataTraceEnabled,*bool)

	// Whether detailed metrics are enabled for the default route. Defaults to false.
	// +kubebuilder:validation:Optional
	detailedMetricsEnabled?: null | bool @go(DetailedMetricsEnabled,*bool)

	// Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	loggingLevel?: null | string @go(LoggingLevel,*string)

	// Throttling burst limit for the default route.
	// +kubebuilder:validation:Optional
	throttlingBurstLimit?: null | float64 @go(ThrottlingBurstLimit,*float64)

	// Throttling rate limit for the default route.
	// +kubebuilder:validation:Optional
	throttlingRateLimit?: null | float64 @go(ThrottlingRateLimit,*float64)
}

#RouteSettingsObservation: {
}

#RouteSettingsParameters: {
	// Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Defaults to false. Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	dataTraceEnabled?: null | bool @go(DataTraceEnabled,*bool)

	// Whether detailed metrics are enabled for the route. Defaults to false.
	// +kubebuilder:validation:Optional
	detailedMetricsEnabled?: null | bool @go(DetailedMetricsEnabled,*bool)

	// Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	loggingLevel?: null | string @go(LoggingLevel,*string)

	// Route key.
	// +kubebuilder:validation:Required
	routeKey?: null | string @go(RouteKey,*string)

	// Throttling burst limit for the route.
	// +kubebuilder:validation:Optional
	throttlingBurstLimit?: null | float64 @go(ThrottlingBurstLimit,*float64)

	// Throttling rate limit for the route.
	// +kubebuilder:validation:Optional
	throttlingRateLimit?: null | float64 @go(ThrottlingRateLimit,*float64)
}

#StageObservation: {
	// ARN of the stage.
	arn?: null | string @go(Arn,*string)

	// ARN prefix to be used in an aws_lambda_permission's source_arn attribute.
	// For WebSocket APIs this attribute can additionally be used in an aws_iam_policy to authorize access to the @connections API.
	// See the Amazon API Gateway Developer Guide for details.
	executionArn?: null | string @go(ExecutionArn,*string)

	// Stage identifier.
	id?: null | string @go(ID,*string)

	// URL to invoke the API pointing to the stage,
	// e.g., wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage, or https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/
	invokeUrl?: null | string @go(InvokeURL,*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#StageParameters: {
	// API identifier.
	// +crossplane:generate:reference:type=API
	// +kubebuilder:validation:Optional
	apiId?: null | string @go(APIID,*string)

	// Settings for logging access in this stage.
	// Use the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.
	// +kubebuilder:validation:Optional
	accessLogSettings?: [...#AccessLogSettingsParameters] @go(AccessLogSettings,[]AccessLogSettingsParameters)

	// Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.
	// +kubebuilder:validation:Optional
	autoDeploy?: null | bool @go(AutoDeploy,*bool)

	// Identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.
	// Supported only for WebSocket APIs.
	// +kubebuilder:validation:Optional
	clientCertificateId?: null | string @go(ClientCertificateID,*string)

	// Default route settings for the stage.
	// +kubebuilder:validation:Optional
	defaultRouteSettings?: [...#DefaultRouteSettingsParameters] @go(DefaultRouteSettings,[]DefaultRouteSettingsParameters)

	// Deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.
	// +crossplane:generate:reference:type=Deployment
	// +kubebuilder:validation:Optional
	deploymentId?: null | string @go(DeploymentID,*string)

	// Description for the stage. Must be less than or equal to 1024 characters in length.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Route settings for the stage.
	// +kubebuilder:validation:Optional
	routeSettings?: [...#RouteSettingsParameters] @go(RouteSettings,[]RouteSettingsParameters)

	// Map that defines the stage variables for the stage.
	// +kubebuilder:validation:Optional
	stageVariables?: {[string]: null | string} @go(StageVariables,map[string]*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// StageSpec defines the desired state of Stage
#StageSpec: {
	forProvider: #StageParameters @go(ForProvider)
}

// StageStatus defines the observed state of Stage.
#StageStatus: {
	atProvider?: #StageObservation @go(AtProvider)
}

// Stage is the Schema for the Stages API. Manages an Amazon API Gateway Version 2 stage.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Stage: {
	spec:    #StageSpec   @go(Spec)
	status?: #StageStatus @go(Status)
}

// StageList contains a list of Stages
#StageList: {
	items: [...#Stage] @go(Items,[]Stage)
}
