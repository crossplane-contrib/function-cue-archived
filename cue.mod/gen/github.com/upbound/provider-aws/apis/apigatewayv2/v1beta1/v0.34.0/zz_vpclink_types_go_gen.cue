// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigatewayv2/v1beta1

package v1beta1

#VPCLinkObservation: {
	// VPC Link ARN.
	arn?: null | string @go(Arn,*string)

	// VPC Link identifier.
	id?: null | string @go(ID,*string)

	// Name of the VPC Link. Must be between 1 and 128 characters in length.
	name?: null | string @go(Name,*string)

	// Security group IDs for the VPC Link.
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// Subnet IDs for the VPC Link.
	subnetIds?: [...null | string] @go(SubnetIds,[]*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#VPCLinkParameters: {
	// Name of the VPC Link. Must be between 1 and 128 characters in length.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Security group IDs for the VPC Link.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// Subnet IDs for the VPC Link.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +crossplane:generate:reference:refFieldName=SubnetIDRefs
	// +crossplane:generate:reference:selectorFieldName=SubnetIDSelector
	// +kubebuilder:validation:Optional
	subnetIds?: [...null | string] @go(SubnetIds,[]*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// VPCLinkSpec defines the desired state of VPCLink
#VPCLinkSpec: {
	forProvider: #VPCLinkParameters @go(ForProvider)
}

// VPCLinkStatus defines the observed state of VPCLink.
#VPCLinkStatus: {
	atProvider?: #VPCLinkObservation @go(AtProvider)
}

// VPCLink is the Schema for the VPCLinks API. Manages an Amazon API Gateway Version 2 VPC Link.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#VPCLink: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #VPCLinkSpec   @go(Spec)
	status?: #VPCLinkStatus @go(Status)
}

// VPCLinkList contains a list of VPCLinks
#VPCLinkList: {
	items: [...#VPCLink] @go(Items,[]VPCLink)
}
