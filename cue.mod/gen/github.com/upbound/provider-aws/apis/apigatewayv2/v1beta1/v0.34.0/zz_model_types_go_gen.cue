// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigatewayv2/v1beta1

package v1beta1

#ModelObservation: {
	// API identifier.
	apiId?: null | string @go(APIID,*string)

	// The content-type for the model, for example, application/json. Must be between 1 and 256 characters in length.
	contentType?: null | string @go(ContentType,*string)

	// Description of the model. Must be between 1 and 128 characters in length.
	description?: null | string @go(Description,*string)

	// Model identifier.
	id?: null | string @go(ID,*string)

	// Name of the model. Must be alphanumeric. Must be between 1 and 128 characters in length.
	name?: null | string @go(Name,*string)

	// Schema for the model. This should be a JSON schema draft 4 model. Must be less than or equal to 32768 characters in length.
	schema?: null | string @go(Schema,*string)
}

#ModelParameters: {
	// API identifier.
	// +crossplane:generate:reference:type=API
	// +kubebuilder:validation:Optional
	apiId?: null | string @go(APIID,*string)

	// The content-type for the model, for example, application/json. Must be between 1 and 256 characters in length.
	// +kubebuilder:validation:Optional
	contentType?: null | string @go(ContentType,*string)

	// Description of the model. Must be between 1 and 128 characters in length.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Name of the model. Must be alphanumeric. Must be between 1 and 128 characters in length.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Schema for the model. This should be a JSON schema draft 4 model. Must be less than or equal to 32768 characters in length.
	// +kubebuilder:validation:Optional
	schema?: null | string @go(Schema,*string)
}

// ModelSpec defines the desired state of Model
#ModelSpec: {
	forProvider: #ModelParameters @go(ForProvider)
}

// ModelStatus defines the observed state of Model.
#ModelStatus: {
	atProvider?: #ModelObservation @go(AtProvider)
}

// Model is the Schema for the Models API. Manages an Amazon API Gateway Version 2 model.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Model: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.contentType)",message="contentType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.schema)",message="schema is a required parameter"
	spec:    #ModelSpec   @go(Spec)
	status?: #ModelStatus @go(Status)
}

// ModelList contains a list of Models
#ModelList: {
	items: [...#Model] @go(Items,[]Model)
}
