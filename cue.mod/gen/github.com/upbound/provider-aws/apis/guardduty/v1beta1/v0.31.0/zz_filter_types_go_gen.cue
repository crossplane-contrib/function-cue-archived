// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/guardduty/v1beta1

package v1beta1

#CriterionObservation: {
}

#CriterionParameters: {
	// List of string values to be evaluated.
	// +kubebuilder:validation:Optional
	equals?: [...null | string] @go(Equals,[]*string)

	// The name of the field to be evaluated. The full list of field names can be found in AWS documentation.
	// +kubebuilder:validation:Required
	field?: null | string @go(Field,*string)

	// A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.
	// +kubebuilder:validation:Optional
	greaterThan?: null | string @go(GreaterThan,*string)

	// A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.
	// +kubebuilder:validation:Optional
	greaterThanOrEqual?: null | string @go(GreaterThanOrEqual,*string)

	// A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.
	// +kubebuilder:validation:Optional
	lessThan?: null | string @go(LessThan,*string)

	// A value to be evaluated. Accepts either an integer or a date in RFC 3339 format.
	// +kubebuilder:validation:Optional
	lessThanOrEqual?: null | string @go(LessThanOrEqual,*string)

	// List of string values to be evaluated.
	// +kubebuilder:validation:Optional
	notEquals?: [...null | string] @go(NotEquals,[]*string)
}

#FilterObservation: {
	// The ARN of the GuardDuty filter.
	arn?: null | string @go(Arn,*string)

	// A compound field, consisting of the ID of the GuardDuty detector and the name of the filter.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#FilterParameters: {
	// Specifies the action that is to be applied to the findings that match the filter. Can be one of ARCHIVE or NOOP.
	// +kubebuilder:validation:Required
	action?: null | string @go(Action,*string)

	// Description of the filter.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// ID of a GuardDuty detector, attached to your account.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/guardduty/v1beta1.Detector
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	detectorId?: null | string @go(DetectorID,*string)

	// Represents the criteria to be used in the filter for querying findings. Contains one or more criterion blocks, documented below.
	// +kubebuilder:validation:Required
	findingCriteria: [...#FindingCriteriaParameters] @go(FindingCriteria,[]FindingCriteriaParameters)

	// Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
	// +kubebuilder:validation:Required
	rank?: null | float64 @go(Rank,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#FindingCriteriaObservation: {
}

#FindingCriteriaParameters: {
	// +kubebuilder:validation:Required
	criterion: [...#CriterionParameters] @go(Criterion,[]CriterionParameters)
}

// FilterSpec defines the desired state of Filter
#FilterSpec: {
	forProvider: #FilterParameters @go(ForProvider)
}

// FilterStatus defines the observed state of Filter.
#FilterStatus: {
	atProvider?: #FilterObservation @go(AtProvider)
}

// Filter is the Schema for the Filters API. Provides a resource to manage a GuardDuty filter
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Filter: {
	spec:    #FilterSpec   @go(Spec)
	status?: #FilterStatus @go(Status)
}

// FilterList contains a list of Filters
#FilterList: {
	items: [...#Filter] @go(Items,[]Filter)
}
