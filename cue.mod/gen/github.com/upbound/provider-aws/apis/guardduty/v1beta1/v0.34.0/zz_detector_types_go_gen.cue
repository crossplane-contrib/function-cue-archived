// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/guardduty/v1beta1

package v1beta1

#AuditLogsObservation: {
	// If true, enables Malware Protection as data source for the detector.
	// Defaults to true.
	enable?: null | bool @go(Enable,*bool)
}

#AuditLogsParameters: {
	// If true, enables Malware Protection as data source for the detector.
	// Defaults to true.
	// +kubebuilder:validation:Required
	enable?: null | bool @go(Enable,*bool)
}

#DatasourcesObservation: {
	// Configures Kubernetes protection.
	// See Kubernetes and Kubernetes Audit Logs below for more details.
	kubernetes?: [...#KubernetesObservation] @go(Kubernetes,[]KubernetesObservation)

	// Configures Malware Protection.
	// See Malware Protection, Scan EC2 instance with findings and EBS volumes below for more details.
	malwareProtection?: [...#MalwareProtectionObservation] @go(MalwareProtection,[]MalwareProtectionObservation)

	// Configures S3 protection.
	// See S3 Logs below for more details.
	s3Logs?: [...#S3LogsObservation] @go(S3Logs,[]S3LogsObservation)
}

#DatasourcesParameters: {
	// Configures Kubernetes protection.
	// See Kubernetes and Kubernetes Audit Logs below for more details.
	// +kubebuilder:validation:Optional
	kubernetes?: [...#KubernetesParameters] @go(Kubernetes,[]KubernetesParameters)

	// Configures Malware Protection.
	// See Malware Protection, Scan EC2 instance with findings and EBS volumes below for more details.
	// +kubebuilder:validation:Optional
	malwareProtection?: [...#MalwareProtectionParameters] @go(MalwareProtection,[]MalwareProtectionParameters)

	// Configures S3 protection.
	// See S3 Logs below for more details.
	// +kubebuilder:validation:Optional
	s3Logs?: [...#S3LogsParameters] @go(S3Logs,[]S3LogsParameters)
}

#DetectorObservation: {
	// The AWS account ID of the GuardDuty detector
	accountId?: null | string @go(AccountID,*string)

	// Amazon Resource Name (ARN) of the GuardDuty detector
	arn?: null | string @go(Arn,*string)

	// Describes which data sources will be enabled for the detector. See Data Sources below for more details.
	datasources?: [...#DatasourcesObservation] @go(Datasources,[]DatasourcesObservation)

	// Enable monitoring and feedback reporting. Setting to false is equivalent to "suspending" GuardDuty. Defaults to true.
	enable?: null | bool @go(Enable,*bool)

	// Specifies the frequency of notifications sent for subsequent finding occurrences. If the detector is a GuardDuty member account, the value is determined by the GuardDuty primary account and cannot be modified, otherwise defaults to SIX_HOURS. Valid values for standalone and primary accounts: FIFTEEN_MINUTES, ONE_HOUR, SIX_HOURS. See AWS Documentation for more information.
	findingPublishingFrequency?: null | string @go(FindingPublishingFrequency,*string)

	// The ID of the GuardDuty detector
	id?: null | string @go(ID,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#DetectorParameters: {
	// Describes which data sources will be enabled for the detector. See Data Sources below for more details.
	// +kubebuilder:validation:Optional
	datasources?: [...#DatasourcesParameters] @go(Datasources,[]DatasourcesParameters)

	// Enable monitoring and feedback reporting. Setting to false is equivalent to "suspending" GuardDuty. Defaults to true.
	// +kubebuilder:validation:Optional
	enable?: null | bool @go(Enable,*bool)

	// Specifies the frequency of notifications sent for subsequent finding occurrences. If the detector is a GuardDuty member account, the value is determined by the GuardDuty primary account and cannot be modified, otherwise defaults to SIX_HOURS. Valid values for standalone and primary accounts: FIFTEEN_MINUTES, ONE_HOUR, SIX_HOURS. See AWS Documentation for more information.
	// +kubebuilder:validation:Optional
	findingPublishingFrequency?: null | string @go(FindingPublishingFrequency,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#EBSVolumesObservation: {
	// If true, enables Malware Protection as data source for the detector.
	// Defaults to true.
	enable?: null | bool @go(Enable,*bool)
}

#EBSVolumesParameters: {
	// If true, enables Malware Protection as data source for the detector.
	// Defaults to true.
	// +kubebuilder:validation:Required
	enable?: null | bool @go(Enable,*bool)
}

#KubernetesObservation: {
	// Configures Kubernetes audit logs as a data source for Kubernetes protection.
	// See Kubernetes Audit Logs below for more details.
	auditLogs?: [...#AuditLogsObservation] @go(AuditLogs,[]AuditLogsObservation)
}

#KubernetesParameters: {
	// Configures Kubernetes audit logs as a data source for Kubernetes protection.
	// See Kubernetes Audit Logs below for more details.
	// +kubebuilder:validation:Required
	auditLogs: [...#AuditLogsParameters] @go(AuditLogs,[]AuditLogsParameters)
}

#MalwareProtectionObservation: {
	// Configure whether Malware Protection is enabled as data source for EC2 instances with findings for the detector.
	// See Scan EC2 instance with findings below for more details.
	scanEc2InstanceWithFindings?: [...#ScanEC2InstanceWithFindingsObservation] @go(ScanEC2InstanceWithFindings,[]ScanEC2InstanceWithFindingsObservation)
}

#MalwareProtectionParameters: {
	// Configure whether Malware Protection is enabled as data source for EC2 instances with findings for the detector.
	// See Scan EC2 instance with findings below for more details.
	// +kubebuilder:validation:Required
	scanEc2InstanceWithFindings: [...#ScanEC2InstanceWithFindingsParameters] @go(ScanEC2InstanceWithFindings,[]ScanEC2InstanceWithFindingsParameters)
}

#S3LogsObservation: {
	// If true, enables S3 protection.
	// Defaults to true.
	enable?: null | bool @go(Enable,*bool)
}

#S3LogsParameters: {
	// If true, enables S3 protection.
	// Defaults to true.
	// +kubebuilder:validation:Required
	enable?: null | bool @go(Enable,*bool)
}

#ScanEC2InstanceWithFindingsObservation: {
	// Configure whether scanning EBS volumes is enabled as data source for the detector for instances with findings.
	// See EBS volumes below for more details.
	ebsVolumes?: [...#EBSVolumesObservation] @go(EBSVolumes,[]EBSVolumesObservation)
}

#ScanEC2InstanceWithFindingsParameters: {
	// Configure whether scanning EBS volumes is enabled as data source for the detector for instances with findings.
	// See EBS volumes below for more details.
	// +kubebuilder:validation:Required
	ebsVolumes: [...#EBSVolumesParameters] @go(EBSVolumes,[]EBSVolumesParameters)
}

// DetectorSpec defines the desired state of Detector
#DetectorSpec: {
	forProvider: #DetectorParameters @go(ForProvider)
}

// DetectorStatus defines the observed state of Detector.
#DetectorStatus: {
	atProvider?: #DetectorObservation @go(AtProvider)
}

// Detector is the Schema for the Detectors API. Provides a resource to manage a GuardDuty detector
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Detector: {
	spec:    #DetectorSpec   @go(Spec)
	status?: #DetectorStatus @go(Status)
}

// DetectorList contains a list of Detectors
#DetectorList: {
	items: [...#Detector] @go(Items,[]Detector)
}
