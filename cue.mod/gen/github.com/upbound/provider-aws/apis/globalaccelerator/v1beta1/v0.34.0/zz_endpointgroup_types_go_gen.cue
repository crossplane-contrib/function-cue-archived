// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/globalaccelerator/v1beta1

package v1beta1

#EndpointConfigurationObservation: {
	// Indicates whether client IP address preservation is enabled for an Application Load Balancer endpoint. See the AWS documentation for more details. The default value is false.
	clientIpPreservationEnabled?: null | bool @go(ClientIPPreservationEnabled,*bool)

	// An ID for the endpoint. If the endpoint is a Network Load Balancer or Application Load Balancer, this is the Amazon Resource Name (ARN) of the resource. If the endpoint is an Elastic IP address, this is the Elastic IP address allocation ID.
	endpointId?: null | string @go(EndpointID,*string)

	// The weight associated with the endpoint. When you add weights to endpoints, you configure AWS Global Accelerator to route traffic based on proportions that you specify.
	weight?: null | float64 @go(Weight,*float64)
}

#EndpointConfigurationParameters: {
	// Indicates whether client IP address preservation is enabled for an Application Load Balancer endpoint. See the AWS documentation for more details. The default value is false.
	// +kubebuilder:validation:Optional
	clientIpPreservationEnabled?: null | bool @go(ClientIPPreservationEnabled,*bool)

	// An ID for the endpoint. If the endpoint is a Network Load Balancer or Application Load Balancer, this is the Amazon Resource Name (ARN) of the resource. If the endpoint is an Elastic IP address, this is the Elastic IP address allocation ID.
	// +kubebuilder:validation:Optional
	endpointId?: null | string @go(EndpointID,*string)

	// The weight associated with the endpoint. When you add weights to endpoints, you configure AWS Global Accelerator to route traffic based on proportions that you specify.
	// +kubebuilder:validation:Optional
	weight?: null | float64 @go(Weight,*float64)
}

#EndpointGroupObservation: {
	// The Amazon Resource Name (ARN) of the endpoint group.
	arn?: null | string @go(Arn,*string)

	// The list of endpoint objects. Fields documented below.
	endpointConfiguration?: [...#EndpointConfigurationObservation] @go(EndpointConfiguration,[]EndpointConfigurationObservation)

	// The name of the AWS Region where the endpoint group is located.
	endpointGroupRegion?: null | string @go(EndpointGroupRegion,*string)

	// The time—10 seconds or 30 seconds—between each health check for an endpoint. The default value is 30.
	healthCheckIntervalSeconds?: null | float64 @go(HealthCheckIntervalSeconds,*float64)

	// If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (/).
	healthCheckPath?: null | string @go(HealthCheckPath,*string)

	// The port that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default port is the listener port that this endpoint group is associated with. If listener port is a list of ports, Global Accelerator uses the first port in the list.
	healthCheckPort?: null | float64 @go(HealthCheckPort,*float64)

	// The protocol that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default value is TCP.
	healthCheckProtocol?: null | string @go(HealthCheckProtocol,*string)

	// The Amazon Resource Name (ARN) of the endpoint group.
	id?: null | string @go(ID,*string)

	// The Amazon Resource Name (ARN) of the listener.
	listenerArn?: null | string @go(ListenerArn,*string)

	// Override specific listener ports used to route traffic to endpoints that are part of this endpoint group. Fields documented below.
	portOverride?: [...#PortOverrideObservation] @go(PortOverride,[]PortOverrideObservation)

	// The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.
	thresholdCount?: null | float64 @go(ThresholdCount,*float64)

	// The percentage of traffic to send to an AWS Region. Additional traffic is distributed to other endpoint groups for this listener. The default value is 100.
	trafficDialPercentage?: null | float64 @go(TrafficDialPercentage,*float64)
}

#EndpointGroupParameters: {
	// The list of endpoint objects. Fields documented below.
	// +kubebuilder:validation:Optional
	endpointConfiguration?: [...#EndpointConfigurationParameters] @go(EndpointConfiguration,[]EndpointConfigurationParameters)

	// The name of the AWS Region where the endpoint group is located.
	// +kubebuilder:validation:Optional
	endpointGroupRegion?: null | string @go(EndpointGroupRegion,*string)

	// The time—10 seconds or 30 seconds—between each health check for an endpoint. The default value is 30.
	// +kubebuilder:validation:Optional
	healthCheckIntervalSeconds?: null | float64 @go(HealthCheckIntervalSeconds,*float64)

	// If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (/).
	// +kubebuilder:validation:Optional
	healthCheckPath?: null | string @go(HealthCheckPath,*string)

	// The port that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default port is the listener port that this endpoint group is associated with. If listener port is a list of ports, Global Accelerator uses the first port in the list.
	// +kubebuilder:validation:Optional
	healthCheckPort?: null | float64 @go(HealthCheckPort,*float64)

	// The protocol that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default value is TCP.
	// +kubebuilder:validation:Optional
	healthCheckProtocol?: null | string @go(HealthCheckProtocol,*string)

	// The Amazon Resource Name (ARN) of the listener.
	// +crossplane:generate:reference:type=Listener
	// +kubebuilder:validation:Optional
	listenerArn?: null | string @go(ListenerArn,*string)

	// Override specific listener ports used to route traffic to endpoints that are part of this endpoint group. Fields documented below.
	// +kubebuilder:validation:Optional
	portOverride?: [...#PortOverrideParameters] @go(PortOverride,[]PortOverrideParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.
	// +kubebuilder:validation:Optional
	thresholdCount?: null | float64 @go(ThresholdCount,*float64)

	// The percentage of traffic to send to an AWS Region. Additional traffic is distributed to other endpoint groups for this listener. The default value is 100.
	// +kubebuilder:validation:Optional
	trafficDialPercentage?: null | float64 @go(TrafficDialPercentage,*float64)
}

#PortOverrideObservation: {
	// The endpoint port that you want a listener port to be mapped to. This is the port on the endpoint, such as the Application Load Balancer or Amazon EC2 instance.
	endpointPort?: null | float64 @go(EndpointPort,*float64)

	// The listener port that you want to map to a specific endpoint port. This is the port that user traffic arrives to the Global Accelerator on.
	listenerPort?: null | float64 @go(ListenerPort,*float64)
}

#PortOverrideParameters: {
	// The endpoint port that you want a listener port to be mapped to. This is the port on the endpoint, such as the Application Load Balancer or Amazon EC2 instance.
	// +kubebuilder:validation:Required
	endpointPort?: null | float64 @go(EndpointPort,*float64)

	// The listener port that you want to map to a specific endpoint port. This is the port that user traffic arrives to the Global Accelerator on.
	// +kubebuilder:validation:Required
	listenerPort?: null | float64 @go(ListenerPort,*float64)
}

// EndpointGroupSpec defines the desired state of EndpointGroup
#EndpointGroupSpec: {
	forProvider: #EndpointGroupParameters @go(ForProvider)
}

// EndpointGroupStatus defines the observed state of EndpointGroup.
#EndpointGroupStatus: {
	atProvider?: #EndpointGroupObservation @go(AtProvider)
}

// EndpointGroup is the Schema for the EndpointGroups API. Provides a Global Accelerator endpoint group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#EndpointGroup: {
	spec:    #EndpointGroupSpec   @go(Spec)
	status?: #EndpointGroupStatus @go(Status)
}

// EndpointGroupList contains a list of EndpointGroups
#EndpointGroupList: {
	items: [...#EndpointGroup] @go(Items,[]EndpointGroup)
}
