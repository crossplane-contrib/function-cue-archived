// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/globalaccelerator/v1beta1

package v1beta1

#AcceleratorObservation: {
	// The DNS name of the accelerator. For example, a5d53ff5ee6bca4ce.awsglobalaccelerator.com.
	dnsName?: null | string @go(DNSName,*string)

	// -  The Global Accelerator Route 53 zone ID that can be used to
	// route an Alias Resource Record Set to the Global Accelerator. This attribute
	// is simply an alias for the zone ID Z2BJ6XQ5FK7U4H.
	hostedZoneId?: null | string @go(HostedZoneID,*string)

	// The Amazon Resource Name (ARN) of the accelerator.
	id?: null | string @go(ID,*string)

	// IP address set associated with the accelerator.
	ipSets?: [...#IPSetsObservation] @go(IPSets,[]IPSetsObservation)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#AcceleratorParameters: {
	// The attributes of the accelerator. Fields documented below.
	// +kubebuilder:validation:Optional
	attributes?: [...#AttributesParameters] @go(Attributes,[]AttributesParameters)

	// Indicates whether the accelerator is enabled. Defaults to true. Valid values: true, false.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// The value for the address type. Defaults to IPV4. Valid values: IPV4, DUAL_STACK.
	// +kubebuilder:validation:Optional
	ipAddressType?: null | string @go(IPAddressType,*string)

	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	// +kubebuilder:validation:Optional
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)

	// The name of the accelerator.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#AttributesObservation: {
}

#AttributesParameters: {
	// Indicates whether flow logs are enabled. Defaults to false. Valid values: true, false.
	// +kubebuilder:validation:Optional
	flowLogsEnabled?: null | bool @go(FlowLogsEnabled,*bool)

	// The name of the Amazon S3 bucket for the flow logs. Required if flow_logs_enabled is true.
	// +kubebuilder:validation:Optional
	flowLogsS3Bucket?: null | string @go(FlowLogsS3Bucket,*string)

	// The prefix for the location in the Amazon S3 bucket for the flow logs. Required if flow_logs_enabled is true.
	// +kubebuilder:validation:Optional
	flowLogsS3Prefix?: null | string @go(FlowLogsS3Prefix,*string)
}

#IPSetsObservation: {
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	ipAddresses?: [...null | string] @go(IPAddresses,[]*string)

	// The type of IP addresses included in this IP set.
	ipFamily?: null | string @go(IPFamily,*string)
}

#IPSetsParameters: {
}

// AcceleratorSpec defines the desired state of Accelerator
#AcceleratorSpec: {
	forProvider: #AcceleratorParameters @go(ForProvider)
}

// AcceleratorStatus defines the observed state of Accelerator.
#AcceleratorStatus: {
	atProvider?: #AcceleratorObservation @go(AtProvider)
}

// Accelerator is the Schema for the Accelerators API. Provides a Global Accelerator accelerator.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Accelerator: {
	spec:    #AcceleratorSpec   @go(Spec)
	status?: #AcceleratorStatus @go(Status)
}

// AcceleratorList contains a list of Accelerators
#AcceleratorList: {
	items: [...#Accelerator] @go(Items,[]Accelerator)
}
