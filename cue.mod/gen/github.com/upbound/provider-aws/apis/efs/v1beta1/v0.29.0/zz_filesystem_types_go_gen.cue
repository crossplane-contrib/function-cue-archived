// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/efs/v1beta1

package v1beta1

#FileSystemObservation: {
	// Amazon Resource Name of the file system.
	arn?: null | string @go(Arn,*string)

	// The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
	availabilityZoneId?: null | string @go(AvailabilityZoneID,*string)

	// The DNS name for the filesystem per documented convention.
	dnsName?: null | string @go(DNSName,*string)

	// The ID that identifies the file system (e.g., fs-ccfc0d65).
	id?: null | string @go(ID,*string)

	// The current number of mount targets that the file system has.
	numberOfMountTargets?: null | float64 @go(NumberOfMountTargets,*float64)

	// The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.
	ownerId?: null | string @go(OwnerID,*string)

	// The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.
	sizeInBytes?: [...#SizeInBytesObservation] @go(SizeInBytes,[]SizeInBytesObservation)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#FileSystemParameters: {
	// the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See user guide for more information.
	// +kubebuilder:validation:Optional
	availabilityZoneName?: null | string @go(AvailabilityZoneName,*string)

	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. See Elastic File System
	// user guide for more information.
	// +kubebuilder:validation:Optional
	creationToken?: null | string @go(CreationToken,*string)

	// If true, the disk will be encrypted.
	// +kubebuilder:validation:Optional
	encrypted?: null | bool @go(Encrypted,*bool)

	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// A file system lifecycle policy object (documented below).
	// +kubebuilder:validation:Optional
	lifecyclePolicy?: [...#LifecyclePolicyParameters] @go(LifecyclePolicy,[]LifecyclePolicyParameters)

	// The file system performance mode. Can be either "generalPurpose" or "maxIO" (Default: "generalPurpose").
	// +kubebuilder:validation:Optional
	performanceMode?: null | string @go(PerformanceMode,*string)

	// The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with throughput_mode set to provisioned.
	// +kubebuilder:validation:Optional
	provisionedThroughputInMibps?: null | float64 @go(ProvisionedThroughputInMibps,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Throughput mode for the file system. Defaults to bursting. Valid values: bursting, provisioned, or elastic. When using provisioned, also set provisioned_throughput_in_mibps.
	// +kubebuilder:validation:Optional
	throughputMode?: null | string @go(ThroughputMode,*string)
}

#LifecyclePolicyObservation: {
}

#LifecyclePolicyParameters: {
	// Indicates how long it takes to transition files to the IA storage class. Valid values: AFTER_1_DAY, AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, or AFTER_90_DAYS.
	// +kubebuilder:validation:Optional
	transitionToIa?: null | string @go(TransitionToIa,*string)

	// Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: AFTER_1_ACCESS.
	// +kubebuilder:validation:Optional
	transitionToPrimaryStorageClass?: null | string @go(TransitionToPrimaryStorageClass,*string)
}

#SizeInBytesObservation: {
	// The latest known metered size (in bytes) of data stored in the file system.
	value?: null | float64 @go(Value,*float64)

	// The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.
	valueInIa?: null | float64 @go(ValueInIa,*float64)

	// The latest known metered size (in bytes) of data stored in the Standard storage class.
	valueInStandard?: null | float64 @go(ValueInStandard,*float64)
}

#SizeInBytesParameters: {
}

// FileSystemSpec defines the desired state of FileSystem
#FileSystemSpec: {
	forProvider: #FileSystemParameters @go(ForProvider)
}

// FileSystemStatus defines the observed state of FileSystem.
#FileSystemStatus: {
	atProvider?: #FileSystemObservation @go(AtProvider)
}

// FileSystem is the Schema for the FileSystems API. Provides an Elastic File System (EFS) File System resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#FileSystem: {
	spec:    #FileSystemSpec   @go(Spec)
	status?: #FileSystemStatus @go(Status)
}

// FileSystemList contains a list of FileSystems
#FileSystemList: {
	items: [...#FileSystem] @go(Items,[]FileSystem)
}
