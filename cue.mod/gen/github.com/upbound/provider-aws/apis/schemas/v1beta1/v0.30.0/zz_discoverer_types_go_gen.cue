// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/schemas/v1beta1

package v1beta1

#DiscovererObservation: {
	// The Amazon Resource Name (ARN) of the discoverer.
	arn?: null | string @go(Arn,*string)

	// The ID of the discoverer.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#DiscovererParameters: {
	// The description of the discoverer. Maximum of 256 characters.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN of the event bus to discover event schemas on.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchevents/v1beta1.Bus
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	sourceArn?: null | string @go(SourceArn,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// DiscovererSpec defines the desired state of Discoverer
#DiscovererSpec: {
	forProvider: #DiscovererParameters @go(ForProvider)
}

// DiscovererStatus defines the observed state of Discoverer.
#DiscovererStatus: {
	atProvider?: #DiscovererObservation @go(AtProvider)
}

// Discoverer is the Schema for the Discoverers API. Provides an EventBridge Schema Discoverer resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Discoverer: {
	spec:    #DiscovererSpec   @go(Spec)
	status?: #DiscovererStatus @go(Status)
}

// DiscovererList contains a list of Discoverers
#DiscovererList: {
	items: [...#Discoverer] @go(Items,[]Discoverer)
}
