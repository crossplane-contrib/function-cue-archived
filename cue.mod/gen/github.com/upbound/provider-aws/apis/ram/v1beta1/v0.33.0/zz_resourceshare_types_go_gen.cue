// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ram/v1beta1

package v1beta1

#ResourceShareObservation: {
	// The Amazon Resource Name (ARN) of the resource share.
	arn?: null | string @go(Arn,*string)

	// The Amazon Resource Name (ARN) of the resource share.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ResourceShareParameters: {
	// Indicates whether principals outside your organization can be associated with a resource share.
	// +kubebuilder:validation:Optional
	allowExternalPrincipals?: null | bool @go(AllowExternalPrincipals,*bool)

	// The name of the resource share.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Specifies the Amazon Resource Names (ARNs) of the RAM permission to associate with the resource share. If you do not specify an ARN for the permission, RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
	// +kubebuilder:validation:Optional
	permissionArns?: [...null | string] @go(PermissionArns,[]*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ResourceShareSpec defines the desired state of ResourceShare
#ResourceShareSpec: {
	forProvider: #ResourceShareParameters @go(ForProvider)
}

// ResourceShareStatus defines the observed state of ResourceShare.
#ResourceShareStatus: {
	atProvider?: #ResourceShareObservation @go(AtProvider)
}

// ResourceShare is the Schema for the ResourceShares API. Manages a Resource Access Manager (RAM) Resource Share.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ResourceShare: {
	spec:    #ResourceShareSpec   @go(Spec)
	status?: #ResourceShareStatus @go(Status)
}

// ResourceShareList contains a list of ResourceShares
#ResourceShareList: {
	items: [...#ResourceShare] @go(Items,[]ResourceShare)
}
