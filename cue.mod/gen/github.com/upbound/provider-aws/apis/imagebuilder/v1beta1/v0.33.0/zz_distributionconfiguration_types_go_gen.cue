// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/imagebuilder/v1beta1

package v1beta1

#AMIDistributionConfigurationObservation: {
}

#AMIDistributionConfigurationParameters: {
	// Key-value map of tags to apply to the distributed AMI.
	// +kubebuilder:validation:Optional
	amiTags?: {[string]: null | string} @go(AMITags,map[string]*string)

	// Description to apply to the distributed AMI.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key to encrypt the distributed AMI.
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Configuration block of EC2 launch permissions to apply to the distributed AMI. Detailed below.
	// +kubebuilder:validation:Optional
	launchPermission?: [...#LaunchPermissionParameters] @go(LaunchPermission,[]LaunchPermissionParameters)

	// Name to apply to the distributed AMI.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Set of AWS Account identifiers to distribute the AMI.
	// +kubebuilder:validation:Optional
	targetAccountIds?: [...null | string] @go(TargetAccountIds,[]*string)
}

#ContainerDistributionConfigurationObservation: {
}

#ContainerDistributionConfigurationParameters: {
	// Set of tags that are attached to the container distribution configuration.
	// +kubebuilder:validation:Optional
	containerTags?: [...null | string] @go(ContainerTags,[]*string)

	// Description of the container distribution configuration.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Configuration block with the destination repository for the container distribution configuration.
	// +kubebuilder:validation:Required
	targetRepository: [...#ContainerDistributionConfigurationTargetRepositoryParameters] @go(TargetRepository,[]ContainerDistributionConfigurationTargetRepositoryParameters)
}

#ContainerDistributionConfigurationTargetRepositoryObservation: {
}

#ContainerDistributionConfigurationTargetRepositoryParameters: {
	// The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
	// +kubebuilder:validation:Required
	repositoryName?: null | string @go(RepositoryName,*string)

	// The service in which this image is registered. Valid values: ECR.
	// +kubebuilder:validation:Required
	service?: null | string @go(Service,*string)
}

#DistributionConfigurationObservation: {
	// Amazon Resource Name (ARN) of the distribution configuration.
	arn?: null | string @go(Arn,*string)

	// Date the distribution configuration was created.
	dateCreated?: null | string @go(DateCreated,*string)

	// Date the distribution configuration was updated.
	dateUpdated?: null | string @go(DateUpdated,*string)
	id?:          null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#DistributionConfigurationParameters: {
	// Description of the distribution configuration.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// One or more configuration blocks with distribution settings. Detailed below.
	// +kubebuilder:validation:Required
	distribution: [...#DistributionParameters] @go(Distribution,[]DistributionParameters)

	// Name of the distribution configuration.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// AWS Region for the distribution.
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#DistributionObservation: {
}

#DistributionParameters: {
	// Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
	// +kubebuilder:validation:Optional
	amiDistributionConfiguration?: [...#AMIDistributionConfigurationParameters] @go(AMIDistributionConfiguration,[]AMIDistributionConfigurationParameters)

	// Configuration block with container distribution settings. Detailed below.
	// +kubebuilder:validation:Optional
	containerDistributionConfiguration?: [...#ContainerDistributionConfigurationParameters] @go(ContainerDistributionConfiguration,[]ContainerDistributionConfigurationParameters)

	// Set of Windows faster-launching configurations to use for AMI distribution. Detailed below.
	// +kubebuilder:validation:Optional
	fastLaunchConfiguration?: [...#FastLaunchConfigurationParameters] @go(FastLaunchConfiguration,[]FastLaunchConfigurationParameters)

	// Set of launch template configuration settings that apply to image distribution. Detailed below.
	// +kubebuilder:validation:Optional
	launchTemplateConfiguration?: [...#LaunchTemplateConfigurationParameters] @go(LaunchTemplateConfiguration,[]LaunchTemplateConfigurationParameters)

	// Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
	// +kubebuilder:validation:Optional
	licenseConfigurationArns?: [...null | string] @go(LicenseConfigurationArns,[]*string)

	// AWS Region for the distribution.
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#FastLaunchConfigurationObservation: {
}

#FastLaunchConfigurationParameters: {
	// The owner account ID for the fast-launch enabled Windows AMI.
	// +kubebuilder:validation:Required
	accountId?: null | string @go(AccountID,*string)

	// A Boolean that represents the current state of faster launching for the Windows AMI. Set to true to start using Windows faster launching, or false to stop using it.
	// +kubebuilder:validation:Required
	enabled?: null | bool @go(Enabled,*bool)

	// Configuration block for the launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots. Detailed below.
	// +kubebuilder:validation:Optional
	launchTemplate?: [...#LaunchTemplateParameters] @go(LaunchTemplate,[]LaunchTemplateParameters)

	// The maximum number of parallel instances that are launched for creating resources.
	// +kubebuilder:validation:Optional
	maxParallelLaunches?: null | float64 @go(MaxParallelLaunches,*float64)

	// Configuration block for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled. Detailed below.
	// +kubebuilder:validation:Optional
	snapshotConfiguration?: [...#SnapshotConfigurationParameters] @go(SnapshotConfiguration,[]SnapshotConfigurationParameters)
}

#LaunchPermissionObservation: {
}

#LaunchPermissionParameters: {
	// Set of AWS Organization ARNs to assign.
	// +kubebuilder:validation:Optional
	organizationArns?: [...null | string] @go(OrganizationArns,[]*string)

	// Set of AWS Organizational Unit ARNs to assign.
	// +kubebuilder:validation:Optional
	organizationalUnitArns?: [...null | string] @go(OrganizationalUnitArns,[]*string)

	// Set of EC2 launch permission user groups to assign. Use all to distribute a public AMI.
	// +kubebuilder:validation:Optional
	userGroups?: [...null | string] @go(UserGroups,[]*string)

	// Set of AWS Account identifiers to assign.
	// +kubebuilder:validation:Optional
	userIds?: [...null | string] @go(UserIds,[]*string)
}

#LaunchTemplateConfigurationObservation: {
}

#LaunchTemplateConfigurationParameters: {
	// The account ID that this configuration applies to.
	// +kubebuilder:validation:Optional
	accountId?: null | string @go(AccountID,*string)

	// Indicates whether to set the specified Amazon EC2 launch template as the default launch template. Defaults to true.
	// +kubebuilder:validation:Optional
	default?: null | bool @go(Default,*bool)

	// The ID of the Amazon EC2 launch template to use.
	// +kubebuilder:validation:Required
	launchTemplateId?: null | string @go(LaunchTemplateID,*string)
}

#LaunchTemplateObservation: {
}

#LaunchTemplateParameters: {
	// The ID of the launch template to use for faster launching for a Windows AMI.
	// +kubebuilder:validation:Optional
	launchTemplateId?: null | string @go(LaunchTemplateID,*string)

	// The name of the launch template to use for faster launching for a Windows AMI.
	// +kubebuilder:validation:Optional
	launchTemplateName?: null | string @go(LaunchTemplateName,*string)

	// The version of the launch template to use for faster launching for a Windows AMI.
	// +kubebuilder:validation:Optional
	launchTemplateVersion?: null | string @go(LaunchTemplateVersion,*string)
}

#SnapshotConfigurationObservation: {
}

#SnapshotConfigurationParameters: {
	// The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.
	// +kubebuilder:validation:Optional
	targetResourceCount?: null | float64 @go(TargetResourceCount,*float64)
}

// DistributionConfigurationSpec defines the desired state of DistributionConfiguration
#DistributionConfigurationSpec: {
	forProvider: #DistributionConfigurationParameters @go(ForProvider)
}

// DistributionConfigurationStatus defines the observed state of DistributionConfiguration.
#DistributionConfigurationStatus: {
	atProvider?: #DistributionConfigurationObservation @go(AtProvider)
}

// DistributionConfiguration is the Schema for the DistributionConfigurations API. Manage an Image Builder Distribution Configuration
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DistributionConfiguration: {
	spec:    #DistributionConfigurationSpec   @go(Spec)
	status?: #DistributionConfigurationStatus @go(Status)
}

// DistributionConfigurationList contains a list of DistributionConfigurations
#DistributionConfigurationList: {
	items: [...#DistributionConfiguration] @go(Items,[]DistributionConfiguration)
}
