// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/imagebuilder/v1beta1

package v1beta1

#ImagePipelineImageTestsConfigurationObservation: {
}

#ImagePipelineImageTestsConfigurationParameters: {
	// Whether image tests are enabled. Defaults to true.
	// +kubebuilder:validation:Optional
	imageTestsEnabled?: null | bool @go(ImageTestsEnabled,*bool)

	// Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.
	// +kubebuilder:validation:Optional
	timeoutMinutes?: null | float64 @go(TimeoutMinutes,*float64)
}

#ImagePipelineObservation: {
	// Amazon Resource Name (ARN) of the image pipeline.
	arn?: null | string @go(Arn,*string)

	// Date the image pipeline was created.
	dateCreated?: null | string @go(DateCreated,*string)

	// Date the image pipeline was last run.
	dateLastRun?: null | string @go(DateLastRun,*string)

	// Date the image pipeline will run next.
	dateNextRun?: null | string @go(DateNextRun,*string)

	// Date the image pipeline was updated.
	dateUpdated?: null | string @go(DateUpdated,*string)
	id?:          null | string @go(ID,*string)

	// Platform of the image pipeline.
	platform?: null | string @go(Platform,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ImagePipelineParameters: {
	// Amazon Resource Name (ARN) of the container recipe.
	// +kubebuilder:validation:Optional
	containerRecipeArn?: null | string @go(ContainerRecipeArn,*string)

	// Description of the image pipeline.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
	// +kubebuilder:validation:Optional
	distributionConfigurationArn?: null | string @go(DistributionConfigurationArn,*string)

	// Whether additional information about the image being created is collected. Defaults to true.
	// +kubebuilder:validation:Optional
	enhancedImageMetadataEnabled?: null | bool @go(EnhancedImageMetadataEnabled,*bool)

	// Amazon Resource Name (ARN) of the image recipe.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/imagebuilder/v1beta1.ImageRecipe
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	imageRecipeArn?: null | string @go(ImageRecipeArn,*string)

	// Configuration block with image tests configuration. Detailed below.
	// +kubebuilder:validation:Optional
	imageTestsConfiguration?: [...#ImagePipelineImageTestsConfigurationParameters] @go(ImageTestsConfiguration,[]ImagePipelineImageTestsConfigurationParameters)

	// Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/imagebuilder/v1beta1.InfrastructureConfiguration
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	infrastructureConfigurationArn?: null | string @go(InfrastructureConfigurationArn,*string)

	// Name of the image pipeline.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Configuration block with schedule settings. Detailed below.
	// +kubebuilder:validation:Optional
	schedule?: [...#ScheduleParameters] @go(Schedule,[]ScheduleParameters)

	// Status of the image pipeline. Valid values are DISABLED and ENABLED. Defaults to ENABLED.
	// +kubebuilder:validation:Optional
	status?: null | string @go(Status,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ScheduleObservation: {
}

#ScheduleParameters: {
	// Condition when the pipeline should trigger a new image build. Valid values are EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE and EXPRESSION_MATCH_ONLY. Defaults to EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE.
	// +kubebuilder:validation:Optional
	pipelineExecutionStartCondition?: null | string @go(PipelineExecutionStartCondition,*string)

	// Cron expression of how often the pipeline start condition is evaluated. For example, cron(0 0 * * ? *) is evaluated every day at midnight UTC. Configurations using the five field syntax that was previously accepted by the API, such as cron(0 0 * * *), must be updated to the six field syntax. For more information, see the Image Builder User Guide.
	// +kubebuilder:validation:Required
	scheduleExpression?: null | string @go(ScheduleExpression,*string)

	// The timezone that applies to the scheduling expression. For example, "Etc/UTC", "America/Los_Angeles" in the IANA timezone format. If not specified this defaults to UTC.
	// +kubebuilder:validation:Optional
	timezone?: null | string @go(Timezone,*string)
}

// ImagePipelineSpec defines the desired state of ImagePipeline
#ImagePipelineSpec: {
	forProvider: #ImagePipelineParameters @go(ForProvider)
}

// ImagePipelineStatus defines the observed state of ImagePipeline.
#ImagePipelineStatus: {
	atProvider?: #ImagePipelineObservation @go(AtProvider)
}

// ImagePipeline is the Schema for the ImagePipelines API. Manages an Image Builder Image Pipeline
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ImagePipeline: {
	spec:    #ImagePipelineSpec   @go(Spec)
	status?: #ImagePipelineStatus @go(Status)
}

// ImagePipelineList contains a list of ImagePipelines
#ImagePipelineList: {
	items: [...#ImagePipeline] @go(Items,[]ImagePipeline)
}
