// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/imagebuilder/v1beta1

package v1beta1

#BlockDeviceMappingEBSObservation: {
}

#BlockDeviceMappingEBSParameters: {
	// Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
	// +kubebuilder:validation:Optional
	deleteOnTermination?: null | string @go(DeleteOnTermination,*string)

	// Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
	// +kubebuilder:validation:Optional
	encrypted?: null | string @go(Encrypted,*string)

	// Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.
	// +kubebuilder:validation:Optional
	iops?: null | float64 @go(Iops,*float64)

	// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Identifier of the EC2 Volume Snapshot.
	// +kubebuilder:validation:Optional
	snapshotId?: null | string @go(SnapshotID,*string)

	// For GP3 volumes only. The throughput in MiB/s that the volume supports.
	// +kubebuilder:validation:Optional
	throughput?: null | float64 @go(Throughput,*float64)

	// Size of the volume, in GiB.
	// +kubebuilder:validation:Optional
	volumeSize?: null | float64 @go(VolumeSize,*float64)

	// Type of the volume. For example, gp2 or io2.
	// +kubebuilder:validation:Optional
	volumeType?: null | string @go(VolumeType,*string)
}

#ComponentParameterObservation: {
}

#ComponentParameterParameters: {
	// The name of the component parameter.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The value for the named component parameter.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

#ImageRecipeBlockDeviceMappingObservation: {
}

#ImageRecipeBlockDeviceMappingParameters: {
	// Name of the device. For example, /dev/sda or /dev/xvdb.
	// +kubebuilder:validation:Optional
	deviceName?: null | string @go(DeviceName,*string)

	// Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
	// +kubebuilder:validation:Optional
	ebs?: [...#BlockDeviceMappingEBSParameters] @go(EBS,[]BlockDeviceMappingEBSParameters)

	// Set to true to remove a mapping from the parent image.
	// +kubebuilder:validation:Optional
	noDevice?: null | bool @go(NoDevice,*bool)

	// Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.
	// +kubebuilder:validation:Optional
	virtualName?: null | string @go(VirtualName,*string)
}

#ImageRecipeComponentObservation: {
}

#ImageRecipeComponentParameters: {
	// Amazon Resource Name (ARN) of the Image Builder Component to associate.
	// +kubebuilder:validation:Required
	componentArn?: null | string @go(ComponentArn,*string)

	// Configuration block(s) for parameters to configure the component. Detailed below.
	// +kubebuilder:validation:Optional
	parameter?: [...#ComponentParameterParameters] @go(Parameter,[]ComponentParameterParameters)
}

#ImageRecipeObservation: {
	// Amazon Resource Name (ARN) of the image recipe.
	arn?: null | string @go(Arn,*string)

	// Date the image recipe was created.
	dateCreated?: null | string @go(DateCreated,*string)
	id?:          null | string @go(ID,*string)

	// Owner of the image recipe.
	owner?: null | string @go(Owner,*string)

	// Platform of the image recipe.
	platform?: null | string @go(Platform,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ImageRecipeParameters: {
	// Configuration block(s) with block device mappings for the image recipe. Detailed below.
	// +kubebuilder:validation:Optional
	blockDeviceMapping?: [...#ImageRecipeBlockDeviceMappingParameters] @go(BlockDeviceMapping,[]ImageRecipeBlockDeviceMappingParameters)

	// Ordered configuration block(s) with components for the image recipe. Detailed below.
	// +kubebuilder:validation:Required
	component: [...#ImageRecipeComponentParameters] @go(Component,[]ImageRecipeComponentParameters)

	// Description of the image recipe.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Name of the image recipe.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.
	// +kubebuilder:validation:Required
	parentImage?: null | string @go(ParentImage,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.
	// +kubebuilder:validation:Optional
	systemsManagerAgent?: [...#SystemsManagerAgentParameters] @go(SystemsManagerAgent,[]SystemsManagerAgentParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
	// +kubebuilder:validation:Optional
	userDataBase64?: null | string @go(UserDataBase64,*string)

	// The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.
	// +kubebuilder:validation:Required
	version?: null | string @go(Version,*string)

	// The working directory to be used during build and test workflows.
	// +kubebuilder:validation:Optional
	workingDirectory?: null | string @go(WorkingDirectory,*string)
}

#SystemsManagerAgentObservation: {
}

#SystemsManagerAgentParameters: {
	// Whether to remove the Systems Manager Agent after the image has been built. Defaults to false.
	// +kubebuilder:validation:Required
	uninstallAfterBuild?: null | bool @go(UninstallAfterBuild,*bool)
}

// ImageRecipeSpec defines the desired state of ImageRecipe
#ImageRecipeSpec: {
	forProvider: #ImageRecipeParameters @go(ForProvider)
}

// ImageRecipeStatus defines the observed state of ImageRecipe.
#ImageRecipeStatus: {
	atProvider?: #ImageRecipeObservation @go(AtProvider)
}

// ImageRecipe is the Schema for the ImageRecipes API. Manage an Image Builder Image Recipe
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ImageRecipe: {
	spec:    #ImageRecipeSpec   @go(Spec)
	status?: #ImageRecipeStatus @go(Status)
}

// ImageRecipeList contains a list of ImageRecipes
#ImageRecipeList: {
	items: [...#ImageRecipe] @go(Items,[]ImageRecipe)
}
