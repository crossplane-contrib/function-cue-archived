// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigateway/v1beta1

package v1beta1

#DocumentationVersionObservation: {
	// Description of the API documentation version.
	description?: null | string @go(Description,*string)
	id?:          null | string @go(ID,*string)

	// ID of the associated Rest API
	restApiId?: null | string @go(RestAPIID,*string)

	// Version identifier of the API documentation snapshot.
	version?: null | string @go(Version,*string)
}

#DocumentationVersionParameters: {
	// Description of the API documentation version.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// ID of the associated Rest API
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/apigateway/v1beta1.RestAPI
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	restApiId?: null | string @go(RestAPIID,*string)

	// Version identifier of the API documentation snapshot.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

// DocumentationVersionSpec defines the desired state of DocumentationVersion
#DocumentationVersionSpec: {
	forProvider: #DocumentationVersionParameters @go(ForProvider)
}

// DocumentationVersionStatus defines the observed state of DocumentationVersion.
#DocumentationVersionStatus: {
	atProvider?: #DocumentationVersionObservation @go(AtProvider)
}

// DocumentationVersion is the Schema for the DocumentationVersions API. Provides a resource to manage an API Gateway Documentation Version.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#DocumentationVersion: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.version)",message="version is a required parameter"
	spec:    #DocumentationVersionSpec   @go(Spec)
	status?: #DocumentationVersionStatus @go(Status)
}

// DocumentationVersionList contains a list of DocumentationVersions
#DocumentationVersionList: {
	items: [...#DocumentationVersion] @go(Items,[]DocumentationVersion)
}
