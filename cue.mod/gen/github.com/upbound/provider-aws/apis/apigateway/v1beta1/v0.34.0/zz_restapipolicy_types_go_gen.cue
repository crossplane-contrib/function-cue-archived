// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigateway/v1beta1

package v1beta1

#RestAPIPolicyObservation: {
	// ID of the REST API
	id?: null | string @go(ID,*string)

	// JSON formatted policy document that controls access to the API Gateway
	policy?: null | string @go(Policy,*string)

	// ID of the REST API.
	restApiId?: null | string @go(RestAPIID,*string)
}

#RestAPIPolicyParameters: {
	// JSON formatted policy document that controls access to the API Gateway
	// +kubebuilder:validation:Optional
	policy?: null | string @go(Policy,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// ID of the REST API.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/apigateway/v1beta1.RestAPI
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	restApiId?: null | string @go(RestAPIID,*string)
}

// RestAPIPolicySpec defines the desired state of RestAPIPolicy
#RestAPIPolicySpec: {
	forProvider: #RestAPIPolicyParameters @go(ForProvider)
}

// RestAPIPolicyStatus defines the observed state of RestAPIPolicy.
#RestAPIPolicyStatus: {
	atProvider?: #RestAPIPolicyObservation @go(AtProvider)
}

// RestAPIPolicy is the Schema for the RestAPIPolicys API. Provides an API Gateway REST API Policy.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#RestAPIPolicy: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.policy)",message="policy is a required parameter"
	spec:    #RestAPIPolicySpec   @go(Spec)
	status?: #RestAPIPolicyStatus @go(Status)
}

// RestAPIPolicyList contains a list of RestAPIPolicys
#RestAPIPolicyList: {
	items: [...#RestAPIPolicy] @go(Items,[]RestAPIPolicy)
}
