// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigateway/v1beta1

package v1beta1

#GatewayResponseObservation: {
	id?: null | string @go(ID,*string)
}

#GatewayResponseParameters: {
	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Map of parameters (paths, query strings and headers) of the Gateway Response.
	// +kubebuilder:validation:Optional
	responseParameters?: {[string]: null | string} @go(ResponseParameters,map[string]*string)

	// Map of templates used to transform the response body.
	// +kubebuilder:validation:Optional
	responseTemplates?: {[string]: null | string} @go(ResponseTemplates,map[string]*string)

	// Response type of the associated GatewayResponse.
	// +kubebuilder:validation:Required
	responseType?: null | string @go(ResponseType,*string)

	// String identifier of the associated REST API.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/apigateway/v1beta1.RestAPI
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	restApiId?: null | string @go(RestAPIID,*string)

	// HTTP status code of the Gateway Response.
	// +kubebuilder:validation:Optional
	statusCode?: null | string @go(StatusCode,*string)
}

// GatewayResponseSpec defines the desired state of GatewayResponse
#GatewayResponseSpec: {
	forProvider: #GatewayResponseParameters @go(ForProvider)
}

// GatewayResponseStatus defines the observed state of GatewayResponse.
#GatewayResponseStatus: {
	atProvider?: #GatewayResponseObservation @go(AtProvider)
}

// GatewayResponse is the Schema for the GatewayResponses API. Provides an API Gateway Gateway Response for a REST API Gateway.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#GatewayResponse: {
	spec:    #GatewayResponseSpec   @go(Spec)
	status?: #GatewayResponseStatus @go(Status)
}

// GatewayResponseList contains a list of GatewayResponses
#GatewayResponseList: {
	items: [...#GatewayResponse] @go(Items,[]GatewayResponse)
}
