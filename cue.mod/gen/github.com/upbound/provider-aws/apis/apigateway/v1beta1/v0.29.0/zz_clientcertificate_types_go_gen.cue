// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/apigateway/v1beta1

package v1beta1

#ClientCertificateObservation: {
	// ARN
	arn?: null | string @go(Arn,*string)

	// Date when the client certificate was created.
	createdDate?: null | string @go(CreatedDate,*string)

	// Date when the client certificate will expire.
	expirationDate?: null | string @go(ExpirationDate,*string)

	// Identifier of the client certificate.
	id?: null | string @go(ID,*string)

	// The PEM-encoded public key of the client certificate.
	pemEncodedCertificate?: null | string @go(PemEncodedCertificate,*string)

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#ClientCertificateParameters: {
	// Description of the client certificate.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ClientCertificateSpec defines the desired state of ClientCertificate
#ClientCertificateSpec: {
	forProvider: #ClientCertificateParameters @go(ForProvider)
}

// ClientCertificateStatus defines the observed state of ClientCertificate.
#ClientCertificateStatus: {
	atProvider?: #ClientCertificateObservation @go(AtProvider)
}

// ClientCertificate is the Schema for the ClientCertificates API. Provides an API Gateway Client Certificate.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ClientCertificate: {
	spec:    #ClientCertificateSpec   @go(Spec)
	status?: #ClientCertificateStatus @go(Status)
}

// ClientCertificateList contains a list of ClientCertificates
#ClientCertificateList: {
	items: [...#ClientCertificate] @go(Items,[]ClientCertificate)
}
