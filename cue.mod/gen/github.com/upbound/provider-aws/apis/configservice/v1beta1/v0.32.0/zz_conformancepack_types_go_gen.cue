// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/configservice/v1beta1

package v1beta1

#ConformancePackObservation: {
	// Amazon Resource Name (ARN) of the conformance pack.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)
}

#ConformancePackParameters: {
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	// +kubebuilder:validation:Optional
	deliveryS3Bucket?: null | string @go(DeliveryS3Bucket,*string)

	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	// +kubebuilder:validation:Optional
	deliveryS3KeyPrefix?: null | string @go(DeliveryS3KeyPrefix,*string)

	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the template_body or in the template stored in Amazon S3 if using template_s3_uri.
	// +kubebuilder:validation:Optional
	inputParameter?: [...#InputParameterParameters] @go(InputParameter,[]InputParameterParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	// +kubebuilder:validation:Optional
	templateBody?: null | string @go(TemplateBody,*string)

	// Location of file, e.g., s3://bucketname/prefix, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	// +kubebuilder:validation:Optional
	templateS3Uri?: null | string @go(TemplateS3URI,*string)
}

#InputParameterObservation: {
}

#InputParameterParameters: {
	// The input key.
	// +kubebuilder:validation:Required
	parameterName?: null | string @go(ParameterName,*string)

	// The input value.
	// +kubebuilder:validation:Required
	parameterValue?: null | string @go(ParameterValue,*string)
}

// ConformancePackSpec defines the desired state of ConformancePack
#ConformancePackSpec: {
	forProvider: #ConformancePackParameters @go(ForProvider)
}

// ConformancePackStatus defines the observed state of ConformancePack.
#ConformancePackStatus: {
	atProvider?: #ConformancePackObservation @go(AtProvider)
}

// ConformancePack is the Schema for the ConformancePacks API. Manages a Config Conformance Pack
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConformancePack: {
	spec:    #ConformancePackSpec   @go(Spec)
	status?: #ConformancePackStatus @go(Status)
}

// ConformancePackList contains a list of ConformancePacks
#ConformancePackList: {
	items: [...#ConformancePack] @go(Items,[]ConformancePack)
}
