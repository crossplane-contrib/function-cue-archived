// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/configservice/v1beta1

package v1beta1

#ConfigurationRecorderObservation: {
	// Name of the recorder
	id?: null | string @go(ID,*string)

	// Recording group - see below.
	recordingGroup?: [...#RecordingGroupObservation] @go(RecordingGroup,[]RecordingGroupObservation)

	// Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See AWS Docs for more details.
	roleArn?: null | string @go(RoleArn,*string)
}

#ConfigurationRecorderParameters: {
	// Recording group - see below.
	// +kubebuilder:validation:Optional
	recordingGroup?: [...#RecordingGroupParameters] @go(RecordingGroup,[]RecordingGroupParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See AWS Docs for more details.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

#RecordingGroupObservation: {
	// Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with resource_types. Defaults to true.
	allSupported?: null | bool @go(AllSupported,*bool)

	// Specifies whether AWS Config includes all supported types of global resources with the resources that it records. Requires all_supported = true. Conflicts with resource_types.
	includeGlobalResourceTypes?: null | bool @go(IncludeGlobalResourceTypes,*bool)

	// A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, AWS::EC2::Instance or AWS::CloudTrail::Trail). See relevant part of AWS Docs for available types. In order to use this attribute, all_supported must be set to false.
	resourceTypes?: [...null | string] @go(ResourceTypes,[]*string)
}

#RecordingGroupParameters: {
	// Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with resource_types. Defaults to true.
	// +kubebuilder:validation:Optional
	allSupported?: null | bool @go(AllSupported,*bool)

	// Specifies whether AWS Config includes all supported types of global resources with the resources that it records. Requires all_supported = true. Conflicts with resource_types.
	// +kubebuilder:validation:Optional
	includeGlobalResourceTypes?: null | bool @go(IncludeGlobalResourceTypes,*bool)

	// A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, AWS::EC2::Instance or AWS::CloudTrail::Trail). See relevant part of AWS Docs for available types. In order to use this attribute, all_supported must be set to false.
	// +kubebuilder:validation:Optional
	resourceTypes?: [...null | string] @go(ResourceTypes,[]*string)
}

// ConfigurationRecorderSpec defines the desired state of ConfigurationRecorder
#ConfigurationRecorderSpec: {
	forProvider: #ConfigurationRecorderParameters @go(ForProvider)
}

// ConfigurationRecorderStatus defines the observed state of ConfigurationRecorder.
#ConfigurationRecorderStatus: {
	atProvider?: #ConfigurationRecorderObservation @go(AtProvider)
}

// ConfigurationRecorder is the Schema for the ConfigurationRecorders API. Provides an AWS Config Configuration Recorder.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ConfigurationRecorder: {
	spec:    #ConfigurationRecorderSpec   @go(Spec)
	status?: #ConfigurationRecorderStatus @go(Status)
}

// ConfigurationRecorderList contains a list of ConfigurationRecorders
#ConfigurationRecorderList: {
	items: [...#ConfigurationRecorder] @go(Items,[]ConfigurationRecorder)
}
