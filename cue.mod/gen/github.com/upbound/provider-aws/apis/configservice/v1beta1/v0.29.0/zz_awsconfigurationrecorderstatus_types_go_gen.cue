// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/configservice/v1beta1

package v1beta1

#AWSConfigurationRecorderStatusObservation: {
	id?: null | string @go(ID,*string)
}

#AWSConfigurationRecorderStatusParameters: {
	// Whether the configuration recorder should be enabled or disabled.
	// +kubebuilder:validation:Required
	isEnabled?: null | bool @go(IsEnabled,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// AWSConfigurationRecorderStatusSpec defines the desired state of AWSConfigurationRecorderStatus
#AWSConfigurationRecorderStatusSpec: {
	forProvider: #AWSConfigurationRecorderStatusParameters @go(ForProvider)
}

// AWSConfigurationRecorderStatusStatus defines the observed state of AWSConfigurationRecorderStatus.
#AWSConfigurationRecorderStatusStatus: {
	atProvider?: #AWSConfigurationRecorderStatusObservation @go(AtProvider)
}

// AWSConfigurationRecorderStatus is the Schema for the AWSConfigurationRecorderStatuss API. Manages status of an AWS Config Configuration Recorder.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AWSConfigurationRecorderStatus: {
	spec:    #AWSConfigurationRecorderStatusSpec   @go(Spec)
	status?: #AWSConfigurationRecorderStatusStatus @go(Status)
}

// AWSConfigurationRecorderStatusList contains a list of AWSConfigurationRecorderStatuss
#AWSConfigurationRecorderStatusList: {
	items: [...#AWSConfigurationRecorderStatus] @go(Items,[]AWSConfigurationRecorderStatus)
}
