// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudwatchevents/v1beta1

package v1beta1

#BusPolicyObservation: {
	// The name of the EventBridge event bus.
	id?: null | string @go(ID,*string)
}

#BusPolicyParameters: {
	// The event bus to set the permissions on. If you omit this, the permissions are set on the default event bus.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cloudwatchevents/v1beta1.Bus
	// +kubebuilder:validation:Optional
	eventBusName?: null | string @go(EventBusName,*string)

	// The text of the policy.
	// +kubebuilder:validation:Required
	policy?: null | string @go(Policy,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

// BusPolicySpec defines the desired state of BusPolicy
#BusPolicySpec: {
	forProvider: #BusPolicyParameters @go(ForProvider)
}

// BusPolicyStatus defines the observed state of BusPolicy.
#BusPolicyStatus: {
	atProvider?: #BusPolicyObservation @go(AtProvider)
}

// BusPolicy is the Schema for the BusPolicys API. Provides a resource to create an EventBridge policy to support cross-account events.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BusPolicy: {
	spec:    #BusPolicySpec   @go(Spec)
	status?: #BusPolicyStatus @go(Status)
}

// BusPolicyList contains a list of BusPolicys
#BusPolicyList: {
	items: [...#BusPolicy] @go(Items,[]BusPolicy)
}
