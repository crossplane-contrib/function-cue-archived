// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cloudwatchevents/v1beta1

package v1beta1

#APIKeyObservation: {
}

#APIKeyParameters: {
	// Header Name.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)
}

#AuthParametersObservation: {
}

#AuthParametersParameters: {
	// Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with basic and oauth. Documented below.
	// +kubebuilder:validation:Optional
	apiKey?: [...#APIKeyParameters] @go(APIKey,[]APIKeyParameters)

	// Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with api_key and oauth. Documented below.
	// +kubebuilder:validation:Optional
	basic?: [...#BasicParameters] @go(Basic,[]BasicParameters)

	// Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
	// +kubebuilder:validation:Optional
	invocationHttpParameters?: [...#InvocationHTTPParametersParameters] @go(InvocationHTTPParameters,[]InvocationHTTPParametersParameters)

	// Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with basic and api_key. Documented below.
	// +kubebuilder:validation:Optional
	oauth?: [...#OauthParameters] @go(Oauth,[]OauthParameters)
}

#BasicObservation: {
}

#BasicParameters: {
	// A username for the authorization.
	// +kubebuilder:validation:Required
	username?: null | string @go(Username,*string)
}

#BodyObservation: {
}

#BodyParameters: {
	// Specified whether the value is secret.
	// +kubebuilder:validation:Optional
	isValueSecret?: null | bool @go(IsValueSecret,*bool)

	// Header Name.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)
}

#ClientParametersObservation: {
}

#ClientParametersParameters: {
	// The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
	// +kubebuilder:validation:Required
	clientId?: null | string @go(ClientID,*string)
}

#ConnectionObservation: {
	// The Amazon Resource Name (ARN) of the connection.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// The Amazon Resource Name (ARN) of the secret created from the authorization parameters specified for the connection.
	secretArn?: null | string @go(SecretArn,*string)
}

#ConnectionParameters: {
	// Parameters used for authorization. A maximum of 1 are allowed. Documented below.
	// +kubebuilder:validation:Required
	authParameters: [...#AuthParametersParameters] @go(AuthParameters,[]AuthParametersParameters)

	// Choose the type of authorization to use for the connection. One of API_KEY,BASIC,OAUTH_CLIENT_CREDENTIALS.
	// +kubebuilder:validation:Required
	authorizationType?: null | string @go(AuthorizationType,*string)

	// Enter a description for the connection. Maximum of 512 characters.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#HeaderObservation: {
}

#HeaderParameters: {
	// Specified whether the value is secret.
	// +kubebuilder:validation:Optional
	isValueSecret?: null | bool @go(IsValueSecret,*bool)

	// Header Name.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)
}

#InvocationHTTPParametersObservation: {
}

#InvocationHTTPParametersParameters: {
	// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	// +kubebuilder:validation:Optional
	body?: [...#BodyParameters] @go(Body,[]BodyParameters)

	// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	// +kubebuilder:validation:Optional
	header?: [...#HeaderParameters] @go(Header,[]HeaderParameters)

	// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	// +kubebuilder:validation:Optional
	queryString?: [...#QueryStringParameters] @go(QueryString,[]QueryStringParameters)
}

#OauthHTTPParametersBodyObservation: {
}

#OauthHTTPParametersBodyParameters: {
	// Specified whether the value is secret.
	// +kubebuilder:validation:Optional
	isValueSecret?: null | bool @go(IsValueSecret,*bool)

	// Header Name.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)
}

#OauthHTTPParametersHeaderObservation: {
}

#OauthHTTPParametersHeaderParameters: {
	// Specified whether the value is secret.
	// +kubebuilder:validation:Optional
	isValueSecret?: null | bool @go(IsValueSecret,*bool)

	// Header Name.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)
}

#OauthHTTPParametersObservation: {
}

#OauthHTTPParametersParameters: {
	// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	// +kubebuilder:validation:Optional
	body?: [...#OauthHTTPParametersBodyParameters] @go(Body,[]OauthHTTPParametersBodyParameters)

	// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	// +kubebuilder:validation:Optional
	header?: [...#OauthHTTPParametersHeaderParameters] @go(Header,[]OauthHTTPParametersHeaderParameters)

	// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	// +kubebuilder:validation:Optional
	queryString?: [...#OauthHTTPParametersQueryStringParameters] @go(QueryString,[]OauthHTTPParametersQueryStringParameters)
}

#OauthHTTPParametersQueryStringObservation: {
}

#OauthHTTPParametersQueryStringParameters: {
	// Specified whether the value is secret.
	// +kubebuilder:validation:Optional
	isValueSecret?: null | bool @go(IsValueSecret,*bool)

	// Header Name.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)
}

#OauthObservation: {
}

#OauthParameters: {
	// The URL to the authorization endpoint.
	// +kubebuilder:validation:Required
	authorizationEndpoint?: null | string @go(AuthorizationEndpoint,*string)

	// Contains the client parameters for OAuth authorization. Contains the following two parameters.
	// +kubebuilder:validation:Optional
	clientParameters?: [...#ClientParametersParameters] @go(ClientParameters,[]ClientParametersParameters)

	// A password for the authorization. Created and stored in AWS Secrets Manager.
	// +kubebuilder:validation:Required
	httpMethod?: null | string @go(HTTPMethod,*string)

	// OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
	// +kubebuilder:validation:Required
	oauthHttpParameters: [...#OauthHTTPParametersParameters] @go(OauthHTTPParameters,[]OauthHTTPParametersParameters)
}

#QueryStringObservation: {
}

#QueryStringParameters: {
	// Specified whether the value is secret.
	// +kubebuilder:validation:Optional
	isValueSecret?: null | bool @go(IsValueSecret,*bool)

	// Header Name.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)
}

// ConnectionSpec defines the desired state of Connection
#ConnectionSpec: {
	forProvider: #ConnectionParameters @go(ForProvider)
}

// ConnectionStatus defines the observed state of Connection.
#ConnectionStatus: {
	atProvider?: #ConnectionObservation @go(AtProvider)
}

// Connection is the Schema for the Connections API. Provides an EventBridge connection resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Connection: {
	spec:    #ConnectionSpec   @go(Spec)
	status?: #ConnectionStatus @go(Status)
}

// ConnectionList contains a list of Connections
#ConnectionList: {
	items: [...#Connection] @go(Items,[]Connection)
}
