// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/devicefarm/v1beta1

package v1beta1

#InstanceProfileObservation: {
	// The Amazon Resource Name of this instance profile.
	arn?: null | string @go(Arn,*string)

	// The description of the instance profile.
	description?: null | string @go(Description,*string)

	// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
	excludeAppPackagesFromCleanup?: [...null | string] @go(ExcludeAppPackagesFromCleanup,[]*string)
	id?: null | string @go(ID,*string)

	// The name for the instance profile.
	name?: null | string @go(Name,*string)

	// When set to true, Device Farm removes app packages after a test run. The default value is false for private devices.
	packageCleanup?: null | bool @go(PackageCleanup,*bool)

	// When set to true, Device Farm reboots the instance after a test run. The default value is true.
	rebootAfterUse?: null | bool @go(RebootAfterUse,*bool)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#InstanceProfileParameters: {
	// The description of the instance profile.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
	// +kubebuilder:validation:Optional
	excludeAppPackagesFromCleanup?: [...null | string] @go(ExcludeAppPackagesFromCleanup,[]*string)

	// The name for the instance profile.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// When set to true, Device Farm removes app packages after a test run. The default value is false for private devices.
	// +kubebuilder:validation:Optional
	packageCleanup?: null | bool @go(PackageCleanup,*bool)

	// When set to true, Device Farm reboots the instance after a test run. The default value is true.
	// +kubebuilder:validation:Optional
	rebootAfterUse?: null | bool @go(RebootAfterUse,*bool)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// InstanceProfileSpec defines the desired state of InstanceProfile
#InstanceProfileSpec: {
	forProvider: #InstanceProfileParameters @go(ForProvider)
}

// InstanceProfileStatus defines the observed state of InstanceProfile.
#InstanceProfileStatus: {
	atProvider?: #InstanceProfileObservation @go(AtProvider)
}

// InstanceProfile is the Schema for the InstanceProfiles API. Provides a Devicefarm instance profile
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#InstanceProfile: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #InstanceProfileSpec   @go(Spec)
	status?: #InstanceProfileStatus @go(Status)
}

// InstanceProfileList contains a list of InstanceProfiles
#InstanceProfileList: {
	items: [...#InstanceProfile] @go(Items,[]InstanceProfile)
}
