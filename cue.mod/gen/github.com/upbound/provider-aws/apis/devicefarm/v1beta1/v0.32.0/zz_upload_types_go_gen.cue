// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/devicefarm/v1beta1

package v1beta1

#UploadObservation: {
	// The Amazon Resource Name of this upload.
	arn?: null | string @go(Arn,*string)

	// The upload's category.
	category?: null | string @go(Category,*string)
	id?:       null | string @go(ID,*string)

	// The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.
	metadata?: null | string @go(Metadata,*string)

	// The presigned Amazon S3 URL that was used to store a file using a PUT request.
	url?: null | string @go(URL,*string)
}

#UploadParameters: {
	// The upload's content type (for example, application/octet-stream).
	// +kubebuilder:validation:Optional
	contentType?: null | string @go(ContentType,*string)

	// The upload's file name. The name should not contain any forward slashes (/). If you are uploading an iOS app, the file name must end with the .ipa extension. If you are uploading an Android app, the file name must end with the .apk extension. For all others, the file name must end with the .zip file extension.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The ARN of the project for the upload.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/devicefarm/v1beta1.Project
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	projectArn?: null | string @go(ProjectArn,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The upload's upload type. See AWS Docs for valid list of values.
	// +kubebuilder:validation:Required
	type?: null | string @go(Type,*string)
}

// UploadSpec defines the desired state of Upload
#UploadSpec: {
	forProvider: #UploadParameters @go(ForProvider)
}

// UploadStatus defines the observed state of Upload.
#UploadStatus: {
	atProvider?: #UploadObservation @go(AtProvider)
}

// Upload is the Schema for the Uploads API. Provides a Devicefarm upload
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#Upload: {
	spec:    #UploadSpec   @go(Spec)
	status?: #UploadStatus @go(Status)
}

// UploadList contains a list of Uploads
#UploadList: {
	items: [...#Upload] @go(Items,[]Upload)
}
