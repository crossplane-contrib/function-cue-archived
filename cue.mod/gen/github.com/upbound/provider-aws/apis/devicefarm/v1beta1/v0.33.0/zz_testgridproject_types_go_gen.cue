// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/devicefarm/v1beta1

package v1beta1

#TestGridProjectObservation: {
	// The Amazon Resource Name of this Test Grid Project.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#TestGridProjectParameters: {
	// Human-readable description of the project.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The name of the Selenium testing project.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The VPC security groups and subnets that are attached to a project. See VPC Config below.
	// +kubebuilder:validation:Optional
	vpcConfig?: [...#VPCConfigParameters] @go(VPCConfig,[]VPCConfigParameters)
}

#VPCConfigObservation: {
}

#VPCConfigParameters: {
	// A list of VPC security group IDs in your Amazon VPC.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	securityGroupIds?: [...null | string] @go(SecurityGroupIds,[]*string)

	// A list of VPC subnet IDs in your Amazon VPC.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.Subnet
	// +crossplane:generate:reference:refFieldName=SubnetIDRefs
	// +crossplane:generate:reference:selectorFieldName=SubnetIDSelector
	// +kubebuilder:validation:Optional
	subnetIds?: [...null | string] @go(SubnetIds,[]*string)

	// The ID of the Amazon VPC.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.VPC
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	vpcId?: null | string @go(VPCID,*string)
}

// TestGridProjectSpec defines the desired state of TestGridProject
#TestGridProjectSpec: {
	forProvider: #TestGridProjectParameters @go(ForProvider)
}

// TestGridProjectStatus defines the observed state of TestGridProject.
#TestGridProjectStatus: {
	atProvider?: #TestGridProjectObservation @go(AtProvider)
}

// TestGridProject is the Schema for the TestGridProjects API. Provides a Devicefarm test_grid_project
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#TestGridProject: {
	spec:    #TestGridProjectSpec   @go(Spec)
	status?: #TestGridProjectStatus @go(Status)
}

// TestGridProjectList contains a list of TestGridProjects
#TestGridProjectList: {
	items: [...#TestGridProject] @go(Items,[]TestGridProject)
}
