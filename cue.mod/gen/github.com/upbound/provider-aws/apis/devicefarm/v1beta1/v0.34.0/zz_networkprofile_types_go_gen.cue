// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/devicefarm/v1beta1

package v1beta1

#NetworkProfileObservation: {
	// The Amazon Resource Name of this network profile.
	arn?: null | string @go(Arn,*string)

	// The description of the network profile.
	description?: null | string @go(Description,*string)

	// The data throughput rate in bits per second, as an integer from 0 to 104857600. Default value is 104857600.
	downlinkBandwidthBits?: null | float64 @go(DownlinkBandwidthBits,*float64)

	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	downlinkDelayMs?: null | float64 @go(DownlinkDelayMs,*float64)

	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	downlinkJitterMs?: null | float64 @go(DownlinkJitterMs,*float64)

	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	downlinkLossPercent?: null | float64 @go(DownlinkLossPercent,*float64)
	id?:                  null | string  @go(ID,*string)

	// The name for the network profile.
	name?: null | string @go(Name,*string)

	// The ARN of the project for the network profile.
	projectArn?: null | string @go(ProjectArn,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The type of network profile to create. Valid values are listed are PRIVATE and CURATED.
	type?: null | string @go(Type,*string)

	// The data throughput rate in bits per second, as an integer from 0 to 104857600. Default value is 104857600.
	uplinkBandwidthBits?: null | float64 @go(UplinkBandwidthBits,*float64)

	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	uplinkDelayMs?: null | float64 @go(UplinkDelayMs,*float64)

	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	uplinkJitterMs?: null | float64 @go(UplinkJitterMs,*float64)

	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	uplinkLossPercent?: null | float64 @go(UplinkLossPercent,*float64)
}

#NetworkProfileParameters: {
	// The description of the network profile.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The data throughput rate in bits per second, as an integer from 0 to 104857600. Default value is 104857600.
	// +kubebuilder:validation:Optional
	downlinkBandwidthBits?: null | float64 @go(DownlinkBandwidthBits,*float64)

	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	// +kubebuilder:validation:Optional
	downlinkDelayMs?: null | float64 @go(DownlinkDelayMs,*float64)

	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	// +kubebuilder:validation:Optional
	downlinkJitterMs?: null | float64 @go(DownlinkJitterMs,*float64)

	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	// +kubebuilder:validation:Optional
	downlinkLossPercent?: null | float64 @go(DownlinkLossPercent,*float64)

	// The name for the network profile.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The ARN of the project for the network profile.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/devicefarm/v1beta1.Project
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	projectArn?: null | string @go(ProjectArn,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The type of network profile to create. Valid values are listed are PRIVATE and CURATED.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// The data throughput rate in bits per second, as an integer from 0 to 104857600. Default value is 104857600.
	// +kubebuilder:validation:Optional
	uplinkBandwidthBits?: null | float64 @go(UplinkBandwidthBits,*float64)

	// Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.
	// +kubebuilder:validation:Optional
	uplinkDelayMs?: null | float64 @go(UplinkDelayMs,*float64)

	// Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.
	// +kubebuilder:validation:Optional
	uplinkJitterMs?: null | float64 @go(UplinkJitterMs,*float64)

	// Proportion of received packets that fail to arrive from 0 to 100 percent.
	// +kubebuilder:validation:Optional
	uplinkLossPercent?: null | float64 @go(UplinkLossPercent,*float64)
}

// NetworkProfileSpec defines the desired state of NetworkProfile
#NetworkProfileSpec: {
	forProvider: #NetworkProfileParameters @go(ForProvider)
}

// NetworkProfileStatus defines the observed state of NetworkProfile.
#NetworkProfileStatus: {
	atProvider?: #NetworkProfileObservation @go(AtProvider)
}

// NetworkProfile is the Schema for the NetworkProfiles API. Provides a Devicefarm network profile
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#NetworkProfile: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #NetworkProfileSpec   @go(Spec)
	status?: #NetworkProfileStatus @go(Status)
}

// NetworkProfileList contains a list of NetworkProfiles
#NetworkProfileList: {
	items: [...#NetworkProfile] @go(Items,[]NetworkProfile)
}
