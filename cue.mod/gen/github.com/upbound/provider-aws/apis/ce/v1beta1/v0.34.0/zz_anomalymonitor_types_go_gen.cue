// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/ce/v1beta1

package v1beta1

#AnomalyMonitorObservation: {
	// ARN of the anomaly monitor.
	arn?: null | string @go(Arn,*string)

	// Unique ID of the anomaly monitor. Same as arn.
	id?: null | string @go(ID,*string)

	// The dimensions to evaluate. Valid values: SERVICE.
	monitorDimension?: null | string @go(MonitorDimension,*string)

	// A valid JSON representation for the Expression object.
	monitorSpecification?: null | string @go(MonitorSpecification,*string)

	// The possible type values. Valid values: DIMENSIONAL | CUSTOM.
	monitorType?: null | string @go(MonitorType,*string)

	// The name of the monitor.
	name?: null | string @go(Name,*string)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#AnomalyMonitorParameters: {
	// The dimensions to evaluate. Valid values: SERVICE.
	// +kubebuilder:validation:Optional
	monitorDimension?: null | string @go(MonitorDimension,*string)

	// A valid JSON representation for the Expression object.
	// +kubebuilder:validation:Optional
	monitorSpecification?: null | string @go(MonitorSpecification,*string)

	// The possible type values. Valid values: DIMENSIONAL | CUSTOM.
	// +kubebuilder:validation:Optional
	monitorType?: null | string @go(MonitorType,*string)

	// The name of the monitor.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// AnomalyMonitorSpec defines the desired state of AnomalyMonitor
#AnomalyMonitorSpec: {
	forProvider: #AnomalyMonitorParameters @go(ForProvider)
}

// AnomalyMonitorStatus defines the observed state of AnomalyMonitor.
#AnomalyMonitorStatus: {
	atProvider?: #AnomalyMonitorObservation @go(AtProvider)
}

// AnomalyMonitor is the Schema for the AnomalyMonitors API. Provides a CE Cost Anomaly Monitor
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#AnomalyMonitor: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.monitorType)",message="monitorType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #AnomalyMonitorSpec   @go(Spec)
	status?: #AnomalyMonitorStatus @go(Status)
}

// AnomalyMonitorList contains a list of AnomalyMonitors
#AnomalyMonitorList: {
	items: [...#AnomalyMonitor] @go(Items,[]AnomalyMonitor)
}
