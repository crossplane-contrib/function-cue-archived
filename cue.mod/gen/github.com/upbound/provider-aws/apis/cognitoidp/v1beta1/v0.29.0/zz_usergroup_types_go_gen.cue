// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cognitoidp/v1beta1

package v1beta1

#UserGroupObservation: {
	id?: null | string @go(ID,*string)
}

#UserGroupParameters: {
	// The description of the user group.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The name of the user group.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The precedence of the user group.
	// +kubebuilder:validation:Optional
	precedence?: null | float64 @go(Precedence,*float64)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The ARN of the IAM role to be associated with the user group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)

	// The user pool ID.
	// +crossplane:generate:reference:type=UserPool
	// +kubebuilder:validation:Optional
	userPoolId?: null | string @go(UserPoolID,*string)
}

// UserGroupSpec defines the desired state of UserGroup
#UserGroupSpec: {
	forProvider: #UserGroupParameters @go(ForProvider)
}

// UserGroupStatus defines the observed state of UserGroup.
#UserGroupStatus: {
	atProvider?: #UserGroupObservation @go(AtProvider)
}

// UserGroup is the Schema for the UserGroups API. Provides a Cognito User Group resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserGroup: {
	spec:    #UserGroupSpec   @go(Spec)
	status?: #UserGroupStatus @go(Status)
}

// UserGroupList contains a list of UserGroups
#UserGroupList: {
	items: [...#UserGroup] @go(Items,[]UserGroup)
}
