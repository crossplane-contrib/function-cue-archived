// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cognitoidp/v1beta1

package v1beta1

#UserInGroupObservation: {
	// The name of the group to which the user is to be added.
	groupName?: null | string @go(GroupName,*string)
	id?:        null | string @go(ID,*string)

	// The user pool ID of the user and group.
	userPoolId?: null | string @go(UserPoolID,*string)

	// The username of the user to be added to the group.
	username?: null | string @go(Username,*string)
}

#UserInGroupParameters: {
	// The name of the group to which the user is to be added.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.UserGroup
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("name",false)
	// +kubebuilder:validation:Optional
	groupName?: null | string @go(GroupName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The user pool ID of the user and group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.UserPool
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	userPoolId?: null | string @go(UserPoolID,*string)

	// The username of the user to be added to the group.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.User
	// +kubebuilder:validation:Optional
	username?: null | string @go(Username,*string)
}

// UserInGroupSpec defines the desired state of UserInGroup
#UserInGroupSpec: {
	forProvider: #UserInGroupParameters @go(ForProvider)
}

// UserInGroupStatus defines the observed state of UserInGroup.
#UserInGroupStatus: {
	atProvider?: #UserInGroupObservation @go(AtProvider)
}

// UserInGroup is the Schema for the UserInGroups API. Adds the specified user to the specified group.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserInGroup: {
	spec:    #UserInGroupSpec   @go(Spec)
	status?: #UserInGroupStatus @go(Status)
}

// UserInGroupList contains a list of UserInGroups
#UserInGroupList: {
	items: [...#UserInGroup] @go(Items,[]UserInGroup)
}
