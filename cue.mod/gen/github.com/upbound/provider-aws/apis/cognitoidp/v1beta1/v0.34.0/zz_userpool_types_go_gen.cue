// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cognitoidp/v1beta1

package v1beta1

#AccountRecoverySettingObservation: {
	// List of Account Recovery Options of the following structure:
	recoveryMechanism?: [...#RecoveryMechanismObservation] @go(RecoveryMechanism,[]RecoveryMechanismObservation)
}

#AccountRecoverySettingParameters: {
	// List of Account Recovery Options of the following structure:
	// +kubebuilder:validation:Required
	recoveryMechanism: [...#RecoveryMechanismParameters] @go(RecoveryMechanism,[]RecoveryMechanismParameters)
}

#AdminCreateUserConfigObservation: {
	// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
	allowAdminCreateUserOnly?: null | bool @go(AllowAdminCreateUserOnly,*bool)

	// Invite message template structure. Detailed below.
	inviteMessageTemplate?: [...#InviteMessageTemplateObservation] @go(InviteMessageTemplate,[]InviteMessageTemplateObservation)
}

#AdminCreateUserConfigParameters: {
	// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
	// +kubebuilder:validation:Optional
	allowAdminCreateUserOnly?: null | bool @go(AllowAdminCreateUserOnly,*bool)

	// Invite message template structure. Detailed below.
	// +kubebuilder:validation:Optional
	inviteMessageTemplate?: [...#InviteMessageTemplateParameters] @go(InviteMessageTemplate,[]InviteMessageTemplateParameters)
}

#CustomEmailSenderObservation: {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send email notifications to users.
	lambdaArn?: null | string @go(LambdaArn,*string)

	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom email Lambda function. The only supported value is V1_0.
	lambdaVersion?: null | string @go(LambdaVersion,*string)
}

#CustomEmailSenderParameters: {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send email notifications to users.
	// +kubebuilder:validation:Required
	lambdaArn?: null | string @go(LambdaArn,*string)

	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom email Lambda function. The only supported value is V1_0.
	// +kubebuilder:validation:Required
	lambdaVersion?: null | string @go(LambdaVersion,*string)
}

#CustomSMSSenderObservation: {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send SMS notifications to users.
	lambdaArn?: null | string @go(LambdaArn,*string)

	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS Lambda function. The only supported value is V1_0.
	lambdaVersion?: null | string @go(LambdaVersion,*string)
}

#CustomSMSSenderParameters: {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send SMS notifications to users.
	// +kubebuilder:validation:Required
	lambdaArn?: null | string @go(LambdaArn,*string)

	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS Lambda function. The only supported value is V1_0.
	// +kubebuilder:validation:Required
	lambdaVersion?: null | string @go(LambdaVersion,*string)
}

#DeviceConfigurationObservation: {
	// Whether a challenge is required on a new device. Only applicable to a new device.
	challengeRequiredOnNewDevice?: null | bool @go(ChallengeRequiredOnNewDevice,*bool)

	// Whether a device is only remembered on user prompt. false equates to "Always" remember, true is "User Opt In," and not using a device_configuration block is "No."
	deviceOnlyRememberedOnUserPrompt?: null | bool @go(DeviceOnlyRememberedOnUserPrompt,*bool)
}

#DeviceConfigurationParameters: {
	// Whether a challenge is required on a new device. Only applicable to a new device.
	// +kubebuilder:validation:Optional
	challengeRequiredOnNewDevice?: null | bool @go(ChallengeRequiredOnNewDevice,*bool)

	// Whether a device is only remembered on user prompt. false equates to "Always" remember, true is "User Opt In," and not using a device_configuration block is "No."
	// +kubebuilder:validation:Optional
	deviceOnlyRememberedOnUserPrompt?: null | bool @go(DeviceOnlyRememberedOnUserPrompt,*bool)
}

#EmailConfigurationObservation: {
	// Email configuration set name from SES.
	configurationSet?: null | string @go(ConfigurationSet,*string)

	// Email delivery method to use. COGNITO_DEFAULT for the default email functionality built into Cognito or DEVELOPER to use your Amazon SES configuration.
	emailSendingAccount?: null | string @go(EmailSendingAccount,*string)

	// Sender’s email address or sender’s display name with their email address (e.g., john@example.com, John Smith <john@example.com> or \"John Smith Ph.D.\" <john@example.com>). Escaped double quotes are required around display names that contain certain characters as specified in RFC 5322.
	fromEmailAddress?: null | string @go(FromEmailAddress,*string)

	// REPLY-TO email address.
	replyToEmailAddress?: null | string @go(ReplyToEmailAddress,*string)

	// ARN of the SES verified email identity to use. Required if email_sending_account is set to DEVELOPER.
	sourceArn?: null | string @go(SourceArn,*string)
}

#EmailConfigurationParameters: {
	// Email configuration set name from SES.
	// +kubebuilder:validation:Optional
	configurationSet?: null | string @go(ConfigurationSet,*string)

	// Email delivery method to use. COGNITO_DEFAULT for the default email functionality built into Cognito or DEVELOPER to use your Amazon SES configuration.
	// +kubebuilder:validation:Optional
	emailSendingAccount?: null | string @go(EmailSendingAccount,*string)

	// Sender’s email address or sender’s display name with their email address (e.g., john@example.com, John Smith <john@example.com> or \"John Smith Ph.D.\" <john@example.com>). Escaped double quotes are required around display names that contain certain characters as specified in RFC 5322.
	// +kubebuilder:validation:Optional
	fromEmailAddress?: null | string @go(FromEmailAddress,*string)

	// REPLY-TO email address.
	// +kubebuilder:validation:Optional
	replyToEmailAddress?: null | string @go(ReplyToEmailAddress,*string)

	// ARN of the SES verified email identity to use. Required if email_sending_account is set to DEVELOPER.
	// +kubebuilder:validation:Optional
	sourceArn?: null | string @go(SourceArn,*string)
}

#InviteMessageTemplateObservation: {
	// Message template for email messages. Must contain {username} and {####} placeholders, for username and temporary password, respectively.
	emailMessage?: null | string @go(EmailMessage,*string)

	// Subject line for email messages.
	emailSubject?: null | string @go(EmailSubject,*string)

	// Message template for SMS messages. Must contain {username} and {####} placeholders, for username and temporary password, respectively.
	smsMessage?: null | string @go(SMSMessage,*string)
}

#InviteMessageTemplateParameters: {
	// Message template for email messages. Must contain {username} and {####} placeholders, for username and temporary password, respectively.
	// +kubebuilder:validation:Optional
	emailMessage?: null | string @go(EmailMessage,*string)

	// Subject line for email messages.
	// +kubebuilder:validation:Optional
	emailSubject?: null | string @go(EmailSubject,*string)

	// Message template for SMS messages. Must contain {username} and {####} placeholders, for username and temporary password, respectively.
	// +kubebuilder:validation:Optional
	smsMessage?: null | string @go(SMSMessage,*string)
}

#LambdaConfigObservation: {
	// ARN of the lambda creating an authentication challenge.
	createAuthChallenge?: null | string @go(CreateAuthChallenge,*string)

	// A custom email sender AWS Lambda trigger. See custom_email_sender Below.
	customEmailSender?: [...#CustomEmailSenderObservation] @go(CustomEmailSender,[]CustomEmailSenderObservation)

	// Custom Message AWS Lambda trigger.
	customMessage?: null | string @go(CustomMessage,*string)

	// A custom SMS sender AWS Lambda trigger. See custom_sms_sender Below.
	customSmsSender?: [...#CustomSMSSenderObservation] @go(CustomSMSSender,[]CustomSMSSenderObservation)

	// Defines the authentication challenge.
	defineAuthChallenge?: null | string @go(DefineAuthChallenge,*string)

	// The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Post-authentication AWS Lambda trigger.
	postAuthentication?: null | string @go(PostAuthentication,*string)

	// Post-confirmation AWS Lambda trigger.
	postConfirmation?: null | string @go(PostConfirmation,*string)

	// Pre-authentication AWS Lambda trigger.
	preAuthentication?: null | string @go(PreAuthentication,*string)

	// Pre-registration AWS Lambda trigger.
	preSignUp?: null | string @go(PreSignUp,*string)

	// Allow to customize identity token claims before token generation.
	preTokenGeneration?: null | string @go(PreTokenGeneration,*string)

	// User migration Lambda config type.
	userMigration?: null | string @go(UserMigration,*string)

	// Verifies the authentication challenge response.
	verifyAuthChallengeResponse?: null | string @go(VerifyAuthChallengeResponse,*string)
}

#LambdaConfigParameters: {
	// ARN of the lambda creating an authentication challenge.
	// +kubebuilder:validation:Optional
	createAuthChallenge?: null | string @go(CreateAuthChallenge,*string)

	// A custom email sender AWS Lambda trigger. See custom_email_sender Below.
	// +kubebuilder:validation:Optional
	customEmailSender?: [...#CustomEmailSenderParameters] @go(CustomEmailSender,[]CustomEmailSenderParameters)

	// Custom Message AWS Lambda trigger.
	// +kubebuilder:validation:Optional
	customMessage?: null | string @go(CustomMessage,*string)

	// A custom SMS sender AWS Lambda trigger. See custom_sms_sender Below.
	// +kubebuilder:validation:Optional
	customSmsSender?: [...#CustomSMSSenderParameters] @go(CustomSMSSender,[]CustomSMSSenderParameters)

	// Defines the authentication challenge.
	// +kubebuilder:validation:Optional
	defineAuthChallenge?: null | string @go(DefineAuthChallenge,*string)

	// The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Post-authentication AWS Lambda trigger.
	// +kubebuilder:validation:Optional
	postAuthentication?: null | string @go(PostAuthentication,*string)

	// Post-confirmation AWS Lambda trigger.
	// +kubebuilder:validation:Optional
	postConfirmation?: null | string @go(PostConfirmation,*string)

	// Pre-authentication AWS Lambda trigger.
	// +kubebuilder:validation:Optional
	preAuthentication?: null | string @go(PreAuthentication,*string)

	// Pre-registration AWS Lambda trigger.
	// +kubebuilder:validation:Optional
	preSignUp?: null | string @go(PreSignUp,*string)

	// Allow to customize identity token claims before token generation.
	// +kubebuilder:validation:Optional
	preTokenGeneration?: null | string @go(PreTokenGeneration,*string)

	// User migration Lambda config type.
	// +kubebuilder:validation:Optional
	userMigration?: null | string @go(UserMigration,*string)

	// Verifies the authentication challenge response.
	// +kubebuilder:validation:Optional
	verifyAuthChallengeResponse?: null | string @go(VerifyAuthChallengeResponse,*string)
}

#NumberAttributeConstraintsObservation: {
	// Maximum value of an attribute that is of the number data type.
	maxValue?: null | string @go(MaxValue,*string)

	// Minimum value of an attribute that is of the number data type.
	minValue?: null | string @go(MinValue,*string)
}

#NumberAttributeConstraintsParameters: {
	// Maximum value of an attribute that is of the number data type.
	// +kubebuilder:validation:Optional
	maxValue?: null | string @go(MaxValue,*string)

	// Minimum value of an attribute that is of the number data type.
	// +kubebuilder:validation:Optional
	minValue?: null | string @go(MinValue,*string)
}

#PasswordPolicyObservation: {
	// Minimum length of the password policy that you have set.
	minimumLength?: null | float64 @go(MinimumLength,*float64)

	// Whether you have required users to use at least one lowercase letter in their password.
	requireLowercase?: null | bool @go(RequireLowercase,*bool)

	// Whether you have required users to use at least one number in their password.
	requireNumbers?: null | bool @go(RequireNumbers,*bool)

	// Whether you have required users to use at least one symbol in their password.
	requireSymbols?: null | bool @go(RequireSymbols,*bool)

	// Whether you have required users to use at least one uppercase letter in their password.
	requireUppercase?: null | bool @go(RequireUppercase,*bool)

	// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
	temporaryPasswordValidityDays?: null | float64 @go(TemporaryPasswordValidityDays,*float64)
}

#PasswordPolicyParameters: {
	// Minimum length of the password policy that you have set.
	// +kubebuilder:validation:Optional
	minimumLength?: null | float64 @go(MinimumLength,*float64)

	// Whether you have required users to use at least one lowercase letter in their password.
	// +kubebuilder:validation:Optional
	requireLowercase?: null | bool @go(RequireLowercase,*bool)

	// Whether you have required users to use at least one number in their password.
	// +kubebuilder:validation:Optional
	requireNumbers?: null | bool @go(RequireNumbers,*bool)

	// Whether you have required users to use at least one symbol in their password.
	// +kubebuilder:validation:Optional
	requireSymbols?: null | bool @go(RequireSymbols,*bool)

	// Whether you have required users to use at least one uppercase letter in their password.
	// +kubebuilder:validation:Optional
	requireUppercase?: null | bool @go(RequireUppercase,*bool)

	// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
	// +kubebuilder:validation:Optional
	temporaryPasswordValidityDays?: null | float64 @go(TemporaryPasswordValidityDays,*float64)
}

#RecoveryMechanismObservation: {
	// Name of the user pool.
	name?: null | string @go(Name,*string)

	// Positive integer specifying priority of a method with 1 being the highest priority.
	priority?: null | float64 @go(Priority,*float64)
}

#RecoveryMechanismParameters: {
	// Name of the user pool.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Positive integer specifying priority of a method with 1 being the highest priority.
	// +kubebuilder:validation:Required
	priority?: null | float64 @go(Priority,*float64)
}

#SMSConfigurationObservation: {
	// External ID used in IAM role trust relationships. For more information about using external IDs, see How to Use an External ID When Granting Access to Your AWS Resources to a Third Party.
	externalId?: null | string @go(ExternalID,*string)

	// ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
	snsCallerArn?: null | string @go(SnsCallerArn,*string)

	// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported Legacy Amazon SNS alternate Region. Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see SMS message settings for Amazon Cognito user pools.
	snsRegion?: null | string @go(SnsRegion,*string)
}

#SMSConfigurationParameters: {
	// External ID used in IAM role trust relationships. For more information about using external IDs, see How to Use an External ID When Granting Access to Your AWS Resources to a Third Party.
	// +kubebuilder:validation:Required
	externalId?: null | string @go(ExternalID,*string)

	// ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	snsCallerArn?: null | string @go(SnsCallerArn,*string)

	// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported Legacy Amazon SNS alternate Region. Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see SMS message settings for Amazon Cognito user pools.
	// +kubebuilder:validation:Optional
	snsRegion?: null | string @go(SnsRegion,*string)
}

#SchemaObservation: {
	// Attribute data type. Must be one of Boolean, Number, String, DateTime.
	attributeDataType?: null | string @go(AttributeDataType,*string)

	// Whether the attribute type is developer only.
	developerOnlyAttribute?: null | bool @go(DeveloperOnlyAttribute,*bool)

	// Whether the attribute can be changed once it has been created.
	mutable?: null | bool @go(Mutable,*bool)

	// Name of the user pool.
	name?: null | string @go(Name,*string)

	// Configuration block for the constraints for an attribute of the number type. Detailed below.
	numberAttributeConstraints?: [...#NumberAttributeConstraintsObservation] @go(NumberAttributeConstraints,[]NumberAttributeConstraintsObservation)

	// Whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
	required?: null | bool @go(Required,*bool)

	// Constraints for an attribute of the string type. Detailed below.
	stringAttributeConstraints?: [...#StringAttributeConstraintsObservation] @go(StringAttributeConstraints,[]StringAttributeConstraintsObservation)
}

#SchemaParameters: {
	// Attribute data type. Must be one of Boolean, Number, String, DateTime.
	// +kubebuilder:validation:Required
	attributeDataType?: null | string @go(AttributeDataType,*string)

	// Whether the attribute type is developer only.
	// +kubebuilder:validation:Optional
	developerOnlyAttribute?: null | bool @go(DeveloperOnlyAttribute,*bool)

	// Whether the attribute can be changed once it has been created.
	// +kubebuilder:validation:Optional
	mutable?: null | bool @go(Mutable,*bool)

	// Name of the user pool.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Configuration block for the constraints for an attribute of the number type. Detailed below.
	// +kubebuilder:validation:Optional
	numberAttributeConstraints?: [...#NumberAttributeConstraintsParameters] @go(NumberAttributeConstraints,[]NumberAttributeConstraintsParameters)

	// Whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
	// +kubebuilder:validation:Optional
	required?: null | bool @go(Required,*bool)

	// Constraints for an attribute of the string type. Detailed below.
	// +kubebuilder:validation:Optional
	stringAttributeConstraints?: [...#StringAttributeConstraintsParameters] @go(StringAttributeConstraints,[]StringAttributeConstraintsParameters)
}

#SoftwareTokenMfaConfigurationObservation: {
	// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA When sms_configuration is not present, the mfa_configuration argument must be set to OFF and the software_token_mfa_configuration configuration block must be fully removed.
	enabled?: null | bool @go(Enabled,*bool)
}

#SoftwareTokenMfaConfigurationParameters: {
	// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA When sms_configuration is not present, the mfa_configuration argument must be set to OFF and the software_token_mfa_configuration configuration block must be fully removed.
	// +kubebuilder:validation:Required
	enabled?: null | bool @go(Enabled,*bool)
}

#StringAttributeConstraintsObservation: {
	// Maximum length of an attribute value of the string type.
	maxLength?: null | string @go(MaxLength,*string)

	// Minimum length of an attribute value of the string type.
	minLength?: null | string @go(MinLength,*string)
}

#StringAttributeConstraintsParameters: {
	// Maximum length of an attribute value of the string type.
	// +kubebuilder:validation:Optional
	maxLength?: null | string @go(MaxLength,*string)

	// Minimum length of an attribute value of the string type.
	// +kubebuilder:validation:Optional
	minLength?: null | string @go(MinLength,*string)
}

#UserAttributeUpdateSettingsObservation: {
	// A list of attributes requiring verification before update. If set, the provided value(s) must also be set in auto_verified_attributes. Valid values: email, phone_number.
	attributesRequireVerificationBeforeUpdate?: [...null | string] @go(AttributesRequireVerificationBeforeUpdate,[]*string)
}

#UserAttributeUpdateSettingsParameters: {
	// A list of attributes requiring verification before update. If set, the provided value(s) must also be set in auto_verified_attributes. Valid values: email, phone_number.
	// +kubebuilder:validation:Required
	attributesRequireVerificationBeforeUpdate: [...null | string] @go(AttributesRequireVerificationBeforeUpdate,[]*string)
}

#UserPoolAddOnsObservation: {
	// Mode for advanced security, must be one of OFF, AUDIT or ENFORCED.
	advancedSecurityMode?: null | string @go(AdvancedSecurityMode,*string)
}

#UserPoolAddOnsParameters: {
	// Mode for advanced security, must be one of OFF, AUDIT or ENFORCED.
	// +kubebuilder:validation:Required
	advancedSecurityMode?: null | string @go(AdvancedSecurityMode,*string)
}

#UserPoolObservation: {
	// Configuration block to define which verified available method a user can use to recover their forgotten password. Detailed below.
	accountRecoverySetting?: [...#AccountRecoverySettingObservation] @go(AccountRecoverySetting,[]AccountRecoverySettingObservation)

	// Configuration block for creating a new user profile. Detailed below.
	adminCreateUserConfig?: [...#AdminCreateUserConfigObservation] @go(AdminCreateUserConfig,[]AdminCreateUserConfigObservation)

	// Attributes supported as an alias for this user pool. Valid values: phone_number, email, or preferred_username. Conflicts with username_attributes.
	aliasAttributes?: [...null | string] @go(AliasAttributes,[]*string)

	// ARN of the user pool.
	arn?: null | string @go(Arn,*string)

	// Attributes to be auto-verified. Valid values: email, phone_number.
	autoVerifiedAttributes?: [...null | string] @go(AutoVerifiedAttributes,[]*string)

	// Date the user pool was created.
	creationDate?: null | string @go(CreationDate,*string)

	// A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. For example: auth.example.com.
	customDomain?: null | string @go(CustomDomain,*string)

	// When active, DeletionProtection prevents accidental deletion of your user pool. Before you can delete a user pool that you have protected against deletion, you must deactivate this feature. Valid values are ACTIVE and INACTIVE, Default value is INACTIVE.
	deletionProtection?: null | string @go(DeletionProtection,*string)

	// Configuration block for the user pool's device tracking. Detailed below.
	deviceConfiguration?: [...#DeviceConfigurationObservation] @go(DeviceConfiguration,[]DeviceConfigurationObservation)

	// Holds the domain prefix if the user pool has a domain associated with it.
	domain?: null | string @go(Domain,*string)

	// Configuration block for configuring email. Detailed below.
	emailConfiguration?: [...#EmailConfigurationObservation] @go(EmailConfiguration,[]EmailConfigurationObservation)

	// String representing the email verification message. Conflicts with verification_message_template configuration block email_message argument.
	emailVerificationMessage?: null | string @go(EmailVerificationMessage,*string)

	// String representing the email verification subject. Conflicts with verification_message_template configuration block email_subject argument.
	emailVerificationSubject?: null | string @go(EmailVerificationSubject,*string)

	// Endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
	endpoint?: null | string @go(Endpoint,*string)

	// A number estimating the size of the user pool.
	estimatedNumberOfUsers?: null | float64 @go(EstimatedNumberOfUsers,*float64)

	// ID of the user pool.
	id?: null | string @go(ID,*string)

	// Configuration block for the AWS Lambda triggers associated with the user pool. Detailed below.
	lambdaConfig?: [...#LambdaConfigObservation] @go(LambdaConfig,[]LambdaConfigObservation)

	// Date the user pool was last modified.
	lastModifiedDate?: null | string @go(LastModifiedDate,*string)

	// Multi-Factor Authentication (MFA) configuration for the User Pool. Defaults of OFF. Valid values are OFF (MFA Tokens are not required), ON (MFA is required for all users to sign in; requires at least one of sms_configuration or software_token_mfa_configuration to be configured), or OPTIONAL (MFA Will be required only for individual users who have MFA Enabled; requires at least one of sms_configuration or software_token_mfa_configuration to be configured).
	mfaConfiguration?: null | string @go(MfaConfiguration,*string)

	// Name of the user pool.
	name?: null | string @go(Name,*string)

	// Configuration blocked for information about the user pool password policy. Detailed below.
	passwordPolicy?: [...#PasswordPolicyObservation] @go(PasswordPolicy,[]PasswordPolicyObservation)

	// String representing the SMS authentication message. The Message must contain the {####} placeholder, which will be replaced with the code.
	smsAuthenticationMessage?: null | string @go(SMSAuthenticationMessage,*string)

	// Configuration block for Short Message Service (SMS) settings. Detailed below. These settings apply to SMS user verification and SMS Multi-Factor Authentication (MFA). Due to Cognito API restrictions, the SMS configuration cannot be removed without recreating the Cognito User Pool. For user data safety, this resource will ignore the removal of this configuration by disabling drift detection. To force resource recreation after this configuration has been applied, see the taint command.
	smsConfiguration?: [...#SMSConfigurationObservation] @go(SMSConfiguration,[]SMSConfigurationObservation)

	// String representing the SMS verification message. Conflicts with verification_message_template configuration block sms_message argument.
	smsVerificationMessage?: null | string @go(SMSVerificationMessage,*string)

	// Configuration block for the schema attributes of a user pool. Detailed below. Schema attributes from the standard attribute set only need to be specified if they are different from the default configuration. Attributes can be added, but not modified or removed. Maximum of 50 attributes.
	schema?: [...#SchemaObservation] @go(Schema,[]SchemaObservation)

	// Configuration block for software token Mult-Factor Authentication (MFA) settings. Detailed below.
	softwareTokenMfaConfiguration?: [...#SoftwareTokenMfaConfigurationObservation] @go(SoftwareTokenMfaConfiguration,[]SoftwareTokenMfaConfigurationObservation)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// Configuration block for user attribute update settings. Detailed below.
	userAttributeUpdateSettings?: [...#UserAttributeUpdateSettingsObservation] @go(UserAttributeUpdateSettings,[]UserAttributeUpdateSettingsObservation)

	// Configuration block for user pool add-ons to enable user pool advanced security mode features. Detailed below.
	userPoolAddOns?: [...#UserPoolAddOnsObservation] @go(UserPoolAddOns,[]UserPoolAddOnsObservation)

	// Whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with alias_attributes.
	usernameAttributes?: [...null | string] @go(UsernameAttributes,[]*string)

	// Configuration block for username configuration. Detailed below.
	usernameConfiguration?: [...#UsernameConfigurationObservation] @go(UsernameConfiguration,[]UsernameConfigurationObservation)

	// Configuration block for verification message templates. Detailed below.
	verificationMessageTemplate?: [...#VerificationMessageTemplateObservation] @go(VerificationMessageTemplate,[]VerificationMessageTemplateObservation)
}

#UserPoolParameters: {
	// Configuration block to define which verified available method a user can use to recover their forgotten password. Detailed below.
	// +kubebuilder:validation:Optional
	accountRecoverySetting?: [...#AccountRecoverySettingParameters] @go(AccountRecoverySetting,[]AccountRecoverySettingParameters)

	// Configuration block for creating a new user profile. Detailed below.
	// +kubebuilder:validation:Optional
	adminCreateUserConfig?: [...#AdminCreateUserConfigParameters] @go(AdminCreateUserConfig,[]AdminCreateUserConfigParameters)

	// Attributes supported as an alias for this user pool. Valid values: phone_number, email, or preferred_username. Conflicts with username_attributes.
	// +kubebuilder:validation:Optional
	aliasAttributes?: [...null | string] @go(AliasAttributes,[]*string)

	// Attributes to be auto-verified. Valid values: email, phone_number.
	// +kubebuilder:validation:Optional
	autoVerifiedAttributes?: [...null | string] @go(AutoVerifiedAttributes,[]*string)

	// When active, DeletionProtection prevents accidental deletion of your user pool. Before you can delete a user pool that you have protected against deletion, you must deactivate this feature. Valid values are ACTIVE and INACTIVE, Default value is INACTIVE.
	// +kubebuilder:validation:Optional
	deletionProtection?: null | string @go(DeletionProtection,*string)

	// Configuration block for the user pool's device tracking. Detailed below.
	// +kubebuilder:validation:Optional
	deviceConfiguration?: [...#DeviceConfigurationParameters] @go(DeviceConfiguration,[]DeviceConfigurationParameters)

	// Configuration block for configuring email. Detailed below.
	// +kubebuilder:validation:Optional
	emailConfiguration?: [...#EmailConfigurationParameters] @go(EmailConfiguration,[]EmailConfigurationParameters)

	// String representing the email verification message. Conflicts with verification_message_template configuration block email_message argument.
	// +kubebuilder:validation:Optional
	emailVerificationMessage?: null | string @go(EmailVerificationMessage,*string)

	// String representing the email verification subject. Conflicts with verification_message_template configuration block email_subject argument.
	// +kubebuilder:validation:Optional
	emailVerificationSubject?: null | string @go(EmailVerificationSubject,*string)

	// Configuration block for the AWS Lambda triggers associated with the user pool. Detailed below.
	// +kubebuilder:validation:Optional
	lambdaConfig?: [...#LambdaConfigParameters] @go(LambdaConfig,[]LambdaConfigParameters)

	// Multi-Factor Authentication (MFA) configuration for the User Pool. Defaults of OFF. Valid values are OFF (MFA Tokens are not required), ON (MFA is required for all users to sign in; requires at least one of sms_configuration or software_token_mfa_configuration to be configured), or OPTIONAL (MFA Will be required only for individual users who have MFA Enabled; requires at least one of sms_configuration or software_token_mfa_configuration to be configured).
	// +kubebuilder:validation:Optional
	mfaConfiguration?: null | string @go(MfaConfiguration,*string)

	// Name of the user pool.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Configuration blocked for information about the user pool password policy. Detailed below.
	// +kubebuilder:validation:Optional
	passwordPolicy?: [...#PasswordPolicyParameters] @go(PasswordPolicy,[]PasswordPolicyParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// String representing the SMS authentication message. The Message must contain the {####} placeholder, which will be replaced with the code.
	// +kubebuilder:validation:Optional
	smsAuthenticationMessage?: null | string @go(SMSAuthenticationMessage,*string)

	// Configuration block for Short Message Service (SMS) settings. Detailed below. These settings apply to SMS user verification and SMS Multi-Factor Authentication (MFA). Due to Cognito API restrictions, the SMS configuration cannot be removed without recreating the Cognito User Pool. For user data safety, this resource will ignore the removal of this configuration by disabling drift detection. To force resource recreation after this configuration has been applied, see the taint command.
	// +kubebuilder:validation:Optional
	smsConfiguration?: [...#SMSConfigurationParameters] @go(SMSConfiguration,[]SMSConfigurationParameters)

	// String representing the SMS verification message. Conflicts with verification_message_template configuration block sms_message argument.
	// +kubebuilder:validation:Optional
	smsVerificationMessage?: null | string @go(SMSVerificationMessage,*string)

	// Configuration block for the schema attributes of a user pool. Detailed below. Schema attributes from the standard attribute set only need to be specified if they are different from the default configuration. Attributes can be added, but not modified or removed. Maximum of 50 attributes.
	// +kubebuilder:validation:Optional
	schema?: [...#SchemaParameters] @go(Schema,[]SchemaParameters)

	// Configuration block for software token Mult-Factor Authentication (MFA) settings. Detailed below.
	// +kubebuilder:validation:Optional
	softwareTokenMfaConfiguration?: [...#SoftwareTokenMfaConfigurationParameters] @go(SoftwareTokenMfaConfiguration,[]SoftwareTokenMfaConfigurationParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Configuration block for user attribute update settings. Detailed below.
	// +kubebuilder:validation:Optional
	userAttributeUpdateSettings?: [...#UserAttributeUpdateSettingsParameters] @go(UserAttributeUpdateSettings,[]UserAttributeUpdateSettingsParameters)

	// Configuration block for user pool add-ons to enable user pool advanced security mode features. Detailed below.
	// +kubebuilder:validation:Optional
	userPoolAddOns?: [...#UserPoolAddOnsParameters] @go(UserPoolAddOns,[]UserPoolAddOnsParameters)

	// Whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with alias_attributes.
	// +kubebuilder:validation:Optional
	usernameAttributes?: [...null | string] @go(UsernameAttributes,[]*string)

	// Configuration block for username configuration. Detailed below.
	// +kubebuilder:validation:Optional
	usernameConfiguration?: [...#UsernameConfigurationParameters] @go(UsernameConfiguration,[]UsernameConfigurationParameters)

	// Configuration block for verification message templates. Detailed below.
	// +kubebuilder:validation:Optional
	verificationMessageTemplate?: [...#VerificationMessageTemplateParameters] @go(VerificationMessageTemplate,[]VerificationMessageTemplateParameters)
}

#UsernameConfigurationObservation: {
	// Whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
	caseSensitive?: null | bool @go(CaseSensitive,*bool)
}

#UsernameConfigurationParameters: {
	// Whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
	// +kubebuilder:validation:Required
	caseSensitive?: null | bool @go(CaseSensitive,*bool)
}

#VerificationMessageTemplateObservation: {
	// Default email option. Must be either CONFIRM_WITH_CODE or CONFIRM_WITH_LINK. Defaults to CONFIRM_WITH_CODE.
	defaultEmailOption?: null | string @go(DefaultEmailOption,*string)

	// Email message template. Must contain the {####} placeholder. Conflicts with email_verification_message argument.
	emailMessage?: null | string @go(EmailMessage,*string)

	// Email message template for sending a confirmation link to the user, it must contain the {##Click Here##} placeholder.
	emailMessageByLink?: null | string @go(EmailMessageByLink,*string)

	// Subject line for the email message template. Conflicts with email_verification_subject argument.
	emailSubject?: null | string @go(EmailSubject,*string)

	// Subject line for the email message template for sending a confirmation link to the user.
	emailSubjectByLink?: null | string @go(EmailSubjectByLink,*string)

	// SMS message template. Must contain the {####} placeholder. Conflicts with sms_verification_message argument.
	smsMessage?: null | string @go(SMSMessage,*string)
}

#VerificationMessageTemplateParameters: {
	// Default email option. Must be either CONFIRM_WITH_CODE or CONFIRM_WITH_LINK. Defaults to CONFIRM_WITH_CODE.
	// +kubebuilder:validation:Optional
	defaultEmailOption?: null | string @go(DefaultEmailOption,*string)

	// Email message template. Must contain the {####} placeholder. Conflicts with email_verification_message argument.
	// +kubebuilder:validation:Optional
	emailMessage?: null | string @go(EmailMessage,*string)

	// Email message template for sending a confirmation link to the user, it must contain the {##Click Here##} placeholder.
	// +kubebuilder:validation:Optional
	emailMessageByLink?: null | string @go(EmailMessageByLink,*string)

	// Subject line for the email message template. Conflicts with email_verification_subject argument.
	// +kubebuilder:validation:Optional
	emailSubject?: null | string @go(EmailSubject,*string)

	// Subject line for the email message template for sending a confirmation link to the user.
	// +kubebuilder:validation:Optional
	emailSubjectByLink?: null | string @go(EmailSubjectByLink,*string)

	// SMS message template. Must contain the {####} placeholder. Conflicts with sms_verification_message argument.
	// +kubebuilder:validation:Optional
	smsMessage?: null | string @go(SMSMessage,*string)
}

// UserPoolSpec defines the desired state of UserPool
#UserPoolSpec: {
	forProvider: #UserPoolParameters @go(ForProvider)
}

// UserPoolStatus defines the observed state of UserPool.
#UserPoolStatus: {
	atProvider?: #UserPoolObservation @go(AtProvider)
}

// UserPool is the Schema for the UserPools API. Provides a Cognito User Pool resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserPool: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)",message="name is a required parameter"
	spec:    #UserPoolSpec   @go(Spec)
	status?: #UserPoolStatus @go(Status)
}

// UserPoolList contains a list of UserPools
#UserPoolList: {
	items: [...#UserPool] @go(Items,[]UserPool)
}
