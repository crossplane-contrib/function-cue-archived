// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cognitoidp/v1beta1

package v1beta1

#UserPoolDomainObservation: {
	// The AWS account ID for the user pool owner.
	awsAccountId?: null | string @go(AwsAccountID,*string)

	// The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
	certificateArn?: null | string @go(CertificateArn,*string)

	// The URL of the CloudFront distribution. This is required to generate the ALIAS aws_route53_record
	cloudfrontDistributionArn?: null | string @go(CloudfrontDistributionArn,*string)

	// For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.
	domain?: null | string @go(Domain,*string)
	id?:     null | string @go(ID,*string)

	// The S3 bucket where the static files for this domain are stored.
	s3Bucket?: null | string @go(S3Bucket,*string)

	// The user pool ID.
	userPoolId?: null | string @go(UserPoolID,*string)

	// The app version.
	version?: null | string @go(Version,*string)
}

#UserPoolDomainParameters: {
	// The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/acm/v1beta1.Certificate
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	certificateArn?: null | string @go(CertificateArn,*string)

	// For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.
	// +kubebuilder:validation:Optional
	domain?: null | string @go(Domain,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The user pool ID.
	// +crossplane:generate:reference:type=UserPool
	// +kubebuilder:validation:Optional
	userPoolId?: null | string @go(UserPoolID,*string)
}

// UserPoolDomainSpec defines the desired state of UserPoolDomain
#UserPoolDomainSpec: {
	forProvider: #UserPoolDomainParameters @go(ForProvider)
}

// UserPoolDomainStatus defines the observed state of UserPoolDomain.
#UserPoolDomainStatus: {
	atProvider?: #UserPoolDomainObservation @go(AtProvider)
}

// UserPoolDomain is the Schema for the UserPoolDomains API. Provides a Cognito User Pool Domain resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#UserPoolDomain: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.domain)",message="domain is a required parameter"
	spec:    #UserPoolDomainSpec   @go(Spec)
	status?: #UserPoolDomainStatus @go(Status)
}

// UserPoolDomainList contains a list of UserPoolDomains
#UserPoolDomainList: {
	items: [...#UserPoolDomain] @go(Items,[]UserPoolDomain)
}
