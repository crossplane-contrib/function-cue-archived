// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/cognitoidp/v1beta1

package v1beta1

#UserObservation: {
	// A map that contains user attributes and attribute values to be set for the user.
	attributes?: {[string]: null | string} @go(Attributes,map[string]*string)

	// A map of custom key-value pairs that you can provide as input for any custom workflows that user creation triggers. Amazon Cognito does not store the client_metadata value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose. For more information, see Customizing User Pool Workflows with Lambda Triggers.
	clientMetadata?: {[string]: null | string} @go(ClientMetadata,map[string]*string)
	creationDate?: null | string @go(CreationDate,*string)

	// A list of mediums to the welcome message will be sent through. Allowed values are EMAIL and SMS. If it's provided, make sure you have also specified email attribute for the EMAIL medium and phone_number for the SMS. More than one value can be specified. Amazon Cognito does not store the desired_delivery_mediums value. Defaults to ["SMS"].
	desiredDeliveryMediums?: [...null | string] @go(DesiredDeliveryMediums,[]*string)

	// Specifies whether the user should be enabled after creation. The welcome message will be sent regardless of the enabled value. The behavior can be changed with message_action argument. Defaults to true.
	enabled?: null | bool @go(Enabled,*bool)

	// If this parameter is set to True and the phone_number or email address specified in the attributes parameter already exists as an alias with a different user, Amazon Cognito will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias. Amazon Cognito does not store the force_alias_creation value. Defaults to false.
	forceAliasCreation?: null | bool   @go(ForceAliasCreation,*bool)
	id?:                 null | string @go(ID,*string)
	lastModifiedDate?:   null | string @go(LastModifiedDate,*string)

	// Set to RESEND to resend the invitation message to a user that already exists and reset the expiration limit on the user's account. Set to SUPPRESS to suppress sending the message. Only one value can be specified. Amazon Cognito does not store the message_action value.
	messageAction?: null | string @go(MessageAction,*string)
	mfaSettingList?: [...null | string] @go(MfaSettingList,[]*string)
	preferredMfaSetting?: null | string @go(PreferredMfaSetting,*string)

	// current user status.
	status?: null | string @go(Status,*string)

	// unique user id that is never reassignable to another user.
	sub?: null | string @go(Sub,*string)

	// The user pool ID for the user pool where the user will be created.
	userPoolId?: null | string @go(UserPoolID,*string)

	// The user's validation data. This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. Amazon Cognito does not store the validation_data value. For more information, see Customizing User Pool Workflows with Lambda Triggers.
	validationData?: {[string]: null | string} @go(ValidationData,map[string]*string)
}

#UserParameters: {
	// A map that contains user attributes and attribute values to be set for the user.
	// +kubebuilder:validation:Optional
	attributes?: {[string]: null | string} @go(Attributes,map[string]*string)

	// A map of custom key-value pairs that you can provide as input for any custom workflows that user creation triggers. Amazon Cognito does not store the client_metadata value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose. For more information, see Customizing User Pool Workflows with Lambda Triggers.
	// +kubebuilder:validation:Optional
	clientMetadata?: {[string]: null | string} @go(ClientMetadata,map[string]*string)

	// A list of mediums to the welcome message will be sent through. Allowed values are EMAIL and SMS. If it's provided, make sure you have also specified email attribute for the EMAIL medium and phone_number for the SMS. More than one value can be specified. Amazon Cognito does not store the desired_delivery_mediums value. Defaults to ["SMS"].
	// +kubebuilder:validation:Optional
	desiredDeliveryMediums?: [...null | string] @go(DesiredDeliveryMediums,[]*string)

	// Specifies whether the user should be enabled after creation. The welcome message will be sent regardless of the enabled value. The behavior can be changed with message_action argument. Defaults to true.
	// +kubebuilder:validation:Optional
	enabled?: null | bool @go(Enabled,*bool)

	// If this parameter is set to True and the phone_number or email address specified in the attributes parameter already exists as an alias with a different user, Amazon Cognito will migrate the alias from the previous user to the newly created user. The previous user will no longer be able to log in using that alias. Amazon Cognito does not store the force_alias_creation value. Defaults to false.
	// +kubebuilder:validation:Optional
	forceAliasCreation?: null | bool @go(ForceAliasCreation,*bool)

	// Set to RESEND to resend the invitation message to a user that already exists and reset the expiration limit on the user's account. Set to SUPPRESS to suppress sending the message. Only one value can be specified. Amazon Cognito does not store the message_action value.
	// +kubebuilder:validation:Optional
	messageAction?: null | string @go(MessageAction,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The user pool ID for the user pool where the user will be created.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/cognitoidp/v1beta1.UserPool
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	userPoolId?: null | string @go(UserPoolID,*string)

	// The user's validation data. This is an array of name-value pairs that contain user attributes and attribute values that you can use for custom validation, such as restricting the types of user accounts that can be registered. Amazon Cognito does not store the validation_data value. For more information, see Customizing User Pool Workflows with Lambda Triggers.
	// +kubebuilder:validation:Optional
	validationData?: {[string]: null | string} @go(ValidationData,map[string]*string)
}

// UserSpec defines the desired state of User
#UserSpec: {
	forProvider: #UserParameters @go(ForProvider)
}

// UserStatus defines the observed state of User.
#UserStatus: {
	atProvider?: #UserObservation @go(AtProvider)
}

// User is the Schema for the Users API. Provides a Cognito User resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#User: {
	spec:    #UserSpec   @go(Spec)
	status?: #UserStatus @go(Status)
}

// UserList contains a list of Users
#UserList: {
	items: [...#User] @go(Items,[]User)
}
