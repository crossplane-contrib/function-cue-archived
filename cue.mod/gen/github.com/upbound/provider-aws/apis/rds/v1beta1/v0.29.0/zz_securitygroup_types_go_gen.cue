// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rds/v1beta1

package v1beta1

#IngressObservation: {
}

#IngressParameters: {
	// The CIDR block to accept
	// +kubebuilder:validation:Optional
	cidr?: null | string @go(Cidr,*string)

	// The ID of the security group to authorize
	// +kubebuilder:validation:Optional
	securityGroupId?: null | string @go(SecurityGroupID,*string)

	// The name of the security group to authorize
	// +kubebuilder:validation:Optional
	securityGroupName?: null | string @go(SecurityGroupName,*string)

	// The owner Id of the security group provided
	// by security_group_name.
	// +kubebuilder:validation:Optional
	securityGroupOwnerId?: null | string @go(SecurityGroupOwnerID,*string)
}

#SecurityGroupObservation: {
	// The arn of the DB security group.
	arn?: null | string @go(Arn,*string)

	// The db security group ID.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#SecurityGroupParameters: {
	// The description of the DB security group.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// A list of ingress rules.
	// +kubebuilder:validation:Required
	ingress: [...#IngressParameters] @go(Ingress,[]IngressParameters)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// SecurityGroupSpec defines the desired state of SecurityGroup
#SecurityGroupSpec: {
	forProvider: #SecurityGroupParameters @go(ForProvider)
}

// SecurityGroupStatus defines the observed state of SecurityGroup.
#SecurityGroupStatus: {
	atProvider?: #SecurityGroupObservation @go(AtProvider)
}

// SecurityGroup is the Schema for the SecurityGroups API. Provides an RDS security group resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SecurityGroup: {
	spec:    #SecurityGroupSpec   @go(Spec)
	status?: #SecurityGroupStatus @go(Status)
}

// SecurityGroupList contains a list of SecurityGroups
#SecurityGroupList: {
	items: [...#SecurityGroup] @go(Items,[]SecurityGroup)
}
