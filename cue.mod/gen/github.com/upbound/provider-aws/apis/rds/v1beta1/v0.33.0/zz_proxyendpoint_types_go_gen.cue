// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rds/v1beta1

package v1beta1

#ProxyEndpointObservation: {
	// The Amazon Resource Name (ARN) for the proxy endpoint.
	arn?: null | string @go(Arn,*string)

	// The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
	endpoint?: null | string @go(Endpoint,*string)

	// The name of the proxy and proxy endpoint separated by /, DB-PROXY-NAME/DB-PROXY-ENDPOINT-NAME.
	id?: null | string @go(ID,*string)

	// Indicates whether this endpoint is the default endpoint for the associated DB proxy.
	isDefault?: null | bool @go(IsDefault,*bool)
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The VPC ID of the DB proxy endpoint.
	vpcId?: null | string @go(VPCID,*string)
}

#ProxyEndpointParameters: {
	// The name of the DB proxy associated with the DB proxy endpoint that you create.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta1.Proxy
	// +kubebuilder:validation:Optional
	dbProxyName?: null | string @go(DBProxyName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is READ_WRITE. Valid values are READ_WRITE and READ_ONLY.
	// +kubebuilder:validation:Optional
	targetRole?: null | string @go(TargetRole,*string)

	// One or more VPC security group IDs to associate with the new proxy.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/ec2/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=VPCSecurityGroupIDRefs
	// +crossplane:generate:reference:selectorFieldName=VPCSecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	vpcSecurityGroupIds?: [...null | string] @go(VPCSecurityGroupIds,[]*string)

	// One or more VPC subnet IDs to associate with the new proxy.
	// +kubebuilder:validation:Required
	vpcSubnetIds: [...null | string] @go(VPCSubnetIds,[]*string)
}

// ProxyEndpointSpec defines the desired state of ProxyEndpoint
#ProxyEndpointSpec: {
	forProvider: #ProxyEndpointParameters @go(ForProvider)
}

// ProxyEndpointStatus defines the observed state of ProxyEndpoint.
#ProxyEndpointStatus: {
	atProvider?: #ProxyEndpointObservation @go(AtProvider)
}

// ProxyEndpoint is the Schema for the ProxyEndpoints API. Provides an RDS DB proxy endpoint resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ProxyEndpoint: {
	spec:    #ProxyEndpointSpec   @go(Spec)
	status?: #ProxyEndpointStatus @go(Status)
}

// ProxyEndpointList contains a list of ProxyEndpoints
#ProxyEndpointList: {
	items: [...#ProxyEndpoint] @go(Items,[]ProxyEndpoint)
}
