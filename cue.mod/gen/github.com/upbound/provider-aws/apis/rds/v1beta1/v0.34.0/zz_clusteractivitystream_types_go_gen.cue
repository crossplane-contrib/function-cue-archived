// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rds/v1beta1

package v1beta1

#ClusterActivityStreamObservation: {
	// Specifies whether the database activity stream includes engine-native audit fields. This option only applies to an Oracle DB instance. By default, no engine-native audit fields are included. Defaults false.
	engineNativeAuditFieldsIncluded?: null | bool @go(EngineNativeAuditFieldsIncluded,*bool)

	// The Amazon Resource Name (ARN) of the DB cluster.
	id?: null | string @go(ID,*string)

	// The AWS KMS key identifier for encrypting messages in the database activity stream. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// The name of the Amazon Kinesis data stream to be used for the database activity stream.
	kinesisStreamName?: null | string @go(KinesisStreamName,*string)

	// Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously. One of: sync, async.
	mode?: null | string @go(Mode,*string)

	// The Amazon Resource Name (ARN) of the DB cluster.
	resourceArn?: null | string @go(ResourceArn,*string)
}

#ClusterActivityStreamParameters: {
	// Specifies whether the database activity stream includes engine-native audit fields. This option only applies to an Oracle DB instance. By default, no engine-native audit fields are included. Defaults false.
	// +kubebuilder:validation:Optional
	engineNativeAuditFieldsIncluded?: null | bool @go(EngineNativeAuditFieldsIncluded,*bool)

	// The AWS KMS key identifier for encrypting messages in the database activity stream. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	kmsKeyId?: null | string @go(KMSKeyID,*string)

	// Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously. One of: sync, async.
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The Amazon Resource Name (ARN) of the DB cluster.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("arn",true)
	// +kubebuilder:validation:Optional
	resourceArn?: null | string @go(ResourceArn,*string)
}

// ClusterActivityStreamSpec defines the desired state of ClusterActivityStream
#ClusterActivityStreamSpec: {
	forProvider: #ClusterActivityStreamParameters @go(ForProvider)
}

// ClusterActivityStreamStatus defines the observed state of ClusterActivityStream.
#ClusterActivityStreamStatus: {
	atProvider?: #ClusterActivityStreamObservation @go(AtProvider)
}

// ClusterActivityStream is the Schema for the ClusterActivityStreams API. Manages RDS Aurora Cluster Database Activity Streams
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ClusterActivityStream: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.mode)",message="mode is a required parameter"
	spec:    #ClusterActivityStreamSpec   @go(Spec)
	status?: #ClusterActivityStreamStatus @go(Status)
}

// ClusterActivityStreamList contains a list of ClusterActivityStreams
#ClusterActivityStreamList: {
	items: [...#ClusterActivityStream] @go(Items,[]ClusterActivityStream)
}
