// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rds/v1beta1

package v1beta1

#InstanceRoleAssociationObservation: {
	// DB Instance Identifier and IAM Role ARN separated by a comma (,)
	id?: null | string @go(ID,*string)
}

#InstanceRoleAssociationParameters: {
	// DB Instance Identifier to associate with the IAM Role.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dbInstanceIdentifier?: null | string @go(DBInstanceIdentifier,*string)

	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the SupportedFeatureNames list returned by AWS CLI rds describe-db-engine-versions.
	// +kubebuilder:validation:Required
	featureName?: null | string @go(FeatureName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

// InstanceRoleAssociationSpec defines the desired state of InstanceRoleAssociation
#InstanceRoleAssociationSpec: {
	forProvider: #InstanceRoleAssociationParameters @go(ForProvider)
}

// InstanceRoleAssociationStatus defines the observed state of InstanceRoleAssociation.
#InstanceRoleAssociationStatus: {
	atProvider?: #InstanceRoleAssociationObservation @go(AtProvider)
}

// InstanceRoleAssociation is the Schema for the InstanceRoleAssociations API. Manages an RDS DB Instance association with an IAM Role.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#InstanceRoleAssociation: {
	spec:    #InstanceRoleAssociationSpec   @go(Spec)
	status?: #InstanceRoleAssociationStatus @go(Status)
}

// InstanceRoleAssociationList contains a list of InstanceRoleAssociations
#InstanceRoleAssociationList: {
	items: [...#InstanceRoleAssociation] @go(Items,[]InstanceRoleAssociation)
}
