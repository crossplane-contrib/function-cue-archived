// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rds/v1beta1

package v1beta1

#ClusterRoleAssociationObservation: {
	// DB Cluster Identifier to associate with the IAM Role.
	dbClusterIdentifier?: null | string @go(DBClusterIdentifier,*string)

	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the SupportedFeatureNames list returned by AWS CLI rds describe-db-engine-versions.
	featureName?: null | string @go(FeatureName,*string)

	// DB Cluster Identifier and IAM Role ARN separated by a comma (,)
	id?: null | string @go(ID,*string)

	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
	roleArn?: null | string @go(RoleArn,*string)
}

#ClusterRoleAssociationParameters: {
	// DB Cluster Identifier to associate with the IAM Role.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/rds/v1beta1.Cluster
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	dbClusterIdentifier?: null | string @go(DBClusterIdentifier,*string)

	// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the SupportedFeatureNames list returned by AWS CLI rds describe-db-engine-versions.
	// +kubebuilder:validation:Optional
	featureName?: null | string @go(FeatureName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/iam/v1beta1.Role
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-aws/config/common.ARNExtractor()
	// +kubebuilder:validation:Optional
	roleArn?: null | string @go(RoleArn,*string)
}

// ClusterRoleAssociationSpec defines the desired state of ClusterRoleAssociation
#ClusterRoleAssociationSpec: {
	forProvider: #ClusterRoleAssociationParameters @go(ForProvider)
}

// ClusterRoleAssociationStatus defines the observed state of ClusterRoleAssociation.
#ClusterRoleAssociationStatus: {
	atProvider?: #ClusterRoleAssociationObservation @go(AtProvider)
}

// ClusterRoleAssociation is the Schema for the ClusterRoleAssociations API. Manages a RDS DB Cluster association with an IAM Role.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ClusterRoleAssociation: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.featureName)",message="featureName is a required parameter"
	spec:    #ClusterRoleAssociationSpec   @go(Spec)
	status?: #ClusterRoleAssociationStatus @go(Status)
}

// ClusterRoleAssociationList contains a list of ClusterRoleAssociations
#ClusterRoleAssociationList: {
	items: [...#ClusterRoleAssociation] @go(Items,[]ClusterRoleAssociation)
}
