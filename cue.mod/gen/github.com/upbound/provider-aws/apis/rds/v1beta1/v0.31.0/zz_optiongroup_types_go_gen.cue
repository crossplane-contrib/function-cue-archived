// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/rds/v1beta1

package v1beta1

#OptionGroupObservation: {
	// The ARN of the db option group.
	arn?: null | string @go(Arn,*string)

	// The db option group name.
	id?: null | string @go(ID,*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)
}

#OptionGroupParameters: {
	// Specifies the name of the engine that this option group should be associated with.
	// +kubebuilder:validation:Required
	engineName?: null | string @go(EngineName,*string)

	// Specifies the major version of the engine that this option group should be associated with.
	// +kubebuilder:validation:Required
	majorEngineVersion?: null | string @go(MajorEngineVersion,*string)

	// A list of Options to apply.
	// +kubebuilder:validation:Optional
	option?: [...#OptionParameters] @go(Option,[]OptionParameters)

	// The description of the option group.
	// +kubebuilder:validation:Optional
	optionGroupDescription?: null | string @go(OptionGroupDescription,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#OptionObservation: {
}

#OptionParameters: {
	// A list of DB Security Groups for which the option is enabled.
	// +kubebuilder:validation:Optional
	dbSecurityGroupMemberships?: [...null | string] @go(DBSecurityGroupMemberships,[]*string)

	// The Name of the Option (e.g., MEMCACHED).
	// +kubebuilder:validation:Required
	optionName?: null | string @go(OptionName,*string)

	// A list of option settings to apply.
	// +kubebuilder:validation:Optional
	optionSettings?: [...#OptionSettingsParameters] @go(OptionSettings,[]OptionSettingsParameters)

	// The Port number when connecting to the Option (e.g., 11211).
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)

	// A list of VPC Security Groups for which the option is enabled.
	// +kubebuilder:validation:Optional
	vpcSecurityGroupMemberships?: [...null | string] @go(VPCSecurityGroupMemberships,[]*string)

	// The version of the option (e.g., 13.1.0.0).
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#OptionSettingsObservation: {
}

#OptionSettingsParameters: {
	// The name of the option group. Must be lowercase, to match as it is stored in AWS.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// The Value of the setting.
	// +kubebuilder:validation:Required
	value?: null | string @go(Value,*string)
}

// OptionGroupSpec defines the desired state of OptionGroup
#OptionGroupSpec: {
	forProvider: #OptionGroupParameters @go(ForProvider)
}

// OptionGroupStatus defines the observed state of OptionGroup.
#OptionGroupStatus: {
	atProvider?: #OptionGroupObservation @go(AtProvider)
}

// OptionGroup is the Schema for the OptionGroups API. Provides an RDS DB option group resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#OptionGroup: {
	spec:    #OptionGroupSpec   @go(Spec)
	status?: #OptionGroupStatus @go(Status)
}

// OptionGroupList contains a list of OptionGroups
#OptionGroupList: {
	items: [...#OptionGroup] @go(Items,[]OptionGroup)
}
