// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/codepipeline/v1beta1

package v1beta1

#ConfigurationPropertyObservation: {
	// The description of the action configuration property.
	description?: null | string @go(Description,*string)

	// Whether the configuration property is a key.
	key?: null | bool @go(Key,*bool)

	// The name of the action configuration property.
	name?: null | string @go(Name,*string)

	// Indicates that the property will be used in conjunction with PollForJobs.
	queryable?: null | bool @go(Queryable,*bool)

	// Whether the configuration property is a required value.
	required?: null | bool @go(Required,*bool)

	// Whether the configuration property is secret.
	secret?: null | bool @go(Secret,*bool)

	// The type of the configuration property. Valid values: String, Number, Boolean
	type?: null | string @go(Type,*string)
}

#ConfigurationPropertyParameters: {
	// The description of the action configuration property.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Whether the configuration property is a key.
	// +kubebuilder:validation:Required
	key?: null | bool @go(Key,*bool)

	// The name of the action configuration property.
	// +kubebuilder:validation:Required
	name?: null | string @go(Name,*string)

	// Indicates that the property will be used in conjunction with PollForJobs.
	// +kubebuilder:validation:Optional
	queryable?: null | bool @go(Queryable,*bool)

	// Whether the configuration property is a required value.
	// +kubebuilder:validation:Required
	required?: null | bool @go(Required,*bool)

	// Whether the configuration property is secret.
	// +kubebuilder:validation:Required
	secret?: null | bool @go(Secret,*bool)

	// The type of the configuration property. Valid values: String, Number, Boolean
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#CustomActionTypeObservation: {
	// The action ARN.
	arn?: null | string @go(Arn,*string)

	// The category of the custom action. Valid values: Source, Build, Deploy, Test, Invoke, Approval
	category?: null | string @go(Category,*string)

	// The configuration properties for the custom action. Max 10 items.
	configurationProperty?: [...#ConfigurationPropertyObservation] @go(ConfigurationProperty,[]ConfigurationPropertyObservation)

	// Composed of category, provider and version
	id?: null | string @go(ID,*string)

	// The details of the input artifact for the action.
	inputArtifactDetails?: [...#InputArtifactDetailsObservation] @go(InputArtifactDetails,[]InputArtifactDetailsObservation)

	// The details of the output artifact of the action.
	outputArtifactDetails?: [...#OutputArtifactDetailsObservation] @go(OutputArtifactDetails,[]OutputArtifactDetailsObservation)

	// The creator of the action being called.
	owner?: null | string @go(Owner,*string)

	// The provider of the service used in the custom action
	providerName?: null | string @go(ProviderName,*string)

	// The settings for an action type.
	settings?: [...#SettingsObservation] @go(Settings,[]SettingsObservation)

	// Key-value map of resource tags.
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The version identifier of the custom action.
	version?: null | string @go(Version,*string)
}

#CustomActionTypeParameters: {
	// The category of the custom action. Valid values: Source, Build, Deploy, Test, Invoke, Approval
	// +kubebuilder:validation:Optional
	category?: null | string @go(Category,*string)

	// The configuration properties for the custom action. Max 10 items.
	// +kubebuilder:validation:Optional
	configurationProperty?: [...#ConfigurationPropertyParameters] @go(ConfigurationProperty,[]ConfigurationPropertyParameters)

	// The details of the input artifact for the action.
	// +kubebuilder:validation:Optional
	inputArtifactDetails?: [...#InputArtifactDetailsParameters] @go(InputArtifactDetails,[]InputArtifactDetailsParameters)

	// The details of the output artifact of the action.
	// +kubebuilder:validation:Optional
	outputArtifactDetails?: [...#OutputArtifactDetailsParameters] @go(OutputArtifactDetails,[]OutputArtifactDetailsParameters)

	// The provider of the service used in the custom action
	// +kubebuilder:validation:Optional
	providerName?: null | string @go(ProviderName,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The settings for an action type.
	// +kubebuilder:validation:Optional
	settings?: [...#SettingsParameters] @go(Settings,[]SettingsParameters)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// The version identifier of the custom action.
	// +kubebuilder:validation:Optional
	version?: null | string @go(Version,*string)
}

#InputArtifactDetailsObservation: {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	maximumCount?: null | float64 @go(MaximumCount,*float64)

	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	minimumCount?: null | float64 @go(MinimumCount,*float64)
}

#InputArtifactDetailsParameters: {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	// +kubebuilder:validation:Required
	maximumCount?: null | float64 @go(MaximumCount,*float64)

	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	// +kubebuilder:validation:Required
	minimumCount?: null | float64 @go(MinimumCount,*float64)
}

#OutputArtifactDetailsObservation: {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	maximumCount?: null | float64 @go(MaximumCount,*float64)

	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	minimumCount?: null | float64 @go(MinimumCount,*float64)
}

#OutputArtifactDetailsParameters: {
	// The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
	// +kubebuilder:validation:Required
	maximumCount?: null | float64 @go(MaximumCount,*float64)

	// The minimum number of artifacts allowed for the action type. Min: 0, Max: 5
	// +kubebuilder:validation:Required
	minimumCount?: null | float64 @go(MinimumCount,*float64)
}

#SettingsObservation: {
	// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.
	entityUrlTemplate?: null | string @go(EntityURLTemplate,*string)

	// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.
	executionUrlTemplate?: null | string @go(ExecutionURLTemplate,*string)

	// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
	revisionUrlTemplate?: null | string @go(RevisionURLTemplate,*string)

	// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
	thirdPartyConfigurationUrl?: null | string @go(ThirdPartyConfigurationURL,*string)
}

#SettingsParameters: {
	// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.
	// +kubebuilder:validation:Optional
	entityUrlTemplate?: null | string @go(EntityURLTemplate,*string)

	// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.
	// +kubebuilder:validation:Optional
	executionUrlTemplate?: null | string @go(ExecutionURLTemplate,*string)

	// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
	// +kubebuilder:validation:Optional
	revisionUrlTemplate?: null | string @go(RevisionURLTemplate,*string)

	// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
	// +kubebuilder:validation:Optional
	thirdPartyConfigurationUrl?: null | string @go(ThirdPartyConfigurationURL,*string)
}

// CustomActionTypeSpec defines the desired state of CustomActionType
#CustomActionTypeSpec: {
	forProvider: #CustomActionTypeParameters @go(ForProvider)
}

// CustomActionTypeStatus defines the observed state of CustomActionType.
#CustomActionTypeStatus: {
	atProvider?: #CustomActionTypeObservation @go(AtProvider)
}

// CustomActionType is the Schema for the CustomActionTypes API. Provides a CodePipeline CustomActionType.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#CustomActionType: {
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.category)",message="category is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.inputArtifactDetails)",message="inputArtifactDetails is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.outputArtifactDetails)",message="outputArtifactDetails is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.providerName)",message="providerName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.version)",message="version is a required parameter"
	spec:    #CustomActionTypeSpec   @go(Spec)
	status?: #CustomActionTypeStatus @go(Status)
}

// CustomActionTypeList contains a list of CustomActionTypes
#CustomActionTypeList: {
	items: [...#CustomActionType] @go(Items,[]CustomActionType)
}
